{
    "abseil-cpp": {
        "name": "abseil-cpp",
        "language": "c++",
        "homepage": "abseil.io",
        "main_repo": "https://github.com/abseil/abseil-cpp.git",
        "primary_contact": "dmauro@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "bazel",
        "project_yaml": "homepage: \"abseil.io\"\nlanguage: c++\nprimary_contact: \"dmauro@google.com\"\nmain_repo: 'https://github.com/abseil/abseil-cpp.git'\n",
        "build_sh": "# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport USE_BAZEL_VERSION=7.4.0\n# Disable `layering_check` feature.\n# As per https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=63223, it breaks\n# the build. Someone could figure out exactly why it breaks the build, but just\n# disabling it suffices because it doesn't actually matter for our purposes. ;)\nexport BAZEL_EXTRA_BUILD_FLAGS='--features=-layering_check'\n# The default query is complex and requires additional dependencies in order to\n# work (due to its use of `//...`) whereas this query is simple and sufficient.\nexport BAZEL_FUZZ_TEST_QUERY='filter(\"_fuzzer$\", //:all)'\nexec bazel_build_fuzz_tests\n"
    },
    "abseil-py": {
        "name": "abseil-py",
        "language": "python",
        "homepage": "https://github.com/abseil/abseil-py",
        "main_repo": "https://github.com/abseil/abseil-py",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/abseil/abseil-py\nlanguage: python\nmain_repo: https://github.com/abseil/abseil-py\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython3 setup.py install\ncd ../\nmkdir fuzzbuilds\ncd fuzzbuilds\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "ada-url": {
        "name": "ada-url",
        "language": "c++",
        "homepage": "https://ada-url.github.io/ada",
        "main_repo": "https://github.com/ada-url/ada.git",
        "primary_contact": "yagiz@nizipli.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz",
            "centipede"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://ada-url.github.io/ada\"\nlanguage: c++\nprimary_contact: \"yagiz@nizipli.com\"\nauto_ccs:\n  - \"daniel@lemire.me\"\nmain_repo: \"https://github.com/ada-url/ada.git\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n  - centipede\nfile_github_issue: true\n",
        "build_sh": null
    },
    "adal": {
        "name": "adal",
        "language": "python",
        "homepage": "https://github.com/AzureAD/azure-activedirectory-library-for-python",
        "main_repo": "https://github.com/AzureAD/azure-activedirectory-library-for-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/AzureAD/azure-activedirectory-library-for-python\nlanguage: python\nmain_repo: https://github.com/AzureAD/azure-activedirectory-library-for-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "aiohttp": {
        "name": "aiohttp",
        "language": "python",
        "homepage": "https://github.com/aio-libs/aiohttp",
        "main_repo": "https://github.com/aio-libs/aiohttp",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/aio-libs/aiohttp\nlanguage: python\nmain_repo: https://github.com/aio-libs/aiohttp\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Build the llhttp parser\ngit submodule update --init --recursive\npushd \"$SRC/aiohttp/vendor/llhttp/\"\nnpm ci\nmake\npopd # \"$SRC/aiohttp/vendor/llhttp/\"\n\n# Build & install aiohttp\nmake cythonize\nmake install-dev\n\n# Duplicate fuzzers to use Pure python code (in addition\n# to the existing C-compiled code).\ncp fuzz_http_parser.py fuzz_http_parser_pure_python.py\nsed -i 's/AIOHTTP_VAL=0/AIOHTTP_VAL=1/g' fuzz_http_parser_pure_python.py\ncp fuzz_http_payload_parser.py fuzz_http_payload_parser_pure_python.py\nsed -i 's/AIOHTTP_VAL=0/AIOHTTP_VAL=1/g' fuzz_http_payload_parser_pure_python.py\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "airflow": {
        "name": "airflow",
        "language": "python",
        "homepage": "https://github.com/apache/airflow",
        "main_repo": "https://github.com/apache/airflow",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/apache/airflow\nlanguage: python\nmain_repo: https://github.com/apache/airflow\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install colorlog\npip3 install .\n\n# Build fuzzers in $OUT.\ncd $SRC\ncompile_python_fuzzer dag_fuzz.py --add-data airflow:airflow --add-data airflow/airflow:airflow --add-data /usr/local/lib/python3.8/site-packages/cron_descriptor:cron_descriptor\n"
    },
    "alembic": {
        "name": "alembic",
        "language": "c++",
        "homepage": "https://github.com/alembic/alembic",
        "main_repo": "https://github.com/alembic/alembic",
        "primary_contact": "miller.lucas@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/alembic/alembic\"\nlanguage: c++\nprimary_contact: \"miller.lucas@gmail.com\"\nsanitizers:\n  - address\nmain_repo: 'https://github.com/alembic/alembic'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir -p $WORK/build_openexr\nmkdir -p $WORK/build_alembic\n\n# build openexr for alembic\ncd $WORK/build_openexr\nOPENEXR_CMAKE_SETTINGS=(\n  \"-D BUILD_SHARED_LIBS=OFF\"         # Build static libraries only\n  \"-D PYILMBASE_ENABLE=OFF\"          # Don't build Python support\n  \"-D BUILD_TESTING=OFF\"             # Or tests\n  \"-D INSTALL_OPENEXR_EXAMPLES=OFF\"  # Or examples\n  \"-D OPENEXR_LIB_SUFFIX=\"           # Don't append the version number to library files\n  \"-D ILMBASE_LIB_SUFFIX=\"\n)\ncmake $SRC/openexr ${OPENEXR_CMAKE_SETTINGS[@]}\nmake -j$(nproc) && make install\n\n# build alembic\ncd $WORK/build_alembic\ncmake $SRC/alembic -DALEMBIC_SHARED_LIBS=OFF\nmake -j$(nproc)\n\nINCLUDES=(\n  \"-I $SRC\"\n  \"-I ${SRC}/alembic/lib\"\n  \"-I ${WORK}/build_alembic/lib\"\n  \"-I /usr/local/include/OpenEXR\"\n)\nLIBS=(\"-lImath\" \"-lIex\" \"-lHalf\")\n\nfor fuzzer in $(find $SRC -name '*_fuzzer.cc'); do\n  fuzzer_basename=$(basename -s .cc $fuzzer)\n  $CXX $CXXFLAGS -std=c++11 ${INCLUDES[@]} \\\n    $fuzzer $WORK/build_alembic/lib/Alembic/libAlembic.a $LIB_FUZZING_ENGINE \\\n    -o $OUT/$fuzzer_basename ${LIBS[@]}\ndone\n"
    },
    "ampproject": {
        "name": "ampproject",
        "language": "c++",
        "homepage": "https://github.com/ampproject/amphtml",
        "main_repo": "https://github.com/ampproject/amphtml",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/ampproject/amphtml\"\nlanguage: c++\nmain_repo: \"https://github.com/ampproject/amphtml\"\nfuzzing_engines:\n - libfuzzer\nvendor_ccs:\n - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport USE_BAZEL_VERSION=5.4.0\ncd validator\nexport FUZZTEST_TARGET_FOLDER=\"//cpp/htmlparser:parser_fuzz_test\"\ncompile_fuzztests.sh\n"
    },
    "angular": {
        "name": "angular",
        "language": "javascript",
        "homepage": "https://angular.io/",
        "main_repo": "https://github.com/angular/angular.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: https://angular.io/\nlanguage: javascript\nmain_repo: https://github.com/angular/angular.git\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n- \"wagner@code-intelligence.com\"\n- \"yakdan@code-intelligence.com\"\n- \"patrice.salathe@code-intelligence.com\"\n- \"hlin@code-intelligence.com\"\n- \"christopher.krah@code-intelligence.com\"\n- \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfunction change_type_to_commonjs() {\n  # Find all package.json files inside the node_modules directory\n  find \"$1\" -name \"package.json\" -type f | while read -r package_file; do\n    # Check if the file contains the \"type\" field\n    if grep -q '\"type\": \"module\"' \"$package_file\"; then\n      # Replace \"type\": \"module\" with \"type\": \"commonjs\"\n      sed -i 's/\"type\": \"module\"/\"type\": \"commonjs\"/' \"$package_file\"\n      echo \"Updated $package_file\"\n    fi\n  done\n}\n\nfunction transform_dir_into_commonjs() {\n  babel \"$1\" --keep-file-extension -D -d \"$1\"_commonjs\n  rm -r \"$1\"\n  mv \"$1\"_commonjs \"$1\"\n}\n\nfunction remove_dev_dependencies() {\n  package_json=$(cat package.json)\n\n  # Remove the \"devDependencies\" item from package.json\n  new_package_json=$(echo \"$package_json\" | jq 'del(.devDependencies)')\n\n  # Overwrite the package.json file with the updated content\n  echo \"$new_package_json\" > package.json\n\n}\n\nfunction copy_bazel_build_into_build_dir() {\n  local package=$1\n  local source_dir=$SRC/angular/dist/bin/packages/$package\n  local destination_dir=$2\n  local extensions=(\"mjs\" \"d.ts\")  # Add the extensions you want to copy here\n  mkdir -p \"$destination_dir\"\n  cp \"$SRC\"/angular/babel.config.json \"$destination_dir\"\n\n  # Copy files recursively from source directory to destination directory\n  find \"$source_dir\" -type f -name \"*.${extensions[0]}\" -o -name \"*.${extensions[1]}\" |\n  while read -r file; do\n    # Get the relative path of the file (relative to the source directory)\n    relative_path=\"${file#$source_dir}\"\n\n    # Remove leading slash if present\n    relative_path=\"${relative_path#/}\"\n\n    # Create the directory structure inside the destination directory\n    mkdir -p \"$destination_dir/$(dirname \"$relative_path\")\"\n\n    # Copy the file to the destination directory\n    cp \"$file\" \"$destination_dir/$relative_path\"\n  done\n}\n\nfunction rename_mjs_files() {\n  local destination_dir=$1\n  find \"$destination_dir\" -type f -name \"*.mjs\" |\n  while read -r file; do\n    filename=\"${file##*/}\"\n    extension=\"${filename##*.}\"\n\n    # Check if the file has the \"mjs\" extension\n    if [ \"$extension\" = \"mjs\" ]; then\n      new_filename=\"${file%.mjs}.js\"\n      mv \"$file\" \"$new_filename\"\n    fi\n  done\n}\n\n\nfunction build_package() {\n  local package=$1\n  local package_build_dir=$SRC/$package-build\n\n  yarn bazel build packages/\"$package\"\n  copy_bazel_build_into_build_dir \"$package\" \"$package_build_dir\"\n\n  rename_mjs_files \"$package_build_dir\"\n  chmod +w \"$package_build_dir\"\n\n  mkdir -p \"$package_build_dir\"\n  cp \"$SRC\"/angular/packages/\"$package\"/package.json \"$package_build_dir\"\n\n  pushd \"$package_build_dir\"\n\n  remove_dev_dependencies\n  npm install\n\n  npm install --save-dev @babel/core @babel/plugin-transform-modules-commonjs\n  npm install --save-dev @jazzer.js/core\n\n  transform_dir_into_commonjs \"$package_build_dir\"\n\n  change_type_to_commonjs \"$package_build_dir\"\n  popd\n\n  mkdir -p \"$SRC\"/angular/\"$package\"\n  cp \"$package_build_dir\"/* \"$SRC\"/angular/\"$package\"/ -r\n  rm \"$package_build_dir\" -r\n\n}\n\nnpm install --global yarn patch-package husky @babel/cli\nyarn install\n\nmkdir \"$OUT\"/angular\n\nbuild_package compiler\n\n# Build Fuzzers.\ncompile_javascript_fuzzer angular/compiler fuzz_tests/fuzz_parse_template --sync\ncompile_javascript_fuzzer angular/compiler fuzz_tests/fuzz_parser --sync\n\n"
    },
    "angus-mail": {
        "name": "angus-mail",
        "language": "jvm",
        "homepage": "https://eclipse-ee4j.github.io/mail",
        "main_repo": "https://github.com/eclipse-ee4j/angus-mail.git",
        "primary_contact": "",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://eclipse-ee4j.github.io/mail\"\nlanguage: jvm\nprimary_contact: \"\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/eclipse-ee4j/angus-mail.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15 -Dmaven.javadoc.skip=true\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"core/target/angus-core-$CURRENT_VERSION.jar\" $OUT/angus-core.jar\n\nALL_JARS=\"angus-core.jar jakarta.mail-1.0.1-SNAPSHOT.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--instrumentation_includes=com.sun.mail.** \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "aniso8601": {
        "name": "aniso8601",
        "language": "python",
        "homepage": "https://bitbucket.org/nielsenb/aniso8601",
        "main_repo": "https://bitbucket.org/nielsenb/aniso8601",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://bitbucket.org/nielsenb/aniso8601\nmain_repo: https://bitbucket.org/nielsenb/aniso8601\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "ansible": {
        "name": "ansible",
        "language": "python",
        "homepage": "https://github.com/ansible/ansible",
        "main_repo": "https://github.com/ansible/ansible",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/ansible/ansible\nlanguage: python\nmain_repo: https://github.com/ansible/ansible\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 ./setup.py install\n\ncd $SRC\n\n# Build parse and task fuzzers\ncompile_python_fuzzer fuzz_parse.py --add-data ansible/lib/ansible/config:ansible/config\ncompile_python_fuzzer fuzz_task.py --add-data ansible/lib/ansible/config:ansible/config\n\n# Build fuzz_encrypt with a specific wrapper only in non-coverage\nif [ \"$SANITIZER\" != \"coverage\" ]; then\n  compile_python_fuzzer fuzz_encrypt.py --add-data ansible/lib/ansible/config:ansible/config\n  cp $SRC/fuzz_encrypt.sh $OUT/fuzz_encrypt\n  chmod +x $OUT/fuzz_encrypt\nfi\n\ncp /usr/lib/x86_64-linux-gnu/libcrypt.so.1.1.0 $OUT/libcrypt.so\n"
    },
    "antlr3-java": {
        "name": "antlr3-java",
        "language": "jvm",
        "homepage": "https://www.antlr.org",
        "main_repo": "https://github.com/antlr/antlr3.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.antlr.org\"\nlanguage: jvm\nmain_repo: \"https://github.com/antlr/antlr3.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n- david@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport MAVEN_OPTS=\"-Xmx1G\"\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"tool/target/antlr-$CURRENT_VERSION.jar\" $OUT/antlr3.jar\nALL_JARS=\"antlr3.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "antlr4-java": {
        "name": "antlr4-java",
        "language": "jvm",
        "homepage": "https://www.antlr.org",
        "main_repo": "https://github.com/antlr/antlr4.git",
        "primary_contact": "terrence.parr@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.antlr.org\"\nlanguage: jvm\nmain_repo: \"https://github.com/antlr/antlr4.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nprimary_contact: \"terrence.parr@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "\n#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport MAVEN_OPTS=\"-Xmx1G\"\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"tool/target/antlr4-$CURRENT_VERSION.jar\" $OUT/antlr4.jar\n\nALL_JARS=\"antlr4.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-axis2": {
        "name": "apache-axis2",
        "language": "jvm",
        "homepage": "https://axis.apache.org/axis2/java/core/",
        "main_repo": "https://github.com/apache/axis-axis2-java-core.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://axis.apache.org/axis2/java/core/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/axis-axis2-java-core.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-DskipTests\"\nALL_JARS=\"\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}\"\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}-fuzzer\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\t\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "apache-commons-bcel": {
        "name": "apache-commons-bcel",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-bcel/",
        "main_repo": "https://github.com/apache/commons-bcel.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org/proper/commons-bcel/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/commons-bcel.git\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\nALL_JARS=\"\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/commons-bcel\"\n\t${MVN} package ${MVN_FLAGS}\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd ${SRC}\n\t${MVN} package -DbcelVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/bcel-fuzzer-${CURRENT_VERSION}.jar ${OUT}/bcel-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} bcel-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\tstripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\techo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "apache-commons-beanutils": {
        "name": "apache-commons-beanutils",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-beanutils/",
        "main_repo": "https://github.com/apache/commons-beanutils.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org/proper/commons-beanutils/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/commons-beanutils.git\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-DskipTests\"\nALL_JARS=\"\"\n\n# install the build servers' jazzer-api into the maven repository\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/commons-beanutils\"\n\t${MVN} package ${MVN_FLAGS}\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd ${SRC}\n\t${MVN} package -DbeanutilsVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/beanutils-fuzzer-${CURRENT_VERSION}.jar ${OUT}/beanutils-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} beanutils-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n  stripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n  # the .java was stripped by sed\n  if (echo ${stripped_path} | grep \".java$\"); then\n\tcontinue;\n  fi\n\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  fuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n  chmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "apache-commons-cli": {
        "name": "apache-commons-cli",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-cli/",
        "main_repo": "https://github.com/apache/commons-cli.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org/proper/commons-cli/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/commons-cli.git\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "\n#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/commons-cli-$CURRENT_VERSION.jar\" $OUT/commons-cli.jar\n\nALL_JARS=\"commons-cli.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-codec": {
        "name": "apache-commons-codec",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-codec/",
        "main_repo": "https://gitbox.apache.org/repos/asf/commons-codec.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://commons.apache.org/proper/commons-codec/\nlanguage: jvm\nmain_repo: https://gitbox.apache.org/repos/asf/commons-codec.git\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nsanitizers:\n- address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"david@adalogics.com\"\n  - \"adam@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/commons-codec-$CURRENT_VERSION.jar\" $OUT/commons-codec.jar\n\nALL_JARS=\"commons-codec.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-collections": {
        "name": "apache-commons-collections",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-collections/",
        "main_repo": "https://github.com/apache/commons-collections.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://commons.apache.org/proper/commons-collections/\nlanguage: jvm\nmain_repo: https://github.com/apache/commons-collections.git\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nsanitizers:\n- address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests -Drat.ignoreErrors=true\"\n\nALL_JARS=\"\"\n\npushd \"${SRC}/commons-collections\"\n\t$MVN package $MAVEN_ARGS\n\tCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n\t\t-Dexpression=project.version -q -DforceStdout)\n\tcp -v target/commons-collections4-${CURRENT_VERSION}.jar \"$OUT/commons-collections4.jar\"\n\tALL_JARS=\"${ALL_JARS} commons-collections4.jar\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-compress": {
        "name": "apache-commons-compress",
        "language": "jvm",
        "homepage": "https://commons.apache.org",
        "main_repo": "https://github.com/apache/commons-compress",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "schaich@code-intelligence.com",
            "norbert.schneider@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/commons-compress\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\n  - \"brunodepaulak@gmail.com\"\n  - \"peteralfredlee@gmail.com\"\n  - \"boards@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\npushd \"$SRC/commons-compress\"\n  MAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n  $MVN package org.apache.maven.plugins:maven-shade-plugin:3.5.1:shade $MAVEN_ARGS\n  CURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.4.0:evaluate \\\n   -Dexpression=project.version -q -DforceStdout)\n  cp \"target/commons-compress-$CURRENT_VERSION.jar\" $OUT/commons-compress.jar\npopd\n\nALL_JARS=\"commons-compress.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n  cp $SRC/Base*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone"
    },
    "apache-commons-configuration": {
        "name": "apache-commons-configuration",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-configuration/",
        "main_repo": "https://gitbox.apache.org/repos/asf/commons-configuration.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "yoshi.weber@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://commons.apache.org/proper/commons-configuration/\"\nlanguage: jvm\nmain_repo: \"https://gitbox.apache.org/repos/asf/commons-configuration.git\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n - libfuzzer\nsanitizers:\n - address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"yoshi.weber@gmail.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Moving the corpora and dictionaries to $OUT\nmv $SRC/{*.zip,*.dict} $OUT\n\n# Building the library\nMAVEN_ARGS=\"--no-transfer-progress -Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15 -Djdk.version=15\"\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\n\n## maven-shade-plugin is for packaging all the dependencies into one .jar\n$MVN clean package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\ncp \"target/commons-configuration2-$CURRENT_VERSION.jar\" \"$OUT/commons-configuration.jar\"\n\nALL_JARS=\"commons-configuration.jar\"\n\n## The classpath at build-time includes the project jars in $OUT as well as the Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n## All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -iname '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n    javac -cp $BUILD_CLASSPATH $fuzzer\n    cp $SRC/$fuzzer_basename.class $OUT/\n\n    # Create an execution wrapper that executes Jazzer with the correct arguments.\n    echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings:-Djava.awt.headless=true\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n\n    # Make the execution wrapper executable\n    chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-csv": {
        "name": "apache-commons-csv",
        "language": "jvm",
        "homepage": "https://github.com/apache/commons-csv",
        "main_repo": "https://github.com/apache/commons-csv.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/apache/commons-csv\"\nlanguage: jvm\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nauto_ccs:\n  - \"security@commons.apache.org\"\nmain_repo: \"https://github.com/apache/commons-csv.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15 -Dmaven.javadoc.skip=true\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/commons-csv-$CURRENT_VERSION.jar\" $OUT/commons-csv.jar\n\nALL_JARS=\"commons-csv.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-fileupload": {
        "name": "apache-commons-fileupload",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-fileupload/",
        "main_repo": "https://github.com/apache/commons-fileupload.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org/proper/commons-fileupload/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/apache/commons-fileupload.git\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=apache-commons-fileupload\nPROJECT_GROUP_ID=org.apache.commons\nPROJECT_ARTIFACT_ID=commons-fileupload2\nMAIN_REPOSITORY=https://github.com/apache/commons-fileupload.git\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15 -Denforcer.skip=true -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && mvn install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "apache-commons-geometry": {
        "name": "apache-commons-geometry",
        "language": "jvm",
        "homepage": "https://commons.apache.org",
        "main_repo": "https://github.com/apache/commons-geometry",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "schaich@code-intelligence.com",
            "norbert.schneider@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/commons-geometry\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\n  - \"brunodepaulak@gmail.com\"\n  - \"peteralfredlee@gmail.com\"\n  - \"boards@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd \"$SRC/commons-geometry\"\n  MAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=8 -Djavac.target.version=8\"\n  $MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\n  CURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n   -Dexpression=project.version -q -DforceStdout)\n  cp \"commons-geometry-io-euclidean/target/commons-geometry-io-euclidean-$CURRENT_VERSION.jar\" $OUT/commons-geometry.jar\npopd\n\nALL_JARS=\"commons-geometry.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone"
    },
    "apache-commons-imaging": {
        "name": "apache-commons-imaging",
        "language": "jvm",
        "homepage": "https://commons.apache.org",
        "main_repo": "https://github.com/apache/commons-imaging",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "schaich@code-intelligence.com",
            "norbert.schneider@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "ggregory@apache.org",
            "garydgregory@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/commons-imaging\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\n  - \"brunodepaulak@gmail.com\"\n  - \"peteralfredlee@gmail.com\"\n  - \"boards@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"ggregory@apache.org\"\n  - \"garydgregory@gmail.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\npushd \"$SRC/commons-imaging\"\n  MAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15 --no-transfer-progress\"\n  $MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\n  CURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n   -Dexpression=project.version -q -DforceStdout)\n  cp \"target/commons-imaging-$CURRENT_VERSION.jar\" $OUT/commons-imaging.jar\npopd\n\nALL_JARS=\"commons-imaging.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings:-Djava.awt.headless=true\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone"
    },
    "apache-commons-io": {
        "name": "apache-commons-io",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-io/",
        "main_repo": "https://gitbox.apache.org/repos/asf/commons-io.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://commons.apache.org/proper/commons-io/\nlanguage: jvm\nmain_repo: https://gitbox.apache.org/repos/asf/commons-io.git\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\n  - \"garydgregory@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"david@adalogics.com\"\n  - \"adam@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/commons-io-$CURRENT_VERSION.jar\" $OUT/commons-io.jar\n\nALL_JARS=\"commons-io.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-jxpath": {
        "name": "apache-commons-jxpath",
        "language": "jvm",
        "homepage": "https://github.com/apache/commons-jxpath.git",
        "main_repo": "https://github.com/apache/commons-jxpath.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/apache/commons-jxpath.git\nlanguage: jvm\nmain_repo: https://github.com/apache/commons-jxpath.git\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nsanitizers:\n- address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n- wagner@code-intelligence.com\n- yakdan@code-intelligence.com\n- glendowne@code-intelligence.com\n- patrice.salathe@code-intelligence.com\n- hlin@code-intelligence.com\n- \"schaich@code-intelligence.com\"\n- \"jacek.trossen@code-intelligence.com\"\n- \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/commons-jxpath-$CURRENT_VERSION.jar\" $OUT/commons-jxpath.jar\n\nALL_JARS=\"commons-jxpath.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-lang": {
        "name": "apache-commons-lang",
        "language": "jvm",
        "homepage": "https://github.com/apache/commons-lang",
        "main_repo": "https://github.com/apache/commons-lang.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/apache/commons-lang\nlanguage: jvm\nmain_repo: https://github.com/apache/commons-lang.git\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nsanitizers:\n- address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"david@adalogics.com\"\n  - \"adam@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests -Drat.ignoreErrors=true\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/commons-lang3-$CURRENT_VERSION.jar\" \"$OUT/commons-lang.jar\"\n\nmkdir -p $OUT/dependency\nwget -O $OUT/dependency/guava.jar https://repo1.maven.org/maven2/com/google/guava/guava/32.1.3-jre/guava-32.1.3-jre.jar\n\n# Compile ClassFuzzerBase\njavac -cp $OUT/dependency/guava.jar $SRC/ClassFuzzerBase.java\njar cvf $OUT/class-fuzzer-base.jar -C $SRC ClassFuzzerBase.class\n\nALL_JARS=\"commons-lang.jar class-fuzzer-base.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$OUT/dependency/guava.jar:$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir/dependency/guava.jar:\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-logging": {
        "name": "apache-commons-logging",
        "language": "jvm",
        "homepage": "https://commons.apache.org/proper/commons-collections/",
        "main_repo": "https://gitbox.apache.org/repos/asf/commons-logging.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://commons.apache.org/proper/commons-collections/\nlanguage: jvm\nmain_repo: https://gitbox.apache.org/repos/asf/commons-logging.git\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests -Drat.ignoreErrors=true\"\n\nALL_JARS=\"\"\n\npushd \"${SRC}/commons-logging\"\n\t$MVN package $MAVEN_ARGS\n\tCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n\t\t-Dexpression=project.version -q -DforceStdout)\n\tcp -v target/commons-logging-${CURRENT_VERSION}.jar \"$OUT/commons-logging.jar\"\n\tALL_JARS=\"${ALL_JARS} commons-logging.jar\"\npopd\n\nLOG4J_VERSION=$(echo $(curl -s 'https://api.github.com/repos/apache/logging-log4j2/tags?per_page=1' | jq -r .[].name) | sed 's/^[^0-9]*//')\ncurl \"https://dlcdn.apache.org/logging/log4j/$LOG4J_VERSION/apache-log4j-$LOG4J_VERSION-bin.tar.gz\" -o apache-log4j-bin.tar.gz\ntar xf apache-log4j-bin.tar.gz\nunlink apache-log4j-bin.tar.gz\nmv apache-log4j-$LOG4J_VERSION-bin $SRC\n\nfor jarFile in ${SRC}/apache-log4j-$LOG4J_VERSION-bin/log4j-api-$LOG4J_VERSION.jar ${SRC}/apache-log4j-$LOG4J_VERSION-bin/log4j-core-$LOG4J_VERSION.jar ${SRC}/apache-log4j-$LOG4J_VERSION-bin/log4j-1.2-api-$LOG4J_VERSION.jar ; do\n\tcp -v ${jarFile} \"$OUT/$(basename ${jarFile})\"\n\tALL_JARS=\"${ALL_JARS} $(basename ${jarFile})\"\ndone\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java $SRC/Package/*.java\nmkdir -p $OUT/Package\ncp -vr $SRC/Package/*.class $OUT/Package\ncp -v $SRC/*.class $OUT/\ncp -v $SRC/*.xml $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-math": {
        "name": "apache-commons-math",
        "language": "jvm",
        "homepage": "https://commons.apache.org",
        "main_repo": "https://github.com/apache/commons-math",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "schaich@code-intelligence.com",
            "norbert.schneider@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://commons.apache.org\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/commons-math\"\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"security@commons.apache.org\"\n  - \"brunodepaulak@gmail.com\"\n  - \"peteralfredlee@gmail.com\"\n  - \"boards@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd \"$SRC/commons-math\"\n  MAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n  $MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\n  CURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n   -Dexpression=project.version -q -DforceStdout)\n  cp \"commons-math-legacy/target/commons-math4-legacy-$CURRENT_VERSION.jar\" $OUT/commons-math.jar\npopd\n\nALL_JARS=\"commons-math.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-net": {
        "name": "apache-commons-net",
        "language": "jvm",
        "homepage": "https://github.com/apache/commons-net",
        "main_repo": "https://github.com/apache/commons-net.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/apache/commons-net\"\nlanguage: jvm\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nauto_ccs:\n  - \"security@commons.apache.org\"\n  - \"irali@google.com\"\nmain_repo: \"https://github.com/apache/commons-net.git\"\nfile_github_issue: false\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true -Dpmd.skip=true \\\n  -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n  -DperformRelease=True\"\n$MVN clean package $MAVEN_ARGS org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./ -name \"commons-net-$CURRENT_VERSION.jar\" -exec mv {} $OUT/commons-net.jar \\;\n\nALL_JARS=\"commons-net.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac -cp $BUILD_CLASSPATH ${SRC}/*.java\ninstall ${SRC}/*.class ${OUT}/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\necho \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-commons-text": {
        "name": "apache-commons-text",
        "language": "jvm",
        "homepage": "https://github.com/apache/commons-text/",
        "main_repo": "https://github.com/apache/commons-text/",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": [
            "michael.nothhard@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/apache/commons-text/\"\nlanguage: jvm\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nfuzzing_engines:\n  - \"libfuzzer\"\nmain_repo: \"https://github.com/apache/commons-text/\"\nsanitizers:\n  - \"address\"\nauto_ccs:\n  - \"security@commons.apache.org\"\nvendor_ccs:\n  - \"michael.nothhard@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=apache-commons-text\nMODULE=org.apache.commons:commons-text\nPROJECT_GROUP_ID=org.apache.commons\nPROJECT_ARTIFACT_ID=commons-text\nMAIN_REPOSITORY=https://github.com/apache/commons-text/\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  # install\n  # skip RAT license check to avoid build error\n  mvn -pl $MODULE install -DskipTests -Drat.skip=true \n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  # install\n  # skip RAT license check to avoid build error\n  $MVN -pl $MODULE install -DskipTests -Drat.skip=true -Dmaven.repo.local=$OUT/m2\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n  \\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "apache-commons-validator": {
        "name": "apache-commons-validator",
        "language": "jvm",
        "homepage": "https://github.com/apache/commons-validator",
        "main_repo": "https://github.com/apache/commons-validator.git",
        "primary_contact": "fuzz-testing@commons.apache.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/apache/commons-validator\"\nlanguage: jvm\nprimary_contact: \"fuzz-testing@commons.apache.org\"\nauto_ccs:\n  - \"security@commons.apache.org\"\n  - \"irali@google.com\"\nmain_repo: \"https://github.com/apache/commons-validator.git\"\nfile_github_issue: false\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true -Dpmd.skip=true \\\n  -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n  -DperformRelease=True\"\n$MVN clean package $MAVEN_ARGS org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./ -name \"commons-validator-$CURRENT_VERSION.jar\" -exec mv {} $OUT/commons-validator.jar \\;\n\nALL_JARS=\"commons-validator.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac -cp $BUILD_CLASSPATH ${SRC}/*.java\ninstall ${SRC}/*.class ${OUT}/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\necho \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-cxf": {
        "name": "apache-cxf",
        "language": "jvm",
        "homepage": "https://cxf.apache.org/",
        "main_repo": "https://github.com/apache/cxf/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://cxf.apache.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/cxf/\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=cxf\nPROJECT_GROUP_ID=org.apache.cxf\nPROJECT_ARTIFACT_ID=cxf\nMAIN_REPOSITORY=https://github.com/apache/cxf/\n\nMAVEN_ARGS=\"-Djavac.src.version=17 -Djavac.target.version=17 -Denforcer.skip=true -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  FUZZ_TARGET_DEPENDENCIES=\":cxf-core :cxf-rt-frontend-jaxrs :cxf-rt-transports-http :cxf-rt-rs-client :cxf-rt-rs-json-basic\"\n  \n  for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  export JAVA_HOME=\"$OUT/open-jdk-17\"\n  mkdir -p $JAVA_HOME\n  rsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent/fuzz-targets -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  JAVA_HOME=\\\"\\$this_dir/open-jdk-17/\\\" \\\n  LD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-17/lib/server\\\":\\$this_dir \\\n  \\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n  --cp=$RUNTIME_CLASSPATH \\\n  --target_class=com.example.$fuzzer_basename \\\n  --jvm_args=\\\"\\$mem_settings\\\" \\\n  --instrumentation_includes=\\\"com.**:org.**\\\" \\\n  \\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "apache-doris": {
        "name": "apache-doris",
        "language": "c++",
        "homepage": "https://doris.apache.org",
        "main_repo": "https://github.com/apache/doris.git",
        "primary_contact": "dataroaring@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://doris.apache.org\"\nlanguage: c++\nprimary_contact: \"dataroaring@gmail.com\"\nmain_repo: \"https://github.com/apache/doris.git\"",
        "build_sh": null
    },
    "apache-felix-dev": {
        "name": "apache-felix-dev",
        "language": "jvm",
        "homepage": "https://felix.apache.org/",
        "main_repo": "https://github.com/apache/felix-dev.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://felix.apache.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/felix-dev.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$MVN -f utils/ clean install -Dmaven.test.skip=true\ncp ./utils/target/org.apache.felix.utils-1.11.9-SNAPSHOT.jar $OUT/felix.utils.jar\n\nALL_JARS=\"felix.utils.jar\"\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "apache-httpd": {
        "name": "apache-httpd",
        "language": "c",
        "homepage": "https://httpd.apache.org/",
        "main_repo": "https://github.com/apache/httpd",
        "primary_contact": "david@adalogics.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://httpd.apache.org/\"\nlanguage: c\nprimary_contact: \"david@adalogics.com\"\nauto_ccs:\n - \"stefan.eissing@gmail.com\"\n - \"covener@gmail.com\"\n - \"ylavic.dev@gmail.com\"\nmain_repo: \"https://github.com/apache/httpd\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nunset CPP\nINITIAL_CXX=$CXX\nunset CXX\nexport LDFLAGS=\"-l:libbsd.a\"\n\n# Download apr and place in httpd srclib folder. Apr-2.0 includes apr-utils\nsvn checkout https://svn.apache.org/repos/asf/apr/apr/trunk/ srclib/apr\n\n# Build httpd\n./buildconf\n./configure --with-included-apr --enable-pool-debug\nmake -j$( nproc )\n\nstatic_pcre=($(find /src/pcre2 -name \"libpcre2-8.a\"))\n\n# Build the fuzzers\nfor fuzzname in utils parse tokenize addr_parse uri request preq; do\n  $CC $CFLAGS -c \\\n    -I$SRC/fuzz-headers/lang/c -I./include -I./os/unix \\\n    -I./srclib/apr/include -I./srclib/apr-util/include/ \\\n    $SRC/fuzz_${fuzzname}.c\n\n  $INITIAL_CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_${fuzzname}.o -o $OUT/fuzz_${fuzzname} \\\n    ./modules.o buildmark.o \\\n    -Wl,--start-group ./server/.libs/libmain.a \\\n                      ./modules/core/.libs/libmod_so.a \\\n                      ./modules/http/.libs/libmod_http.a \\\n                      ./server/mpm/event/.libs/libevent.a \\\n                      ./os/unix/.libs/libos.a \\\n                      ./srclib/apr/.libs/libapr-2.a \\\n    -Wl,--end-group -luuid -lcrypt -lexpat -l:libbsd.a ${static_pcre}\ndone\n"
    },
    "apache-logging-log4cxx": {
        "name": "apache-logging-log4cxx",
        "language": "c++",
        "homepage": "https://logging.apache.org/log4cxx",
        "main_repo": "https://github.com/apache/logging-log4cxx",
        "primary_contact": "volkan@yazi.ci",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer",
            "centipede"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://logging.apache.org/log4cxx\"\nmain_repo: \"https://github.com/apache/logging-log4cxx\"\nlanguage: c++\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n  - centipede\n\nsanitizers:\n  - address\n  - undefined\n\n# Apache Logging Services PMC members[1] that contribute the fuzz tests.\n# We cannot share `security@logging.apache.org` here, since it must be associated with a Google account[2].\n#\n# [1] https://logging.apache.org/team-list.html\n# [2] https://google.github.io/oss-fuzz/getting-started/new-project-guide/#primary\nprimary_contact: volkan@yazi.ci\nauto_ccs:\n  - piotr.karwasz@gmail.com\n  - osfan6313@gmail.com\n  - adam@adalogics.com\n  - swebb2066@gmail.com\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit clone --quiet --depth 1 --branch master --single-branch https://github.com/apache/logging-log4cxx\n./logging-log4cxx/src/fuzzers/bash/oss-fuzz-build.sh \"$OUT\"\n\n# Add seed corpus\nzip $OUT/DOMConfiguratorFuzzer_seed_corpus.zip $SRC/logging-log4cxx/src/test/resources/input/xml/*.xml\n"
    },
    "apache-poi": {
        "name": "apache-poi",
        "language": "jvm",
        "homepage": "https://poi.apache.org/",
        "main_repo": "https://github.com/apache/poi.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "centic@apache.org",
            "dominik.stadler@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://poi.apache.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/poi.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"centic@apache.org\"\n  - \"dominik.stadler@gmail.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"--no-transfer-progress -DskipTests\"\nALL_JARS=\"\"\nLIBRARY_NAME=\"poi\"\nGRADLE_FLAGS=\"-x javadoc -x test -Dfile.encoding=UTF-8 -Porg.gradle.java.installations.fromEnv=JAVA_HOME_8,JAVA_HOME_11 --console=plain\"\n\necho Copy libraries for java.awt in place\nls /usr/lib/x86_64-linux-gnu/\ncp /usr/lib/x86_64-linux-gnu/libXext.so.6* \\\n  /usr/lib/x86_64-linux-gnu/libX11.so.6* \\\n  /usr/lib/x86_64-linux-gnu/libXrender.so.1* \\\n  /usr/lib/x86_64-linux-gnu/libXtst.so.6* \\\n  /usr/lib/x86_64-linux-gnu/libXi.so.6* \\\n  /usr/lib/x86_64-linux-gnu/libxcb.so.1* \\\n  /usr/lib/x86_64-linux-gnu/libXau.so.6* \\\n  /usr/lib/x86_64-linux-gnu/libXdmcp.so.6* \\\n  ${OUT}/\n\necho Main Java\n${JAVA_HOME}/bin/java -version\n\necho Java 8\n${JAVA_HOME_8}/bin/java -version\n\necho Java 11\n${JAVA_HOME_11}/bin/java -version\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar \\\n\t\t ${MVN_FLAGS}\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}\"\n\t# build and publish current binaries\n\t./gradlew publishToMavenLocal ${GRADLE_FLAGS}\n\n\t# determine current version-tag\n\tCURRENT_VERSION=$(./gradlew properties ${GRADLE_FLAGS} | sed -nr \"s/^version:\\ (.*)/\\1/p\")\n\n\t# prepare some seed-corpus archives based on the test-data of Apache POI\n\t# we cannot do this automatically as there is not a 1:1 match of fuzz targets and formats\n\tzip -r $OUT/POIFuzzer_seed_corpus.zip test-data\n\tzip -jr $OUT/POIHDGFFuzzer_seed_corpus.zip test-data/diagram/*.vsd\n\tzip -jr $OUT/POIHMEFFuzzer_seed_corpus.zip test-data/hmef/*\n\tzip -jr $OUT/POIHPBFFuzzer_seed_corpus.zip test-data/publisher/*\n\tzip -jr $OUT/POIHPSFFuzzer_seed_corpus.zip test-data/hpsf/*\n\tzip -jr $OUT/POIHSLFFuzzer_seed_corpus.zip test-data/slideshow/*.ppt\n\tzip -jr $OUT/POIHSMFFuzzer_seed_corpus.zip test-data/hsmf/*\n\tzip -jr $OUT/POIHSSFFuzzer_seed_corpus.zip test-data/spreadsheet/*.xls\n\tzip -jr $OUT/POIHWPFFuzzer_seed_corpus.zip test-data/document/*.doc test-data/document/*.DOC\n\tzip -jr $OUT/POIOldExcelFuzzer_seed_corpus.zip test-data/spreadsheet/*.xls test-data/spreadsheet/*.bin\n\tzip -jr $OUT/POIVisioFuzzer_seed_corpus.zip test-data/diagram/*\n\tzip -jr $OUT/POIXSLFFuzzer_seed_corpus.zip test-data/slideshow/* test-data/integration/*.pptx\n\tzip -jr $OUT/POIXSSFFuzzer_seed_corpus.zip test-data/spreadsheet/* test-data/integration/*.xslx\n\tzip -jr $OUT/POIXWPFFuzzer_seed_corpus.zip test-data/document/* test-data/integration/*.docx\n\tzip -jr $OUT/XLSX2CSVFuzzer_seed_corpus.zip test-data/spreadsheet/*\npopd\n\npushd \"${SRC}\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tmkdir -p ${OUT}/dependency\n\tinstall -v target/assembly/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tinstall -v target/assembly/${LIBRARY_NAME}-fuzzer-libs-${CURRENT_VERSION}.jar ${OUT}/dependency/${LIBRARY_NAME}-fuzzer-libs-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar dependency/${LIBRARY_NAME}-fuzzer-libs-${CURRENT_VERSION}.jar\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--instrumentation_includes=org.apache.poi.**:org.apache.xmlbeans.** \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx1024m:-Dorg.apache.poi.ss.ignoreMissingFontSystem=true\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "aptos-core": {
        "name": "aptos-core",
        "language": "rust",
        "homepage": "https://aptos.dev",
        "main_repo": "https://github.com/aptos-labs/aptos-core",
        "primary_contact": "gerardo@aptoslabs.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://aptos.dev\"\nlanguage: rust\nprimary_contact: \"gerardo@aptoslabs.com\"\nmain_repo: \"https://github.com/aptos-labs/aptos-core\"\nauto_ccs:\n  - \"oss-fuzz-notifications@aptoslabs.com\"\n  - \"security@aptoslabs.com\"\n  - \"andrea.cappa@aptoslabs.com\"\n  - \"marco.ilardi@aptoslabs.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\ncoverage_extra_args: -ignore-filename-regex=.*/rustc/.*",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd testsuite/fuzzer\nbash fuzz.sh build-oss-fuzz $OUT"
    },
    "archaius-core": {
        "name": "archaius-core",
        "language": "jvm",
        "homepage": "https://github.com/Netflix/archaius",
        "main_repo": "https://github.com/Netflix/archaius.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/Netflix/archaius\"\nlanguage: jvm\nmain_repo: \"https://github.com/Netflix/archaius.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd archaius-core\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/archaius-core-$CURRENT_VERSION-jar-with-dependencies.jar\" \"$OUT/archaius-core.jar\"\n\nALL_JARS=\"archaius-core.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "arduinojson": {
        "name": "arduinojson",
        "language": "c++",
        "homepage": "https://github.com/bblanchon/ArduinoJson",
        "main_repo": "https://github.com/bblanchon/ArduinoJson.git",
        "primary_contact": "benoit.blanchon@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/bblanchon/ArduinoJson\"\nlanguage: c++\nprimary_contact: \"benoit.blanchon@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/bblanchon/ArduinoJson.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd extras/fuzzing\nmake\n"
    },
    "argcomplete": {
        "name": "argcomplete",
        "language": "python",
        "homepage": "https://github.com/kislyuk/argcomplete",
        "main_repo": "https://github.com/kislyuk/argcomplete",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/kislyuk/argcomplete\nmain_repo: https://github.com/kislyuk/argcomplete\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "argo": {
        "name": "argo",
        "language": "go",
        "homepage": "https://argoproj.github.io/",
        "main_repo": "https://github.com/argoproj",
        "primary_contact": "terrytangyuan@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://argoproj.github.io/\"\nmain_repo: \"https://github.com/argoproj\"\nprimary_contact: \"terrytangyuan@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"henrik.blixt@gmail.com\"\n  - \"jfischer@redhat.com\"\n  - \"alexander_matyushentsev@intuit.com\"\n  - \"qianbo_huai@intuit.com\"\n  - \"alex_collins@intuit.com\"\n  - \"derek_wang@intuit.com\"\n  - \"saravanan_balasubramanian@intuit.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/cncf-fuzzing/projects/argo/build.sh\n\n\n"
    },
    "args": {
        "name": "args",
        "language": "c++",
        "homepage": "https://taywee.github.io/args/",
        "main_repo": "https://github.com/Taywee/args",
        "primary_contact": "taylor@axfive.net",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://taywee.github.io/args/\"\nmain_repo: \"https://github.com/Taywee/args\"\nlanguage: c++\nprimary_contact: \"taylor@axfive.net\"\n\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\n\ncmake -DCMAKE_BUILD_TYPE=Release ..\nmake -j4\n\nfor fuzzer in $(find $SRC/args/fuzz/ -name \"*_fuzzer.cpp\"); do\n    fuzzer_basename=$(basename -s .cpp $fuzzer)\n    $CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n        -I$SRC/args \\\n        $fuzzer \\\n        -o $OUT/$fuzzer_basename\ndone\n\n"
    },
    "args4j": {
        "name": "args4j",
        "language": "jvm",
        "homepage": "https://github.com/kohsuke/args4j",
        "main_repo": "https://github.com/kohsuke/args4j",
        "primary_contact": null,
        "vendor_ccs": [
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/kohsuke/args4j\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/kohsuke/args4j\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\n\n$MVN package -pl -args4j-tools -pl -args4j-maven-plugin -pl -args4j-maven-plugin-example\n\ncp \"../args4j/args4j/target/args4j-$CURRENT_VERSION.jar\" $OUT/\n\nALL_JARS=$(find $OUT/ -name *.jar ! -name jazzer*.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone "
    },
    "arrow-java": {
        "name": "arrow-java",
        "language": "jvm",
        "homepage": "https://arrow.apache.org/",
        "main_repo": "https://github.com/apache/arrow.git",
        "primary_contact": "liya.fan03@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://arrow.apache.org/\"\nlanguage: jvm\nprimary_contact: \"liya.fan03@gmail.com\"\nauto_ccs:\n  - \"emkornfield@gmail.com\"\n  - \"jacques@apache.org\"\n  - \"wesmckinn@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/apache/arrow.git\"\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Only build the Java module\nMAVEN_ARGS=\"-DskipTests\"\ncd arrow/java\n$MVN install ${MAVEN_ARGS}\n\n# copy dependencies\n$MVN dependency:copy-dependencies -DoutputDirectory=$OUT\n\n# setup class path\nALL_JARS=\"\"\nfor jar in $(find $OUT -name '*.jar'); do\n  jar_name=$(basename $jar)\n  ALL_JARS=$ALL_JARS\" \"$jar_name\ndone\n\ncd ../..\n\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\nfor fuzzer in $(find $SRC -name 'Fuzz*.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\n\nexport JAVA_HOME=$JAVA_15_HOME\nexport JVM_LD_LIBRARY_PATH=$JAVA_HOME/lib/server\nexport PATH=$JAVA_HOME/bin:$PATH\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "arrow-py": {
        "name": "arrow-py",
        "language": "python",
        "homepage": "https://github.com/arrow-py/arrow",
        "main_repo": "https://github.com/arrow-py/arrow",
        "primary_contact": "me@krisfremen.com",
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/arrow-py/arrow\nmain_repo: https://github.com/arrow-py/arrow\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nprimary_contact: me@krisfremen.com\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "arrow": {
        "name": "arrow",
        "language": "c++",
        "homepage": "https://arrow.apache.org/",
        "main_repo": "https://github.com/apache/arrow.git",
        "primary_contact": "antoine@python.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://arrow.apache.org/\"\nlanguage: c++\nprimary_contact: \"antoine@python.org\"\nauto_ccs:\n  - \"bengilgit@gmail.com\"\n  - \"emkornfield@gmail.com\"\n  - \"felipekde@gmail.com\"\n  - \"fsaintjacques@gmail.com\"\n  - \"jinpengz@google.com\"\n  - \"maplewish117@gmail.com\"\n  - \"micahk@google.com\"\n  - \"muraken@gmail.com\"\n  - \"panahi@google.com\"\n  - \"szucs.krisztian@gmail.com\"\n  - \"wesmckinn@gmail.com\"\n  - \"xhochy@gmail.com\"\n  - \"will.jones127@gmail.com\"\n  - \"zotthewizard@gmail.com\"\nmain_repo: 'https://github.com/apache/arrow.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -ex\n\n# Install Boost headers\n(\n cd $SRC/\n tar jxf boost_1_85_0.tar.bz2\n cd boost_1_85_0/\n CFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\n CFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\n cp -R boost/ /usr/include/\n)\n\nARROW=${SRC}/arrow/cpp\n\ncd ${WORK}\n\n# The CMake build setup compiles and runs the Thrift compiler, but ASAN\n# would report leaks and error out.\nexport ASAN_OPTIONS=\"detect_leaks=0\"\n\ncmake ${ARROW} -GNinja \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DARROW_DEPENDENCY_SOURCE=BUNDLED \\\n    -DBOOST_SOURCE=SYSTEM \\\n    -DCMAKE_C_FLAGS=\"${CFLAGS}\" \\\n    -DCMAKE_CXX_FLAGS=\"${CXXFLAGS}\" \\\n    -DARROW_EXTRA_ERROR_CONTEXT=off \\\n    -DARROW_JEMALLOC=off \\\n    -DARROW_MIMALLOC=off \\\n    -DARROW_FILESYSTEM=off \\\n    -DARROW_PARQUET=on \\\n    -DARROW_BUILD_SHARED=off \\\n    -DARROW_BUILD_STATIC=on \\\n    -DARROW_BUILD_TESTS=off \\\n    -DARROW_BUILD_INTEGRATION=off \\\n    -DARROW_BUILD_BENCHMARKS=off \\\n    -DARROW_BUILD_EXAMPLES=off \\\n    -DARROW_BUILD_UTILITIES=off \\\n    -DARROW_TEST_LINKAGE=static \\\n    -DPARQUET_BUILD_EXAMPLES=off \\\n    -DPARQUET_BUILD_EXECUTABLES=off \\\n    -DPARQUET_REQUIRE_ENCRYPTION=off \\\n    -DARROW_WITH_BROTLI=on \\\n    -DARROW_WITH_BZ2=off \\\n    -DARROW_WITH_LZ4=on \\\n    -DARROW_WITH_SNAPPY=on \\\n    -DARROW_WITH_ZLIB=on \\\n    -DARROW_WITH_ZSTD=on \\\n    -DARROW_USE_GLOG=off \\\n    -DARROW_USE_ASAN=off \\\n    -DARROW_USE_UBSAN=off \\\n    -DARROW_USE_TSAN=off \\\n    -DARROW_FUZZING=on \\\n\ncmake --build .\n\ncp -a release/* ${OUT}\n\n${ARROW}/build-support/fuzzing/generate_corpuses.sh ${OUT}\n"
    },
    "askama": {
        "name": "askama",
        "language": "rust",
        "homepage": "https://askama.readthedocs.io/",
        "main_repo": "https://github.com/askama-rs/askama",
        "primary_contact": "rene.kijewski@fu-berlin.de",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://askama.readthedocs.io/\"\nmain_repo: \"https://github.com/askama-rs/askama\"\nlanguage: rust\nprimary_contact: \"rene.kijewski@fu-berlin.de\"\nauto_ccs:\n  - \"guillaume1.gomez@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\ncoverage_extra_args: >\n  -ignore-filename-regex=.*/rustc/.*\n  -ignore-filename-regex=.*/rust/.*\n",
        "build_sh": "#!/bin/bash\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -euxo pipefail\n\ntarget_out_dir=target/x86_64-unknown-linux-gnu/release\ncargo fuzz build --release\ncargo fuzz list | while read i; do\n    zip --recurse-paths --junk-paths --quiet \"${OUT}/${i}_seed_corpus.zip\" \"./fuzz/corpus/${i}/\"\n    mv -t \"${OUT}/\" \"$target_out_dir/${i}\"\ndone\n"
    },
    "asn1crypto": {
        "name": "asn1crypto",
        "language": "python",
        "homepage": "https://github.com/wbond/asn1crypto",
        "main_repo": "https://github.com/wbond/asn1crypto",
        "primary_contact": "will@wbond.net",
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/wbond/asn1crypto\nlanguage: python\nmain_repo: https://github.com/wbond/asn1crypto\nsanitizers:\n- address\nprimary_contact: \"will@wbond.net\"\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "aspectj": {
        "name": "aspectj",
        "language": "jvm",
        "homepage": "https://www.eclipse.org/aspectj/",
        "main_repo": "https://github.com/eclipse/org.aspectj",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.eclipse.org/aspectj/\"\nlanguage: jvm\nmain_repo: \"https://github.com/eclipse/org.aspectj\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-Dmaven.compiler.source=15 -Dmaven.compiler.target=15 -DskipTests\"\nALL_JARS=\"\"\n\n# install the build servers' jazzer-api into the maven repository\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/org.aspectj\"\n\t${MVN} package ${MVN_FLAGS}\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd ${SRC}\n\t${MVN} package -DaspectjVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/aspectj-fuzzer-${CURRENT_VERSION}.jar ${OUT}/aspectj-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} aspectj-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n  stripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n  # the .java was stripped by sed\n  if (echo ${stripped_path} | grep \".java$\"); then\n\tcontinue;\n  fi\n\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  fuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n  chmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "aspell": {
        "name": "aspell",
        "language": "c++",
        "homepage": "https://github.com/GNUAspell/aspell",
        "main_repo": "https://github.com/gnuaspell/aspell.git",
        "primary_contact": "kevina@gnu.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/GNUAspell/aspell\"\nlanguage: c++\nprimary_contact: \"kevina@gnu.org\"\nauto_ccs:\n  - \"kevinatkn@gmail.com\"\n  - \"cmeister2@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory:\n      experimental: true\nmain_repo: 'https://github.com/gnuaspell/aspell.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run the OSS-Fuzz script in the fuzzer project.\npushd $SRC/aspell-fuzz\n./ossfuzz.sh\npopd\n"
    },
    "assimp": {
        "name": "assimp",
        "language": "c++",
        "homepage": "https://github.com/assimp/assimp",
        "main_repo": "https://github.com/assimp/assimp.git",
        "primary_contact": "kim.kulling@googlemail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/assimp/assimp\"\nlanguage: c++\nprimary_contact: \"kim.kulling@googlemail.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n#     experimental: True\n  - undefined\nmain_repo: 'https://github.com/assimp/assimp.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# generate build env and build assimp\ncmake CMakeLists.txt -G \"Ninja\" -DBUILD_SHARED_LIBS=OFF -DASSIMP_BUILD_ZLIB=ON \\\n                                -DASSIMP_BUILD_TESTS=OFF -DASSIMP_BUILD_ASSIMP_TOOLS=OFF \\\n                                -DASSIMP_BUILD_SAMPLES=OFF\ncmake --build .\n\n# Build the fuzzer\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -std=c++11 -I$SRC/assimp/include \\\n\t\tfuzz/assimp_fuzzer.cc -o $OUT/assimp_fuzzer  \\\n\t\t./lib/libassimp.a ./contrib/zlib/libzlibstatic.a\n"
    },
    "astc-encoder": {
        "name": "astc-encoder",
        "language": "c++",
        "homepage": "https://github.com/ARM-software/astc-encoder",
        "main_repo": "https://github.com/ARM-software/astc-encoder",
        "primary_contact": "peter.harris@arm.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ARM-software/astc-encoder\"\nlanguage: c++\nprimary_contact: \"peter.harris@arm.com\"\nmain_repo: 'https://github.com/ARM-software/astc-encoder'\n",
        "build_sh": "# !/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project and project-hosted fuzzers\n$SRC/astc-encoder/Source/Fuzzers/build.sh\n"
    },
    "asteval": {
        "name": "asteval",
        "language": "python",
        "homepage": "https://github.com/newville/asteval",
        "main_repo": "https://github.com/newville/asteval",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/newville/asteval\nmain_repo: https://github.com/newville/asteval\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "astro-compiler": {
        "name": "astro-compiler",
        "language": "go",
        "homepage": "https://github.com/withastro/compiler",
        "main_repo": "https://github.com/withastro/compiler",
        "primary_contact": "cable023@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/withastro/compiler\"\nlanguage: go\nmain_repo: \"https://github.com/withastro/compiler\"\nprimary_contact: \"cable023@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"nate@astro.build\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Fuzz internal/transform\nprintf \"package transform\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > $SRC/compiler/internal/transform/registerfuzzdep.go\ngo mod tidy\ngo get -u github.com/AdamKorcz/go-118-fuzz-build/testing\n\ncompile_native_go_fuzzer $SRC/compiler/internal/transform FuzzScopeHTML fuzz_scope_html\ncompile_native_go_fuzzer $SRC/compiler/internal/transform FuzzTransformScoping fuzz_transform_scoping"
    },
    "astroid": {
        "name": "astroid",
        "language": "python",
        "homepage": "https://github.com/pylint-dev/astroid",
        "main_repo": "https://github.com/pylint-dev/astroid",
        "primary_contact": "jacobtylerwalls@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/pylint-dev/astroid\nmain_repo: https://github.com/pylint-dev/astroid\nlanguage: python\nprimary_contact: \"jacobtylerwalls@gmail.com\"\nauto_ccs:\n  - \"correctmost@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\n# Build a fuzz_parse seed corpus consisting of all the .py files from the astroid repo\nCORPUS_DIR=\"$WORK/corpus\"\nmkdir -p \"$CORPUS_DIR\"\n\nFILES=$(find \"$SRC/astroid\" -type f -iname \"*.py\")\nfor file in $FILES; do\n  cp \"$file\" \"$CORPUS_DIR/$(md5sum \"$file\" | cut -f 1 -d ' ').py\"\ndone\n\nzip -r \"$OUT/fuzz_parse_seed_corpus.zip\" \"$CORPUS_DIR\"/*\n"
    },
    "asttokens": {
        "name": "asttokens",
        "language": "python",
        "homepage": "https://github.com/gristlabs/asttokens",
        "main_repo": "https://github.com/gristlabs/asttokens",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/gristlabs/asttokens\nmain_repo: https://github.com/gristlabs/asttokens\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "async-http-client": {
        "name": "async-http-client",
        "language": "jvm",
        "homepage": "https://github.com/AsyncHttpClient/async-http-client/",
        "main_repo": "https://github.com/AsyncHttpClient/async-http-client/",
        "primary_contact": "aayush@shieldblaze.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/AsyncHttpClient/async-http-client/\"\nlanguage: jvm\nprimary_contact: \"aayush@shieldblaze.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/AsyncHttpClient/async-http-client/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=async-http-client\nPROJECT_GROUP_ID=org.asynchttpclient\nPROJECT_ARTIFACT_ID=async-http-client\nMAIN_REPOSITORY=https://github.com/AsyncHttpClient/async-http-client/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -Denforcer.skip=true -DskipTests -Dgpg.skip\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  export JAVA_HOME=\"$OUT/open-jdk-11\"\n  mkdir -p $JAVA_HOME\n  rsync -aL --exclude=*.zip --exclude 'lib/security/blacklisted.certs' \"/usr/lib/jvm/java-11-openjdk-amd64/\" \"$JAVA_HOME\"\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  JAVA_HOME=\\\"\\$this_dir/open-jdk-11/\\\" \\\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "atomic": {
        "name": "atomic",
        "language": "go",
        "homepage": "https://github.com/uber-go/atomic",
        "main_repo": "https://github.com/uber-go/atomic",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/uber-go/atomic\"\nlanguage: go\nmain_repo: \"https://github.com/uber-go/atomic\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package atomic\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer go.uber.org/atomic FuzzTest FuzzTest\n"
    },
    "attrs": {
        "name": "attrs",
        "language": "python",
        "homepage": "https://www.attrs.org",
        "main_repo": "https://github.com/python-attrs/attrs.git",
        "primary_contact": null,
        "vendor_ccs": [
            "sergesanspaille@free.fr"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://www.attrs.org\nlanguage: python\nmain_repo: https://github.com/python-attrs/attrs.git\nsanitizers:\n- address\nvendor_ccs:\n- sergesanspaille@free.fr\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --hidden-import=html.parser\ndone\n"
    },
    "augeas": {
        "name": "augeas",
        "language": "c++",
        "homepage": "https://github.com/hercules-team/augeas",
        "main_repo": "https://github.com/hercules-team/augeas",
        "primary_contact": "lutter@watzmann.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://github.com/hercules-team/augeas\nlanguage: c++\nprimary_contact: lutter@watzmann.net\nauto_ccs:\n  - hhan@redhat.com\n  - adam@adalogics.com\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/hercules-team/augeas'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n./autogen.sh\n./configure --enable-static --disable-shared --without-selinux\nmake -j$(nproc)\n\nsed -i '31 i\\#ifdef __cplusplus'\\\\n'\\extern \"C\" {'\\\\n'\\#endif'\\\\n src/fa.h\nsed -i '326 i\\#ifdef __cplusplus'\\\\n'\\}'\\\\n'\\#endif'\\\\n src/fa.h\n\nASAN_OPTIONS=detect_leaks=0\n\ncp $SRC/augeas_escape_name_fuzzer.cc .\ncp $SRC/augeas_fa_fuzzer.cc .\ncp $SRC/augeas_api_fuzzer.cc .\n\n\nfor fuzzer in augeas_api_fuzzer augeas_escape_name_fuzzer augeas_fa_fuzzer; do\n    $CXX $CXXFLAGS -std=c++11 -Isrc/ `xml2-config --cflags` \\\n        $fuzzer.cc -o $OUT/$fuzzer $LIB_FUZZING_ENGINE \\\n        src/.libs/libaugeas.a src/.libs/libfa.a ./gnulib/lib/.libs/libgnu.a \\\n        /usr/lib/x86_64-linux-gnu/libxml2.a\ndone\n"
    },
    "autoflake": {
        "name": "autoflake",
        "language": "python",
        "homepage": "https://www.github.com/PyCQA/autoflake",
        "main_repo": "https://www.github.com/PyCQA/autoflake",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://www.github.com/PyCQA/autoflake\nmain_repo: https://www.github.com/PyCQA/autoflake\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "autopep8": {
        "name": "autopep8",
        "language": "python",
        "homepage": "https://github.com/hhatto/autopep8",
        "main_repo": "https://github.com/hhatto/autopep8",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/hhatto/autopep8\nmain_repo: https://github.com/hhatto/autopep8\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "avahi": {
        "name": "avahi",
        "language": "c++",
        "homepage": "https://avahi.org/",
        "main_repo": "https://github.com/avahi/avahi",
        "primary_contact": "trent@lloyd.id.au",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://avahi.org/\"\nlanguage: c++\nprimary_contact: trent@lloyd.id.au\nauto_ccs:\n  - alex.gaynor@gmail.com\n  - evverx@gmail.com\n  - msekleta@redhat.com\n  - pemensik@redhat.com\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/avahi/avahi'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nfile_github_issue: True\nbuilds_per_day: 4\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfuzz/oss-fuzz.sh\n"
    },
    "avro": {
        "name": "avro",
        "language": "jvm",
        "homepage": "https://avro.apache.org/",
        "main_repo": "https://github.com/apache/avro",
        "primary_contact": "martin.grigorov@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://avro.apache.org/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/apache/avro\"\nsanitizers:\n  - address\nprimary_contact: \"martin.grigorov@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=avro\nPROJECT_GROUP_ID=org.apache.avro\nPROJECT_ARTIFACT_ID=avro\nMAIN_REPOSITORY=https://github.com/apache/avro/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  FUZZ_TARGET_DEPENDENCIES=\":avro :avro-mapred\"\n  \n  for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "azure-sdk-for-python": {
        "name": "azure-sdk-for-python",
        "language": "python",
        "homepage": "https://github.com/azure/azure-sdk-for-python",
        "main_repo": "https://github.com/azure/azure-sdk-for-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/azure/azure-sdk-for-python\nlanguage: python\nmain_repo: https://github.com/azure/azure-sdk-for-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/azure-sdk-for-python/sdk/core/azure-core\npip3 install .\n\ncd $SRC/azure-sdk-for-python/sdk/dynatrace/azure-mgmt-dynatrace/\npip3 install .\n\ncompile_python_fuzzer $SRC/fuzz_mgmt_serialization.py\n"
    },
    "babel": {
        "name": "babel",
        "language": "python",
        "homepage": "https://github.com/python-babel/babel",
        "main_repo": "https://github.com/python-babel/babel",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/python-babel/babel\nmain_repo: https://github.com/python-babel/babel\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "bad_example": {
        "name": "bad_example",
        "language": "c++",
        "homepage": "http://www.zlib.net/",
        "main_repo": "https://github.com/madler/zlib",
        "primary_contact": null,
        "vendor_ccs": [],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "disabled: true\nhomepage: http://www.zlib.net/\nlanguage: c++\nmain_repo: https://github.com/madler/zlib\nsanitizers:\n- address\n- memory\n- undefined\nvendor_ccs: []\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n#!/bin/bash -eu\n\n# Testcase 1. Valid fuzzer build.\n################################################################################\n./configure\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\n$CXX $CXXFLAGS -std=c++11 -I. \\\n    $SRC/bad_example_fuzzer.cc -o $OUT/bad_example_valid_build \\\n    $LIB_FUZZING_ENGINE ./libz.a\n\n\n# Testcase 2. Silent startup crash.\n################################################################################\n./configure\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\n$CXX $CXXFLAGS -std=c++11 -I. -DINTENTIONAL_STARTUP_CRASH \\\n    $SRC/bad_example_fuzzer.cc -o $OUT/bad_example_startup_crash \\\n    $LIB_FUZZING_ENGINE ./libz.a\n\n\n# The latest two examples won't work for coverage or introspector, bail out.\nif [[ $SANITIZER = *coverage* || $SANITIZER = *introspector* ]]; then\n  exit 0\nfi\n\n\n# Testcase 3. Partially ignore the flags provided by OSS-Fuzz.\n################################################################################\nexport CFLAGS_ORIG=\"$CFLAGS\"\nexport CFLAGS=\"-O1\"\nexport CXXFLAGS_ORIG=\"$CXXFLAGS\"\nexport CXXFLAGS=\"-O1 -stdlib=libc++\"\n\n# We need to pass static as zlib fails to build shared lib in OSS-Fuzz env.\n./configure --static\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\n$CXX -fsanitize=$SANITIZER $CXXFLAGS_ORIG -std=c++11 -I. \\\n    $SRC/bad_example_fuzzer.cc -o $OUT/bad_example_partial_instrumentation \\\n    $LIB_FUZZING_ENGINE ./libz.a\n\n\n# Testcase 4. Completely ignore the flags provided by OSS-Fuzz.\n################################################################################\n# We need to pass static as zlib fails to build shared lib in OSS-Fuzz env.\n./configure --static\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\n$CXX -fsanitize=$SANITIZER $CXXFLAGS -std=c++11 -I. \\\n    $SRC/bad_example_fuzzer.cc -o $OUT/bad_example_no_instrumentation \\\n    $LIB_FUZZING_ENGINE ./libz.a\n\n\n# Testcase 5. Enable multiple sanitizers.\n################################################################################\n# Add UBSan to ASan or MSan build. Add ASan to UBSan build.\nEXTRA_SANITIZER=\"undefined\"\nif [[ $SANITIZER = *undefined* ]]; then\n  EXTRA_SANITIZER=\"address\"\nfi\n\nexport CFLAGS=\"$CFLAGS_ORIG -fsanitize=$EXTRA_SANITIZER\"\nexport CXXFLAGS=\"$CXXFLAGS_ORIG -fsanitize=$EXTRA_SANITIZER\"\n\n./configure\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\n$CXX $CXXFLAGS -std=c++11 -I. \\\n    $SRC/bad_example_fuzzer.cc -o $OUT/bad_example_mixed_sanitizers \\\n    $LIB_FUZZING_ENGINE ./libz.a\n"
    },
    "bazel-rules-fuzzing-test-java": {
        "name": "bazel-rules-fuzzing-test-java",
        "language": "jvm",
        "homepage": "https://github.com/bazelbuild/rules_fuzzing",
        "main_repo": "https://github.com/bazelbuild/rules_fuzzing",
        "primary_contact": "test@example.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/bazelbuild/rules_fuzzing\"\nmain_repo: \"https://github.com/bazelbuild/rules_fuzzing\"\nlanguage: jvm\nprimary_contact: \"test@example.com\"\n\nfuzzing_engines:\n  - libfuzzer\n\nsanitizers:\n  - address\n  - undefined\n\n# This is a test project.\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Work around https://github.com/bazelbuild/bazel/issues/21592: \n# The `layering_check` feature does not work with `--spawn_strategy=standalone`,\n# which is the default for OSS-Fuzz builds.\nexport BAZEL_EXTRA_BUILD_FLAGS=\"--spawn_strategy=sandboxed\"\n\nbazel_build_fuzz_tests\n"
    },
    "bazel-rules-fuzzing-test": {
        "name": "bazel-rules-fuzzing-test",
        "language": "c++",
        "homepage": "https://github.com/bazelbuild/rules_fuzzing",
        "main_repo": "https://github.com/bazelbuild/rules_fuzzing",
        "primary_contact": "test@example.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/bazelbuild/rules_fuzzing\"\nmain_repo: \"https://github.com/bazelbuild/rules_fuzzing\"\nlanguage: c++\nprimary_contact: \"test@example.com\"\n\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n\nsanitizers:\n  - address\n  - undefined\n  - memory\n\n# This is a test project.\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Work around https://github.com/bazelbuild/bazel/issues/21592: \n# The `layering_check` feature does not work with `--spawn_strategy=standalone`,\n# which is the default for OSS-Fuzz builds.\nexport BAZEL_EXTRA_BUILD_FLAGS=\"--spawn_strategy=sandboxed\"\n\nbazel_build_fuzz_tests\n"
    },
    "bc-gh": {
        "name": "bc-gh",
        "language": "c",
        "homepage": "https://git.gavinhoward.com/gavin/bc",
        "main_repo": "https://github.com/gavinhoward/bc",
        "primary_contact": "gavin.d.howard@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz",
            "centipede"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://git.gavinhoward.com/gavin/bc\nmain_repo: https://github.com/gavinhoward/bc\nlanguage: c\nprimary_contact: gavin.d.howard@gmail.com\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n  - centipede\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./configure -Z\nmake -j$(nproc) all\n\ncp bin/*_fuzzer_* $OUT/\n"
    },
    "bc-java-wycheproof": {
        "name": "bc-java-wycheproof",
        "language": "jvm",
        "homepage": "https://www.bouncycastle.org/",
        "main_repo": "https://github.com/bcgit/bc-java.git",
        "primary_contact": "metzman@chromium.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "wycheproof"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://www.bouncycastle.org/\"\nlanguage: jvm\nprimary_contact: \"metzman@chromium.org\"\nmain_repo: \"https://github.com/bcgit/bc-java.git\"\nauto_ccs:\n  - evn@google.com\n  - bleichen@google.com\n  - tvdmerwe@google.com\nfuzzing_engines:\n  - \"wycheproof\"\nsanitizers:\n  - \"none\"\nfile_github_issue: false\nblackbox: true\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbazel build BouncyCastleAllTests\nrsync -aLkR bazel-bin/* $OUT\n# Add dummy fuzzer to fool bad build check.\nprintf \"#!/bin/bash\\n#LLVMFuzzerTestOneInput shell script\\n./bazel-bin/BouncyCastleAllTests\" > $OUT/WycheproofTarget.bash\nchmod +x $OUT/WycheproofTarget.bash\n"
    },
    "bc-java": {
        "name": "bc-java",
        "language": "jvm",
        "homepage": "https://www.bouncycastle.org/",
        "main_repo": "https://github.com/bcgit/bc-java.git",
        "primary_contact": "",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.bouncycastle.org/\"\nlanguage: jvm\nprimary_contact: \"\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/bcgit/bc-java.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$GRADLE jar\nfind . -name \"core*.jar\" -exec cp {} $OUT/core.jar \\;\nfind . -name \"bcpkix*.jar\" -exec cp {} $OUT/bcpkix.jar \\;\nfind . -name \"bcutil*.jar\" -exec cp {} $OUT/bcutil.jar \\;\nfind . -name \"bcprov*.jar\" -exec cp {} $OUT/bcprov.jar \\;\n\nALL_JARS=\"core.jar bcpkix.jar bcutil.jar bcprov.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH:/src/bc-java/pkix/src/test/java/\n\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--keep_going=20 \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n\nmkdir -p $OUT/org/bouncycastle/cms/test\ncp -r /src/bc-java/pkix/src/test/java/org $OUT\n"
    },
    "bearssl": {
        "name": "bearssl",
        "language": "c++",
        "homepage": "https://bearssl.org/",
        "main_repo": "https://www.bearssl.org/git/BearSSL",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://bearssl.org/\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nmain_repo: \"https://www.bearssl.org/git/BearSSL\"\nauto_ccs:\n    - \"pornin@gmail.com\"\nsanitizers:\n - address\n - undefined\n - memory\narchitectures:\n - x86_64\n - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Not using OpenSSL\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NO_OPENSSL\"\n\n# Install Boost headers\n    cd $SRC/\n    tar jxf boost_1_84_0.tar.bz2\n    cd boost_1_84_0/\n    CFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\n    CFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\n    cp -R boost/ /usr/include/\n\n# Generate lookup tables. This only needs to be done once.\n    cd $SRC/cryptofuzz\n    python gen_repository.py\n\n# Only test primitives which BearSSL supports\n    rm extra_options.h\n    echo -n '\"' >>extra_options.h\n    echo -n '--force-module=BearSSL ' >>extra_options.h\n    echo -n '--digests=MD5,SHA1,SHA224,SHA256,SHA384,SHA512,MD5_SHA1,SHAKE128,SHAKE256 ' >>extra_options.h\n    echo -n '--ciphers=AES_128_GCM,AES_192_GCM,AES_256_GCM,AES_128_CCM,AES_192_CCM,AES_256_CCM,CHACHA20,CHACHA20_POLY1305 ' >>extra_options.h\n    echo -n '--operations=Digest,HMAC,SymmetricEncrypt,SymmetricDecrypt,KDF_HKDF,KDF_TLS1_PRF,ECC_GenerateKeyPair,ECC_PrivateToPublic,ECDSA_Verify,ECDSA_Sign' >>extra_options.h\n    echo -n '\"' >>extra_options.h\n\n# Compile BearSSL\n    cd $SRC/BearSSL/\n    sed -i '/^CC = /d' conf/Unix.mk\n    sed -i '/^CFLAGS = /d' conf/Unix.mk\n    make -j$(nproc) lib\n\n    export BEARSSL_INCLUDE_PATH=$(realpath inc/)\n    export LIBBEARSSL_A_PATH=$(realpath ./build/libbearssl.a)\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BEARSSL\"\n\n    # Compile Cryptofuzz BearSSL module\n    cd $SRC/cryptofuzz/modules/bearssl\n    make -B\n\n# Compile Botan\n    cd $SRC/botan\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        if [[ $CFLAGS != *sanitize=memory* ]]\n        then\n            ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\n        else\n            ./configure.py --disable-asm --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\n        fi\n    else\n        ./configure.py --cpu=x86_32 --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\n    fi\n    make -j$(nproc)\n\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN\"\n    export LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\n    export BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\n\n    # Compile Cryptofuzz Botan module\n    cd $SRC/cryptofuzz/modules/botan\n    make -B\n\n# Compile Cryptofuzz\n    cd $SRC/cryptofuzz\n    LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make -B -j$(nproc) >/dev/null\n\n    # Generate dictionary\n    ./generate_dict\n\n    # Copy fuzzer\n    cp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-bearssl\n    # Copy dictionary\n    cp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-bearssl.dict\n"
    },
    "behaviortreecpp": {
        "name": "behaviortreecpp",
        "language": "c++",
        "homepage": "https://www.behaviortree.dev/",
        "main_repo": "https://github.com/BehaviorTree/BehaviorTree.CPP",
        "primary_contact": "christopher.krah@tii.ae",
        "vendor_ccs": [
            "dfaconti@aurynrobotics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.behaviortree.dev/\"\nlanguage: c++\nprimary_contact: \"christopher.krah@tii.ae\"\nmain_repo: \"https://github.com/BehaviorTree/BehaviorTree.CPP\"\nfile_github_issue: true\nvendor_ccs:\n  - \"dfaconti@aurynrobotics.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\nsanitizers:\n  - address\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# ===== BUILD Sqlite =====\nSQLITE_VER=sqlite-autoconf-3480000\n\nwget https://www.sqlite.org/2025/${SQLITE_VER}.tar.gz\ntar xzf ${SQLITE_VER}.tar.gz\ncd ${SQLITE_VER}\n./configure --enable-static --disable-shared\nmake -j\"$(nproc)\"\nmake install\ncd ..\n\n# ===== BUILD zeroMQ =====\ngit clone https://github.com/zeromq/libzmq.git\ncd libzmq\nmkdir build && cd build\ncmake .. -DBUILD_SHARED=OFF -DBUILD_STATIC=ON -DZMQ_BUILD_TESTS=OFF\nmake -j\"$(nproc)\"\nmake install\ncd ../..\n\n# ===== Build BehaviorTree.CPP =====\nmkdir build && cd build\n\nCMAKE_FLAGS=(\n  \"-DCMAKE_BUILD_TYPE=Release\"\n  \"-DENABLE_FUZZING=ON\"\n  \"-DFORCE_STATIC_LINKING=ON\"\n)\n\ncmake .. \"${CMAKE_FLAGS[@]}\"\nmake -j\"$(nproc)\"\n\nfor fuzzer in bt_fuzzer script_fuzzer bb_fuzzer; do\n  cp $fuzzer \"$OUT/\"\n\n  if [ -d ../fuzzing/corpus/${fuzzer} ]; then\n    zip -j \"$OUT/${fuzzer}_seed_corpus.zip\" ../fuzzing/corpus/${fuzzer}/*\n  fi\ndone\n"
    },
    "bignum-fuzzer": {
        "name": "bignum-fuzzer",
        "language": "c++",
        "homepage": "https://github.com/guidovranken/bignum-fuzzer",
        "main_repo": "https://github.com/guidovranken/bignum-fuzzer",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/guidovranken/bignum-fuzzer\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nauto_ccs:\n    - \"martin.swende@ethereum.org\"\n    - \"cdetrio@ethereum.org\"\n    - \"openssl-security@openssl.org\"\n    - \"kurt@roeckx.be\"\n    - \"caswell.matt@googlemail.com\"\n    - \"jz.maddock@gmail.com\"\n    - \"jz.maddock@googlemail.com\"\n    - \"agl@google.com\"\n    - \"davidben@google.com\"\n    - \"svaldez@google.com\"\n    - \"mbed-tls-security@lists.trustedfirmware.org\"\n    - \"libmpdec4@gmail.com\"\n    - \"richard@levitte.org\"\nmain_repo: 'https://github.com/guidovranken/bignum-fuzzer'\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install Rust nightly\n#curl https://sh.rustup.rs -sSf | sh -s -- -y\n#source $HOME/.cargo/env\n\n# Build libmpdec\ntar zxf mpdecimal-4.0.0.tar.gz\ncd mpdecimal-4.0.0\n./configure && make -j$(nproc)\n\ncd $SRC/openssl\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n  CFLAGS+=\" -DOPENSSL_NO_ASM=1\"\nfi\n./config --debug no-fips no-shared no-tests\nmake -j$(nproc)\n\n# Build libgmp\ncd $SRC/libgmp\nautoreconf -ivf\n./configure --enable-maintainer-mode\nmake -j$(nproc)\n\n# Build OpenSSL module\ncd $SRC/bignum-fuzzer/modules/openssl\nOPENSSL_INCLUDE_PATH=$SRC/openssl/include OPENSSL_LIBCRYPTO_A_PATH=$SRC/openssl/libcrypto.a make\n\n# Build Go module\ncd $SRC/bignum-fuzzer/modules/go\nmake\n\n# Build Rust module\n#cd $SRC/bignum-fuzzer/modules/rust\n#make\n\n# Build C++-Boost module\ncd $SRC/bignum-fuzzer/modules/cpp_boost\nmake\n\n# Build libgmp module\ncd $SRC/bignum-fuzzer/modules/libgmp\nLIBGMP_INCLUDE_PATH=$SRC/libgmp LIBGMP_A_PATH=$SRC/libgmp/.libs/libgmp.a make\n\n# Build libmpdec module\ncd $SRC/bignum-fuzzer/modules/libmpdec\nLIBMPDEC_A_PATH=$SRC/mpdecimal-4.0.0/libmpdec/libmpdec.a LIBMPDEC_INCLUDE_PATH=$SRC/mpdecimal-4.0.0/libmpdec make\n\nBASE_CXXFLAGS=$CXXFLAGS\n\n# Build OpenSSL/Go fuzzer\ncd $SRC/bignum-fuzzer\n./config-modules.sh openssl go\nCXXFLAGS=\"$BASE_CXXFLAGS -DBNFUZZ_FLAG_NO_NEGATIVE=1 -DBNFUZZ_FLAG_NUM_LEN=1200 -DBNFUZZ_FLAG_ALL_OPERATIONS=1\"\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make\n\n# Copy OpenSSL/Go fuzzer to the designated location\ncp $SRC/bignum-fuzzer/fuzzer $OUT/fuzzer_openssl_go_no_negative_num_len_1200_all_operations\n\n# Build OpenSSL/Rust fuzzer\n#cd $SRC/bignum-fuzzer\n#make clean\n#./config-modules.sh openssl rust\n#CXXFLAGS=\"$BASE_CXXFLAGS -DBNFUZZ_FLAG_NUM_LEN=1200 -DBNFUZZ_FLAG_ALL_OPERATIONS=1 -DBNFUZZ_FLAG_NUM_LOOPS=1\"\n#LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make\n\n# Copy OpenSSL/Rust fuzzer to the designated location\n#cp $SRC/bignum-fuzzer/fuzzer $OUT/fuzzer_openssl_rust_num_len_1200_all_operations_num_loops_1\n\n# Build OpenSSL/C++-Boost fuzzer\ncd $SRC/bignum-fuzzer\nmake clean\n./config-modules.sh openssl cpp_boost\nCXXFLAGS=\"$BASE_CXXFLAGS -DBNFUZZ_FLAG_NUM_LEN=1200 -DBNFUZZ_FLAG_ALL_OPERATIONS=1 -DBNFUZZ_FLAG_NUM_LOOPS=1\"\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make\n\n# Copy OpenSSL/C++-Boost fuzzer to the designated location\ncp $SRC/bignum-fuzzer/fuzzer $OUT/fuzzer_openssl_cpp_boost_num_len_1200_all_operations_num_loops_1\n\n# Build OpenSSL/libgmp fuzzer\ncd $SRC/bignum-fuzzer\nmake clean\n./config-modules.sh openssl libgmp\nCXXFLAGS=\"$BASE_CXXFLAGS -DBNFUZZ_FLAG_NUM_LEN=1200 -DBNFUZZ_FLAG_ALL_OPERATIONS=1 -DBNFUZZ_FLAG_NUM_LOOPS=1\"\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make\n\n# Copy OpenSSL/libgmp fuzzer to the designated location\ncp $SRC/bignum-fuzzer/fuzzer $OUT/fuzzer_openssl_libgmp_num_len_1200_all_operations_num_loops_1\n\n# Build mbedtls\ncd $SRC/mbedtls\nmake lib -j$(nproc)\n\n# Build BoringSSL\ncd $SRC/boringssl\nmkdir build\ncd build\ncmake -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" -DCMAKE_C_FLAGS=\"$CFLAGS\" -DBORINGSSL_ALLOW_CXX_RUNTIME=1 ..\nmake -j$(nproc)\n\n# Build BoringSSL module\ncd $SRC/bignum-fuzzer/modules/openssl\nmake clean\nCFLAGS=\"$CFLAGS -DBIGNUM_FUZZER_BORINGSSL\" OPENSSL_INCLUDE_PATH=$SRC/boringssl/include OPENSSL_LIBCRYPTO_A_PATH=$SRC/boringssl/build/crypto/libcrypto.a make\n\n# Build mbedtls module\ncd $SRC/bignum-fuzzer/modules/mbedtls\nMBEDTLS_LIBMBEDCRYPTO_A_PATH=$SRC/mbedtls/library/libmbedcrypto.a MBEDTLS_INCLUDE_PATH=$SRC/mbedtls/include make\n\n# Build BoringSSL/mbedtls fuzzer\ncd $SRC/bignum-fuzzer\nmake clean\n./config-modules.sh boringssl mbedtls\nCXXFLAGS=\"$BASE_CXXFLAGS -DBNFUZZ_FLAG_NUM_LEN=100 -DBNFUZZ_FLAG_ALL_OPERATIONS=1 -DBNFUZZ_FLAG_NUM_LOOPS=1\"\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make\n\n# Copy BoringSSL/mbedtls fuzzer to the designated location\ncp $SRC/bignum-fuzzer/fuzzer $OUT/fuzzer_boringssl_mbedtls_num_len_100_all_operations_num_loops_1\n\n# Build BoringSSL/libmpdec fuzzer\ncd $SRC/bignum-fuzzer\nmake clean\n./config-modules.sh boringssl libmpdec\nCXXFLAGS=\"$BASE_CXXFLAGS -DBNFUZZ_FLAG_NUM_LEN=100 -DBNFUZZ_FLAG_ALL_OPERATIONS=1 -DBNFUZZ_FLAG_NUM_LOOPS=1\"\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make\n\n# Copy BoringSSL/libmpdec fuzzer to the designated location\ncp $SRC/bignum-fuzzer/fuzzer $OUT/fuzzer_boringssl_libmpdec_num_len_100_all_operations_num_loops_1\n\n# Copy seed corpora to the designated location\ncp $SRC/bignum-fuzzer/corpora/fuzzer_openssl_go_no_negative_num_len_1200_all_operations_seed_corpus.zip $OUT\n#cp $SRC/bignum-fuzzer/corpora/fuzzer_openssl_rust_num_len_1200_all_operations_num_loops_1_seed_corpus.zip $OUT\ncp $SRC/bignum-fuzzer/corpora/fuzzer_openssl_cpp_boost_num_len_1200_all_operations_num_loops_1_seed_corpus.zip $OUT\ncp $SRC/bignum-fuzzer/corpora/fuzzer_openssl_libgmp_num_len_1200_all_operations_num_loops_1_seed_corpus.zip $OUT\ncp $SRC/bignum-fuzzer/corpora/fuzzer_boringssl_mbedtls_num_len_100_all_operations_num_loops_1_seed_corpus.zip $OUT\ncp $SRC/bignum-fuzzer/corpora/fuzzer_boringssl_mbedtls_num_len_100_all_operations_num_loops_1_seed_corpus.zip $OUT/fuzzer_boringssl_libmpdec_num_len_100_all_operations_num_loops_1_seed_corpus.zip\n"
    },
    "bincode": {
        "name": "bincode",
        "language": "rust",
        "homepage": "https://github.com/bincode-org/bincode",
        "main_repo": "https://github.com/bincode-org/bincode",
        "primary_contact": "nathan@mccarty.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/bincode-org/bincode\"\nlanguage: rust\nprimary_contact: \"nathan@mccarty.io\"\nauto_ccs:\n  - \"zoey@dos.cafe\"\n  - \"github@trangar.com\"\n  - \"ty@pre-alpha.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nmain_repo: 'https://github.com/bincode-org/bincode'\n",
        "build_sh": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd $SRC/bincode\ncargo fuzz build -O\ncp $SRC/bincode/fuzz/target/x86_64-unknown-linux-gnu/release/compat $OUT/\ncp $SRC/bincode/fuzz/target/x86_64-unknown-linux-gnu/release/roundtrip $OUT/"
    },
    "bind9": {
        "name": "bind9",
        "language": "c",
        "homepage": "https://gitlab.isc.org/isc-projects/bind9",
        "main_repo": "https://gitlab.isc.org/isc-projects/bind9.git",
        "primary_contact": "ondrej@isc.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://gitlab.isc.org/isc-projects/bind9\"\nlanguage: c\nprimary_contact: \"ondrej@isc.org\"\nauto_ccs:\n  - \"artem@isc.org\"\n  - \"aram@isc.org\"\n  - \"each@isc.org\"\n  - \"marka@isc.org\"\n  - \"matthijs@isc.org\"\n  - \"michal@isc.org\"\n  - \"mnowak@isc.org\"\n  - \"pspacek@isc.org\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://gitlab.isc.org/isc-projects/bind9.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/sh -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build the project\nautoreconf -fi\n./configure --disable-shared --enable-static --enable-developer --without-cmocka --without-zlib --prefix=\"$WORK\" --enable-fuzzing=ossfuzz\nmake -C lib/isc -j\"$(nproc)\" all V=1\nmake -C lib/dns -j\"$(nproc)\" all V=1\nmake -C tests/libtest -j\"$(nproc)\" all V=1\n\nLIBISC_CFLAGS=\"-Ilib/isc/include\"\nLIBDNS_CFLAGS=\"-Ilib/dns/include\"\nLIBISC_LIBS=\"lib/isc/.libs/libisc.a -Wl,-Bstatic -Wl,-u,isc__initialize,-u,isc__shutdown -lssl -lcrypto -lurcu-memb -lurcu-cds -lurcu-common -luv -lnghttp2 -Wl,-Bdynamic\"\nLIBDNS_LIBS=\"lib/dns/.libs/libdns.a -Wl,-Bstatic -Wl,-u,dst__lib_init -Wl,-u,dst__lib_destroy -Wl,-u,initialize_bits_for_byte -lcrypto -lurcu-memb -lurcu-cds -Wl,-Bdynamic\"\nLIBTEST_LIBS=\"tests/libtest/.libs/libtest.a\"\n\n# dns_name_fromwire needs old.c/old.h code to be linked in\nsed -i 's/#include \"old.h\"/#include \"old.c\"/' fuzz/dns_name_fromwire.c\n\nfor fuzzer in fuzz/*.c; do\n\toutput=$(basename \"${fuzzer%.c}\")\n\t[ \"$output\" = \"main\" ] && continue\n\t[ \"$output\" = \"old\" ] && continue\n\t# We need to try little bit harder to link everything statically\n\tmake -C fuzz -j\"$(nproc)\" \"${output}.o\" V=1\n\t${CXX} ${CXXFLAGS} \\\n\t\t-o \"${OUT}/${output}_fuzzer\" \\\n\t\t\"fuzz/${output}.o\" \\\n\t\t-include config.h \\\n\t\t$LIBISC_CFLAGS $LIBDNS_CFLAGS \\\n\t\t-Wl,--start-group $LIBISC_LIBS $LIBDNS_LIBS -Wl,--end-group \\\n\t\t$LIBTEST_LIBS $LIB_FUZZING_ENGINE\n\tzip -j \"${OUT}/${output}_seed_corpus.zip\" \"fuzz/${output}.in/\"*\ndone\n"
    },
    "binutils": {
        "name": "binutils",
        "language": "c++",
        "homepage": "https://www.gnu.org/software/binutils/",
        "main_repo": "https://github.com/bminor/binutils-gdb",
        "primary_contact": "bug-binutils@gnu.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.gnu.org/software/binutils/\"\nmain_repo: \"https://github.com/bminor/binutils-gdb\"\nlanguage: c++\nprimary_contact: \"bug-binutils@gnu.org\"\nauto_ccs :\n  - \"p.antoine@catenacyber.fr\"\n  - \"nickc@redhat.com\"\n  - \"amodra@gmail.com\"\n  - \"david@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nif [ \"$SANITIZER\" = undefined ]; then\n    export CFLAGS=\"$CFLAGS -fno-sanitize=unsigned-integer-overflow\"\n    export CXXFLAGS=\"$CXXFLAGS -fno-sanitize=unsigned-integer-overflow\"\nfi\ncd binutils-gdb\n\n# Comment out the lines of logging to stderror from elfcomm.c\n# This is to make it nicer to read the output of libfuzzer.\ncd binutils\nsed -i 's/vfprintf (stderr/\\/\\//' elfcomm.c\nsed -i 's/fprintf (stderr/\\/\\//' elfcomm.c\n\n# Fix a dlltool leak, which won't be fixed upstream because it uses a\n# non-posix yacc feature.  It also isn't seen as a direct leak when\n# running dlltool stand-alone.\nsed -i '/^%%$/i%destructor { free (\\$\\$); } ID' defparse.y\n\ncd ../\n\n./configure --disable-gdb --disable-gdbserver --disable-gdbsupport \\\n\t    --disable-libdecnumber --disable-readline --disable-sim \\\n\t    --disable-libbacktrace --disable-gas --disable-ld --disable-werror \\\n      --enable-targets=all\nmake clean\nmake MAKEINFO=true && true\n\n\n# Make fuzzer directory\nmkdir fuzz\ncp ../fuzz_*.c fuzz/\ncd fuzz\n\nLIBS=\"../opcodes/libopcodes.a ../libctf/.libs/libctf.a ../bfd/.libs/libbfd.a ../zlib/libz.a ../libsframe/.libs/libsframe.a ../libiberty/libiberty.a\"\nfor i in fuzz_disassemble fuzz_bfd fuzz_bfd_ext; do\n    $CC $CFLAGS -I ../include -I ../bfd -I ../opcodes -c $i.c -o $i.o\n    $CXX $CXXFLAGS $i.o -o $OUT/$i $LIB_FUZZING_ENGINE -Wl,--start-group ${LIBS} -Wl,--end-group\ndone\n\n# Build targeted disassembly fuzzers\nif [ -n \"${OSS_FUZZ_CI-}\" ]\nthen\n  echo \"Skipping specialised disassembly fuzzers in CI to reduce build time\"\nelse\n  for ARCH_TARGET in bfd_arch_arm bfd_arch_mips bfd_arch_i386 bfd_arch_arc bfd_arch_csky bfd_arch_mep; do\n      $CC $CFLAGS -I ../include -I ../bfd -I ../opcodes -c fuzz_disas_ext.c -DFUZZ_TARGET_ARCH=$ARCH_TARGET \\\n        -o fuzz_disas_ext-$ARCH_TARGET.o\n      $CXX $CXXFLAGS fuzz_disas_ext-$ARCH_TARGET.o -o $OUT/fuzz_disas_ext-$ARCH_TARGET $LIB_FUZZING_ENGINE \\\n        -Wl,--start-group ${LIBS} -Wl,--end-group\n  done\nfi\n\n# Now compile the src/binutils fuzzers\ncd ../binutils\n\n# Compile the fuzzers.\n# The general strategy is to remove main functions such that the fuzzer (which has its own main)\n# can link against the code.\n\n#\n# Patching\n#\n# First do readelf. We do this by changing readelf.c to readelf.h - the others will be changed\n# to fuzz_readelf.h where readelf is their respective name. The reason it's different for readelf\n# is because readelf does not have a header file so we can use readelf.h instead, and changing it\n# might cause an annoyance on monorail since bugs will be relocated as the files will be different.\ncp ../../fuzz_*.c .\nsed 's/main (int argc/old_main (int argc, char **argv);\\nint old_main (int argc/' readelf.c >> readelf.h\n\n# Special handling of dlltool\nsed 's/main (int ac/old_main32 (int ac, char **av);\\nint old_main32 (int ac/' dlltool.c > fuzz_dlltool.h\n\n# Patch the rest\nfor i in objdump nm objcopy windres strings addr2line; do\n    sed -i 's/strip_main/strip_mian/g' $i.c\n    sed -i 's/copy_main/copy_mian/g' $i.c\n    sed 's/main (int argc/old_main32 (int argc, char **argv);\\nint old_main32 (int argc/' $i.c > fuzz_$i.h\n    sed -i 's/copy_mian/copy_main/g' fuzz_$i.h\ndone\n\n#\n# Compile fuzzers\n#\nfuzz_compile () {\n  src=$1\n  dst=$2\n  extraflags=$3\n  $CC $CFLAGS ${extraflags} -DHAVE_CONFIG_H -DOBJDUMP_PRIVATE_VECTORS=\"\" -I. -I../bfd -I./../bfd -I./../include \\\n    -I./../zlib -DLOCALEDIR=\"\\\"/usr/local/share/locale\\\"\" \\\n    -Dbin_dummy_emulation=bin_vanilla_emulation -W -Wall -MT \\\n    fuzz_$dst.o -MD -MP -c -o fuzz_$dst.o fuzz_$src.c\n}\nfor i in objdump readelf nm objcopy windres ranlib_simulation strings addr2line dwarf; do\n  fuzz_compile $i $i \"\"\ndone\n\n# Fuzzers that need additional flags\nfuzz_compile dlltool dlltool \"-DDLLTOOL_I386 -DDLLTOOL_DEFAULT_I386\"\nfuzz_compile objdump objdump_safe \"-DOBJDUMP_SAFE\"\nfuzz_compile readelf readelf_pef \"-DREADELF_TARGETED=\\\"pef\\\"\"\nfuzz_compile readelf readelf_elf32_bigarm \"-DREADELF_TARGETED=\\\"elf32-bigarm\\\"\"\nfuzz_compile readelf readelf_elf32_littlearm \"-DREADELF_TARGETED=\\\"elf32-littlearm\\\"\"\nfuzz_compile readelf readelf_elf64_mmix \"-DREADELF_TARGETED=\\\"elf64-mmix\\\"\"\nfuzz_compile readelf readelf_elf32_csky \"-DREADELF_TARGETED=\\\"elf32-csky\\\"\"\n\n#\n# Link fuzzers\n#\n# Link the files, but only if everything went well, which we verify by checking\n# the presence of some object files.\nLINK_LIBS=\"-Wl,--start-group ${LIBS} -Wl,--end-group\"\nOBJ1=\"bucomm.o version.o filemode.o\"\nOBJ2=\"version.o unwind-ia64.o dwarf.o elfcomm.o demanguse.o\"\nOBJ3=\"dwarf.o prdbg.o rddbg.o unwind-ia64.o debug.o stabs.o rdcoff.o bucomm.o version.o filemode.o elfcomm.o od-xcoff.o demanguse.o\"\n\ndeclare -A fl\nfl[\"readelf\"]=${OBJ2}\nfl[\"readelf_pef\"]=${OBJ2}\nfl[\"readelf_elf32_bigarm\"]=${OBJ2}\nfl[\"readelf_elf32_littlearm\"]=${OBJ2}\nfl[\"readelf_elf64_mmix\"]=${OBJ2}\nfl[\"readelf_elf32_csky\"]=${OBJ2}\nfl[\"objdump\"]=${OBJ3}\nfl[\"objdump_safe\"]=${OBJ3}\nfl[\"dwarf\"]=${OBJ3}\nfl[\"addr2line\"]=${OBJ1}\nfl[\"objcopy\"]=\"is-strip.o rename.o rddbg.o debug.o stabs.o rdcoff.o wrstabs.o ${OBJ1}\"\nfl[\"nm\"]=\"${OBJ1} demanguse.o\"\nfl[\"dlltool\"]=\"defparse.o deflex.o ${OBJ1}\"\nfl[\"windres\"]=\"resrc.o rescoff.o resbin.o rcparse.o rclex.o winduni.o resres.o ${OBJ1}\"\nfl[\"ranlib_simulation\"]=\" \"\nfl[\"strings\"]=${OBJ1}\nfor fuzzer in ${!fl[@]}; do\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE -W -Wall -I./../zlib \\\n    -o $OUT/fuzz_${fuzzer} fuzz_${fuzzer}.o \\\n    ${fl[${fuzzer}]} ${LINK_LIBS}\ndone\n\n# Build GAS fuzzer. Will keep this here in case GAS fuzzer is used in the future.\nif [ \"$FUZZING_ENGINE\" != \"afl\" ]\nthen\n  cd ../gas\n  ./configure\n  make\n  sed 's/main (int argc/old_main32 (int argc, char **argv);\\nint old_main32 (int argc/' as.c > fuzz_as.h\n  rm as.o || true\n  ar r libar.a *.o\n\n  $CC $CFLAGS -DHAVE_CONFIG_H -I.  -I. -I. -I../bfd -I./config -I./../include -I./.. -I./../bfd \\\n      -DLOCALEDIR=\"\\\"/usr/local/share/locale\\\"\" -I./../zlib -c $SRC/fuzz_as.c -o fuzz_as.o\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE -I./../zlib -o $OUT/fuzz_as ./fuzz_as.o \\\n      libar.a config/tc-i386.o config/obj-elf.o config/atof-ieee.o  \\\n      ../opcodes/.libs/libopcodes.a ../bfd/.libs/libbfd.a \\\n      -L/src/binutils-gdb/zlib ../libsframe/.libs/libsframe.a ../libiberty/libiberty.a -lz\nfi\n\n# Copy seeds out\nfor fuzzname in readelf_pef readelf_elf32_csky readelf_elf64_mmix readelf_elf32_littlearm readelf_elf32_bigarm objdump objdump_safe nm objcopy bfd windres addr2line dwarf; do\n  cp $SRC/binary-samples/oss-fuzz-binutils/general_seeds.zip $OUT/fuzz_${fuzzname}_seed_corpus.zip\ndone\n# Seed targeted the pef file format\ncp $SRC/binary-samples/oss-fuzz-binutils/fuzz_bfd_ext_seed_corpus.zip $OUT/fuzz_bfd_ext_seed_corpus.zip\n\n# Copy options files\nfor ft in readelf readelf_pef readelf_elf32_csky readelf_elf64_mmix readelf_elf32_littlearm readelf_elf32_bigarm objcopy objdump dlltool disas_ext-bfd_arch_csky nm as windres objdump_safe ranlib_simulation addr2line dwarf; do\n  echo \"[libfuzzer]\" > $OUT/fuzz_${ft}.options\n  echo \"detect_leaks=0\" >> $OUT/fuzz_${ft}.options\ndone\n"
    },
    "bitcoin-core": {
        "name": "bitcoin-core",
        "language": "c++",
        "homepage": "https://bitcoincore.org/",
        "main_repo": "https://github.com/bitcoin/bitcoin.git",
        "primary_contact": "macro.fuzzing.uxuga@aleeas.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://bitcoincore.org/\"\nmain_repo: 'https://github.com/bitcoin/bitcoin.git'\nlanguage: c++\nprimary_contact: \"macro.fuzzing.uxuga@aleeas.com\"\nauto_ccs:\n  - \"fanquake@gmail.com\"\n  - \"jonas@chaincode.com\"\n  - \"pieter@chaincode.com\"\n  - \"n.goeggi@gmail.com\"\n  - \"achow101@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\n  - i386\nselective_unpack: true  # Required to avoid out-of-space when executing AFL on clusterfuzz bots\nfuzzing_engines:\n  - afl\n#  - centipede # temporarily disabled due to spurious \"Step #22 - \"build-check-centipede-none-x86_64\": OSError: [Errno 28] No space left on device\"\n  - libfuzzer\n  - honggfuzz\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Print date to embed it into build logs\ndate\n\ncd $SRC/bitcoin-core/\n\n# Build dependencies\n# This will also force static builds\nif [ \"$ARCHITECTURE\" = \"i386\" ]; then\n  export BUILD_TRIPLET=\"i686-pc-linux-gnu\"\n\n  # Temp workaround\n  mkdir /usr/local/lib/clang/18/lib/linux\n  ln -s /usr/local/lib/clang/18/lib/i386-unknown-linux-gnu/libclang_rt.asan_static.a /usr/local/lib/clang/18/lib/linux/libclang_rt.asan_static-i386.a\n  ln -s /usr/local/lib/clang/18/lib/i386-unknown-linux-gnu/libclang_rt.asan.a /usr/local/lib/clang/18/lib/linux/libclang_rt.asan-i386.a\nelse\n  export BUILD_TRIPLET=\"x86_64-pc-linux-gnu\"\nfi\n\n# Build using ThinLTO, to avoid OOM, and other LLVM issues.\n# See https://github.com/google/oss-fuzz/pull/10123.\n# Skip CFLAGS for now, to avoid:\n# \"/usr/bin/ld: error: Failed to link module lib/libevent.a.llvm.17822.buffer.c: Expected at most one ThinLTO module per bitcode file\".\n# export CFLAGS=\"$CFLAGS -flto=thin\"\n# Skip CXXFLAGS for now, to avoid: undefined reference to __sancov_gen_.\n# export CXXFLAGS=\"$CXXFLAGS -flto=thin\"\n# export LDFLAGS=\"-flto=thin\"\n\nexport CPPFLAGS=\"-D_LIBCPP_HARDENING_MODE=_LIBCPP_HARDENING_MODE_DEBUG -DBOOST_MULTI_INDEX_ENABLE_SAFE_MODE\"\n\n(\n  cd depends\n  sed -i --regexp-extended '/.*rm -rf .*extract_dir.*/d' ./funcs.mk  # Keep extracted source\n  make HOST=$BUILD_TRIPLET DEBUG=1 NO_QT=1 NO_BDB=1 NO_ZMQ=1 NO_USDT=1 \\\n       AR=llvm-ar NM=llvm-nm RANLIB=llvm-ranlib STRIP=llvm-strip \\\n       -j$(nproc)\n)\n\n# Build the fuzz targets\n\nsed -i \"s|PROVIDE_FUZZ_MAIN_FUNCTION|NEVER_PROVIDE_MAIN_FOR_OSS_FUZZ|g\" \"./src/test/fuzz/util/CMakeLists.txt\"\n\n# OSS-Fuzz will provide CC, CXX, etc. So only set:\n# * -DBUILD_FOR_FUZZING=ON, see https://github.com/bitcoin/bitcoin/blob/master/doc/fuzzing.md\n# * --toolchain, see https://github.com/bitcoin/bitcoin/blob/master/depends/README.md\nEXTRA_BUILD_OPTIONS=\nif [ \"$SANITIZER\" = \"memory\" ]; then\n  # _FORTIFY_SOURCE is not compatible with MSAN.\n  EXTRA_BUILD_OPTIONS=\"-DAPPEND_CPPFLAGS='-U_FORTIFY_SOURCE'\"\nfi\n\ncmake -B build_fuzz \\\n  --toolchain depends/${BUILD_TRIPLET}/toolchain.cmake \\\n  `# Setting these flags to an empty string ensures that the flags set by an OSS-Fuzz environment remain unaltered` \\\n  -DCMAKE_C_FLAGS_RELWITHDEBINFO=\"\" \\\n  -DCMAKE_CXX_FLAGS_RELWITHDEBINFO=\"\" \\\n  -DBUILD_FOR_FUZZING=ON \\\n  -DFUZZ_LIBS=\"$LIB_FUZZING_ENGINE\" \\\n  $EXTRA_BUILD_OPTIONS\n\ncmake --build build_fuzz -j$(nproc)\n\nWRITE_ALL_FUZZ_TARGETS_AND_ABORT=\"/tmp/a\" \"./build_fuzz/bin/fuzz\" || true\nreadarray FUZZ_TARGETS < \"/tmp/a\"\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n  # When running in CI, check the first targets only to save time and disk space\n  FUZZ_TARGETS=( ${FUZZ_TARGETS[@]:0:2} )\nfi\n\n# OSS-Fuzz requires a separate and self-contained binary for each fuzz target.\n# To inject the fuzz target name in the finished binary, compile the fuzz\n# executable with a \"magic string\" as the name of the fuzz target.\n#\n# An alternative to mocking the string in the finished binary would be to\n# replace the string in the source code and re-invoke 'cmake --build'. This is slower,\n# so use the hack.\nexport MAGIC_STR=\"b5813eee2abc9d3358151f298b75a72264ffa119d2f71ae7fefa15c4b70b4bc5b38e87e3107a730f25891ea428b2b4fabe7a84f5bfa73c79e0479e085e4ff157\"\nsed -i \"s|std::getenv(\\\"FUZZ\\\")|\\\"$MAGIC_STR\\\"|g\" \"./src/test/fuzz/fuzz.cpp\"\ncmake --build build_fuzz -j$(nproc)\n\n# Replace the magic string with the actual name of each fuzz target\nfor fuzz_target in ${FUZZ_TARGETS[@]}; do\n  df --human-readable ./src\n  python3 -c \"c_str_target=b\\\"${fuzz_target}\\x00\\\";c_str_magic=b\\\"$MAGIC_STR\\\";dat=open('./build_fuzz/bin/fuzz','rb').read();dat=dat.replace(c_str_magic, c_str_target+c_str_magic[len(c_str_target):]);open(\\\"$OUT/$fuzz_target\\\",'wb').write(dat)\"\n\n  chmod +x \"$OUT/$fuzz_target\"\n  (\n    cd assets/fuzz_corpora\n    if [ -d \"$fuzz_target\" ]; then\n      zip --recurse-paths --quiet --junk-paths \"$OUT/${fuzz_target}_seed_corpus.zip\" \"${fuzz_target}\"\n    fi\n  )\ndone\n\ncp assets/fuzz_dicts/*.dict $OUT/\n"
    },
    "black": {
        "name": "black",
        "language": "python",
        "homepage": "https://github.com/psf/black",
        "main_repo": "https://github.com/psf/black",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/psf/black\nmain_repo: https://github.com/psf/black\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data 'src/blib2to3:blib2to3'\ndone\n"
    },
    "blackfriday": {
        "name": "blackfriday",
        "language": "go",
        "homepage": "https://github.com/russross/blackfriday",
        "main_repo": "https://github.com/russross/blackfriday",
        "primary_contact": "security-tps@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/russross/blackfriday\"\nmain_repo: \"https://github.com/russross/blackfriday\"\nprimary_contact: \"security-tps@google.com\"\nauto_ccs :\n  - \"Adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/render_fuzzer.go .\n\nrm go.mod\ngo mod init github.com/russross/blackfriday\n\ncompile_go_fuzzer github.com/russross/blackfriday Fuzz render_fuzzer\n"
    },
    "bleach": {
        "name": "bleach",
        "language": "python",
        "homepage": "https://github.com/mozilla/bleach",
        "main_repo": "https://github.com/mozilla/bleach",
        "primary_contact": "wkahngreene@mozilla.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/mozilla/bleach\"\nmain_repo: \"https://github.com/mozilla/bleach\"\nlanguage: python\nprimary_contact: \"wkahngreene@mozilla.com\"\nauto_ccs:\n  - \"ipudney@google.com\"\n  - \"gguthe@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name '*_fuzzer.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\n# Copy fuzzer dictionaries to $OUT\ncp fuzzing/dictionaries/html.dict \"$OUT/linkify_fuzzer.dict\"\ncp fuzzing/dictionaries/html.dict \"$OUT/sanitize_fuzzer.dict\"\n"
    },
    "bloaty": {
        "name": "bloaty",
        "language": "c++",
        "homepage": "https://github.com/google/bloaty",
        "main_repo": "https://github.com/google/bloaty.git",
        "primary_contact": "jhaberman@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/bloaty\"\nlanguage: c++\nprimary_contact: \"jhaberman@gmail.com\"\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/google/bloaty.git'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $WORK\ncmake -G Ninja -DBUILD_TESTING=false $SRC/bloaty\nninja -j$(nproc)\ncp fuzz_target $OUT\nzip -j $OUT/fuzz_target_seed_corpus.zip $SRC/bloaty/tests/testdata/fuzz_corpus/*\n"
    },
    "bls-signatures": {
        "name": "bls-signatures",
        "language": "c++",
        "homepage": "https://github.com/supranational/blst",
        "main_repo": "https://github.com/supranational/blst.git",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/supranational/blst\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nmain_repo: \"https://github.com/supranational/blst.git\"\nsanitizers:\n - address\n - undefined\n - memory\narchitectures:\n - x86_64\n - i386\nauto_ccs:\n - \"kelly@supranational.net\"\n - \"diederik.loerakker@ethereum.org\"\n - \"hoffmang@chia.net\"\n - \"bram@chia.net\"\n - \"mariano@chia.net\"\n - \"arvid@chia.net\"\n - \"bill@chia.net\"\n - \"pratyush795@gmail.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NO_OPENSSL -D_LIBCPP_DEBUG=1\"\nif [[ \"$SANITIZER\" = \"memory\" ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\nexport LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\"\nexport LINK_FLAGS=\"\"\n\n# Install Boost headers\ncd $SRC/\ntar jxf boost_1_84_0.tar.bz2\ncd boost_1_84_0/\nCFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\nCFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\ncp -R boost/ /usr/include/\n\n# Configure Cryptofuzz\ncd $SRC/cryptofuzz/\npython gen_repository.py\nrm extra_options.h\necho -n '\"' >>extra_options.h\necho -n \"--force-module=blst \" >>extra_options.h\necho -n \"--operations=\" >>extra_options.h\necho -n \"BignumCalc,\" >>extra_options.h\necho -n \"BignumCalc_Fp2,\" >>extra_options.h\necho -n \"BignumCalc_Fp12,\" >>extra_options.h\necho -n \"BLS_BatchVerify,\" >>extra_options.h\necho -n \"BLS_FinalExp,\" >>extra_options.h\necho -n \"BLS_GenerateKeyPair,\" >>extra_options.h\necho -n \"BLS_HashToG1,\" >>extra_options.h\necho -n \"BLS_HashToG2,\" >>extra_options.h\necho -n \"BLS_IsG1OnCurve,\" >>extra_options.h\necho -n \"BLS_IsG2OnCurve,\" >>extra_options.h\necho -n \"BLS_Pairing,\" >>extra_options.h\necho -n \"BLS_PrivateToPublic,\" >>extra_options.h\necho -n \"BLS_PrivateToPublic_G2,\" >>extra_options.h\necho -n \"BLS_Sign,\" >>extra_options.h\necho -n \"BLS_Verify,\" >>extra_options.h\necho -n \"BLS_Compress_G1,\" >>extra_options.h\necho -n \"BLS_Compress_G2,\" >>extra_options.h\necho -n \"BLS_Decompress_G1,\" >>extra_options.h\necho -n \"BLS_Decompress_G2,\" >>extra_options.h\necho -n \"BLS_G1_Add,\" >>extra_options.h\necho -n \"BLS_G1_Mul,\" >>extra_options.h\necho -n \"BLS_G1_IsEq,\" >>extra_options.h\necho -n \"BLS_G1_Neg,\" >>extra_options.h\necho -n \"BLS_G2_Add,\" >>extra_options.h\necho -n \"BLS_G2_Mul,\" >>extra_options.h\necho -n \"BLS_G2_IsEq,\" >>extra_options.h\necho -n \"BLS_G2_Neg,\" >>extra_options.h\necho -n \"BLS_Aggregate_G1\", >>extra_options.h\necho -n \"BLS_Aggregate_G2\", >>extra_options.h\necho -n \"BLS_MapToG1\", >>extra_options.h\necho -n \"BLS_MapToG2\", >>extra_options.h\necho -n \"BignumCalc_Mod_BLS12_381_P,\" >>extra_options.h\necho -n \"BignumCalc_Mod_BLS12_381_R,\" >>extra_options.h\necho -n \"KDF_HKDF,\" >>extra_options.h\necho -n \"Misc \" >>extra_options.h\necho -n \"--digests=SHA256 \" >>extra_options.h\necho -n \"--curves=BLS12_381 \" >>extra_options.h\necho -n '\"' >>extra_options.h\n\n# Build arkworks-algebra\nif [[ \"$SANITIZER\" != \"memory\" ]]\nthen\n    cd $SRC/cryptofuzz/modules/arkworks-algebra/\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        make\n    else\n        rustup target add i686-unknown-linux-gnu\n        make -f Makefile-i386\n    fi\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_ARKWORKS_ALGEBRA\"\nfi\n\n# Build Constantine\nif [[ \"$SANITIZER\" != \"memory\" ]]\nthen\n    cd $SRC/\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        tar Jxf nim-2.0.8-linux_x64.tar.xz\n    else\n        tar Jxf nim-2.0.8-linux_x32.tar.xz\n    fi\n    export NIM_PATH=$(realpath nim-2.0.8)\n\n    export CONSTANTINE_PATH=$SRC/constantine/\n\n    cd $SRC/cryptofuzz/modules/constantine/\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        make\n    else\n        make -f Makefile-i386\n    fi\n\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_CONSTANTINE\"\nfi\n\nif [[ $CFLAGS = *-m32* ]]\nthen\n    # Build and install libgmp\n    cd $SRC/\n    mkdir $SRC/libgmp-install\n    tar xf gmp-6.2.1.tar.lz\n    cd $SRC/gmp-6.2.1/\n    autoreconf -ivf\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        ./configure --prefix=\"$SRC/libgmp-install/\" --enable-cxx\n    else\n        setarch i386 ./configure --prefix=\"$SRC/libgmp-install/\" --enable-cxx\n    fi\n    make -j$(nproc)\n    make install\n    export CXXFLAGS=\"$CXXFLAGS -I $SRC/libgmp-install/include/\"\nfi\n\nfunction build_blst() {\n    if [[ \"$SANITIZER\" == \"memory\" ]]\n    then\n        CFLAGS=\"$CFLAGS -D__BLST_NO_ASM__ -D__BLST_PORTABLE__ -Dllimb_t=__uint128_t -D__builtin_assume(x)=(void)(x)\" ./build.sh\n    else\n        ./build.sh\n    fi\n\n    export BLST_LIBBLST_A_PATH=$(realpath libblst.a)\n    export BLST_INCLUDE_PATH=$(realpath bindings/)\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BLST\"\n}\n\n# Build blst (normal)\ncp -R $SRC/blst/ $SRC/blst_normal/\ncd $SRC/blst_normal/\nbuild_blst\n\n# Build mcl\nif [[ \"$SANITIZER\" != \"memory\" && $CFLAGS != *-m32* ]]\nthen\n    cd $SRC/mcl/\n    mkdir build/\n    cd build/\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        cmake .. -DMCL_STATIC_LIB=on\n        export LINK_FLAGS=\"$LINK_FLAGS -lgmp\"\n    else\n        cmake .. -DMCL_STATIC_LIB=on \\\n        -DGMP_INCLUDE_DIR=\"$SRC/libgmp-install/include/\" \\\n        -DGMP_LIBRARY=\"$SRC/libgmp-install/lib/libgmp.a\" \\\n        -DGMP_GMPXX_INCLUDE_DIR=\"$SRC/libgmp-install/include/\" \\\n        -DGMP_GMPXX_LIBRARY=\"$SRC/libgmp-install/lib/libgmpxx.a\" \\\n        -DMCL_USE_ASM=off\n        export LINK_FLAGS=\"$LINK_FLAGS $SRC/libgmp-install/lib/libgmp.a\"\n    fi\n    make\n    export MCL_INCLUDE_PATH=$(realpath ../include/)\n    export MCL_LIBMCL_A_PATH=$(realpath lib/libmcl.a)\n    export MCL_LIBMCLBN384_A_PATH=$(realpath lib/libmclbn384.a)\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_MCL\"\nfi\n\n# Build Botan\ncd $SRC/botan/\nif [[ $CFLAGS != *-m32* ]]\nthen\n    ./configure.py --cc-bin=$CXX \\\n    --cc-abi-flags=\"$CXXFLAGS\" \\\n    --disable-shared \\\n    --disable-modules=locking_allocator,x509 \\\n    --build-targets=static \\\n    --without-documentation\nelse\n    ./configure.py --cpu=x86_32 \\\n    --cc-bin=$CXX \\\n    --cc-abi-flags=\"$CXXFLAGS\" \\\n    --disable-shared \\\n    --disable-modules=locking_allocator,x509 \\\n    --build-targets=static \\\n    --without-documentation\nfi\nmake -j$(nproc)\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN -DCRYPTOFUZZ_BOTAN_IS_ORACLE\"\nexport LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\nexport BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\n\n# Build modules\ncd $SRC/cryptofuzz/modules/botan/\nmake -B\n\ncd $SRC/cryptofuzz/modules/blst/\nmake -B\n\nif [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\nthen\n    cd $SRC/cryptofuzz/modules/mcl/\n    make -B\nfi\n\n# Build Cryptofuzz\ncd $SRC/cryptofuzz/\nmake -B -j\n\ncp cryptofuzz $OUT/cryptofuzz-bls-signatures\n\n# Build blst (optimized for size)\ncp -R $SRC/blst/ $SRC/blst_optimize_size/\ncd $SRC/blst_optimize_size/\nexport CFLAGS=\"$CFLAGS -D__OPTIMIZE_SIZE__\"\nbuild_blst\n\ncd $SRC/cryptofuzz/modules/blst/\nmake -B\n\n# Build Cryptofuzz\ncd $SRC/cryptofuzz/\nrm entry.o; make\n\ncp cryptofuzz $OUT/cryptofuzz-bls-signatures_optimize_size\n"
    },
    "bluez": {
        "name": "bluez",
        "language": "c",
        "homepage": "https://github.com/bluez/bluez",
        "main_repo": "https://github.com/bluez/bluez",
        "primary_contact": "bluez.test.bot@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "afl"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/bluez/bluez\"\nlanguage: c\nprimary_contact: \"bluez.test.bot@gmail.com\"\nmain_repo: \"https://github.com/bluez/bluez\"\nauto_ccs:\n  - \"hj.tedd.an@gmail.com\"\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n  - afl\n  # - centipede disabled due to https://github.com/google/oss-fuzz/pull/10248#issuecomment-1579657163\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./bootstrap\nautoreconf -f\n./configure\nmake\n\nINCLUDES=\"-I. -I./src -I./lib -I./gobex -I/usr/local/include/glib-2.0/ -I/src/glib/_build/glib/\"\nSTATIC_LIBS=\"./src/.libs/libshared-glib.a ./lib/.libs/libbluetooth-internal.a  -l:libical.a -l:libicalss.a -l:libicalvcal.a -l:libdbus-1.a /src/glib/_build/glib/libglib-2.0.a\"\n\n$CC $CFLAGS $INCLUDES $SRC/fuzz_xml.c -c\n$CC $CFLAGS $INCLUDES $SRC/fuzz_sdp.c -c\n$CC $CFLAGS $INCLUDES $SRC/fuzz_textfile.c -c\n$CC $CFLAGS $INCLUDES $SRC/fuzz_gobex.c -c\n$CC $CFLAGS $INCLUDES $SRC/fuzz_hci.c -c\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n ./src/bluetoothd-sdp-xml.o fuzz_xml.o -o $OUT/fuzz_xml \\\n $STATIC_LIBS -ldl -lpthread\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n fuzz_sdp.o -o $OUT/fuzz_sdp $STATIC_LIBS -ldl -lpthread\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_textfile.o -o $OUT/fuzz_textfile \\\n  $STATIC_LIBS -ldl -lpthread src/textfile.o\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n  fuzz_gobex.o ./gobex/gobex*.o -o $OUT/fuzz_gobex \\\n $STATIC_LIBS -ldl -lpthread\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n fuzz_hci.o ./gobex/gobex*.o -o $OUT/fuzz_hci \\\n $STATIC_LIBS -ldl -lpthread\n\necho \"[libfuzzer]\" > $OUT/fuzz_gobex.options\necho \"detect_leaks=0\" >> $OUT/fuzz_gobex.options\n"
    },
    "boost-beast": {
        "name": "boost-beast",
        "language": "c++",
        "homepage": "https://www.boost.org/",
        "main_repo": "https://github.com/boostorg/beast.git",
        "primary_contact": "vinnie.falco@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.boost.org/\"\nlanguage: c++\nprimary_contact: \"vinnie.falco@gmail.com\"\nauto_ccs:\n   - \"ashtumashtum@gmail.com\"\nmain_repo: 'https://github.com/boostorg/beast.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n./bootstrap.sh\n\necho \"using clang : ossfuzz : $CXX : <compileflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"${LIB_FUZZING_ENGINE}\\\" ;\" >user-config.jam\n\n./b2 --user-config=user-config.jam --toolset=clang-ossfuzz --prefix=$WORK/stage --with-headers link=static install\n\ntar -xvf libs/beast/test/fuzz/seeds.tar -C libs/beast/test/fuzz\n\nfor i in libs/beast/test/fuzz/*.cpp; do\n    fuzzer=$(basename $i .cpp)\n    $CXX $CXXFLAGS -pthread -I $WORK/stage/include libs/beast/test/fuzz/$fuzzer.cpp $LIB_FUZZING_ENGINE -o $OUT/$fuzzer\n\n    if [ -d \"libs/beast/test/fuzz/seeds/$fuzzer\" ]; then\n        zip -q -r -j $OUT/\"$fuzzer\"_seed_corpus.zip libs/beast/test/fuzz/seeds/$fuzzer\n    fi\ndone\n"
    },
    "boost-json": {
        "name": "boost-json",
        "language": "c++",
        "homepage": "http://www.boost.org/",
        "main_repo": "https://github.com/boostorg/json.git",
        "primary_contact": "pauldreikossfuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.boost.org/\"\nlanguage: c++\nprimary_contact: \"pauldreikossfuzz@gmail.com\"\nauto_ccs:\n   - \"vinnie.falco@gmail.com\"\n   - \"grisumbras@gmail.com\"\n   - \"pdimov@gmail.com\"\nmain_repo: 'https://github.com/boostorg/json.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./bootstrap.sh --with-toolset=clang\n\necho \"using clang : ossfuzz : $CXX : <compileflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"${LIB_FUZZING_ENGINE}\\\" ;\" >user-config.jam\n\n./b2 --user-config=user-config.jam                              \\\n     --toolset=clang-ossfuzz                                    \\\n     --prefix=$WORK/stage                                       \\\n     --with-json                                                \\\n     include=/usr/local/include/x86_64-unknown-linux-gnu/c++/v1 \\\n     link=static                                                \\\n     install\n\nfor i in libs/json/fuzzing/*.cpp; do\n   fuzzer=$(basename $i .cpp)\n   $CXX $CXXFLAGS -pthread libs/json/fuzzing/$fuzzer.cpp -I $WORK/stage/include/ $WORK/stage/lib/*.a $LIB_FUZZING_ENGINE -o $OUT/$fuzzer\n   zip -q -r -j $OUT/${fuzzer}_seed_corpus.zip libs/json/fuzzing/old_crashes\ndone\n\n"
    },
    "boost": {
        "name": "boost",
        "language": "c++",
        "homepage": "http://www.boost.org/",
        "main_repo": "https://github.com/boostorg/boost.git",
        "primary_contact": "mclow@boost.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.boost.org/\"\nlanguage: c++\nprimary_contact: \"mclow@boost.org\"\nauto_ccs:  \n   - \"jz.maddock@googlemail.com\"\n   - \"bshas3@gmail.com\"\n   - \"jking@apache.org\"\n   - \"jeremy.william.murphy@gmail.com\"\n   - \"christian.mazakas@gmail.com\"\n   - \"research@shielder.it\"\nmain_repo: 'https://github.com/boostorg/boost.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Work around build issue\ncp \"/usr/local/include/x86_64-unknown-linux-gnu/c++/v1/__config_site\" \"/usr/local/include/c++/v1/\"\n\n# Build boost\nCXXFLAGS=\"$CXXFLAGS -stdlib=libc++ -pthread\" LDFLAGS=\"-stdlib=libc++\" \\\n    ./bootstrap.sh --with-toolset=clang --prefix=/usr;\necho \"using clang : ossfuzz : $CXX : <compileflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"${LIB_FUZZING_ENGINE}\\\" ;\" >user-config.jam\n./b2 --user-config=user-config.jam --toolset=clang-ossfuzz link=static --with-headers --with-graph --with-filesystem --with-program_options headers stage;\n\n# Very simple build rule, but sufficient here.\n#boost regexp\n$CXX $CXXFLAGS -I . ../boost_regex_fuzzer.cc libs/regex/src/*.cpp $LIB_FUZZING_ENGINE -o boost_regex_fuzzer\n$CXX $CXXFLAGS -I . ../boost_regex_pattern_fuzzer.cc libs/regex/src/*.cpp $LIB_FUZZING_ENGINE -o boost_regex_pattern_fuzzer\n$CXX $CXXFLAGS -I . ../boost_regex_replace_fuzzer.cc libs/regex/src/*.cpp $LIB_FUZZING_ENGINE -o boost_regex_replace_fuzzer\n\n#boost property tree parsers\n$CXX $CXXFLAGS -I . ../boost_ptree_xmlread_fuzzer.cc  $LIB_FUZZING_ENGINE -o boost_ptree_xmlread_fuzzer\n$CXX $CXXFLAGS -I . ../boost_ptree_jsonread_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_ptree_jsonread_fuzzer\n$CXX $CXXFLAGS -I . ../boost_ptree_iniread_fuzzer.cc  $LIB_FUZZING_ENGINE -o boost_ptree_iniread_fuzzer\n$CXX $CXXFLAGS -I . ../boost_ptree_inforead_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_ptree_inforead_fuzzer\n\n#boost graph graphviz\n$CXX $CXXFLAGS -I . ../boost_graph_graphviz_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_graph_graphviz_fuzzer stage/lib/libboost_graph.a\n$CXX $CXXFLAGS -I . ../boost_graph_graphml_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_graph_graphml_fuzzer stage/lib/libboost_graph.a\n\n#boost datetime\n$CXX $CXXFLAGS -I . ../boost_datetime_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_datetime_fuzzer\n\n#boost filesystem\n$CXX $CXXFLAGS -I . ../boost_filesystem_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_filesystem_fuzzer stage/lib/libboost_filesystem.a\n\n#boost algorithm/strings\n$CXX $CXXFLAGS -I . ../boost_stralg_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_stralg_fuzzer\n\n#boost uuid\n$CXX $CXXFLAGS -I . ../boost_uuid_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_uuid_fuzzer\n\n#boost programoptions\n$CXX $CXXFLAGS -I . ../boost_programoptions_fuzzer.cc $LIB_FUZZING_ENGINE -o boost_programoptions_fuzzer stage/lib/libboost_program_options.a\n\n# Copy the fuzzer executables, zip-ed corpora, option and dictionary files to $OUT\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\n# find . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'     # If you have dictionaries.\n# find . -name '*_fuzzer.options' -exec cp -v '{}' $OUT ';'  # If you have custom options.\nfind . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' $OUT ';' # If you have seed corpora (you better have them!)\n"
    },
    "boringssl": {
        "name": "boringssl",
        "language": "c++",
        "homepage": "https://boringssl.googlesource.com/boringssl/",
        "main_repo": "https://boringssl.googlesource.com/boringssl",
        "primary_contact": "agl@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://boringssl.googlesource.com/boringssl/\"\nlanguage: c++\nprimary_contact: \"agl@google.com\"\nauto_ccs:\n - \"bbe@google.com\"\n - \"davidben@google.com\"\n - \"svaldez@google.com\"\nsanitizers:\n- address\n- undefined\n- memory\nmain_repo: 'https://boringssl.googlesource.com/boringssl'\n",
        "build_sh": "#!/bin/bash -eux\n#\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nmkdir -p $WORK/boringssl\ncd $WORK/boringssl\n\nCFLAGS=\"$CFLAGS -DBORINGSSL_UNSAFE_FUZZER_MODE\"\nCXXFLAGS=\"$CXXFLAGS -DBORINGSSL_UNSAFE_FUZZER_MODE\"\n\nCMAKE_DEFINES=\"-DBORINGSSL_ALLOW_CXX_RUNTIME=1\"\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n  CMAKE_DEFINES+=\" -DOPENSSL_NO_ASM=1\"\nfi\n\ncmake -GNinja -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX \\\n      -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n      $CMAKE_DEFINES $SRC/boringssl/\nninja\n\nfuzzerFiles=$(find $SRC/boringssl/fuzz/ -name \"*.cc\")\n\nfind . -name \"*.a\"\n\nfor F in $fuzzerFiles; do\n  fuzzerName=$(basename $F .cc)\n  echo \"Building fuzzer $fuzzerName\"\n  $CXX $CXXFLAGS \\\n      -D_BORINGSSL_LIBPKI_ -std=c++1z \\\n      -o $OUT/${fuzzerName} $LIB_FUZZING_ENGINE $F \\\n      -I $SRC/boringssl/include ./libpki.a ./ssl/libssl.a  ./crypto/libcrypto.a\n\n  if [ -d \"$SRC/boringssl/fuzz/${fuzzerName}_corpus\" ]; then\n    zip -j $OUT/${fuzzerName}_seed_corpus.zip $SRC/boringssl/fuzz/${fuzzerName}_corpus/*\n  fi\ndone\n\nif [[ $CFLAGS != *sanitize=memory* ]]; then\n  fuzzerLPMFiles=$(find $SRC/ -maxdepth 1 -name \"*.cc\")\n\n  cp $SRC/fuzzing/proto/asn1-pdu/* $SRC/\n\n  rm -rf genfiles && mkdir genfiles && $SRC/LPM/external.protobuf/bin/protoc asn1_pdu.proto --cpp_out=genfiles --proto_path=$SRC/\n\n  for F in $fuzzerLPMFiles\n  do\n    fuzzerName=$(echo ${F#*_})\n    fuzzerName=$(basename $fuzzerName .cc)\n    echo \"Building fuzzer $fuzzerName\"\n    $CXX $CXXFLAGS -I genfiles -I . -I $SRC/libprotobuf-mutator/ -I $SRC/LPM/external.protobuf/include -I include $LIB_FUZZING_ENGINE \\\n        -DNDEBUG \\\n        -I $SRC/boringssl/include \\\n        $F genfiles/asn1_pdu.pb.cc $SRC/asn1_pdu_to_der.cc $SRC/common.cc \\\n        ./ssl/libssl.a ./crypto/libcrypto.a \\\n        $SRC/LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n        $SRC/LPM/src/libprotobuf-mutator.a \\\n        -Wl,--start-group $SRC/LPM/external.protobuf/lib/lib*.a -Wl,--end-group \\\n        -o $OUT/\"${fuzzerName}_lpm\"\n  done\nfi\n"
    },
    "botan": {
        "name": "botan",
        "language": "c++",
        "homepage": "https://botan.randombit.net",
        "main_repo": "https://github.com/randombit/botan.git",
        "primary_contact": "jack.lloyd@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "centipede",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://botan.randombit.net\"\nlanguage: c++\nprimary_contact: \"jack.lloyd@gmail.com\"\nauto_ccs:\n  - \"re.korthaus@googlemail.com\"\n  - \"droelf@googlemail.com\"\n  - \"norritt@bytefortress.de\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/randombit/botan.git'\nfuzzing_engines:\n  - afl\n  - centipede\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/botan\n\nln -s $SRC/fuzzer_corpus .\n\n./src/scripts/config_for_oss_fuzz.py $CXX \"$CXXFLAGS\"\n\nmake -j$(nproc) libs fuzzers\nmake fuzzer_corpus_zip\n\n# the seed corpus zips will also be in this directory\ncp build/fuzzer/* $OUT\n"
    },
    "botocore": {
        "name": "botocore",
        "language": "python",
        "homepage": "https://github.com/boto/botocore",
        "main_repo": "https://github.com/boto/botocore",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/boto/botocore\nlanguage: python\nmain_repo: https://github.com/boto/botocore\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "bottleneck": {
        "name": "bottleneck",
        "language": "python",
        "homepage": "https://github.com/pydata/bottleneck",
        "main_repo": "https://github.com/pydata/bottleneck",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pydata/bottleneck\nlanguage: python\nmain_repo: https://github.com/pydata/bottleneck\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\ncd $SRC/bottleneck\npip3 install .\npython3 setup.py install\n\n# Build fuzzers and put them in $OUT/\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "brotli-java": {
        "name": "brotli-java",
        "language": "jvm",
        "homepage": "https://github.com/google/brotli/tree/master/java",
        "main_repo": "https://github.com/google/brotli",
        "primary_contact": "eustas@chromium.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/brotli/tree/master/java\"\nlanguage: jvm\nprimary_contact: \"eustas@chromium.org\"\nmain_repo: \"https://github.com/google/brotli\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd java/org/brotli\nsed -i 's/1.6</1.7</g' ./pom.xml\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=11 -Djavac.target.version=11 -X\"\n$MVN package\nfind ./dec -name \"org.brotli.dec-*.jar\" -exec mv {} $OUT/dec.jar \\;\n\nALL_JARS=\"dec.jar\"\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\nfor fuzzer in $(find $SRC -name 'Fuzz*.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "brotli": {
        "name": "brotli",
        "language": "c++",
        "homepage": "https://github.com/google/brotli",
        "main_repo": "https://github.com/google/brotli.git",
        "primary_contact": "eustas@chromium.org",
        "vendor_ccs": [
            "jkew@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/brotli\"\nlanguage: c++\nprimary_contact: \"eustas@chromium.org\"\nvendor_ccs:\n  - \"jkew@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/google/brotli.git'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncmake . -DBUILD_TESTING=OFF -DBUILD_SHARED_LIBS=OFF\nmake clean\nmake -j$(nproc) brotlidec\n\n$CC $CFLAGS -c -std=c99 -I. -I./c/include c/fuzz/decode_fuzzer.c \n\n$CXX $CXXFLAGS ./decode_fuzzer.o  -o $OUT/decode_fuzzer \\\n    $LIB_FUZZING_ENGINE ./libbrotlidec.a ./libbrotlicommon.a\n\ncp java/org/brotli/integration/fuzz_data.zip $OUT/decode_fuzzer_seed_corpus.zip\nchmod a-x $OUT/decode_fuzzer_seed_corpus.zip # we will try to run it otherwise\n"
    },
    "brpc": {
        "name": "brpc",
        "language": "c++",
        "homepage": "https://brpc.apache.org",
        "main_repo": "https://github.com/apache/incubator-brpc",
        "primary_contact": "security@apache.org",
        "vendor_ccs": [
            "zhujiashun2010@gmail.com",
            "wangweibing@baidu.com",
            "serverglen@gmail.com",
            "jerrytan@apache.org"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://brpc.apache.org\"\nlanguage: c++\nprimary_contact: \"security@apache.org\"\nvendor_ccs:\n  - \"zhujiashun2010@gmail.com\"\n  - \"wangweibing@baidu.com\"\n  - \"serverglen@gmail.com\"\n  - \"jerrytan@apache.org\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\nmain_repo: \"https://github.com/apache/incubator-brpc\"\n",
        "build_sh": null
    },
    "brunsli": {
        "name": "brunsli",
        "language": "c++",
        "homepage": "https://github.com/google/brunsli",
        "main_repo": "https://github.com/google/brunsli.git",
        "primary_contact": "eustas@chromium.org",
        "vendor_ccs": [
            "jkew@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/brunsli\"\nlanguage: c++\nprimary_contact: \"eustas@chromium.org\"\nvendor_ccs:\n  - \"jkew@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/google/brunsli.git'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncmake . -DBUILD_TESTING=ON\nmake clean\nmake -j$(nproc) all\n\n# TODO(eustas): add seed corpus\n\n$CXX $CXXFLAGS -std=c++11 -I./c/include c/tests/fuzz_decode.cc \\\n    ./CMakeFiles/build_huffman_table_test.dir/c/tests/test_utils.cc.o \\\n    -o $OUT/fuzz_decode $LIB_FUZZING_ENGINE \\\n    ./artifacts/libbrunslidec-static.a ./artifacts/libbrunslicommon-static.a \\\n    ./_deps/brotli-build/libbrotlidec-static.a \\\n    ./_deps/brotli-build/libbrotlicommon-static.a\n\n$CXX $CXXFLAGS -std=c++11 -I./c/include c/tests/fuzz_decode_streaming.cc \\\n    ./CMakeFiles/build_huffman_table_test.dir/c/tests/test_utils.cc.o \\\n    -o $OUT/fuzz_decode_streaming $LIB_FUZZING_ENGINE \\\n    ./artifacts/libbrunslidec-static.a ./artifacts/libbrunslicommon-static.a \\\n    ./_deps/brotli-build/libbrotlidec-static.a \\\n    ./_deps/brotli-build/libbrotlicommon-static.a\n"
    },
    "bs4": {
        "name": "bs4",
        "language": "python",
        "homepage": "https://www.crummy.com/software/BeautifulSoup/",
        "main_repo": "https://code.launchpad.net/~leonardr/beautifulsoup/bs4",
        "primary_contact": "leonard.richardson@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.crummy.com/software/BeautifulSoup/\"\nmain_repo: \"https://code.launchpad.net/~leonardr/beautifulsoup/bs4\"\nlanguage: python\nprimary_contact: \"leonard.richardson@gmail.com\"\nauto_ccs:\n  - \"julien.voisin@dustri.org\"\n  - \"ipudney@google.com\"\n  - \"security@tidelift.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name '*_fuzzer.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "bson-rust": {
        "name": "bson-rust",
        "language": "rust",
        "homepage": "https://github.com/mongodb/bson-rust",
        "main_repo": "https://github.com/mongodb/bson-rust",
        "primary_contact": null,
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/mongodb/bson-rust\"\nlanguage: rust\nmain_repo: \"https://github.com/mongodb/bson-rust\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nvendor_ccs:\n  - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nset -eox pipefail\n\ntarget_out_dir=fuzz/target/x86_64-unknown-linux-gnu/release\ncargo fuzz build -O\ncargo fuzz list | while read i; do\n  [[ \"$i\" == \"generate_corpus\" ]] && continue\n  cp $target_out_dir/$i $OUT/\ndone\n"
    },
    "burntsushi-toml": {
        "name": "burntsushi-toml",
        "language": "go",
        "homepage": "https://github.com/BurntSushi/toml",
        "main_repo": "https://github.com/BurntSushi/toml",
        "primary_contact": null,
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/BurntSushi/toml\"\nlanguage: go\nmain_repo: \"https://github.com/BurntSushi/toml\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer  github.com/BurntSushi/toml/ossfuzz FuzzToml fuzz_toml gofuzz\n"
    },
    "bz2file": {
        "name": "bz2file",
        "language": "python",
        "homepage": "https://github.com/nvawda/bz2file",
        "main_repo": "https://github.com/nvawda/bz2file",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/nvawda/bz2file\nmain_repo: https://github.com/nvawda/bz2file\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone"
    },
    "bzip2": {
        "name": "bzip2",
        "language": "c++",
        "homepage": "https://sourceware.org/bzip2/",
        "main_repo": null,
        "primary_contact": "bzip2fuzzer@gmail.com",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://sourceware.org/bzip2/\"\nlanguage: c++\nprimary_contact: \"bzip2fuzzer@gmail.com\"\nauto_ccs:\n  - \"bshas3@gmail.com\"\nvendor_ccs:\n  - \"twsmith@mozilla.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd bzip2\nSRCL=(blocksort.o huffman.o crctable.o randtable.o compress.o decompress.o bzlib.o)\n\nfor source in ${SRCL[@]}; do\n    name=$(basename $source .o)\n    $CC $CFLAGS -c ${name}.c\ndone\nrm -f libbz2.a\nar cq libbz2.a ${SRCL[@]} && ranlib libbz2.a\n\n# build fuzzers\nfor file in $SRC/*.c;\ndo\n    name=$(basename $file .c)\n    $CC $CFLAGS -c -I . $SRC/${name}.c -o $OUT/${name}.o\n    $CXX $CXXFLAGS -o $OUT/${name} $OUT/${name}.o $LIB_FUZZING_ENGINE \\\n    libbz2.a\n    rm -f $OUT/${name}.o\ndone\n\n# build decompress seed corpus from \".bz2\" samples\n# 1) look for all \".bz2\" files in ./bzip2 and ./bzip2-test that are <100k\n# 2) remove base file name collisions\n# 3) add to (bzip2_decompress_target_seed_corpus.zip) archive\nfind $SRC/bzip2* -type f -name \"*.bz2\" -size -100k \\\n  | awk -F/ '{a[$NF]=$0}END{for(i in a)print a[i]}' \\\n  | zip -j0r bzip2_decompress_target_seed_corpus.zip -@\n"
    },
    "c-ares": {
        "name": "c-ares",
        "language": "c++",
        "homepage": "https://c-ares.haxx.se/",
        "main_repo": "https://github.com/c-ares/c-ares.git",
        "primary_contact": "drysdale@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://c-ares.haxx.se/\"\nlanguage: c++\nprimary_contact: \"drysdale@google.com\"\nauto_ccs:\n  - \"daniel.haxx@gmail.com\"\n  - \"brad@brad-house.com\"\nfuzzing_engines:\n  - afl\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/c-ares/c-ares.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build the project.\n./buildconf\n./configure --enable-debug --disable-tests\nmake clean\nmake -j$(nproc) V=1 all\n\n# Build the fuzzers.\n$CC $CFLAGS -Iinclude -Isrc/lib -c $SRC/c-ares/test/ares-test-fuzz.c -o $WORK/ares-test-fuzz.o\n$CXX $CXXFLAGS -std=c++11 $WORK/ares-test-fuzz.o \\\n    -o $OUT/ares_parse_reply_fuzzer \\\n    $LIB_FUZZING_ENGINE $SRC/c-ares/src/lib/.libs/libcares.a\n\n$CC $CFLAGS -Iinclude -Isrc/lib -c $SRC/c-ares/test/ares-test-fuzz-name.c \\\n    -o $WORK/ares-test-fuzz-name.o\n$CXX $CXXFLAGS -std=c++11 $WORK/ares-test-fuzz-name.o \\\n    -o $OUT/ares_create_query_fuzzer \\\n    $LIB_FUZZING_ENGINE $SRC/c-ares/src/lib/.libs/libcares.a\n\n# Archive and copy to $OUT seed corpus if the build succeeded.\nzip -j $OUT/ares_parse_reply_fuzzer_seed_corpus.zip $SRC/c-ares/test/fuzzinput/*\nzip -j $OUT/ares_create_query_fuzzer_seed_corpus.zip \\\n    $SRC/c-ares/test/fuzznames/*\n"
    },
    "c-blosc": {
        "name": "c-blosc",
        "language": "c++",
        "homepage": "https://github.com/Blosc/c-blosc",
        "main_repo": "https://github.com/Blosc/c-blosc.git",
        "primary_contact": "blosc.oss.fuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/Blosc/c-blosc\"\nlanguage: c++\nprimary_contact: \"blosc.oss.fuzz@gmail.com\"\nauto_ccs:\n  - \"nathan.moinvaziri@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/Blosc/c-blosc.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build project\ncmake . -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\"     \\\n        -DBUILD_FUZZERS=ON -DBUILD_TESTS=OFF -DBUILD_BENCHMARKS=OFF \\\n        -DBUILD_STATIC=ON -DBUILD_SHARED=OFF\nmake clean\nmake -j$(nproc)\n\n# Package seed corpus\nzip -j $OUT/decompress_fuzzer_seed_corpus.zip compat/*.cdata\n\n# Copy the fuzzer executables, zip-ed corpora, and dictionary files to $OUT\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' $OUT ';'\n"
    },
    "c-blosc2": {
        "name": "c-blosc2",
        "language": "c++",
        "homepage": "https://github.com/Blosc/c-blosc2",
        "main_repo": "https://github.com/Blosc/c-blosc2.git",
        "primary_contact": "blosc.oss.fuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/Blosc/c-blosc2\"\nlanguage: c++\nprimary_contact: \"blosc.oss.fuzz@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/Blosc/c-blosc2.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build project\nexport LDSHARED=lld\n\ncmake . -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n        -DBUILD_FUZZERS=ON -DBUILD_TESTS=OFF -DBUILD_BENCHMARKS=OFF \\\n        -DBUILD_EXAMPLES=OFF -DBUILD_STATIC=ON -DBUILD_SHARED=OFF\nmake clean\nmake -j$(nproc)\n\n# Package seed corpus\nzip -j $OUT/decompress_chunk_fuzzer_seed_corpus.zip compat/*.cdata\nzip -j $OUT/decompress_frame_fuzzer_seed_corpus.zip tests/fuzz/corpus/*\n\n# Copy the fuzzer executables, zip-ed corpora, and dictionary files to $OUT\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' $OUT ';'\n"
    },
    "cachetools": {
        "name": "cachetools",
        "language": "python",
        "homepage": "https://github.com/tkem/cachetools/",
        "main_repo": "https://github.com/tkem/cachetools/",
        "primary_contact": null,
        "vendor_ccs": [
            "sean@compactcloud.co.uk"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/tkem/cachetools/\nlanguage: python\nmain_repo: https://github.com/tkem/cachetools/\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- sean@compactcloud.co.uk\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "caddy": {
        "name": "caddy",
        "language": "go",
        "homepage": "https://caddyserver.com/",
        "main_repo": "https://github.com/caddyserver/caddy.git",
        "primary_contact": "msaa1990@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://caddyserver.com/\"\nlanguage: go\nprimary_contact: \"msaa1990@gmail.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/caddyserver/caddy.git\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# We move the caddy folder in here rather than the Dockerfile to make CI work.\n# See here for the failure that triggered this: https://github.com/caddyserver/caddy/pull/4449\nmkdir -p $GOPATH/src/github.com/caddyserver/caddy/\nmv $SRC/caddy $GOPATH/src/github.com/caddyserver/caddy/v2\ncd \"$GOPATH\"/src/github.com/caddyserver/caddy/v2\n\nfind . -name '*_fuzz.go' | while read -r target\ndo\n# Arguments are :\n#     path of the package with the fuzz target\n#     name of the fuzz function\n#     name of the fuzzer to be built\n#     optional tag to be used by go build and such\n\n    fuzzed_func=$(grep -o \"Fuzz[a-zA-Z]\\+\" \"$target\")\n    fuzzer_name=$(echo \"$fuzzed_func\" | sed -E 's/([A-Z])/-\\L\\1/g' | sed 's/^-//')\n    # find the relative directory and remove the first `.` (`./` is removed for root)\n    target_dir=$(dirname \"$target\"); target_dir=\"${target_dir//.}\";\n    target_corpus_name=\"${fuzzer_name}_seed_corpus.zip\"\n\n    curl -s -f -O \"https://raw.githubusercontent.com/caddyserver/caddy/fuzz-seed-corpus/${target_corpus_name}\" || true\n    compile_go_fuzzer github.com/caddyserver/caddy/v2\"$target_dir\" \"$fuzzed_func\" \"$fuzzer_name\" gofuzz\ndone\n"
    },
    "caffeine": {
        "name": "caffeine",
        "language": "jvm",
        "homepage": "https://github.com/ben-manes/caffeine",
        "main_repo": "https://github.com/ben-manes/caffeine.git",
        "primary_contact": "ben.manes@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ben-manes/caffeine\"\nlanguage: jvm\nmain_repo: \"https://github.com/ben-manes/caffeine.git\"\nprimary_contact: \"ben.manes@gmail.com\"\nauto_ccs:\n  - \"cpovirk@google.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nALL_JARS=\"\"\n\npushd \"${SRC}/caffeine\"\n  ./gradlew --no-daemon caffeine:jar\n  install -v ./caffeine/build/libs/caffeine-*-SNAPSHOT.jar \"$OUT/caffeine.jar\"\n  ALL_JARS=\"${ALL_JARS} caffeine.jar\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac --release 11 -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "cairo": {
        "name": "cairo",
        "language": "c",
        "homepage": "https://gitlab.freedesktop.org/cairo/cairo",
        "main_repo": "https://gitlab.freedesktop.org/cairo/cairo.git",
        "primary_contact": "security-tps@google.com",
        "vendor_ccs": [
            "jkew@mozilla.com",
            "jmuizelaar@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://gitlab.freedesktop.org/cairo/cairo\nlanguage: c\nprimary_contact: security-tps@google.com\nauto_ccs:\n  - \"psychon@znc.in\"\nsanitizers:\n  - address\n  - undefined\nvendor_ccs:\n  - \"jkew@mozilla.com\"\n  - \"jmuizelaar@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nview_restrictions: none\nmain_repo: 'https://gitlab.freedesktop.org/cairo/cairo.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nPREFIX=$WORK/prefix\nmkdir -p $PREFIX\n\nexport PKG_CONFIG=\"`which pkg-config` --static\"\nexport PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig\nexport PATH=$PREFIX/bin:$PATH\n\nBUILD=$WORK/build\n\nrm -rf $WORK/*\nrm -rf $BUILD\nmkdir -p $BUILD\n\n# Build glib\npushd $SRC/glib/\nmeson \\\n    setup \\\n    --prefix=$PREFIX \\\n    --libdir=lib \\\n    --default-library=static \\\n    -Db_lundef=false \\\n    -Doss_fuzz=enabled \\\n    -Dlibmount=disabled \\\n    _builddir\nninja -C _builddir\nninja -C _builddir install\npopd\n\npushd $SRC/freetype2\n./autogen.sh\n./configure --prefix=\"$PREFIX\" --disable-shared PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\"\nmake -j$(nproc)\nmake install\n\n# Build cairo\npushd $SRC/cairo\nCFLAGS=\"-DDEBUG_SVG_RENDER $CFLAGS\" meson \\\n    setup \\\n    --prefix=$PREFIX \\\n    --libdir=lib \\\n    --default-library=static \\\n    _builddir\nninja -C _builddir\nninja -C _builddir install\npopd\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nif [ ! -f \"${OUT}/cairo_seed_corpus.zip\" ]; then\n  echo \"missing seed corpus\"\n  exit 1\nfi\n\nif [ ! -f \"${OUT}/cairo.dict\" ]; then\n  echo \"missing dictionary\"\n  exit 1\nfi\n\nPREDEPS_LDFLAGS=\"-Wl,-Bdynamic -ldl -lm -lc -pthread -lrt -lpthread\"\nDEPS=\"gmodule-2.0 glib-2.0 gio-2.0 gobject-2.0 freetype2 cairo cairo-gobject\"\nBUILD_CFLAGS=\"$CFLAGS `pkg-config --static --cflags $DEPS`\"\nBUILD_LDFLAGS=\"-Wl,-static `pkg-config --static --libs $DEPS`\"\n\nfuzzers=$(find $SRC/fuzz/ -name \"*_fuzzer.c\")\nfor f in $fuzzers ; do\n  fuzzer_name=$(basename $f .c)\n  $CC $CFLAGS $BUILD_CFLAGS \\\n    -c $f -o $WORK/${fuzzer_name}.o\n  $CXX $CXXFLAGS \\\n    $WORK/${fuzzer_name}.o -o $OUT/${fuzzer_name} \\\n    $PREDEPS_LDFLAGS \\\n    $BUILD_LDFLAGS \\\n    $LIB_FUZZING_ENGINE \\\n    -Wl,-Bdynamic\n  cd $OUT; ln -sf cairo_seed_corpus.zip ${fuzzer_name}_seed_corpus.zip\n  cd $OUT; ln -sf cairo.dict ${fuzzer_name}.dict\ndone\n\n# Fuzzers with non-PNG dict/seed corpus.\nfor f in $SRC/cairo/test/svg/fuzzer/svg-render-fuzzer.c ; do\n  fuzzer_name=$(basename $f .c)\n  $CC $CFLAGS $BUILD_CFLAGS \\\n    -c $f -o $WORK/${fuzzer_name}.o\n  $CXX $CXXFLAGS \\\n    $WORK/${fuzzer_name}.o -o $OUT/${fuzzer_name} \\\n    $PREDEPS_LDFLAGS \\\n    $BUILD_LDFLAGS \\\n    $LIB_FUZZING_ENGINE \\\n    -Wl,-Bdynamic\ndone\n"
    },
    "calcite-avatica": {
        "name": "calcite-avatica",
        "language": "jvm",
        "homepage": "https://github.com/apache/calcite-avatica",
        "main_repo": "https://github.com/apache/calcite-avatica",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/apache/calcite-avatica\nmain_repo: https://github.com/apache/calcite-avatica\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n\n# Gradle build with gradle wrapper\nrm -rf $HOME/.gradle/caches/\n./gradlew clean build shadowJar -x test\n./gradlew --stop\n\nCURRENT_VERSION=$(./gradlew properties | grep ^version: | cut -d\" \" -f2)\ncp \"./shaded/core/build/libs/avatica-$CURRENT_VERSION-shadow.jar\" $OUT/avatica.jar\nALL_JARS=\"avatica.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "calcite": {
        "name": "calcite",
        "language": "jvm",
        "homepage": "https://calcite.apache.org/",
        "main_repo": "https://github.com/apache/calcite/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://calcite.apache.org/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/apache/calcite/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=calcite\nPROJECT_GROUP_ID=org.apache.calcite\nPROJECT_ARTIFACT_ID=calcite\nMAIN_REPOSITORY=https://github.com/apache/calcite/\n\nGRADLE_ARGS=\"-x test -x javadoc\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  # set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && ./gradlew publishToMavenLocal $GRADLE_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  pushd $PROJECT\n    export CALCITE_VERSION=$(./gradlew properties --no-daemon --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\n  popd\n\n  #install\n  (cd $PROJECT && ./gradlew publishToMavenLocal $GRADLE_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent/fuzz-targets -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "canvg": {
        "name": "canvg",
        "language": "javascript",
        "homepage": "https://canvg.js.org/",
        "main_repo": "https://github.com/canvg/canvg",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://canvg.js.org/\nlanguage: javascript\nmain_repo: https://github.com/canvg/canvg\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# We sadly need some updated dependencies to build canvg\npatch package.json <package.patch\n\n# Install dependencies.\nnpm install -g @babel/cli\nnpm install --save-dev @babel/core \\\n\t@babel/node \\\n\t@babel/plugin-transform-modules-commonjs \\\n\t@babel/plugin-transform-typescript \\\n\t@babel/preset-env \\\n\t@babel/preset-typescript \\\n\t@jazzer.js/core \\\n\tcanvas \\\n\txmldom \\\n\tnode-fetch-commonjs \\\n\ttypescript \\\n\t@types/node\n\n# Build the project.\nnpm i\n# FIXME: This fails at some point but the build succeeds to a point\n# that we can use the fuzzer. So we ignore the error for now.\nnpm run build || true\n\nfunction change_type_to_commonjs() {\n\t# Find all package.json files inside the node_modules directory\n\tfind \"$1\" -name \"package.json\" -type f | while read -r package_file; do\n\t\t# Check if the file contains the \"type\" field\n\t\tif grep -q '\"type\": \"module\"' \"$package_file\"; then\n\t\t\t# Replace \"type\": \"module\" with \"type\": \"commonjs\"\n\t\t\tsed -i 's/\"type\": \"module\"/\"type\": \"commonjs\"/' \"$package_file\"\n\t\t\techo \"Updated $package_file\"\n\t\tfi\n\tdone\n}\n\nfunction transform_dir_into_commonjs() {\n\tbabel \"$1\" --keep-file-extension -D -d \"$1\"_commonjs\n\trm -r \"$1\"\n\tmv \"$1\"_commonjs \"$1\"\n}\n\nfunction remove_dev_dependencies() {\n\tpackage_json=$(cat package.json)\n\n\t# Remove the \"devDependencies\" item from package.json\n\tnew_package_json=$(echo \"$package_json\" | jq 'del(.devDependencies)')\n\n\t# Overwrite the package.json file with the updated content\n\techo \"$new_package_json\" >package.json\n\n}\n\ntransform_dir_into_commonjs \"$SRC/canvg/src\"\ntransform_dir_into_commonjs \"$SRC/canvg/dist\"\nchange_type_to_commonjs \"$SRC/canvg\"\n\n# Build Fuzzers.\ncompile_javascript_fuzzer canvg fuzz.js -i canvg\n"
    },
    "capnproto": {
        "name": "capnproto",
        "language": "c++",
        "homepage": "https://capnproto.org",
        "main_repo": "https://github.com/capnproto/capnproto",
        "primary_contact": "security@sandstorm.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://capnproto.org\"\nlanguage: c++\nprimary_contact: \"security@sandstorm.io\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\n  - \"kenton@cloudflare.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/capnproto/capnproto'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\ncd c++\nautoreconf -i\n./configure --disable-shared\nmake -j$(nproc)\nmake -j$(nproc) capnp-llvm-fuzzer-testcase\ncp *fuzzer* $OUT/\n"
    },
    "capstone": {
        "name": "capstone",
        "language": "c++",
        "homepage": "https://www.capstone-engine.org",
        "main_repo": "https://github.com/capstone-engine/capstone.git",
        "primary_contact": "capstone.engine@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.capstone-engine.org\"\nlanguage: c++\nprimary_contact: \"capstone.engine@gmail.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\n  - \"stalkr@stalkr.net\"\n  - \"kabeor00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/capstone-engine/capstone.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#add next branch\nfor branch in v5 next\ndo\n    cd $SRC/capstone$branch\n    # build project\n    mkdir build\n    # does not seem to work in source directory\n    # + make.sh overwrites CFLAGS\n    cd build\n    cmake -DCAPSTONE_BUILD_SHARED=0 ..\n    make\n\n    cd $SRC/capstone$branch/bindings/python\n    #better debug info\n    sed -i -e 's/#print/print/' capstone/__init__.py\n    (\n    export CFLAGS=\"\"\n    export AFL_NOOPT=1\n    python3 -m pip install .\n    )\n    cd $SRC/capstone$branch/suite\n    mkdir fuzz/corpus\n    find MC/ -name *.cs | ./test_corpus3.py\n    cd fuzz\n    zip -r fuzz_disasm\"$branch\"_seed_corpus.zip corpus/\n    cp fuzz_disasm\"$branch\"_seed_corpus.zip $OUT/\n\n    # export other associated stuff\n    cp fuzz_disasm.options $OUT/fuzz_disasm$branch.options\n\n    cd ../../build\n    # build fuzz target\n    FUZZO=CMakeFiles/fuzz_disasm.dir/suite/fuzz/fuzz_disasm.c.o\n    if [ -f CMakeFiles/fuzz_disasm.dir/suite/fuzz/platform.c.o ]; then\n        FUZZO=\"$FUZZO CMakeFiles/fuzz_disasm.dir/suite/fuzz/platform.c.o\"\n    fi\n    $CXX $CXXFLAGS $FUZZO -o $OUT/fuzz_disasm$branch libcapstone.a $LIB_FUZZING_ENGINE\n\n    python3 -m pip uninstall -y capstone\ndone\n"
    },
    "cascadia": {
        "name": "cascadia",
        "language": "go",
        "homepage": "https://github.com/andybalholm/cascadia",
        "main_repo": "https://github.com/andybalholm/cascadia",
        "primary_contact": "cascadia@balholm.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/andybalholm/cascadia\"\nprimary_contact: \"cascadia@balholm.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nmain_repo: 'https://github.com/andybalholm/cascadia'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\ncompile_go_fuzzer github.com/andybalholm/cascadia/fuzz Fuzz fuzz\n"
    },
    "casync": {
        "name": "casync",
        "language": "c++",
        "homepage": "https://github.com/casync/casync",
        "main_repo": "https://github.com/systemd/casync",
        "primary_contact": "lennart@poettering.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/casync/casync\"\nlanguage: c++\nprimary_contact: \"lennart@poettering.net\"\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nauto_ccs:\n  - zbyszek@in.waw.pl\n  - poettering@gmail.com\n  - fsumsal@redhat.com\nmain_repo: 'https://github.com/systemd/casync'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Red Hat Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ntools/oss-fuzz.sh\n"
    },
    "catapult": {
        "name": "catapult",
        "language": null,
        "homepage": "https://github.com/nemtech/catapult-server",
        "main_repo": "https://github.com/nemtech/catapult-server",
        "primary_contact": "wayonb@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/nemtech/catapult-server\"\nmain_repo: \"https://github.com/nemtech/catapult-server\"\nprimary_contact: \"wayonb@gmail.com\"\nauto_ccs:\n  - \"gimer.outer.space@gmail.com\"\n  - \"jaguar5pow4@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\n",
        "build_sh": null
    },
    "cbor-java": {
        "name": "cbor-java",
        "language": "jvm",
        "homepage": "https://android.googlesource.com/platform/external/cbor-java/+/refs/heads/master",
        "main_repo": "https://android.googlesource.com/platform/external/cbor-java/+/refs/heads/master",
        "primary_contact": "constantin.rack@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://android.googlesource.com/platform/external/cbor-java/+/refs/heads/master\"\nlanguage: jvm\nprimary_contact: \"constantin.rack@gmail.com\"\nmain_repo: \"https://android.googlesource.com/platform/external/cbor-java/+/refs/heads/master\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=11 -Djavac.target.version=11 -X\"\n$MVN package $MAVEN_ARGS\n\nfind . -name \"cbor-0.8.jar\" -exec cp {} $OUT/cbor.jar \\;\n\nALL_JARS=\"cbor.jar\"\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\nfor fuzzer in $(find $SRC -name 'Fuzz*.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "cbor2": {
        "name": "cbor2",
        "language": "python",
        "homepage": "https://github.com/agronholm/cbor2",
        "main_repo": "https://github.com/agronholm/cbor2",
        "primary_contact": "alex.gronholm@nextday.fi",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/agronholm/cbor2\"\nmain_repo: \"https://github.com/agronholm/cbor2\"\nlanguage: python\nprimary_contact: \"alex.gronholm@nextday.fi\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n",
        "build_sh": "# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Ensure C extension gets built\nexport CBOR2_BUILD_C_EXTENSION=1\n\n# Build and install project (using current CFLAGS, CXXFLAGS). This is required\n# for projects with C extensions so that they're built with the proper flags.\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name '*_fuzzer.py'); do\n    compile_python_fuzzer $fuzzer\ndone\n"
    },
    "cctz": {
        "name": "cctz",
        "language": "c++",
        "homepage": "https://github.com/google/cctz",
        "main_repo": "https://github.com/google/cctz",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: https://github.com/google/cctz\nmain_repo: https://github.com/google/cctz\nlanguage: c++\nvendor_ccs:\n- david@adalogics.com\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nmkdir build && cd build\ncmake -DBUILD_TESTING=OFF -DBUILD_BENCHMARK=OFF ../\nmake\n\n# Compile fuzzers\ncp $SRC/fuzz_* .\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./fuzz_cctz.cc ./libcctz.a  -I../include/ -o $OUT/fuzz_cctz\n"
    },
    "cel-cpp": {
        "name": "cel-cpp",
        "language": "c++",
        "homepage": "https://opensource.google/projects/cel",
        "main_repo": "https://github.com/google/cel-cpp",
        "primary_contact": "kyessenov@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://opensource.google/projects/cel\"\nlanguage: c++\nprimary_contact: \"kyessenov@gmail.com\"\nauto_ccs :\n- \"tswadell@google.com\"\n- \"p.antoine@catenacyber.fr\"\n\nsanitizers:\n- address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n# - memory\nmain_repo: 'https://github.com/google/cel-cpp'\nfile_github_issue: True\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nexport USE_BAZEL_VERSION=5.4.0\nbazel_build_fuzz_tests\n"
    },
    "cel-go": {
        "name": "cel-go",
        "language": "go",
        "homepage": "https://opensource.google/projects/cel",
        "main_repo": "https://github.com/google/cel-go",
        "primary_contact": "tswadell@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://opensource.google/projects/cel\"\nprimary_contact: \"tswadell@google.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/google/cel-go'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir fuzzlpm\n$SRC/LPM/external.protobuf/bin/protoc --cpp_out=fuzzlpm/ -I$SRC/ $SRC/cel-go-lpm.proto\n\n$CXX $CXXFLAGS -DNDEBUG -c -I fuzzlpm/ -I $SRC/LPM/external.protobuf/include fuzzlpm/cel-go-lpm.pb.cc\n$CXX $CXXFLAGS -DNDEBUG -c -I. -I ../libprotobuf-mutator/ -I $SRC/LPM/external.protobuf/include $SRC/go-lpm.cc\n\n(\ncd $SRC/go114-fuzz-build\nsed -i -e 's/LLVMFuzzerTestOneInput/LPMFuzzerTestOneInput/' main.go\ngo build\n)\n\n$SRC/LPM/external.protobuf/bin/protoc --go_out=fuzzlpm/ -I$SRC/ $SRC/cel-go-lpm.proto\ncp fuzzlpm/github.com/google/cel-go/cel/*.pb.go cel/\n\n$SRC/go114-fuzz-build/go114-fuzz-build -func FuzzEval -o fuzz_lpm.a github.com/google/cel-go/cel\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE cel-go-lpm.pb.o go-lpm.o \\\n  fuzz_lpm.a \\\n  $SRC/LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n  $SRC/LPM/src/libprotobuf-mutator.a \\\n  -Wl,--start-group $SRC/LPM/external.protobuf/lib/lib*.a -Wl,--end-group \\\n  -o $OUT/fuzz_lpm\n\ncompile_go_fuzzer github.com/google/cel-go/cel FuzzCompile fuzz_compile\n"
    },
    "cert-manager": {
        "name": "cert-manager",
        "language": "go",
        "homepage": "https://cert-manager.io",
        "main_repo": "https://github.com/cert-manager/cert-manager",
        "primary_contact": "cert-manager-security@googlegroups.com",
        "vendor_ccs": [
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://cert-manager.io\"\n# Send reports to the cert-manager-security distribution list.\n# - https://cert-manager.io/docs/contributing/security/\n# - https://github.com/cert-manager/community/blob/main/SECURITY.md#reporting-process\nprimary_contact: \"cert-manager-security@googlegroups.com\"\n# Allow people listed in maintainers.csv file to sign in to https://oss-fuzz.com/\n# - https://github.com/cert-manager/community/blob/main/maintainers.csv\nauto_ccs:\n  - \"ashley.davis@venafi.com\" # Ashley Davis,sgtcodfish,Venafi\n  - \"i@am.so-aweso.me\"        # Jake Sanders,jakexks,G-Research\n  - \"irbekrm@gmail.com\"       # Irbe Krumina,irbekrm,Tailscale\n  - \"jmunnelly@apple.com\"     # James Munnelly,munnerz,Apple\n  - \"mael.valais@gmail.com\"   # Ma\u00ebl Valais,maelvls,Venafi\n  - \"me@joshvanl.dev\"         # Josh van Leeuwen,joshvanl,Diagrid\n  - \"richard.wall@venafi.com\" # Richard Wall,wallrj,Venafi\n  - \"tim.ramlot@venafi.com\"   # Tim Ramlot,inteon,Venafi\nvendor_ccs :\n  - \"adam@adalogics.com\"      # Adam Korczynski,AdamKorcz,ADALogics\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/cert-manager/cert-manager'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/pki_fuzzer.go $SRC/cert-manager/pkg/util/pki/\n\n# These test files break the build, so removing; the fuzz tests don't need them\nrm $SRC/cert-manager/pkg/controller/certificates/trigger/trigger_controller_test.go\nrm $SRC/cert-manager/pkg/controller/certificates/revisionmanager/revisionmanager_controller_test.go\n\ncd $SRC/go-118-fuzz-build\ngo build .\nmv go-118-fuzz-build /root/go/bin/\n\ncd $SRC/cert-manager\nmkdir $SRC/cert-manager/pkg/fuzz\nprintf \"package fuzz \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./pkg/fuzz/fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/internal/webhook/admission/certificaterequest/approval FuzzValidate FuzzValidate_approval\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificates/trigger FuzzProcessItem FuzzProcessItem_trigger\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificates/revisionmanager FuzzProcessItem FuzzProcessItem_revisionmanager\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificates/issuing FuzzProcessItem FuzzProcessItem_issuing\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificates/readiness FuzzProcessItem FuzzProcessItem_readiness\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificates/keymanager FuzzProcessItem FuzzProcessItem_keymanager\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificates/requestmanager FuzzProcessItem FuzzProcessItem_requestmanager\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificaterequests/vault FuzzVaultCRController FuzzVaultCRController\ncompile_native_go_fuzzer github.com/cert-manager/cert-manager/pkg/controller/certificaterequests/venafi FuzzVenafiCRController FuzzVenafiCRController\ncompile_go_fuzzer github.com/cert-manager/cert-manager/pkg/util/pki FuzzUnmarshalSubjectStringToRDNSequence FuzzUnmarshalSubjectStringToRDNSequence\ncompile_go_fuzzer github.com/cert-manager/cert-manager/pkg/util/pki FuzzDecodePrivateKeyBytes FuzzDecodePrivateKeyBytes\n\n"
    },
    "cfengine": {
        "name": "cfengine",
        "language": "c++",
        "homepage": "https://github.com/cfengine/core",
        "main_repo": "https://github.com/cfengine/core",
        "primary_contact": "vratislav.podzimek@northern.tech",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/cfengine/core\"\nmain_repo: \"https://github.com/cfengine/core\"\nlanguage: c++\nprimary_contact: \"vratislav.podzimek@northern.tech\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n  - memory\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh\n./configure\nmake V=1 -j$(nproc)\n\ncd libpromises\nmv $SRC/string_fuzzer.c .\nfind . -name \"*.o\" -exec ar rcs fuzz_lib.a {} \\;\n$CC $CFLAGS -I./ -c string_fuzzer.c -o string_fuzzer.o\n$CC $CXXFLAGS $LIB_FUZZING_ENGINE string_fuzzer.o \\\n    -o $OUT/string_fuzzer fuzz_lib.a \\\n    ../libntech/libutils/.libs/libutils.a\n"
    },
    "cffi": {
        "name": "cffi",
        "language": "python",
        "homepage": "https://foss.heptapod.net/pypy/cffi",
        "main_repo": "https://foss.heptapod.net/pypy/cffi",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://foss.heptapod.net/pypy/cffi\nlanguage: python\nmain_repo: https://foss.heptapod.net/pypy/cffi\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "cgif": {
        "name": "cgif",
        "language": "c",
        "homepage": "https://github.com/dloebl/cgif",
        "main_repo": "https://github.com/dloebl/cgif.git",
        "primary_contact": "dloebl.2000@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/dloebl/cgif\"\nlanguage: c\nprimary_contact: \"dloebl.2000@gmail.com\"\nauto_ccs:\n  - \"matthias.loebl@rwth-aachen.de\"\nsanitizers:\n- address\n- undefined\n- memory\narchitectures:\n  - x86_64\n  - i386\nmain_repo: \"https://github.com/dloebl/cgif.git\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build and install cgif\nmeson setup -Dfuzzer=true --prefix=$WORK --libdir=lib --default-library=static build\nmeson install -C build\n# run tests:\n# This is going to generate the seed corpus from all the tests\nmeson test -C build\n\ncp \"build/fuzz/cgif_fuzzer_seed_corpus.zip\" $OUT/.\ncp \"build/fuzz/cgif_file_fuzzer_seed_corpus.zip\" $OUT/.\n\n# build cgif's fuzz targets\n$CXX $CXXFLAGS -o \"$OUT/cgif_fuzzer\" -I\"$WORK/include\" \\\n  $LIB_FUZZING_ENGINE fuzz/cgif_fuzzer.c \"$WORK/lib/libcgif.a\"\n\n$CXX $CXXFLAGS -o \"$OUT/cgif_file_fuzzer\" -I\"$WORK/include\" \\\n  $LIB_FUZZING_ENGINE fuzz/cgif_file_fuzzer.c \"$WORK/lib/libcgif.a\"\n"
    },
    "cglib": {
        "name": "cglib",
        "language": "jvm",
        "homepage": "https://github.com/cglib/cglib/wiki",
        "main_repo": "https://github.com/cglib/cglib",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/cglib/cglib/wiki\"\nlanguage: jvm\nmain_repo: \"https://github.com/cglib/cglib\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#\n# cglib uses different variables for the java version.\n#\nMVN_FLAGS=\"-Dmaven.compiler.source=15 -Dmaven.compiler.target=15 -DskipTests  -Djava.version.source=15 -Djava.version.target=15 -Djavac.target=15\"\nALL_JARS=\"\"\n\n# install the build servers' jazzer-api into the maven repository\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/cglib\"\n\t${MVN} package ${MVN_FLAGS}\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd ${SRC}\n\t${MVN} package -DcglibVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/cglib-fuzzer-${CURRENT_VERSION}.jar ${OUT}/cglib-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} cglib-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n  stripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n  # the .java was stripped by sed\n  if (echo ${stripped_path} | grep \".java$\"); then\n\tcontinue;\n  fi\n\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  fuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\n\nexport JAVA_HOME=$JAVA_15_HOME\nexport JVM_LD_LIBRARY_PATH=$JAVA_HOME/lib/server\nexport PATH=$JAVA_HOME/bin:$PATH\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n  chmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "chardet": {
        "name": "chardet",
        "language": "python",
        "homepage": "https://github.com/erikrose/chardet",
        "main_repo": "https://github.com/erikrose/chardet",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/erikrose/chardet\nlanguage: python\nmain_repo: https://github.com/erikrose/chardet\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "charset_normalizer": {
        "name": "charset_normalizer",
        "language": "python",
        "homepage": "https://github.com/Ousret/charset_normalizer",
        "main_repo": "https://github.com/Ousret/charset_normalizer",
        "primary_contact": "ahmed.tahri@cloudnursery.dev",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/Ousret/charset_normalizer\nlanguage: python\nmain_repo: https://github.com/Ousret/charset_normalizer\nprimary_contact: ahmed.tahri@cloudnursery.dev\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Enable pysecsan\nexport ENABLE_PYSECSAN=\"1\"\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "checker-framework": {
        "name": "checker-framework",
        "language": "jvm",
        "homepage": "https://github.com/typetools/checker-framework",
        "main_repo": "git@github.com:typetools/checker-framework.git",
        "primary_contact": "michael.ernst@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/typetools/checker-framework\"\nlanguage: jvm\nmain_repo: \"git@github.com:typetools/checker-framework.git\"\nprimary_contact: \"michael.ernst@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\nrun_tests: False",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n#mv $SRC/{*.zip,*.dict} $OUT\n\nln -s $MVN /bin/mvn\n\nexport JAVA_HOME=\"$OUT/open-jdk-17\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\nCURRENT_VERSION=$(./gradlew properties --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\n\n./gradlew build -x test -x :checker:javadoc -x :framework-test:spotlessJavaCheck\n\ncp \"./checker/build/libs/checker-$CURRENT_VERSION-all.jar\" \"$OUT/checker.jar\"\ncp \"./framework/build/libs/framework-$CURRENT_VERSION.jar\" \"$OUT/checker-framework.jar\"\n\nALL_JARS=\"checker.jar checker-framework.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer --release 15\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--instrumentation_excludes=com.fasterxml.jackson.core.** \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--disabled_hooks=\\\"com.code_intelligence.jazzer.sanitizers.RegexInjection\\\"\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "checkstyle": {
        "name": "checkstyle",
        "language": "jvm",
        "homepage": "https://github.com/checkstyle/checkstyle",
        "main_repo": "https://github.com/checkstyle/checkstyle",
        "primary_contact": null,
        "vendor_ccs": [
            "arthur.chan@adalogics.com",
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/checkstyle/checkstyle\nlanguage: jvm\nmain_repo: https://github.com/checkstyle/checkstyle\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- arthur.chan@adalogics.com\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\nexport TARGET_PACKAGE_PREFIX=\"com.puppycrawl.tools.checkstyle.\"\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15 --update-snapshots\"\n$MVN clean package $MAVEN_ARGS\n\nBUILD_CLASSPATH=\nRUNTIME_CLASSPATH=\n\nfor JARFILE in $(find ./ -name *.jar)\ndo\n  cp $JARFILE $OUT/\n  BUILD_CLASSPATH=$BUILD_CLASSPATH$OUT/$(basename $JARFILE):\n  RUNTIME_CLASSPATH=$RUNTIME_CLASSPATH\\$this_dir/$(basename $JARFILE):\ndone\n\n# Build corpus with valid java files\nmkdir $SRC/tmp-corpus\nfind $SRC -name \"*.java\" -exec cp {} $SRC/tmp-corpus/ \\;\nzip -j $OUT/CheckstyleFuzzer_seed_corpus.zip $SRC/tmp-corpus/*\n\n# Retrieve apache-common-lang3 library\n# This library provides method to translate primitive type arrays to\n# their respective class object arrays to avoid compilation error.\nwget -P $OUT/ https://repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar\nwget -P $OUT/ https://repo1.maven.org/maven2/org/antlr/antlr4-runtime/4.11.1/antlr4-runtime-4.11.1.jar\n\nBUILD_CLASSPATH=$BUILD_CLASSPATH:$JAZZER_API_PATH:$OUT/commons-lang3-3.12.0.jar:$OUT/antlr4-runtime-4.11.1.jar\nRUNTIME_CLASSPATH=$RUNTIME_CLASSPATH:\\$this_dir/commons-lang3-3.12.0.jar:\\$this_dir/antlr4-runtime-4.11.1.jar:\\$this_dir\n\nfor fuzzer in $(ls $SRC/*Fuzzer.java)\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n  \\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n  --cp=$RUNTIME_CLASSPATH \\\n  --target_class=$fuzzer_basename \\\n  --jvm_args=\\\"\\$mem_settings\\\" \\\n  \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "chrono": {
        "name": "chrono",
        "language": "rust",
        "homepage": "https://github.com/chronotope/chrono",
        "main_repo": "https://github.com/chronotope/chrono.git",
        "primary_contact": "dirkjan@ochtman.nl",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/chronotope/chrono\"\nmain_repo: \"https://github.com/chronotope/chrono.git\"\nlanguage: rust\nprimary_contact: \"dirkjan@ochtman.nl\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Note: This project creates Rust fuzz targets exclusively\ncd $SRC/chrono\ncargo fuzz build -O\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_reader $OUT/\n"
    },
    "cifuzz-example": {
        "name": "cifuzz-example",
        "language": "c++",
        "homepage": null,
        "main_repo": "https://github.com/jonathanmetzman/cifuzz-example.git",
        "primary_contact": "fake@example.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "language: c++\nsanitizers:\n  - address\n\ndisabled: true\n\nprimary_contact:\n  fake@example.com\nmain_repo: 'https://github.com/jonathanmetzman/cifuzz-example.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmake clean  # Not strictly necessary, since we are building in a fresh dir.\nmake -j$(nproc) all    # Build the fuzz targets.\n# make -j$(nproc) check  # Sanity check, not strictly required, but nice to have.\n\n# Copy the fuzzer executables, zip-ed corpora, option and dictionary files to $OUT\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'     # If you have dictionaries.\nfind . -name '*_fuzzer.options' -exec cp -v '{}' $OUT ';'  # If you have custom options.\nfind . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' $OUT ';' # If you have seed corpora (you better have them!)\n"
    },
    "cilium": {
        "name": "cilium",
        "language": "go",
        "homepage": "https://cilium.io",
        "main_repo": "https://github.com/cilium/cilium.git",
        "primary_contact": "security@cilium.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://cilium.io\"\nlanguage: go\nprimary_contact: \"security@cilium.io\"\nauto_ccs:\n- \"andre@isovalent.com\"\n- \"joe@isovalent.com\"\n- \"natalia@isovalent.com\"\n- \"robin@isovalent.com\"\n- \"adam@adalogics.com\"\n- \"david@adalogics.com\"\n- \"liz@isovalent.com\"\n- \"chris@isovalent.com\"\nmain_repo: \"https://github.com/cilium/cilium.git\"\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n$SRC/cilium/test/fuzzing/oss-fuzz-build.sh\n$SRC/cncf-fuzzing/projects/cilium/build.sh\n\nzip \"$OUT/fuzz_seed_corpus.zip\" \"$SRC\"/go-fuzz-corpus/json/corpus/*\n"
    },
    "circl": {
        "name": "circl",
        "language": "c++",
        "homepage": "https://github.com/cloudflare/circl",
        "main_repo": "https://github.com/cloudflare/circl.git",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/cloudflare/circl\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nmain_repo: \"https://github.com/cloudflare/circl.git\"\nauto_ccs:\n  - \"armfazh@cloudflare.com\"\n  - \"bas@cloudflare.com\"\nsanitizers:\n - address\narchitectures:\n - x86_64\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NO_OPENSSL -DCRYPTOFUZZ_CIRCL\"\nexport LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\"\nexport LINK_FLAGS=\"\"\n\n# Install Boost headers\ncd $SRC/\ntar jxf boost_1_84_0.tar.bz2\ncd boost_1_84_0/\nCFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\nCFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\ncp -R boost/ /usr/include/\n\n# Configure Cryptofuzz\ncd $SRC/cryptofuzz/\npython gen_repository.py\necho -n '\"' >>extra_options.h\necho -n \"--force-module=circl \" >>extra_options.h\necho -n \"--curves=secp384r1,bls12_381 \" >>extra_options.h\necho -n \"--operations=\" >>extra_options.h\necho -n \"ECC_PrivateToPublic,\" >>extra_options.h\necho -n \"ECC_Point_Add,\" >>extra_options.h\necho -n \"ECC_Point_Mul,\" >>extra_options.h\necho -n \"ECC_Point_Dbl,\" >>extra_options.h\necho -n \"BLS_PrivateToPublic,\" >>extra_options.h\necho -n \"BLS_G1_Add,\" >>extra_options.h\necho -n \"BLS_G1_Mul,\" >>extra_options.h\necho -n \"BLS_G1_Neg,\" >>extra_options.h\necho -n \"BLS_G1_IsEq,\" >>extra_options.h\necho -n \"BLS_IsG1OnCurve,\" >>extra_options.h\necho -n \"BLS_HashToG1,\" >>extra_options.h\necho -n \"BLS_PrivateToPublic_G2,\" >>extra_options.h\necho -n \"BLS_G2_Add,\" >>extra_options.h\necho -n \"BLS_G2_Mul,\" >>extra_options.h\necho -n \"BLS_G2_Neg,\" >>extra_options.h\necho -n \"BLS_G2_IsEq,\" >>extra_options.h\necho -n \"BLS_IsG2OnCurve,\" >>extra_options.h\necho -n \"BLS_HashToG2,\" >>extra_options.h\necho -n \"BLS_Compress_G1,\" >>extra_options.h\necho -n \"BLS_Decompress_G1,\" >>extra_options.h\necho -n \"BLS_Pairing,\" >>extra_options.h\necho -n \"BignumCalc_Mod_BLS12_381_P,\" >>extra_options.h\necho -n \"BignumCalc_Mod_BLS12_381_R\" >>extra_options.h\necho -n '\"' >>extra_options.h\n\n# Build Botan\ncd $SRC/botan\nif [[ $CFLAGS != *-m32* ]]\nthen\n    ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\nelse\n    ./configure.py --cpu=x86_32 --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\nfi\nmake -j$(nproc)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN -DCRYPTOFUZZ_BOTAN_IS_ORACLE\"\nexport LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\nexport BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\ncd $SRC/cryptofuzz/modules/botan/\nmake -f Makefile-oracle -j $(nproc)\n\n# Build blst\ncd $SRC/blst/\n./build.sh\nexport BLST_LIBBLST_A_PATH=$(realpath libblst.a)\nexport BLST_INCLUDE_PATH=$(realpath bindings/)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BLST\"\ncd $SRC/cryptofuzz/modules/blst/\nmake -j $(nproc)\n\ncd $SRC/cryptofuzz/modules/circl/\ngo mod init cryptofuzz/circl\ngo mod tidy\nmake -j $(nproc)\n\ncd $SRC/cryptofuzz/\nmake -j $(nproc)\n\ncp cryptofuzz $OUT/\n"
    },
    "civetweb": {
        "name": "civetweb",
        "language": "c",
        "homepage": "https://github.com/civetweb/civetweb",
        "main_repo": "https://github.com/civetweb/civetweb",
        "primary_contact": "bel2125@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/civetweb/civetweb\"\nprimary_contact: \"bel2125@gmail.com\"\nlanguage: c\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\nauto_ccs:\n  - \"xt4ubq@gmail.com\"\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/civetweb/civetweb'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nsed -i 's/CFLAGS += -g -fsanitize=address,fuzzer,undefined/#CFLAGS += -g -fsanitize=address,fuzzer,undefined/' ./Makefile\nexport LDFLAGS=\"${LIB_FUZZING_ENGINE} ${CFLAGS}\"\n\nchmod +x ./fuzztest/build.sh\n./fuzztest/build.sh\nmv civetweb_fuzz* $OUT/\n"
    },
    "cjson": {
        "name": "cjson",
        "language": "c++",
        "homepage": "https://github.com/DaveGamble/cJSON",
        "main_repo": "https://github.com/DaveGamble/cJSON.git",
        "primary_contact": "max@maxbruckner.de",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/DaveGamble/cJSON\"\nlanguage: c++\nprimary_contact: \"max@maxbruckner.de\"\nauto_ccs:\n  - \"randy440088@gmail.com\"\n  - \"wp_scut@163.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/DaveGamble/cJSON.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project\n$SRC/cjson/fuzzing/ossfuzz.sh"
    },
    "clamav": {
        "name": "clamav",
        "language": "c++",
        "homepage": "https://www.clamav.net/",
        "main_repo": "https://github.com/Cisco-Talos/clamav-devel.git",
        "primary_contact": "clamav.fuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.clamav.net/\"\nlanguage: c++\nprimary_contact: \"clamav.fuzz@gmail.com\"\nauto_ccs:\n    - clamav-bugs@external.cisco.com\nsanitizers:\n - address\n - undefined\nfuzzing_engines:\n - libfuzzer\n - afl\nmain_repo: 'https://github.com/Cisco-Talos/clamav-devel.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -ex\nexport GIT_DISCOVERY_ACROSS_FILESYSTEM=1\n\n#\n# Build the library.\n#\nrm -rf ${WORK}/build\nmkdir -p ${WORK}/build\ncd ${WORK}/build\n\n#\n# Run ./configure\n#\nexport CLAMAV_DEPENDENCIES=/mussels/install\ncmake ${SRC}/clamav \\\n    -DENABLE_FUZZ=ON                                                   \\\n    -DHAVE_MMAP=OFF                                                    \\\n    -DJSONC_INCLUDE_DIR=\"$CLAMAV_DEPENDENCIES/include/json-c\"          \\\n    -DJSONC_LIBRARY=\"$CLAMAV_DEPENDENCIES/lib/libjson-c.a\"             \\\n    -DENABLE_JSON_SHARED=OFF                                           \\\n    -DBZIP2_INCLUDE_DIR=\"$CLAMAV_DEPENDENCIES/include\"                 \\\n    -DBZIP2_LIBRARY_RELEASE=\"$CLAMAV_DEPENDENCIES/lib/libbz2.a\"        \\\n    -DOPENSSL_ROOT_DIR=\"$CLAMAV_DEPENDENCIES\"                          \\\n    -DOPENSSL_INCLUDE_DIR=\"$CLAMAV_DEPENDENCIES/include\"               \\\n    -DOPENSSL_CRYPTO_LIBRARY=\"$CLAMAV_DEPENDENCIES/lib/libcrypto.a\"    \\\n    -DOPENSSL_SSL_LIBRARY=\"$CLAMAV_DEPENDENCIES/lib/libssl.a\"          \\\n    -DZLIB_LIBRARY=\"$CLAMAV_DEPENDENCIES/lib/libssl.a\"                 \\\n    -DLIBXML2_INCLUDE_DIR=\"$CLAMAV_DEPENDENCIES/include/libxml2\"       \\\n    -DLIBXML2_LIBRARY=\"$CLAMAV_DEPENDENCIES/lib/libxml2.a\"             \\\n    -DPCRE2_INCLUDE_DIR=\"$CLAMAV_DEPENDENCIES/include\"                 \\\n    -DPCRE2_LIBRARY=\"$CLAMAV_DEPENDENCIES/lib/libpcre2-8.a\"            \\\n    -DZLIB_INCLUDE_DIR=\"$CLAMAV_DEPENDENCIES/include\"                  \\\n    -DZLIB_LIBRARY=\"$CLAMAV_DEPENDENCIES/lib/libz.a\"                   \\\n    -DCMAKE_INSTALL_PREFIX=\"install\"\n\n# Build libclamav and the fuzz targets\nmake -j$(nproc)\ncp ./fuzz/clamav_* ${OUT}/.\n\n#\n# Collect the fuzz corpora.\n#\n\n# `scanfile` & `scanmap`\n# ----------\nmkdir ${WORK}/all-scantype-seeds\ngit clone --depth 1 https://github.com/Cisco-Talos/clamav-fuzz-corpus.git $SRC/clamav-fuzz-corpus\n\nfor type in ARCHIVE MAIL OLE2 PDF HTML PE ELF SWF XMLDOCS HWP3; do\n    # Prepare seed corpus for the type-specific fuzz targets.\n    zip ${OUT}/clamav_scanfile_${type}_fuzzer_seed_corpus.zip ${SRC}/clamav-fuzz-corpus/scantype/${type}/*\n    zip ${OUT}/clamav_scanmap_${type}_fuzzer_seed_corpus.zip ${SRC}/clamav-fuzz-corpus/scantype/${type}/*\n\n    # Prepare dictionary for the type-specific fuzz targets (may not exist for all types).\n    cp ${SRC}/clamav-fuzz-corpus/scantype/${type}.dict ${OUT}/clamav_scanfile_${type}_fuzzer.dict 2>/dev/null || :\n    cp ${SRC}/clamav-fuzz-corpus/scantype/${type}.dict ${OUT}/clamav_scanmap_${type}_fuzzer.dict 2>/dev/null || :\n\n    # Copy seeds for the generic fuzz target.\n    cp ${SRC}/clamav-fuzz-corpus/scantype/${type}/* ${WORK}/all-scantype-seeds/\ndone\n\n# Add weird files\ngit clone --depth=1 https://github.com/corkami/pocs\nfind ./pocs/ -type f -print0 | xargs -0 -I % mv -f % ${WORK}/all-scantype-seeds/\n\n# Prepare seed corpus for the generic fuzz target.\ncp ${SRC}/clamav-fuzz-corpus/scantype/other/* ${WORK}/all-scantype-seeds/\nzip ${OUT}/clamav_scanfile_fuzzer_seed_corpus.zip ${WORK}/all-scantype-seeds/*\nzip ${OUT}/clamav_scanmap_fuzzer_seed_corpus.zip ${WORK}/all-scantype-seeds/*\nrm -r ${WORK}/all-scantype-seeds\n\n# `dbload`\n# --------\nfor type in CDB CFG CRB FP FTM HDB HSB IDB IGN IGN2 LDB MDB MSB NDB PDB WDB YARA; do\n    # Prepare seed corpus for the type-specific fuzz targets.\n    zip ${OUT}/clamav_dbload_${type}_fuzzer_seed_corpus.zip ${SRC}/clamav-fuzz-corpus/database/${type}/*\n\n    # Prepare dictionary for the type-specific fuzz targets (may not exist for all types).\n    cp ${SRC}/clamav-fuzz-corpus/database/${type}.dict ${OUT}/clamav_dbload_${type}_fuzzer.dict 2>/dev/null || :\ndone\n"
    },
    "clib": {
        "name": "clib",
        "language": "c",
        "homepage": "https://github.com/clibs/clib",
        "main_repo": "https://github.com/clibs/clib",
        "primary_contact": "joseph.werle@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/clibs/clib\"\nlanguage: c\nprimary_contact: \"joseph.werle@gmail.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\n  - \"isty001@gmail.com\"\nmain_repo: 'https://github.com/clibs/clib'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd clib\nmake -j$(nproc)\n\nsed 's/int main(int argc/int main2(int argc/g' -i ./src/clib-search.c\nsed 's/int main(int argc/int main2(int argc/g' -i ./src/clib-configure.c\n\nfind . -name \"*.o\" -exec ar rcs fuzz_lib.a {} \\;\n\n$CC $CFLAGS -Wno-unused-function -U__STRICT_ANSI__  \\\n\t-DHAVE_PTHREADS=1 -pthread \\\n\t-c src/common/clib-cache.c src/clib-configure.c \\\n        src/common/clib-settings.c src/common/clib-package.c \\\n        test/fuzzing/fuzz_manifest.c -I./asprintf -I./deps/ \\\n\t-I./deps/asprintf\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_manifest.o \\\n\t-o $OUT/fuzz_manifest  clib-cache.o clib-configure.o clib-settings.o clib-package.o \\\n\t-I./deps/asprintf -I./deps -I./asprintf \\\n\tfuzz_lib.a -L/usr/lib/x86_64-linux-gnu -lcurl\n\necho \"[libfuzzer]\" > $OUT/fuzz_manifest.options\necho \"detect_leaks=0\" >> $OUT/fuzz_manifest.options\n"
    },
    "click": {
        "name": "click",
        "language": "python",
        "homepage": "https://github.com/pallets/click",
        "main_repo": "https://github.com/pallets/click",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pallets/click\nlanguage: python\nmain_repo: https://github.com/pallets/click\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "clickhouse": {
        "name": "clickhouse",
        "language": "c++",
        "homepage": "https://clickhouse.com/",
        "main_repo": "https://github.com/ClickHouse/ClickHouse.git",
        "primary_contact": "security@clickhouse.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://clickhouse.com/\"\nlanguage: c++\nprimary_contact: \"security@clickhouse.com\"\nauto_ccs:\n - \"jakalletti@gmail.com\"\n - \"man2gm@gmail.com\"\n - \"kochetovnicolai@gmail.com\"\n - \"hq.zero.iq@gmail.com\"\n - \"milovidov@clickhouse.com\"\n - \"ivan@clickhouse.com\"\n - \"avogar@clickhouse.com\"\n - \"Nikita.Taranov@clickhouse.com\"\n - \"Antonio@clickhouse.com\"\n - \"Nikolay.Degterinskii@clickhouse.com\"\n - \"sergei@clickhouse.com\"\n - \"tavplubix@clickhouse.com\"\n - \"felixoid@clickhouse.com\"\n - \"n0vik@clickhouse.com\"\n - \"yakov@clickhouse.com\"\n - \"maksim@clickhouse.com\"\n - \"nk@clickhouse.com\"\n - \"nikitamikhaylov@clickhouse.com\"\n - \"alesapin@clickhouse.com\"\n - \"vdimir@clickhouse.com\"\n - \"qoega@clickhouse.com\"\n - \"kssenii@clickhouse.com\"\n - \"anton@clickhouse.com\"\n - \"oleksandr@clickhouse.com\"\n - \"vitlibar@clickhouse.com\"\n - \"igor@clickhouse.com\"\n - \"robert@clickhouse.com\"\n - \"sema.checherinda@clickhouse.com\"\n - \"Jianfei.Hu@clickhouse.com\"\n - \"san.tran@clickhouse.com\"\n\nsanitizers:\n - address\n - memory\n - undefined\nfuzzing_engines:\n - libfuzzer\nmain_repo: 'https://github.com/ClickHouse/ClickHouse.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nmkdir -p $SRC/ClickHouse/build && cd $SRC/ClickHouse/build\n\n[ -e CMakeLists ] && rm -rf CMakeFiles\n[ -e CMakeCache.txt ] && rm -rf CMakeCache.txt\n\nsed -i -e '/warnings.cmake)/d' $SRC/ClickHouse/CMakeLists.txt\n\n# It will be hard to maintain any compilation fails (if any) in two repositories.\n# Also ClickHouse won't compile without this.\n# It is very strange, because we have as many warnings as you could imagine.\nsed -i -e 's/add_warning(/no_warning(/g' $SRC/ClickHouse/CMakeLists.txt\n\n# ClickHouse uses libcxx from contrib.\n# Enabling libstdc++ manually will cause duplicate symbols at linker stage.\n# Plus we want to fuzz the same binary as we have in our CI\n# https://github.com/ClickHouse/ClickHouse/blob/2e2ef087129ed072404bdc084e8028a5c5869dc0/PreLoad.cmake#L23\nunset CFLAGS\nunset CXXFLAGS\nunset LDFLAGS\n\n# ClickHouse builds `protoc` from sources to be dependent only on compiler\n# but if we build ClickHouse with any kind of sanitizer, then `protoc`\n# will be built with sanitizer too...\n# Protoc will be used during ClickHouse builds to generate .cpp sources from .proto files\n# and everything works in our CI, but not here...\n# We use libprotobuf-mutator and self-written script to generate SQL-based AST from mutated .proto\n# Maybe some of proto files are too complex and this is the cause of `protoc` failures\n# So, this flag only helps to supress error from `protoc` built with any kind of sanitizer\nexport MSAN_OPTIONS=exit_code=0\n\nprintenv\n\nNUM_JOBS=$(nproc || grep -c ^processor /proc/cpuinfo)\n\nif (( $NUM_JOBS > 10 )); then\n    NUM_JOBS=$(expr $NUM_JOBS / 4)\nfi\n\nCLICKHOUSE_CMAKE_FLAGS=(\n    \"-DCMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache\"\n    \"-DCMAKE_C_COMPILER=$CC\"\n    \"-DCMAKE_CXX_COMPILER=$CXX\"\n    \"-DCMAKE_BUILD_TYPE=RelWithDebInfo\"\n    \"-DLIB_FUZZING_ENGINE:STRING=$LIB_FUZZING_ENGINE\"\n    \"-DENABLE_FUZZING=1\"\n    \"-DENABLE_PROTOBUF=1\"\n    \"-DPARALLEL_COMPILE_JOBS=$NUM_JOBS\"\n)\n\nif [ \"$SANITIZER\" = \"coverage\" ]; then\n    cmake  -G Ninja $SRC/ClickHouse ${CLICKHOUSE_CMAKE_FLAGS[@]} -DWITH_COVERAGE=1\nelse\n    cmake  -G Ninja $SRC/ClickHouse ${CLICKHOUSE_CMAKE_FLAGS[@]} -DSANITIZE=$SANITIZER\nfi\n\nTARGETS=$(find $SRC/ClickHouse/src $SRC/ClickHouse/programs -name '*_fuzzer.cpp' -\\! -name '*gtest_*' -prune -execdir basename {} .cpp ';' | tr '\\n' ' ')\n\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n  # When running in CI, check the first targets only to save time and disk space\n  TARGETS=( ${TARGETS[@]:0:2} )\nfi\n\nfor FUZZER_TARGET in $TARGETS\ndo\n    # Skip this fuzzer because of linker errors (the size of the binary is too big)\n    if [ \"$FUZZER_TARGET\" = \"execute_query_fuzzer\" ]; then\n        continue\n    fi\n    ninja -j $NUM_JOBS $FUZZER_TARGET\n    # Find this binary in build directory and strip it\n    TEMP=$(find $SRC/ClickHouse/build -name $FUZZER_TARGET)\n    # We have to preserve certain symbols e.g. LLVMFuzzerTestOneInput and some sanitizer-related once to not fail build checks:\n    # https://github.com/google/oss-fuzz/blob/860447a7121e344cc1627f492f67f3a23e86e6c5/infra/base-images/base-runner/bad_build_check#L173\n    # https://github.com/google/oss-fuzz/blob/860447a7121e344cc1627f492f67f3a23e86e6c5/infra/base-images/base-runner/test_all.py#L92-L96\n    # because of that we strip only debug symbols\n    strip --strip-debug $TEMP\ndone\n\n# copy out fuzzer binaries\nfind $SRC/ClickHouse/build -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\n\n# copy out fuzzer options and dictionaries\ncp $SRC/ClickHouse/tests/fuzz/*.dict $OUT/\ncp $SRC/ClickHouse/tests/fuzz/*.options $OUT/\n\n# prepare corpus dirs\nmkdir -p $SRC/ClickHouse/tests/fuzz/lexer_fuzzer.in/\nmkdir -p $SRC/ClickHouse/tests/fuzz/select_parser_fuzzer.in/\nmkdir -p $SRC/ClickHouse/tests/fuzz/create_parser_fuzzer.in/\nmkdir -p $SRC/ClickHouse/tests/fuzz/execute_query_fuzzer.in/\n\n# prepare corpus\ncp $SRC/ClickHouse/tests/queries/0_stateless/*.sql $SRC/ClickHouse/tests/fuzz/lexer_fuzzer.in/\ncp $SRC/ClickHouse/tests/queries/0_stateless/*.sql $SRC/ClickHouse/tests/fuzz/select_parser_fuzzer.in/\ncp $SRC/ClickHouse/tests/queries/0_stateless/*.sql $SRC/ClickHouse/tests/fuzz/create_parser_fuzzer.in/\ncp $SRC/ClickHouse/tests/queries/0_stateless/*.sql $SRC/ClickHouse/tests/fuzz/execute_query_fuzzer.in/\ncp $SRC/ClickHouse/tests/queries/1_stateful/*.sql $SRC/ClickHouse/tests/fuzz/lexer_fuzzer.in/\ncp $SRC/ClickHouse/tests/queries/1_stateful/*.sql $SRC/ClickHouse/tests/fuzz/select_parser_fuzzer.in/\ncp $SRC/ClickHouse/tests/queries/1_stateful/*.sql $SRC/ClickHouse/tests/fuzz/create_parser_fuzzer.in/\ncp $SRC/ClickHouse/tests/queries/1_stateful/*.sql $SRC/ClickHouse/tests/fuzz/execute_query_fuzzer.in/\n\n# copy out corpus\ncd $SRC/ClickHouse/tests/fuzz\nfor dir in *_fuzzer.in; do\n    fuzzer=$(basename $dir .in)\n    zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"${dir}/\"\ndone\n\n# copy sources for code coverage if required\nif [ \"$SANITIZER\" = \"coverage\" ]; then\n    mkdir -p $OUT/src/ClickHouse/\n    cp -rL --parents $SRC/ClickHouse/src $OUT\n    cp -rL --parents $SRC/ClickHouse/base $OUT\nfi\n\n# Just check binaries size\nBINARIES_SIZE=$(find $SRC/ClickHouse/build -name '*_fuzzer' -exec du -sh '{}' ';')\n"
    },
    "clock": {
        "name": "clock",
        "language": "go",
        "homepage": "https://github.com/benbjohnson/clock",
        "main_repo": "https://github.com/benbjohnson/clock",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/benbjohnson/clock\"\nlanguage: go\nmain_repo: \"https://github.com/benbjohnson/clock\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/fuzz_test.go $SRC/clock/\ngo mod tidy\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ncompile_native_go_fuzzer github.com/benbjohnson/clock FuzzClock FuzzClock\n"
    },
    "closure-compiler": {
        "name": "closure-compiler",
        "language": "jvm",
        "homepage": "https://developers.google.com/closure/compiler/",
        "main_repo": "https://github.com/google/closure-compiler/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://developers.google.com/closure/compiler/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/google/closure-compiler/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=closure-compiler\nPROJECT_GROUP_ID=com.google.javascript\nPROJECT_ARTIFACT_ID=closure-compiler\nMAIN_REPOSITORY=https://github.com/google/closure-compiler/\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  mvn -pl $PROJECT install -DskipTests\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  #install\n  (cd $PROJECT && bazelisk build //:all) \n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  cp $SRC/project-parent/closure-compiler/bazel-bin/compiler_uberjar_deploy.jar $OUT/\n\n  ALL_JARS=\"compiler_uberjar_deploy.jar\"\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes:$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\").\"\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent/fuzz-targets -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "closure-library": {
        "name": "closure-library",
        "language": "javascript",
        "homepage": "https://developers.google.com/closure/library/",
        "main_repo": "https://github.com/google/closure-library",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://developers.google.com/closure/library/\nlanguage: javascript\nmain_repo: https://github.com/google/closure-library\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install dependencies.\nnpm install\nnpm install --save-dev @jazzer.js/core\n\n# Build Fuzzers.\ncompile_javascript_fuzzer closure-library fuzz.js -i closure-library --sync\n"
    },
    "cloud-custodian": {
        "name": "cloud-custodian",
        "language": "python",
        "homepage": "https://github.com/cloud-custodian/cloud-custodian",
        "main_repo": "https://github.com/cloud-custodian/cloud-custodian",
        "primary_contact": "kapil@stacklet.io",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/cloud-custodian/cloud-custodian\nlanguage: python\nmain_repo: https://github.com/cloud-custodian/cloud-custodian\nsanitizers:\n- address\n- undefined\nprimary_contact: \"kapil@stacklet.io\"\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 -m pip install .\npython3 -m pip install tools/c7n_gcp\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "cloud-hypervisor": {
        "name": "cloud-hypervisor",
        "language": "rust",
        "homepage": "https://github.com/cloud-hypervisor/cloud-hypervisor",
        "main_repo": "https://github.com/cloud-hypervisor/cloud-hypervisor",
        "primary_contact": "bo.arvin.chen@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/cloud-hypervisor/cloud-hypervisor\"\nlanguage: rust\nprimary_contact: \"bo.arvin.chen@gmail.com\"\nauto_ccs:\n  - \"michael2012zhao@hotmail.com\"\n  - \"Henry.Wang@arm.com\"\n  - \"rbradford@rivosinc.com\"\n  - \"samuel.e.ortiz@protonmail.com\"\n  - \"liuwe@microsoft.com\"\n  - \"seb@rivosinc.com\"\n  - \"nistephe@microsoft.com\"\n  - \"fabduchene@microsoft.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nmain_repo: 'https://github.com/cloud-hypervisor/cloud-hypervisor'\n",
        "build_sh": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd $SRC/cloud-hypervisor\ncargo fuzz build -O\n\nFUZZ_TARGET_OUTPUT_DIR=target/x86_64-unknown-linux-gnu/release\nfor f in fuzz/fuzz_targets/*.rs\ndo\n    FUZZ_TARGET_NAME=$(basename ${f%.*})\n    cp fuzz/$FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT/\ndone\n"
    },
    "cmake": {
        "name": "cmake",
        "language": "c",
        "homepage": "https://gitlab.kitware.com/cmake/cmake",
        "main_repo": "https://gitlab.kitware.com/cmake/cmake",
        "primary_contact": "brad.king@kitware.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://gitlab.kitware.com/cmake/cmake\"\nmain_repo: \"https://gitlab.kitware.com/cmake/cmake\"\nlanguage: c\nprimary_contact: \"brad.king@kitware.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build CMake.\nmkdir build-dir && cd build-dir\n../bootstrap\nmake -j$(nproc) CMakeLib\n\n# Build fuzzers.\ncd ../Tests/Fuzzing\n$CXX $CXXFLAGS -I../../Source \\\n\t-I../../build-dir/Source \\\n\t-c xml_parser_fuzzer.cc \\\n\t-o xml_parser_fuzzer.o \n\n\nexport cmexpat_dir=\"${SRC}/CMake/build-dir/Utilities/cmexpat/CMakeFiles/cmexpat.dir/lib\"\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n\t\txml_parser_fuzzer.o -o $OUT/xml_parser_fuzzer \\\n\t\t../../build-dir/Source/CMakeFiles/CMakeLib.dir/cmXMLParser.cxx.o \\\n\t\t$cmexpat_dir/xmlparse.c.o \\\n\t\t$cmexpat_dir/xmlrole.c.o \\\n\t\t$cmexpat_dir/xmltok.c.o\t\n\n\n# Build seed corpus\nzip $OUT/xml_parser_fuzzer_seed_corpus.zip $SRC/fuzzing-corpus/xml/test.xml\n"
    },
    "cmark": {
        "name": "cmark",
        "language": "c++",
        "homepage": "http://commonmark.org",
        "main_repo": "https://github.com/commonmark/cmark.git",
        "primary_contact": "jgm@berkeley.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"http://commonmark.org\"\nlanguage: c++\nprimary_contact: \"jgm@berkeley.edu\"\nauto_ccs:\n  - \"wellnhofer@aevum.de\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/commonmark/cmark.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\ncmake ../\nmake cmark_static\ncd ..\n\n$CC $CFLAGS -Isrc -Ibuild/src -c fuzz/cmark-fuzz.c -o cmark_fuzzer.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE cmark_fuzzer.o build/src/libcmark.a -o $OUT/cmark_fuzzer\ncp $SRC/*.options $OUT/\ncp fuzz/dictionary $OUT/cmark.dict\n\nmkdir -p corpus\npython3 test/spec_tests.py --fuzz-corpus corpus --spec test/spec.txt\npython3 test/spec_tests.py --fuzz-corpus corpus --spec test/regression.txt\npython3 test/spec_tests.py --fuzz-corpus corpus --spec test/smart_punct.txt\nzip -j $OUT/cmark_fuzzer_seed_corpus.zip corpus/*\n"
    },
    "cockroachdb": {
        "name": "cockroachdb",
        "language": "go",
        "homepage": "https://www.cockroachlabs.com/",
        "main_repo": "https://github.com/cockroachdb/cockroach.git",
        "primary_contact": "stan@cockroachlabs.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.cockroachlabs.com/\"\nlanguage: go\nprimary_contact: \"stan@cockroachlabs.com\"\nauto_ccs:\n  - \"renato@cockroachlabs.com\"\n  - \"herko@cockroachlabs.com\"\n  - \"darryl@cockroachlabs.com\"\nmain_repo: \"https://github.com/cockroachdb/cockroach.git\"\nfile_github_issue: true\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/cockroach/build/oss-fuzz/build.sh"
    },
    "compress": {
        "name": "compress",
        "language": "go",
        "homepage": "https://github.com/klauspost/compress",
        "main_repo": "https://github.com/klauspost/compress",
        "primary_contact": "klauspost@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/klauspost/compress\"\nlanguage: go\nprimary_contact: \"klauspost@gmail.com\"\nmain_repo: \"https://github.com/klauspost/compress\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run the OSS-Fuzz script in the project\n$SRC/compress/ossfuzz/ossfuzz.sh\n"
    },
    "config-validator": {
        "name": "config-validator",
        "language": "go",
        "homepage": "https://github.com/GoogleCloudPlatform/config-validator/",
        "main_repo": "https://github.com/GoogleCloudPlatform/config-validator/",
        "primary_contact": "mpetkov@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/GoogleCloudPlatform/config-validator/\"\nmain_repo: \"https://github.com/GoogleCloudPlatform/config-validator/\"\nprimary_contact: \"mpetkov@google.com\"\nauto_ccs:\n- morgantep@google.com\n- martin.p.petkov@gmail.com\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Copy the library files needed to initialize the validator.\nmkdir -p $OUT/validatorfiles\ncp -a 'test/cf/constraints' $OUT/validatorfiles\ncp -a 'test/cf/library' $OUT/validatorfiles\ncp -a 'test/cf/templates' $OUT/validatorfiles\n\n# Copy the corpus.\nzip -jr $OUT/fuzz_config_validator_seed_corpus.zip internal/fuzz/corpus\n\n# Compile the fuzzer.\ncompile_go_fuzzer github.com/GoogleCloudPlatform/config-validator/internal/fuzz Fuzz fuzz_config_validator\n"
    },
    "configparser": {
        "name": "configparser",
        "language": "python",
        "homepage": "https://github.com/jaraco/configparser/",
        "main_repo": "https://github.com/jaraco/configparser/",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jaraco/configparser/\nmain_repo: https://github.com/jaraco/configparser/\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython -m pip install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "connectedhomeip": {
        "name": "connectedhomeip",
        "language": "c++",
        "homepage": "https://buildwithmatter.com/",
        "main_repo": "https://github.com/project-chip/connectedhomeip.git",
        "primary_contact": "andreilitvin@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "centipede"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://buildwithmatter.com/\"\nlanguage: c++\nprimary_contact: \"andreilitvin@google.com\"\nauto_ccs:\n  - \"asad_haque@comcast.com\"\n  - \"lalabdulkarim@csa-iot.org\"\n  - \"mboyington@google.com\"\n  - \"szewczyk@google.com\"\n  - \"tennessee@google.com\"\n  - \"aalami@csa-iot.org\"\nsanitizers:\n  - address\n  - undefined\n# MemorySanitizer is deactivated due to false positives related to Glib\n# For MSan; Glib and all others libs should be compiled with MSan\n#  - memory\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n  - centipede\nmain_repo: 'https://github.com/project-chip/connectedhomeip.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# workaround to get Fuzz Introspector to build; making it link with lld instead of the environment's gold linker which gives an error\nif [ \"$SANITIZER\" == \"introspector\" ]; then\n  export CFLAGS=$(echo \"$CFLAGS\" | sed 's/gold/lld/g')\n  export CXXFLAGS=$(echo \"$CXXFLAGS\" | sed 's/gold/lld/g')\nfi\n\ncd $SRC/connectedhomeip\n\n# Activate Pigweed environment\nset +u\nPW_ENVSETUP_QUIET=1 source scripts/activate.sh\nset -u\n\n#This adds zap-cli to PATH, needed for fuzzing all-clusters-app\nexport PATH=\"/src/connectedhomeip/.environment/cipd/packages/zap/:$PATH\"\n\n# Create a build directory with the following options:\n# - `oss_fuzz` enables OSS-Fuzz build\n# - `is_clang` selects clang toolchains (does not support AFL fuzzing engine)\n# - `enable_rrti` enables RTTI to support UBSan build\n# - `chip_enable_thread_safety_checks` disabled since OSS-Fuzz clang does not\n#   seem to currently support or need this analysis\n# - `chip_enable_openthread` disabled since OSS-Fuzz clang issues a compile\n#   error on GenericConnectivityManagerImpl_Thread.ipp and current fuzzing\n#   does not differentiate between thread/Wifi/TCP/UDP/BLE connectivity\n#   implementations.\n# - `target_ldflags` forces compiler to use LLVM's linker\ngn gen out/fuzz_targets \\\n  --args=\"\n    oss_fuzz=true \\\n    is_clang=true \\\n    enable_rtti=true \\\n    chip_enable_thread_safety_checks=false \\\n    chip_enable_openthread=false \\\n    target_ldflags=[\\\"-fuse-ld=lld\\\"]\"\n\n# Deactivate Pigweed environment to use OSS-Fuzz toolchains\ndeactivate\n\n# Compile fuzz targets\nninja -C out/fuzz_targets fuzz_tests\n\ncp out/fuzz_targets/tests/* $OUT/\n"
    },
    "connexion": {
        "name": "connexion",
        "language": "python",
        "homepage": "https://github.com/spec-first/connexion",
        "main_repo": "https://github.com/spec-first/connexion",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/spec-first/connexion\nmain_repo: https://github.com/spec-first/connexion\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  # Add relevant data and two hidden modules\n  compile_python_fuzzer $fuzzer \\\n      --add-data ./connexion/resources/schemas/:connexion/resources/schemas/ \\\n      --add-data $SRC/jsonschema_specifications/jsonschema_specifications/schemas:jsonschema_specifications/schemas \\\n      --hidden-import=asgiref \\\n      --hidden-import=flask\ndone\n"
    },
    "containerd": {
        "name": "containerd",
        "language": "go",
        "homepage": "https://github.com/containerd/containerd",
        "main_repo": "https://github.com/containerd/containerd",
        "primary_contact": "security@containerd.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/containerd/containerd\"\nmain_repo: \"https://github.com/containerd/containerd\"\nprimary_contact: \"security@containerd.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"samuelkarp@google.com\"\n  - \"derek@mcgstyle.net\"\n  - \"estesp@gmail.com\"\n  - \"mikebrow@gmail.com\"\n  - \"cjingram@google.com\"\n  - \"kato.kazuyoshi@gmail.com\"\n  - \"vinaygo@google.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/containerd/contrib/fuzz/oss_fuzz_build.sh\n"
    },
    "coreutils": {
        "name": "coreutils",
        "language": null,
        "homepage": "http://www.gnu.org/software/coreutils/",
        "main_repo": "https://github.com/coreutils/coreutils",
        "primary_contact": "P@draigBrady.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"http://www.gnu.org/software/coreutils/\"\nmain_repo: \"https://github.com/coreutils/coreutils\"\nprimary_contact: \"P@draigBrady.com\"\n",
        "build_sh": null
    },
    "cosign": {
        "name": "cosign",
        "language": "go",
        "homepage": "https://sigstore.dev",
        "main_repo": "https://github.com/sigstore/cosign",
        "primary_contact": "security@sigstore.dev",
        "vendor_ccs": [
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://sigstore.dev\"\nmain_repo: \"https://github.com/sigstore/cosign\"\nprimary_contact: \"security@sigstore.dev\"\nauto_ccs:\n  - lhinds@sigstore.dev\n  - hblauzvern@sigstore.dev\n  - codysoyland@sigstore.dev\n  - bcallaway@sigstore.dev\nvendor_ccs:\n  - adam@adalogics.com\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./test/fuzz/oss_fuzz_build.sh\n\n"
    },
    "cosmos-sdk": {
        "name": "cosmos-sdk",
        "language": "go",
        "homepage": "https://github.com/cosmos/cosmos-sdk",
        "main_repo": "https://github.com/cosmos/cosmos-sdk",
        "primary_contact": "fuzzing@orijtech.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/cosmos/cosmos-sdk\"\nprimary_contact: \"fuzzing@orijtech.com\"\nauto_ccs:\n  - emmanuel@orijtech.com\n  - cuong@orijtech.com\n  - elias@orijtech.com\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/cosmos/cosmos-sdk\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbash -x ./fuzz/oss-fuzz-build.sh\n"
    },
    "coturn": {
        "name": "coturn",
        "language": "c",
        "homepage": "https://github.com/coturn/coturn",
        "main_repo": "https://github.com/coturn/coturn",
        "primary_contact": "misi@majd.eu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/coturn/coturn\"\nlanguage: c\nprimary_contact: \"misi@majd.eu\"\nauto_ccs:\n  - \"mom040267@gmail.com\"\n  - \"gustavogb@gmail.com\"\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/coturn/coturn'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir my_build\n\npushd my_build/\ncmake -DFUZZER=ON -DLIB_FUZZING_ENGINE=\"$LIB_FUZZING_ENGINE\" \\\n    -DCMAKE_EXE_LINKER_FLAGS=\"-Wl,-rpath,'\\$ORIGIN/lib'\" -DWITH_MYSQL=OFF -Wno-dev ../.\nmake -j$(nproc)\npopd\n\npushd my_build/fuzzing/\ncp FuzzStun $OUT/FuzzStun\ncp FuzzStunClient $OUT/FuzzStunClient\npopd\n\npushd fuzzing/input/\ncp FuzzStun_seed_corpus.zip $OUT/FuzzStun_seed_corpus.zip\ncp FuzzStunClient_seed_corpus.zip $OUT/FuzzStunClient_seed_corpus.zip\npopd\n\npushd /lib/x86_64-linux-gnu/\nmkdir $OUT/lib/\ncp libevent* $OUT/lib/.\npopd\n"
    },
    "coveragepy": {
        "name": "coveragepy",
        "language": "python",
        "homepage": "https://github.com/nedbat/coveragepy/",
        "main_repo": "https://github.com/nedbat/coveragepy",
        "primary_contact": "nedbat@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/nedbat/coveragepy/\nlanguage: python\nmain_repo: https://github.com/nedbat/coveragepy\nprimary_contact: nedbat@gmail.com\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n# Bug reports are public by default:\nview_restrictions: none\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "cpp-httplib": {
        "name": "cpp-httplib",
        "language": "c++",
        "homepage": "https://github.com/yhirose/cpp-httplib",
        "main_repo": "https://github.com/yhirose/cpp-httplib.git",
        "primary_contact": "yuji.hirose.bug@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/yhirose/cpp-httplib\"\nlanguage: c++\nprimary_contact: \"yuji.hirose.bug@gmail.com\"\nauto_ccs :\n  - \"cpp-httplib-oss-fuzz@googlegroups.com\"\n  - \"omkarjadhav@google.com\"\n  - \"hlivingstone@google.com\"\n  - \"kalaskar@google.com\"\n  - \"ankitlohia@google.com\"\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nmain_repo: 'https://github.com/yhirose/cpp-httplib.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build fuzz targets specified  in test/Makefile.\ncd test/fuzzing && make -j$(nproc) server_fuzzer\n\n# Copy the fuzzer executables, zip-ed corpora, option and dictionary files to $OUT.\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'          # Copy fuzz-target.\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'     # Copy dictionaries.\nfind . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' $OUT ';' # Copy seed corpora.\n"
    },
    "cppcheck": {
        "name": "cppcheck",
        "language": "c++",
        "homepage": "https://cppcheck.sourceforge.net",
        "main_repo": "https://github.com/danmar/cppcheck.git",
        "primary_contact": "daniel.marjamaki@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://cppcheck.sourceforge.net\"\nlanguage: c++\nprimary_contact: \"daniel.marjamaki@gmail.com\"\nauto_ccs:\n  - \"daniel.marjamaki@gmail.com\"\n  - \"ettl.martin78@gmail.com\"\n  - \"firewave0000@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/danmar/cppcheck.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build fuzzer\n\ncd $SRC/cppcheck/oss-fuzz\nmake -j$(nproc) oss-fuzz-client\ncp oss-fuzz-client $OUT/\n\n\n"
    },
    "cppitertools": {
        "name": "cppitertools",
        "language": "c++",
        "homepage": "https://github.com/ryanhaining/cppitertools",
        "main_repo": "https://github.com/ryanhaining/cppitertools",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ryanhaining/cppitertools\"\nmain_repo: \"https://github.com/ryanhaining/cppitertools\"\nlanguage: c++\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_* .\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -I./ -I./cppitertools fuzz_cppitertools.cpp -std=c++17 -o $OUT/fuzz_cppitertools\n"
    },
    "cpuinfo": {
        "name": "cpuinfo",
        "language": "c",
        "homepage": "https://github.com/pytorch/cpuinfo",
        "main_repo": "https://github.com/pytorch/cpuinfo",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/pytorch/cpuinfo\"\nmain_repo: \"https://github.com/pytorch/cpuinfo\"\nlanguage: c\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Use fuzzer-file paths instead of kernel paths\nsed -i 's/\"\\/proc\\/cpuinfo\"/\"\\/tmp\\/libfuzzer.config\"/g' src/x86/linux/cpuinfo.c\nsed -i 's/\"\\/sys\\/devices\\/system\\/cpu\\/kernel_max\"/\"\\/tmp\\/libfuzzer.config\"/g' src/linux/processors.c\nmkdir build\ncd build\ncmake ..\nmake\n\n\n$CC $CFLAGS -c $SRC/fuzz_cpuinfo.c -o fuzz_cpuinfo.o \\\n    -I/src/cpuinfo/src -I/src/cpuinfo/include\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_cpuinfo.o -o $OUT/fuzz_cpuinfo \\\n    ./libcpuinfo.a\n"
    },
    "cpython3": {
        "name": "cpython3",
        "language": "c++",
        "homepage": "https://python.org/",
        "main_repo": "https://github.com/python/cpython",
        "primary_contact": "seth@python.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://python.org/\"\nlanguage: c++\nprimary_contact: \"seth@python.org\"\nmain_repo: \"https://github.com/python/cpython\"\nauto_ccs:\n - \"alex.gaynor@gmail.com\"\n - \"ammar@ammaraskar.com\"\n - \"greg@krypto.org\"\n - \"pablogsal@python.org\"\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nsanitizers:\n - address\n - memory\n - undefined\n",
        "build_sh": "#!/bin/bash\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Ignore memory leaks from python scripts invoked in the build\nexport ASAN_OPTIONS=\"detect_leaks=0\"\nexport MSAN_OPTIONS=\"halt_on_error=0:exitcode=0:report_umrs=0\"\n\n# Remove -pthread from CFLAGS, this trips up ./configure\n# which thinks pthreads are available without any CLI flags\nCFLAGS=${CFLAGS//\"-pthread\"/}\n\n# Ensure assert statements are enabled. It may help identify problems\n# earlier if those fire.\nCFLAGS=\"${CFLAGS} -UNDEBUG\"\n\n# We use some internal CPython API.\nCFLAGS=\"${CFLAGS} -IInclude/internal/\"\n\nFLAGS=()\ncase $SANITIZER in\n  address)\n    FLAGS+=(\"--with-address-sanitizer\")\n    ;;\n  memory)\n    FLAGS+=(\"--with-memory-sanitizer\")\n    # installing ensurepip takes a while with MSAN instrumentation, so\n    # we disable it here\n    FLAGS+=(\"--without-ensurepip\")\n    # -msan-keep-going is needed to allow MSAN's halt_on_error to function\n    FLAGS+=(\"CFLAGS=-mllvm -msan-keep-going=1\")\n    ;;\n  undefined)\n    FLAGS+=(\"--with-undefined-behavior-sanitizer\")\n    ;;\nesac\n./configure \"${FLAGS[@]:-}\" --prefix $OUT\n\n# We use altinstall to avoid having the Makefile create symlinks\nmake -j$(nproc) altinstall\n\nFUZZ_DIR=Modules/_xxtestfuzz\nfor fuzz_test in $(cat $FUZZ_DIR/fuzz_tests.txt)\ndo\n  # Build (but don't link) the fuzzing stub with a C compiler\n  $CC $CFLAGS $($OUT/bin/python*-config --cflags) $FUZZ_DIR/fuzzer.c \\\n    -D _Py_FUZZ_ONE -D _Py_FUZZ_$fuzz_test -c -Wno-unused-function \\\n    -o $WORK/$fuzz_test.o\n  # Link with C++ compiler to appease libfuzzer\n  $CXX $CXXFLAGS -rdynamic $WORK/$fuzz_test.o -o $OUT/$fuzz_test \\\n    $LIB_FUZZING_ENGINE $($OUT/bin/python*-config --ldflags --embed)\n\n  # Zip up and copy any seed corpus\n  if [ -d \"${FUZZ_DIR}/${fuzz_test}_corpus\" ]; then\n    zip -j \"${OUT}/${fuzz_test}_seed_corpus.zip\" ${FUZZ_DIR}/${fuzz_test}_corpus/*\n  fi\n  # Copy over the dictionary for this test\n  if [ -e \"${FUZZ_DIR}/dictionaries/${fuzz_test}.dict\" ]; then\n    cp \"${FUZZ_DIR}/dictionaries/${fuzz_test}.dict\" \"$OUT/${fuzz_test}.dict\"\n  fi\ndone\n\n# A little bit hacky but we have to copy $OUT/include to\n# $OUT/$OUT/include as the coverage build needs all source\n# files used in execution and expects it to be there.\n#   See projects/tensorflow/build.sh for prior art\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n  mkdir -p $OUT/$OUT\n  cp -r $OUT/include $OUT/$OUT/\nfi\n"
    },
    "cras": {
        "name": "cras",
        "language": "rust",
        "homepage": "https://www.chromium.org",
        "main_repo": "https://chromium.googlesource.com/chromiumos/third_party/adhd",
        "primary_contact": "cujomalainey@chromium.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.chromium.org\"\nlanguage: rust\nprimary_contact: \"cujomalainey@chromium.org\"\nauto_ccs:\n  - \"hychao@chromium.org\"\n  - \"cychiang@chromium.org\"\n  - \"yuhsuan@chromium.org\"\n  - \"enshuo@chromium.org\"\n  - \"judyhsiao@chromium.org\"\n  - \"johnylin@chromium.org\"\n  - \"aaronyu@google.com\"\n  - \"hunghsienchen@chromium.org\"\n  - \"htcheong@chromium.org\"\n  - \"jrwu@chromium.org\"\n  - \"cranelw@google.com\"\n  - \"eddyhsu@google.com\"\n  - \"andyross@google.com\"\n  - \"bailideng@google.com\"\n  - \"normanbt@google.com\"\n  - \"pteerapong@google.com\"\n  - \"whalechang@google.com\"\nsanitizers:\n  - address\n  - undefined\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nbuilds_per_day: 4\nmain_repo: 'https://chromium.googlesource.com/chromiumos/third_party/adhd'\n",
        "build_sh": "#!/bin/bash -eux\n# Copyright 2017 The Chromium Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\n#\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd ${SRC}/adhd\ndevtools/oss-fuzz-build.sh\n"
    },
    "cri-o": {
        "name": "cri-o",
        "language": "go",
        "homepage": "https://cri-o.io/",
        "main_repo": "https://github.com/cri-o/cri-o",
        "primary_contact": "cncf-crio-security@lists.cncf.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://cri-o.io/\"\nmain_repo: \"https://github.com/cri-o/cri-o\"\nprimary_contact: \"cncf-crio-security@lists.cncf.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"pehunt@redhat.com\"\n  - \"sgrunert@redhat.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/cncf-fuzzing/projects/cri-o/build.sh"
    },
    "croaring": {
        "name": "croaring",
        "language": "c",
        "homepage": "https://roaringbitmap.org",
        "main_repo": "https://github.com/RoaringBitmap/CRoaring",
        "primary_contact": "lemire@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://roaringbitmap.org\"\nlanguage: c\nprimary_contact: \"lemire@gmail.com\"\nauto_ccs:\n  - \"k2@ktwo.ca\"\n  - \"lemire@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory:\n      experimental: True\nmain_repo: \"https://github.com/RoaringBitmap/CRoaring\"\nfuzzing_engines:\n  - libfuzzer\n  \n",
        "build_sh": null
    },
    "cron-utils": {
        "name": "cron-utils",
        "language": "jvm",
        "homepage": "https://github.com/jmrozanec/cron-utils",
        "main_repo": "https://github.com/jmrozanec/cron-utils.git",
        "primary_contact": "",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/jmrozanec/cron-utils\"\nlanguage: jvm\nprimary_contact: \"\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/jmrozanec/cron-utils.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15 -Dmaven.javadoc.skip=true\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/cron-utils-$CURRENT_VERSION.jar\" $OUT/cron-utils.jar\n\nALL_JARS=\"cron-utils.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "croniter": {
        "name": "croniter",
        "language": "python",
        "homepage": "https://github.com/kiorky/croniter",
        "main_repo": "https://github.com/kiorky/croniter",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "sean@compactcloud.co.uk"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/kiorky/croniter\nlanguage: python\nmain_repo: https://github.com/kiorky/croniter\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- sean@compactcloud.co.uk\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Workaround for oss-fuzz not being able to recognise which croniter modules are used\n# See https://github.com/ossf/fuzz-introspector/issues/1010\nexport PYFUZZPACKAGE=$SRC/croniter/src/croniter\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "crossplane": {
        "name": "crossplane",
        "language": "go",
        "homepage": "https://github.com/crossplane/crossplane",
        "main_repo": "https://github.com/crossplane/crossplane",
        "primary_contact": "jbw976@gmail.com",
        "vendor_ccs": [
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/crossplane/crossplane\"\nmain_repo: \"https://github.com/crossplane/crossplane\"\nprimary_contact: \"jbw976@gmail.com\"\nauto_ccs :\n  - \"me@muvaf.com\"\n  - \"nicc@rk0n.org\"\n  - \"alper.oss.fuzz@gmail.com\"\n  - \"p.scorsolini@gmail.com\"\nvendor_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/crossplane\n$SRC/crossplane/test/fuzz/oss_fuzz_build.sh\ncd $SRC/crossplane-runtime\n$SRC/crossplane-runtime/test/fuzz/oss_fuzz_build.sh\n"
    },
    "crosvm": {
        "name": "crosvm",
        "language": "rust",
        "homepage": "http://crosvm.dev",
        "main_repo": "https://chromium.googlesource.com/crosvm/crosvm",
        "primary_contact": "denniskempin@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://crosvm.dev\"\nlanguage: rust\nprimary_contact: \"denniskempin@google.com\"\nauto_ccs:\n  - \"crosvm-core@google.com\"\n  - \"dverkamp@google.com\"\n  - \"fmayle@google.com\"\n  - \"keiichiw@google.com\"\n  - \"takayas@google.com\"\n  - \"zihanchen@google.com\"\nmain_repo: \"https://chromium.googlesource.com/crosvm/crosvm\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd crosvm\n\n# Build crosvm fuzzers\n# Unset the SRC variable as it will interfere with minijail's common.mk framework.\nenv -u SRC cargo fuzz build -O\n\n# Copy fuzzer binaries to $OUT\nFUZZ_TARGET_OUTPUT_DIR=\"target/x86_64-unknown-linux-gnu/release\"\nfor f in fuzz/fuzz_targets/*.rs; do\n    FUZZ_TARGET_NAME=$(basename ${f%.*})\n    cp \"${FUZZ_TARGET_OUTPUT_DIR}/${FUZZ_TARGET_NAME}\" \"$OUT/\"\ndone\n"
    },
    "crow": {
        "name": "crow",
        "language": "c++",
        "homepage": "https://crowcpp.org/master/",
        "main_repo": "https://github.com/CrowCpp/Crow",
        "primary_contact": "capuanobailey@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://crowcpp.org/master/\"\nlanguage: c++\nprimary_contact: \"capuanobailey@gmail.com\"\nmain_repo: \"https://github.com/CrowCpp/Crow\"\n",
        "build_sh": null
    },
    "cryptofuzz": {
        "name": "cryptofuzz",
        "language": "c++",
        "homepage": "https://github.com/guidovranken/cryptofuzz",
        "main_repo": "https://github.com/guidovranken/cryptofuzz",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": [
            "oss-fuzz@mozilla-fuzzing.iam.gserviceaccount.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/guidovranken/cryptofuzz\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nauto_ccs:\n  - kurt@roeckx.be\n  - agl@google.com\n  - davidben@google.com\n  - svaldez@google.com\n  - beck@obtuse.com\n  - joel.sing@gmail.com\n  - kinichiro.inoguchi@gmail.com\n  - github@pureftpd.org\n  - jussi.kivilinna@gmail.com\n  - szanella@gmail.com\n  - karthik.bhargavan@gmail.com\n  - jonathan.protzenko@gmail.com\n  - richard@levitte.org\n  - ppzgs1@gmail.com\n  - jack.lloyd@gmail.com\n  - shane.lontis@hotmail.com\n  - david@wolfssl.com\n  - kaleb@wolfssl.com\n  - jacob@wolfssl.com\n  - sledru@mozilla.com\n  - bbeurdouche@mozilla.com\n  - matthias.st.pierre@gmail.com\n  - kaleb.himes@gmail.com\n  - polubelovam@gmail.com\n  - mbed-tls-security@lists.trustedfirmware.org\n  - choller@mozilla.com\n  - djackson@mozilla.com\n  - dkeeler@mozilla.com\n  - jkratzer@mozilla.com\n  - jschanck@mozilla.com\n  - jschwartzentruber@mozilla.com\n  - nkulatova@mozilla.com\n  - twsmith@mozilla.com\n  - mdauer@mozilla.com\nvendor_ccs:\n  - oss-fuzz@mozilla-fuzzing.iam.gserviceaccount.com\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/guidovranken/cryptofuzz'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# TODO(metzman): Switch this to LIB_FUZZING_ENGINE when it works.\n# https://github.com/google/oss-fuzz/issues/2336\n\nexport CXXFLAGS=\"$CXXFLAGS -D_LIBCPP_DEBUG=1\"\nexport GO111MODULE=off\n\n# Install Go stable binaries\nmkdir $SRC/go-bootstrap\ncd $SRC/go-bootstrap\n\ntar zxf $SRC/go1.23.1.linux-amd64.tar.gz\nmv go/ go-123\nexport GOROOT_123=$SRC/go-bootstrap/go-123/\nexport GOPATH_123=$GOROOT_123/packages/\nmkdir $GOPATH_123\nmkdir -p $GOPATH_123/src/golang.org/x/crypto/\ncp -R $SRC/go-crypto/* $GOPATH_123/src/golang.org/x/crypto/\nmkdir -p $GOPATH_123/src/golang.org/x/sys/\ncp -R $SRC/go-sys/* $GOPATH_123/src/golang.org/x/sys/\nexport PATH_GO_123=$GOROOT_123/bin:$GOROOT_123/packages/bin:$PATH\n\ntar zxf $SRC/go1.22.7.linux-amd64.tar.gz\nmv go/ go-122\nexport GOROOT_122=$SRC/go-bootstrap/go-122/\nexport GOPATH_122=$GOROOT_122/packages/\nmkdir $GOPATH_122\nmkdir -p $GOPATH_122/src/golang.org/x/crypto/\ncp -R $SRC/go-crypto/* $GOPATH_122/src/golang.org/x/crypto/\nmkdir -p $GOPATH_122/src/golang.org/x/sys/\ncp -R $SRC/go-sys/* $GOPATH_122/src/golang.org/x/sys/\nexport PATH_GO_122=$GOROOT_122/bin:$GOROOT_122/packages/bin:$PATH\n\n# Compile Go development version\ncd $SRC/go-dev/src/\nexport OLD_PATH=$PATH\nPATH=\"$PATH_GO_123\" ./make.bash\nexport GOROOT_DEV=$(realpath ../)\nexport GOPATH_DEV=$GOROOT_DEV/packages\nmkdir $GOPATH_DEV\nmkdir -p $GOPATH_DEV/src/golang.org/x/crypto/\ncp -R $SRC/go-crypto/* $GOPATH_DEV/src/golang.org/x/crypto/\nmkdir -p $GOPATH_DEV/src/golang.org/x/sys/\ncp -R $SRC/go-sys/* $GOPATH_DEV/src/golang.org/x/sys/\nexport PATH_GO_DEV=$GOROOT_DEV/bin:$GOROOT_DEV/packages/bin:$PATH\n\nif [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_GOLANG\"\nfi\n\nif [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\nthen\n    # Install nodejs/npm\n    # It is required for building noble-bls12-381\n    cd $SRC/\n    tar Jxf node-v14.17.1-linux-x64.tar.xz\n    export PATH=\"$PATH:$SRC/node-v14.17.1-linux-x64/bin/\"\nfi\n\n# Compile xxd\n$CC $SRC/xxd.c -o /usr/bin/xxd\n\n# Copy the upstream checkout of xxHash over the old version\nrm -rf $SRC/cryptofuzz/modules/reference/xxHash/\ncp -R $SRC/xxHash/ $SRC/cryptofuzz/modules/reference/\n\n# Install Boost headers\ncd $SRC/\ntar jxf boost_1_84_0.tar.bz2\ncd boost_1_84_0/\nCFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\nCFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\ncp -R boost/ /usr/include/\n\nexport LINK_FLAGS=\"\"\nif [[ $CFLAGS = *-m32* ]]\nthen\n    export LINK_FLAGS=\"$LINK_FLAGS -latomic\"\nfi\nexport INCLUDE_PATH_FLAGS=\"\"\n\n# Generate lookup tables. This only needs to be done once.\ncd $SRC/cryptofuzz\npython gen_repository.py\n\n# This enables runtime checks for C++-specific undefined behaviour.\nexport CXXFLAGS=\"$CXXFLAGS -D_GLIBCXX_DEBUG\"\n\n# wolfCrypt uses a slightly different ECDH algorithm than Trezor and libsecp256k1.\n# This disables running ECDH in Trezor and libsecp256k1 to prevent mismatches.\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_DISABLE_SPECIAL_ECDH\"\n\nexport CXXFLAGS=\"$CXXFLAGS -I $SRC/cryptofuzz/fuzzing-headers/include\"\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\n\nif [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\nthen\n    # Compile libfuzzer-js (required for all JavaScript libraries)\n    export LIBFUZZER_A_PATH=\"$LIB_FUZZING_ENGINE\"\n    cd $SRC/libfuzzer-js/\n    make\n    export LIBFUZZER_JS_PATH=$(realpath .)\n    export LINK_FLAGS=\"$LINK_FLAGS $LIBFUZZER_JS_PATH/js.o $LIBFUZZER_JS_PATH/quickjs/libquickjs.a\"\n\n    # Compile bn.js module\n    export BN_JS_PATH=\"$SRC/bn.js/lib/bn.js\"\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BN_JS\"\n    cd $SRC/cryptofuzz/modules/bn.js/\n    make\n\n    # Compile bignumber.js module\n    export BIGNUMBER_JS_PATH=\"$SRC/bignumber.js/bignumber.js\"\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BIGNUMBER_JS\"\n    cd $SRC/cryptofuzz/modules/bignumber.js/\n    make\n\n    export CRYPTO_JS_PATH=\"$SRC/crypto-js/\"\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_CRYPTO_JS\"\n    cd $SRC/cryptofuzz/modules/crypto-js/\n    make\nfi\n\nif [[ $CFLAGS != *-m32* && \"$SANITIZER\" != \"coverage\" ]]\nthen\n    cd $SRC/\n    tar Jxf zig-latest.tar.xz\n    export ZIG_BIN=$(realpath zig-linux-x86_64*/zig)\n\n    cd $SRC/cryptofuzz/modules/zig/\n    make -j$(nproc)\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_ZIG\"\nfi\n\n# Compile NSS\nif [[ $CFLAGS != *-m32* ]]\nthen\n    mkdir $SRC/nss-nspr\n    mv $SRC/nss $SRC/nss-nspr/\n    mv $SRC/nspr $SRC/nss-nspr/\n    cd $SRC/nss-nspr/\n\n    # Prevent compilation error with Clang\n    export CFLAGS=\"$CFLAGS -Wno-unused-but-set-variable\"\n\n    CXX=\"$CXX -stdlib=libc++\" LDFLAGS=\"$CFLAGS\" nss/build.sh --enable-fips --static --disable-tests --fuzz=oss\n\n    export NSS_NSPR_PATH=$(realpath $SRC/nss-nspr/)\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NSS\"\n    export LINK_FLAGS=\"$LINK_FLAGS -lsqlite3\"\n\n    # Compile Cryptofuzz NSS module\n    cd $SRC/cryptofuzz/modules/nss\n    make -B\nfi\n\n# Rename blake2b_* functions to avoid symbol collisions with other libraries\ncd $SRC/trezor-firmware/crypto\nsed -i \"s/\\<blake2b_\\([A-Za-z_]\\)/trezor_blake2b_\\1/g\" *.c *.h\nsed -i 's/\\<blake2b(/trezor_blake2b(/g' *.c *.h\n\n# Compile Cryptofuzz trezor module\nexport TREZOR_FIRMWARE_PATH=$(realpath $SRC/trezor-firmware)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_TREZOR_FIRMWARE\"\ncd $SRC/cryptofuzz/modules/trezor\nmake -B\n\n# Compile libtomcrypt\ncd $SRC/libtomcrypt\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    make -j$(nproc)\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBTOMCRYPT\"\n    export LIBTOMCRYPT_INCLUDE_PATH=$(realpath src/headers/)\n    export LIBTOMCRYPT_A_PATH=$(realpath libtomcrypt.a)\n\n    # Compile Cryptofuzz libtomcrypt module\n    cd $SRC/cryptofuzz/modules/libtomcrypt\n    make -B\nfi\n\n## Build blst\n#cd $SRC/blst/\n## Patch to disable assembly\n## This is to prevent false positives, see:\n## https://github.com/google/oss-fuzz/issues/5914\n#touch new_no_asm.h\n#echo \"#if LIMB_T_BITS==32\" >>new_no_asm.h\n#echo \"typedef unsigned long long llimb_t;\" >>new_no_asm.h\n#echo \"#else\" >>new_no_asm.h\n#echo \"typedef __uint128_t llimb_t;\" >>new_no_asm.h\n#echo \"#endif\" >>new_no_asm.h\n#cat src/no_asm.h >>new_no_asm.h\n#mv new_no_asm.h src/no_asm.h\n#CFLAGS=\"$CFLAGS -D__BLST_NO_ASM__ -D__BLST_PORTABLE__\" ./build.sh\n#export BLST_LIBBLST_A_PATH=$(realpath libblst.a)\n#export BLST_INCLUDE_PATH=$(realpath bindings/)\n#export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BLST\"\n#\n## Compile Cryptofuzz blst module\n#cd $SRC/cryptofuzz/modules/blst/\n#make -B -j$(nproc)\n\n# Build libsecp256k1\ncd $SRC/secp256k1/\nautoreconf -ivf\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_SECP256K1\"\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    ./configure --enable-static --disable-tests --disable-benchmark --disable-exhaustive-tests --enable-module-recovery --enable-experimental --enable-module-schnorrsig --enable-module-ecdh --with-asm=no\nelse\n    ./configure --enable-static --disable-tests --disable-benchmark --disable-exhaustive-tests --enable-module-recovery --enable-experimental --enable-module-schnorrsig --enable-module-ecdh\nfi\nmake\nexport SECP256K1_INCLUDE_PATH=$(realpath .)\nexport LIBSECP256K1_A_PATH=$(realpath .libs/libsecp256k1.a)\n\n# Compile Cryptofuzz libsecp256k1 module\ncd $SRC/cryptofuzz/modules/secp256k1/\nmake -B -j$(nproc)\n\n#if [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\n#then\n# noble-secp256k1\n#    cd $SRC/noble-secp256k1/\n#    npm install && npm run build\n#    export NOBLE_SECP256K1_PATH=$(realpath lib/index.js)\n#\n#    cd $SRC/cryptofuzz/modules/noble-secp256k1/\n#    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NOBLE_SECP256K1\"\n#    make -B\n\n# noble-bls12-381\n#    cd $SRC/noble-bls12-381/\n#    cp math.ts new_index.ts\n#    $(awk '/^export/ {print \"tail -n +\"FNR+1\" index.ts\"; exit}' index.ts) >>new_index.ts\n#    mv new_index.ts index.ts\n#    npm install && npm run build\n#    export NOBLE_BLS12_381_PATH=$(realpath index.js)\n#    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NOBLE_BLS12_381\"\n#    cd $SRC/cryptofuzz/modules/noble-bls12-381/\n#    make -B\n\n# noble-ed25519\n#    cd $SRC/cryptofuzz/modules/noble-ed25519/\n#    export NOBLE_ED25519_PATH=\"$SRC/noble-ed25519/index.js\"\n#    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NOBLE_ED25519\"\n#    make -B\n#fi\n\n## Compile SymCrypt\nif [[ $CFLAGS != *-m32* ]]\nthen\n    cd $SRC/SymCrypt/\n\n    # Disable speculative load hardening because\n    # this results in MSAN false positives\n    sed -i '/.*x86-speculative-load-hardening.*/d' lib/CMakeLists.txt\n\n    # Unittests don't build with clang and are not needed anyway\n    sed -i \"s/^add_subdirectory(unittest)$//g\" CMakeLists.txt\n\n    mkdir b/\n    cd b/\n    if [[ $CFLAGS = *sanitize=memory* ]]\n    then\n        cmake -DSYMCRYPT_USE_ASM=off ../\n    else\n        cmake ../\n    fi\n\n    make symcrypt_common symcrypt_generic -j$(nproc)\n\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_SYMCRYPT\"\n    export SYMCRYPT_INCLUDE_PATH=$(realpath ../inc/)\n    export LIBSYMCRYPT_COMMON_A_PATH=$(realpath lib/libsymcrypt_common.a)\n    export SYMCRYPT_GENERIC_A_PATH=$(realpath lib/symcrypt_generic.a)\n\n    # Compile Cryptofuzz SymCrypt module\n    cd $SRC/cryptofuzz/modules/symcrypt\n    make -B\nfi\n\n# Compile libgmp\ncd $SRC/libgmp/\nautoreconf -ivf\nif [[ $CFLAGS = *-m32* ]]\nthen\n    setarch i386 ./configure --enable-maintainer-mode --enable-assert\nelif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    ./configure --enable-maintainer-mode --enable-assert --disable-assembly\nelse\n    ./configure --enable-maintainer-mode --enable-assert\nfi\nmake -j$(nproc)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBGMP\"\nexport LIBGMP_INCLUDE_PATH=$(realpath .)\nexport LIBGMP_A_PATH=$(realpath .libs/libgmp.a)\n# Compile Cryptofuzz libgmp module\ncd $SRC/cryptofuzz/modules/libgmp\nmake -B\n\n# Compile mpdecimal\ncd $SRC/\ntar zxf mpdecimal-4.0.0.tar.gz\ncd mpdecimal-4.0.0/\n./configure\ncd libmpdec/\nmake libmpdec.a -j$(nproc)\ncd ../\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_MPDECIMAL\"\nexport LIBMPDEC_A_PATH=$(realpath libmpdec/libmpdec.a)\nexport LIBMPDEC_INCLUDE_PATH=$(realpath libmpdec/)\n# Compile Cryptofuzz mpdecimal module\ncd $SRC/cryptofuzz/modules/mpdecimal\nmake -B\n\n# Compile Cityhash\ncd $SRC/cityhash\nif [[ $CFLAGS != *-m32* ]]\nthen\n    CXXFLAGS=\"$CXXFLAGS -msse4.2\" ./configure --disable-shared\nelse\n    ./configure --disable-shared\nfi\nmake -j$(nproc)\n\nexport CXXFLAGS=\"$CXXFLAGS -I$SRC/cityhash/src\"\nexport CRYPTOFUZZ_REFERENCE_CITY_O_PATH=\"$SRC/cityhash/src/city.o\"\n\n##############################################################################\n# Compile cryptopp\ncd $SRC/cryptopp\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    make libcryptopp.a -j$(nproc)\nelse\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOPP_DISABLE_ASM=1\"\n    make libcryptopp.a -j$(nproc)\nfi\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_CRYPTOPP\"\nexport LIBCRYPTOPP_A_PATH=\"$SRC/cryptopp/libcryptopp.a\"\nexport CRYPTOPP_INCLUDE_PATH=\"$SRC/cryptopp\"\n\n# Compile Cryptofuzz cryptopp module\ncd $SRC/cryptofuzz/modules/cryptopp\nmake -B\n\n##############################################################################\n# Compile Mbed TLS\ncd $SRC/mbedtls/\nscripts/config.py set MBEDTLS_PLATFORM_MEMORY\nscripts/config.py set MBEDTLS_CMAC_C\nscripts/config.py set MBEDTLS_NIST_KW_C\nscripts/config.py set MBEDTLS_ARIA_C\nif [[ $CFLAGS == *sanitize=memory* ]]\nthen\n    scripts/config.py unset MBEDTLS_HAVE_ASM\n    scripts/config.py unset MBEDTLS_PADLOCK_C\n    scripts/config.py unset MBEDTLS_AESNI_C\n    scripts/config.py unset MBEDTLS_AESCE_C\nfi\nmkdir build/\ncd build/\ncmake .. -DENABLE_PROGRAMS=0 -DENABLE_TESTING=0\nmake -j$(nproc)\nexport MBEDTLS_LIBMBEDCRYPTO_A_PATH=\"$SRC/mbedtls/build/library/libmbedcrypto.a\"\nexport MBEDTLS_INCLUDE_PATH=\"$SRC/mbedtls/include\"\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_MBEDTLS -DCRYPTOFUZZ_TF_PSA_CRYPTO\"\n\n# Compile Cryptofuzz module for Mbed TLS with the legacy crypto API\ncd $SRC/cryptofuzz/modules/mbedtls\nmake -B\n\n# Compile Cryptofuzz module for Mbed TLS with the PSA crypto API\ncd $SRC/cryptofuzz/modules/tf-psa-crypto\nmake -B\n\n##############################################################################\n# Compile Botan\ncd $SRC/botan\nif [[ $CFLAGS != *-m32* ]]\nthen\n    if [[ $CFLAGS != *sanitize=memory* ]]\n    then\n        ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\n    else\n        ./configure.py --disable-asm --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\n    fi\nelse\n    ./configure.py --cpu=x86_32 --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\nfi\nmake -j$(nproc)\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN\"\nexport LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\nexport BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\n\n# Compile Cryptofuzz Botan module\ncd $SRC/cryptofuzz/modules/botan\nmake -B\n\n##############################################################################\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    # Compile libgpg-error (dependency of libgcrypt)\n    cd $SRC/\n    tar jxvf libgpg-error-1.49.tar.bz2\n    cd libgpg-error-1.49/\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        ./configure --enable-static\n    else\n        ./configure --enable-static --host=i386\n    fi\n    ASAN_OPTIONS=detect_leaks=0 make -j$(nproc)\n    make install\n    export LINK_FLAGS=\"$LINK_FLAGS $SRC/libgpg-error-1.49/src/.libs/libgpg-error.a\"\n\n    # Compile libgcrypt\n    cd $SRC/libgcrypt\n    autoreconf -ivf\n    if [[ $CFLAGS = *-m32* ]]\n    then\n        ./configure --enable-static --disable-doc --disable-jent-support --host=i386\n    else\n        ./configure --enable-static --disable-doc --disable-jent-support\n    fi\n    make -j$(nproc)\n\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBGCRYPT\"\n    export LIBGCRYPT_A_PATH=\"$SRC/libgcrypt/src/.libs/libgcrypt.a\"\n    export LIBGCRYPT_INCLUDE_PATH=\"$SRC/libgcrypt/src\"\n\n    # Compile Cryptofuzz libgcrypt module\n    cd $SRC/cryptofuzz/modules/libgcrypt\n    make -B\nfi\n\n# Compile libsodium\ncd $SRC/libsodium\nautoreconf -ivf\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    ./configure\nelse\n    ./configure --disable-asm\nfi\nmake -j$(nproc)\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBSODIUM\"\nexport LIBSODIUM_A_PATH=\"$SRC/libsodium/src/libsodium/.libs/libsodium.a\"\nexport LIBSODIUM_INCLUDE_PATH=\"$SRC/libsodium/src/libsodium/include\"\n\n# Compile Cryptofuzz libsodium module\ncd $SRC/cryptofuzz/modules/libsodium\nmake -B\n\n# Disabled because NSS now also embeds evercrypt, leading to symbol collisions\n#if [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\n#then\n#    # Compile EverCrypt (with assembly)\n#    cd $SRC/evercrypt/dist\n#    make -C portable -j$(nproc) libevercrypt.a\n#    make -C kremlin/kremlib/dist/minimal -j$(nproc)\n#\n#    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_EVERCRYPT\"\n#    export EVERCRYPT_A_PATH=\"$SRC/evercrypt/dist/portable/libevercrypt.a\"\n#    export KREMLIN_A_PATH=\"$SRC/evercrypt/dist/kremlin/kremlib/dist/minimal/*.o\"\n#    export EVERCRYPT_INCLUDE_PATH=\"$SRC/evercrypt/dist\"\n#    export KREMLIN_INCLUDE_PATH=\"$SRC/evercrypt/dist/kremlin/include\"\n#    export INCLUDE_PATH_FLAGS=\"$INCLUDE_PATH_FLAGS -I $EVERCRYPT_INCLUDE_PATH -I $KREMLIN_INCLUDE_PATH\"\n#\n#    # Compile Cryptofuzz EverCrypt (with assembly) module\n#    cd $SRC/cryptofuzz/modules/evercrypt\n#    make -B\n#fi\n\n##############################################################################\n# Compile Cryptofuzz reference (without assembly) module\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_REFERENCE\"\ncd $SRC/cryptofuzz/modules/reference\nmake -B\n\n##############################################################################\n# Compile Cryptofuzz Veracrypt (without assembly) module\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_VERACRYPT\"\ncd $SRC/cryptofuzz/modules/veracrypt\nmake -B\n\n##############################################################################\n# Compile Cryptofuzz Monero (without assembly) module\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_MONERO\"\ncd $SRC/cryptofuzz/modules/monero\nmake -B\n\n##############################################################################\n# Compile Cryptofuzz Golang (123) module\nif [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\nthen\n    cd $SRC/cryptofuzz/modules/golang\n    GOROOT=\"$GOROOT_123\" GOPATH=\"$GOPATH_123\" PATH=\"$PATH_GO_123\" make -B\nfi\n\nif [[ $CFLAGS != *-m32* ]]\nthen\n    # Compile Cryptofuzz (NSS-based)\n    cd $SRC/cryptofuzz\n    LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NO_OPENSSL $INCLUDE_PATH_FLAGS\" make -B -j$(nproc)\n\n    # Generate dictionary\n    ./generate_dict\n\n    # Patch fuzzer\n    if [ \"$SANITIZER\" = undefined ]; then\n        patchelf --set-rpath '$ORIGIN/lib/jdk-18.0.1/lib/server/' $SRC/cryptofuzz/cryptofuzz\n    fi\n\n    # Copy fuzzer\n    cp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-nss\n    # Copy dictionary\n    cp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-nss.dict\n    # Copy seed corpus\n    cp $SRC/cryptofuzz-corpora/libressl_latest.zip $OUT/cryptofuzz-nss_seed_corpus.zip\n\n    rm $SRC/cryptofuzz/modules/nss/module.a\n\n    CXXFLAGS=${CXXFLAGS//\"-DCRYPTOFUZZ_NSS\"/}\n    LINK_FLAGS=${LINK_FLAGS//\"-lsqlite3\"/}\nfi\n\nrm -f $SRC/cryptofuzz/modules/golang/module.a\n\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    # libtomcrypt can only be compiled with NSS, because OpenSSL, LibreSSL and\n    # BoringSSL have symbol collisions with libtomcrypt.\n    #\n    # So, now that NSS-based Cryptofuzz has been compiled, remove libtomcrypt\n    export CXXFLAGS=${CXXFLAGS/-DCRYPTOFUZZ_LIBTOMCRYPT/}\n    rm -rf \"$LIBTOMCRYPT_A_PATH\"\nfi\n\n##############################################################################\n# Compile wolfCrypt\ncd $SRC/wolfsm/\n./install.sh\ncd $SRC/wolfssl\n# Enable additional wolfCrypt features which cannot be activated through arguments to ./configure\nexport CFLAGS=\"$CFLAGS -DHAVE_AES_ECB -DWOLFSSL_DES_ECB -DHAVE_ECC_SECPR2 -DHAVE_ECC_SECPR3 -DHAVE_ECC_BRAINPOOL -DHAVE_ECC_KOBLITZ -DWOLFSSL_ECDSA_SET_K -DWOLFSSL_ECDSA_SET_K_ONE_LOOP\"\nautoreconf -ivf\n\nexport WOLFCRYPT_CONFIGURE_PARAMS=\"--enable-static --enable-md2 --enable-md4 --enable-ripemd --enable-blake2 --enable-blake2s --enable-pwdbased --enable-scrypt --enable-hkdf --enable-cmac --enable-arc4 --enable-camellia --enable-aesccm --enable-aesctr --enable-xts --enable-des3 --enable-x963kdf --enable-harden --enable-aescfb --enable-aesofb --enable-aeskeywrap --enable-aessiv --enable-shake256 --enable-curve25519 --enable-curve448 --disable-crypttests --disable-examples --enable-keygen --enable-compkey --enable-ed448 --enable-ed25519 --enable-ecccustcurves --enable-xchacha --enable-cryptocb --enable-eccencrypt --enable-aesgcm-stream --enable-shake128 --enable-siphash --enable-eccsi --with-eccminsz=0 --enable-aeseax --enable-ed25519-stream --enable-ed448-stream --enable-sm2 --enable-sm3 --enable-sm4-cbc --enable-sm4-ccm --enable-sm4-ctr --enable-sm4-ecb --enable-sm4-gcm --enable-smallstack\"\n\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export WOLFCRYPT_CONFIGURE_PARAMS=\"$WOLFCRYPT_CONFIGURE_PARAMS -disable-asm\"\nfi\n\nif [[ $CFLAGS = *-m32* ]]\nthen\n    export WOLFCRYPT_CONFIGURE_PARAMS=\"$WOLFCRYPT_CONFIGURE_PARAMS -disable-fastmath\"\nfi\n\n./configure $WOLFCRYPT_CONFIGURE_PARAMS\nmake -j$(nproc)\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_WOLFCRYPT\"\nexport WOLFCRYPT_LIBWOLFSSL_A_PATH=\"$SRC/wolfssl/src/.libs/libwolfssl.a\"\nexport WOLFCRYPT_INCLUDE_PATH=\"$SRC/wolfssl\"\n\n# Compile Cryptofuzz wolfcrypt (without assembly) module\ncd $SRC/cryptofuzz/modules/wolfcrypt\nmake -B\n\n##############################################################################\n# Compile Cryptofuzz Golang (122) module\nif [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\nthen\n    cd $SRC/cryptofuzz/modules/golang\n    GOROOT=\"$GOROOT_122\" GOPATH=\"$GOPATH_122\" PATH=\"$PATH_GO_122\" make -B\nfi\n\n# OpenSSL can currently not be used together with wolfCrypt due to symbol collisions\nexport SAVE_CXXFLAGS=\"$CXXFLAGS\"\nexport CXXFLAGS=${CXXFLAGS/-DCRYPTOFUZZ_WOLFCRYPT/}\n\n##############################################################################\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    # Compile Openssl (with assembly)\n    cd $SRC/openssl\n    if [[ $CFLAGS != *-m32* ]]\n    then\n        ./config --debug enable-md2 enable-rc5\n    else\n        setarch i386 ./config --debug enable-md2 enable-rc5\n    fi\n    make -j$(nproc)\n\n    # Compile Cryptofuzz OpenSSL (with assembly) module\n    cd $SRC/cryptofuzz/modules/openssl\n    OPENSSL_INCLUDE_PATH=\"$SRC/openssl/include\" OPENSSL_LIBCRYPTO_A_PATH=\"$SRC/openssl/libcrypto.a\" make -B\n\n    # Compile Cryptofuzz\n    cd $SRC/cryptofuzz\n    LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" CXXFLAGS=\"$CXXFLAGS -I $SRC/openssl/include $INCLUDE_PATH_FLAGS\" make -B -j$(nproc)\n\n    # Generate dictionary\n    ./generate_dict\n\n    # Patch fuzzer\n    if [ \"$SANITIZER\" = undefined ]; then\n        patchelf --set-rpath '$ORIGIN/lib/jdk-18.0.1/lib/server/' $SRC/cryptofuzz/cryptofuzz\n    fi\n\n    # Copy fuzzer\n    cp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-openssl\n    # Copy dictionary\n    cp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-openssl.dict\n    # Copy seed corpus\n    cp $SRC/cryptofuzz-corpora/openssl_latest.zip $OUT/cryptofuzz-openssl_seed_corpus.zip\nfi\n\n##############################################################################\n# Compile Openssl (without assembly)\ncd $SRC/openssl\nif [[ $CFLAGS != *-m32* ]]\nthen\n    ./config --debug no-asm enable-md2 enable-rc5\nelse\n    setarch i386 ./config --debug no-asm enable-md2 enable-rc5\nfi\nmake clean\nmake -j$(nproc)\n\n# Compile Cryptofuzz OpenSSL (without assembly) module\ncd $SRC/cryptofuzz/modules/openssl\nOPENSSL_INCLUDE_PATH=\"$SRC/openssl/include\" OPENSSL_LIBCRYPTO_A_PATH=\"$SRC/openssl/libcrypto.a\" make -B\n\n# Compile Cryptofuzz\ncd $SRC/cryptofuzz\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" CXXFLAGS=\"$CXXFLAGS -I $SRC/openssl/include $INCLUDE_PATH_FLAGS\" make -B -j$(nproc)\n\n# Generate dictionary\n./generate_dict\n\n# Patch fuzzer\nif [ \"$SANITIZER\" = undefined ]; then\n    patchelf --set-rpath '$ORIGIN/lib/jdk-18.0.1/lib/server/' $SRC/cryptofuzz/cryptofuzz\nfi\n\n# Copy fuzzer\ncp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-openssl-noasm\n# Copy dictionary\ncp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-openssl-noasm.dict\n# Copy seed corpus\ncp $SRC/cryptofuzz-corpora/openssl_latest.zip $OUT/cryptofuzz-openssl-noasm_seed_corpus.zip\n\nrm -f $SRC/cryptofuzz/modules/golang/module.a\n\nexport CXXFLAGS=\"$SAVE_CXXFLAGS\"\n\n##############################################################################\n# Compile Cryptofuzz Golang (dev branch) module\nif [[ $CFLAGS != *sanitize=memory* && $CFLAGS != *-m32* ]]\nthen\n    cd $SRC/cryptofuzz/modules/golang\n    GOROOT=\"$GOROOT_DEV\" GOPATH=\"$GOPATH_DEV\" PATH=\"$PATH_GO_DEV\" make -B\nfi\n\n##############################################################################\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    # Compile BoringSSL (with assembly)\n    cd $SRC/boringssl\n    rm -rf build ; mkdir build\n    cd build\n    if [[ $CFLAGS = *-m32* ]]\n    then\n        GOROOT=\"$GOROOT_DEV\" GOPATH=\"$GOPATH_DEV\" PATH=\"$PATH_GO_DEV\" setarch i386 cmake -DCMAKE_CXX_FLAGS=\"$CXXFLAGS -fno-sanitize=vptr\" -DCMAKE_C_FLAGS=\"$CFLAGS -fno-sanitize=vptr\" -DBORINGSSL_ALLOW_CXX_RUNTIME=1 -DCMAKE_ASM_FLAGS=\"-m32\" ..\n    else\n        GOROOT=\"$GOROOT_DEV\" GOPATH=\"$GOPATH_DEV\" PATH=\"$PATH_GO_DEV\" cmake -DCMAKE_CXX_FLAGS=\"$CXXFLAGS -fno-sanitize=vptr\" -DCMAKE_C_FLAGS=\"$CFLAGS -fno-sanitize=vptr\" -DBORINGSSL_ALLOW_CXX_RUNTIME=1 ..\n    fi\n    make -j$(nproc) crypto\n\n    # Compile Cryptofuzz BoringSSL (with assembly) module\n    cd $SRC/cryptofuzz/modules/openssl\n    OPENSSL_INCLUDE_PATH=\"$SRC/boringssl/include\" OPENSSL_LIBCRYPTO_A_PATH=\"$SRC/boringssl/build/crypto/libcrypto.a\" CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BORINGSSL\" make -B\n\n    # Compile Cryptofuzz\n    cd $SRC/cryptofuzz\n    LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" CXXFLAGS=\"$CXXFLAGS -I $SRC/openssl/include $INCLUDE_PATH_FLAGS\" make -B -j$(nproc)\n\n    # Generate dictionary\n    ./generate_dict\n\n    # Patch fuzzer\n    if [ \"$SANITIZER\" = undefined ]; then\n        patchelf --set-rpath '$ORIGIN/lib/jdk-18.0.1/lib/server/' $SRC/cryptofuzz/cryptofuzz\n    fi\n\n    # Copy fuzzer\n    cp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-boringssl\n    # Copy dictionary\n    cp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-boringssl.dict\n    # Copy seed corpus\n    cp $SRC/cryptofuzz-corpora/boringssl_latest.zip $OUT/cryptofuzz-boringssl_seed_corpus.zip\nfi\n\n# Compile Cryptofuzz libgmp mini-gmp module\ncd $SRC/cryptofuzz/modules/libgmp\nmake -B -f Makefile-mini-gmp\n\n##############################################################################\n# Compile BoringSSL (without assembly)\ncd $SRC/boringssl\nrm -rf build ; mkdir build\ncd build\nGOROOT=\"$GOROOT_DEV\" GOPATH=\"$GOPATH_DEV\" PATH=\"$PATH_GO_DEV\" cmake -DCMAKE_CXX_FLAGS=\"$CXXFLAGS -fno-sanitize=vptr\" -DCMAKE_C_FLAGS=\"$CFLAGS -fno-sanitize=vptr\" -DBORINGSSL_ALLOW_CXX_RUNTIME=1 -DOPENSSL_NO_ASM=1 ..\nmake -j$(nproc) crypto\n\n# Compile Cryptofuzz BoringSSL (without assembly) module\ncd $SRC/cryptofuzz/modules/openssl\nOPENSSL_INCLUDE_PATH=\"$SRC/boringssl/include\" OPENSSL_LIBCRYPTO_A_PATH=\"$SRC/boringssl/build/crypto/libcrypto.a\" CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BORINGSSL\" make -B\n\n# Compile Cryptofuzz\ncd $SRC/cryptofuzz\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" CXXFLAGS=\"$CXXFLAGS -I $SRC/openssl/include $INCLUDE_PATH_FLAGS\" make -B -j$(nproc)\n\n# Generate dictionary\n./generate_dict\n\n# Patch fuzzer\nif [ \"$SANITIZER\" = undefined ]; then\n    patchelf --set-rpath '$ORIGIN/lib/jdk-18.0.1/lib/server/' $SRC/cryptofuzz/cryptofuzz\nfi\n\n# Copy fuzzer\ncp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-boringssl-noasm\n# Copy dictionary\ncp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-boringssl-noasm.dict\n# Copy seed corpus\ncp $SRC/cryptofuzz-corpora/boringssl_latest.zip $OUT/cryptofuzz-boringssl-noasm_seed_corpus.zip\n"
    },
    "cryptography": {
        "name": "cryptography",
        "language": "python",
        "homepage": "https://github.com/pyca/cryptography",
        "main_repo": "https://github.com/pyca/cryptography",
        "primary_contact": "alex.gaynor@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "auto_ccs:\n- paul.l.kehrer@gmail.com\nfuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pyca/cryptography\nlanguage: python\nmain_repo: https://github.com/pyca/cryptography\nprimary_contact: alex.gaynor@gmail.com\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build fuzzers in $OUT.\npython3 -m pip cache purge\n# Compiling with sancov is causing some issues at the moment. This is likely\n# due to some missing flags propagated throughout.\nunset RUSTFLAGS\nunset CXXFLAGS\nunset CFLAGS\npython3 -m pip install .\n\ncd $SRC\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n   compile_python_fuzzer $fuzzer \ndone\n"
    },
    "cryptsetup": {
        "name": "cryptsetup",
        "language": "c",
        "homepage": "https://gitlab.com/cryptsetup/cryptsetup",
        "main_repo": "https://gitlab.com/cryptsetup/cryptsetup.git",
        "primary_contact": "gmazyland@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://gitlab.com/cryptsetup/cryptsetup\"\nlanguage: c\nbuilds_per_day: 2\nprimary_contact: \"gmazyland@gmail.com\"\nauto_ccs:\n  - okozina@redhat.com\n  - vtrefny@redhat.com\n  - daniel.zatovic@gmail.com\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\nmain_repo: \"https://gitlab.com/cryptsetup/cryptsetup.git\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./cryptsetup/tests/fuzz/oss-fuzz-build.sh\n"
    },
    "cssselect": {
        "name": "cssselect",
        "language": "python",
        "homepage": "https://github.com/scrapy/cssselect",
        "main_repo": "https://github.com/scrapy/cssselect",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/scrapy/cssselect\nmain_repo: https://github.com/scrapy/cssselect\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "cubefs": {
        "name": "cubefs",
        "language": "go",
        "homepage": "https://github.com/cubefs/cubefs",
        "main_repo": "https://github.com/cubefs/cubefs",
        "primary_contact": "626148589@qq.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/cubefs/cubefs\"\nmain_repo: \"https://github.com/cubefs/cubefs\"\nprimary_contact: \"626148589@qq.com\"\nauto_ccs:\n  - \"changliang@oppo.com\"\n  - \"baijiaruo@126.com\"\n  - \"tangjingyu@oppo.com\"\n  - \"david@adalogics.com\"\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed 's/go 1.17/go 1.21/g' -i ./go.mod\n$SRC/cncf-fuzzing/projects/cubefs/build.sh\n"
    },
    "cups-filters": {
        "name": "cups-filters",
        "language": "c++",
        "homepage": "https://github.com/OpenPrinting/cups-filters",
        "main_repo": "https://github.com/OpenPrinting/cups-filters.git",
        "primary_contact": "jiongchiyu@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/OpenPrinting/cups-filters\"\nmain_repo: \"https://github.com/OpenPrinting/cups-filters.git\"\n# help_url:\nlanguage: c++\n\nprimary_contact: \"jiongchiyu@gmail.com\"\nauto_ccs:\n  - \"till.kamppeter@gmail.com\"\n  - \"ossfuzz@iosifache.me\"\n  - \"msweet@msweet.org\"\n  # - \"jsmeix@suse.de\"\n  # - \"debian@alteholz.de\"\n  # - \"zdohnal@redhat.com\"\n  # - \"basu.aveek@gmail.com\"\n# vendor_ccs:\n\narchitectures:\n  - x86_64\n  # - i386\n\nsanitizers:\n  - address\n  - memory\n  # - undefined   \n\nfuzzing_engines:\n  - libfuzzer\n  # - afl\n  # - honggfuzz\n\n# builds_per_day: 2",
        "build_sh": null
    },
    "cups": {
        "name": "cups",
        "language": "c",
        "homepage": "https://openprinting.github.io/cups/",
        "main_repo": "https://github.com/OpenPrinting/cups",
        "primary_contact": "jiongchiyu@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://openprinting.github.io/cups/\"\nmain_repo: 'https://github.com/OpenPrinting/cups'\n# help_url:\nlanguage: c\n\nprimary_contact: \"jiongchiyu@gmail.com\"\nauto_ccs:\n  - \"till.kamppeter@gmail.com\"\n  - \"ossfuzz@iosifache.me\"\n  - \"msweet@msweet.org\"\n# vendor_ccs:\n\narchitectures:\n  - x86_64\n  # - i386\n\nsanitizers:\n  - address\n  - memory\n  # - undefined\n\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n\n# builds_per_day: 2",
        "build_sh": null
    },
    "cura-engine": {
        "name": "cura-engine",
        "language": "c++",
        "homepage": "https://github.com/Ultimaker/CuraEngine",
        "main_repo": "https://github.com/Ultimaker/CuraEngine.git",
        "primary_contact": "j.vankessel@ultimaker.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/Ultimaker/CuraEngine\"\nlanguage: c++\nprimary_contact: \"j.vankessel@ultimaker.com\"\nauto_ccs:\n  - \"artem.smotrakov@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: \"https://github.com/Ultimaker/CuraEngine.git\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "curl": {
        "name": "curl",
        "language": "c++",
        "homepage": "https://curl.haxx.se/",
        "main_repo": "https://github.com/curl/curl.git",
        "primary_contact": "daniel@haxx.se",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://curl.haxx.se/\"\nlanguage: c++\nprimary_contact: \"daniel@haxx.se\"\nauto_ccs:\n  - \"daniel.haxx@gmail.com\"\n  - \"cmeister2@gmail.com\"\n  - \"stefan.eissing@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/curl/curl.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run the OSS-Fuzz script in the curl-fuzzer project.\n./ossfuzz.sh\n"
    },
    "curvesapi": {
        "name": "curvesapi",
        "language": "jvm",
        "homepage": "https://github.com/virtuald/curvesapi",
        "main_repo": "https://github.com/virtuald/curvesapi",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/virtuald/curvesapi\nmain_repo: https://github.com/virtuald/curvesapi\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n\nfind ./ -name pom.xml -exec sed -i 's/source>1.5</source>1.8</g' {} \\;\nfind ./ -name pom.xml -exec sed -i 's/target>1.5</target>1.8</g' {} \\;\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false dependency:copy-dependencies\n\nJARFILE_LIST=\nfor JARFILE in $(find ./target  -name *.jar)\ndo\n  cp $JARFILE $OUT/\n  JARFILE_LIST=\"$JARFILE_LIST$(basename $JARFILE) \"\ndone\n\ncurr_dir=$(pwd)\nrm -rf $OUT/jar_temp\nmkdir $OUT/jar_temp\ncd $OUT/jar_temp\nfor JARFILE in $JARFILE_LIST\ndo\n  jar -xf $OUT/$JARFILE\ndone\ncd $curr_dir\n\nBUILD_CLASSPATH=$JAZZER_API_PATH:$OUT/jar_temp\nRUNTIME_CLASSPATH=\\$this_dir/jar_temp:\\$this_dir\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \"\\$0\")\nif [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\nthen\nmem_settings='-Xmx1900m:-Xss900k'\nelse\nmem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir         \\\n  \\$this_dir/jazzer_driver                                \\\n  --agent_path=\\$this_dir/jazzer_agent_deploy.jar         \\\n  --cp=$RUNTIME_CLASSPATH                                 \\\n  --target_class=$fuzzer_basename                         \\\n  --jvm_args=\"\\$mem_settings\"                             \\\n  \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "cxxopts": {
        "name": "cxxopts",
        "language": "c++",
        "homepage": "https://github.com/jarro2783/cxxopts",
        "main_repo": "https://github.com/jarro2783/cxxopts",
        "primary_contact": "jarro.2783@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/jarro2783/cxxopts\"\nlanguage: c++\nprimary_contact: \"jarro.2783@gmail.com\"\nmain_repo: \"https://github.com/jarro2783/cxxopts\"\nauto_ccs:\n  - nathaniel@rough.run\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport USE_BAZEL_VERSION=7.4.0\nbazel_build_fuzz_tests\n"
    },
    "cyclonedds": {
        "name": "cyclonedds",
        "language": "c",
        "homepage": "https://projects.eclipse.org/projects/iot.cyclonedds",
        "main_repo": "https://github.com/eclipse-cyclonedds/cyclonedds.git",
        "primary_contact": "eb@ilities.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://projects.eclipse.org/projects/iot.cyclonedds\"\nlanguage: c\nauto_ccs:\n  - \"federico.maggi@gmail.com\"\nprimary_contact: \"eb@ilities.com\"\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nsanitizers:\n- address\n- undefined\nmain_repo: 'https://github.com/eclipse-cyclonedds/cyclonedds.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsource fuzz/oss-fuzz-build.sh"
    },
    "d3": {
        "name": "d3",
        "language": "javascript",
        "homepage": "https://d3js.org/",
        "main_repo": "https://github.com/d3/d3.git",
        "primary_contact": null,
        "vendor_ccs": [
            "yakdan@code-intelligence.com",
            "norbert.schneider@code-intelligence.com",
            "peter.samarin@code-intelligence.com",
            "christopher.krah@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://d3js.org/\nlanguage: javascript\nmain_repo: https://github.com/d3/d3.git\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n- yakdan@code-intelligence.com\n- norbert.schneider@code-intelligence.com\n- peter.samarin@code-intelligence.com\n- christopher.krah@code-intelligence.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfunction change_type_to_commonjs() {\n    # Find all package.json files inside the node_modules directory\n    find \"$1\" -name \"package.json\" -type f | while read -r package_file; do\n        # Check if the file contains the \"type\" field\n        if grep -q '\"type\": \"module\"' \"$package_file\"; then\n            # Replace \"type\": \"module\" with \"type\": \"commonjs\"\n            sed -i 's/\"type\": \"module\"/\"type\": \"commonjs\"/' \"$package_file\"\n            echo \"Updated $package_file\"\n        fi\n    done\n}\n\nfunction transform_dir_into_commonjs() {\n    babel \"$1\" --keep-file-extension -D -d \"$1\"_commonjs\n    rm -r \"$1\"\n    mv \"$1\"_commonjs \"$1\"\n}\n\nfunction remove_dev_dependencies() {\n    package_json=$(cat package.json)\n\n    # Remove the \"devDependencies\" item from package.json\n    new_package_json=$(echo \"$package_json\" | jq 'del(.devDependencies)')\n\n    # Overwrite the package.json file with the updated content\n    echo \"$new_package_json\" > package.json\n\n}\n\n# Install dependencies.\nremove_dev_dependencies\n\nnpm install --global yarn\nyarn install\n\nnpm install -g @babel/cli\nyarn add --dev @babel/core @babel/plugin-transform-modules-commonjs\nyarn add --dev @jazzer.js/core\n\ntransform_dir_into_commonjs $SRC/d3/src\ntransform_dir_into_commonjs $SRC/d3/node_modules\n\nchange_type_to_commonjs $SRC/d3\n\n\n# Build Fuzzers.\ncompile_javascript_fuzzer d3 fuzz_tests/fuzz_csv_parse -i d3- --sync\n\n"
    },
    "dapr": {
        "name": "dapr",
        "language": "go",
        "homepage": "https://dapr.io/",
        "main_repo": "https://github.com/dapr",
        "primary_contact": "schneideryaron@gmail.com",
        "vendor_ccs": [
            "adam@adalogics.com",
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://dapr.io/\"\nlanguage: go\nprimary_contact: \"schneideryaron@gmail.com\"\nmain_repo: \"https://github.com/dapr\"\nauto_ccs:\n  - \"artur04@gmail.com\"\nvendor_ccs:\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nexport CXXFLAGS=\"${CXXFLAGS} -lresolv\"\n$SRC/cncf-fuzzing/projects/dapr/build.sh\n"
    },
    "dart": {
        "name": "dart",
        "language": "c++",
        "homepage": "https://dart.dev",
        "main_repo": "https://github.com/dart-lang/sdk.git",
        "primary_contact": "scheglov@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://dart.dev\"\nlanguage: c++\nprimary_contact: \"scheglov@google.com\"\nauto_ccs :\n- \"p.antoine@catenacyber.fr\"\n\nsanitizers:\n- address\nfuzzing_engines:\n- libfuzzer\nmain_repo: 'https://github.com/dart-lang/sdk.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\ngit apply ../../patch.diff\n./tools/build.py --no-goma -j$(nproc) -m debug -a x64 --sanitizer=asan dart_libfuzzer\ncp out/DebugASANX64/*fuzzer $OUT/\n"
    },
    "dask": {
        "name": "dask",
        "language": "python",
        "homepage": "https://github.com/dask/dask",
        "main_repo": "https://github.com/dask/dask",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/dask/dask\nlanguage: python\nmain_repo: https://github.com/dask/dask\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 -m pip install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "data-encoding": {
        "name": "data-encoding",
        "language": "rust",
        "homepage": "https://github.com/ia0/data-encoding",
        "main_repo": "https://github.com/ia0/data-encoding.git",
        "primary_contact": "github@ia0.eu",
        "vendor_ccs": [
            "arthur.chan@adalogics.com",
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ia0/data-encoding\"\nmain_repo: \"https://github.com/ia0/data-encoding.git\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nprimary_contact: \"github@ia0.eu\"\nauto_ccs:\n  - \"cretin@google.com\"\n  - \"fuzzing@fuchsia.dev\"\nvendor_ccs:\n  - \"arthur.chan@adalogics.com\"\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd lib\ncargo fuzz build\n\nfind $SRC/data-encoding/target/x86_64-unknown-linux-gnu/release -maxdepth 1 \\\n    -type f -perm -u=x -exec cp {} $OUT \\;\n"
    },
    "date": {
        "name": "date",
        "language": "c++",
        "homepage": "https://howardhinnant.github.io/date/date.html",
        "main_repo": "https://github.com/HowardHinnant/date",
        "primary_contact": "capuanobailey@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://howardhinnant.github.io/date/date.html\"\nlanguage: c++\nprimary_contact: \"capuanobailey@gmail.com\"\nmain_repo: \"https://github.com/HowardHinnant/date\"\n",
        "build_sh": null
    },
    "dateparser": {
        "name": "dateparser",
        "language": "python",
        "homepage": "https://dateparser.readthedocs.io/en/latest/",
        "main_repo": "https://github.com/scrapinghub/dateparser.git",
        "primary_contact": "opensource@zyte.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://dateparser.readthedocs.io/en/latest/\"\nlanguage: python\nprimary_contact: \"opensource@zyte.com\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\nmain_repo: \"https://github.com/scrapinghub/dateparser.git\"\n",
        "build_sh": null
    },
    "dav1d": {
        "name": "dav1d",
        "language": "c++",
        "homepage": "https://code.videolan.org/videolan/dav1d",
        "main_repo": "https://code.videolan.org/videolan/dav1d.git",
        "primary_contact": "janne.grunau@gmail.com",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://code.videolan.org/videolan/dav1d\"\nlanguage: c++\nprimary_contact: \"janne.grunau@gmail.com\"\nauto_ccs:\n  - \"rsbultje@gmail.com\"\n  - \"kempfjb@gmail.com\"\n  - \"b@rr-dav.id.au\"\n  - \"dav1d-fuzz@videolan.org\"\n  - \"psilokos@twoorioles.com\"\n  - \"gramner@twoorioles.com\"\nvendor_ccs:\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\ncoverage_extra_args: -ignore-filename-regex=.*dump.h\narchitectures:\n  - i386\n  - x86_64\nmain_repo: 'https://code.videolan.org/videolan/dav1d.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# setup\nbuild=${WORK}/build\n\n# cleanup\nrm -rf ${build}\nmkdir -p ${build}\n\n# prepare cross file for i386 compiliation\nif [ \"$ARCHITECTURE\" = \"i386\" ]; then\n\tMESON_CFLAGS=\"'$(echo $CFLAGS | sed -e 's/ /;, ;/g' | tr \\; \\')'\"\n\tMESON_CXXFLAGS=\"'$(echo $CXXFLAGS | sed -e 's/ /;, ;/g' | tr \\; \\')'\"\n\tsed -e \"s/CC$/'$CC'/; s/CXX$/'$CXX'/; s/CFLAGS$/[$MESON_CFLAGS]/; s/CXXFLAGS$/[$MESON_CXXFLAGS]/\" < ${SRC}/linux32.meson > ${WORK}/linux32.meson\n\tCROSS=\"--cross-file ${WORK}/linux32.meson\"\nfi\n\n# build library\nmeson -Denable_tools=false -Dfuzzing_engine=oss-fuzz \\\n      -Db_lundef=false -Ddefault_library=static -Dbuildtype=debugoptimized \\\n      -Dlogging=false -Dfuzzer_ldflags=$LIB_FUZZING_ENGINE \\\n      ${CROSS:-} \\\n      ${build}\nninja -j $(nproc) -C ${build}\n\n# prepare seed corpus\nrm -rf ${WORK}/tmp\nmkdir -p ${WORK}/tmp/testdata\nunzip -q $SRC/dav1d_fuzzer_seed_corpus.zip -d ${WORK}/tmp/testdata\ncp $SRC/dec_fuzzer_seed_corpus.zip ${WORK}/tmp/seed_corpus.zip\n(cd ${WORK}/tmp && zip -q -m -r -0 ${WORK}/tmp/seed_corpus.zip testdata)\n\n# copy fuzzers and link testdata\nfor fuzzer in $(find ${build}/tests/libfuzzer -maxdepth 1 -type f -executable -name 'dav1d_fuzzer*'); do\n\tcp \"${fuzzer}\" $OUT/\n\tcp ${WORK}/tmp/seed_corpus.zip $OUT/$(basename \"$fuzzer\")_seed_corpus.zip\ndone\n"
    },
    "dbus-broker": {
        "name": "dbus-broker",
        "language": "c",
        "homepage": "https://github.com/bus1/dbus-broker",
        "main_repo": "https://github.com/bus1/dbus-broker",
        "primary_contact": "david.rheinsberg@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/bus1/dbus-broker\"\nlanguage: c\nprimary_contact: \"david.rheinsberg@gmail.com\"\nbuilds_per_day: 4\nsanitizers:\n  - address\n  - undefined\n  - memory\nauto_ccs:\n  - evverx@gmail.com\n  - fsumsal@redhat.com\nmain_repo: \"https://github.com/bus1/dbus-broker\"\narchitectures:\n  - x86_64\n  - i386\nfile_github_issue: True\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# The MESON_* variables are passed to meson to build dbus-broker itself and the original\n# variables are used to build the fuzz target without meson to make the script compatible\n# with fuzz-introspector. Once the fuzz target is built with meson as well the MESON_*\n# variables can be safely removed and CFLAGS/CXXFLAGS/LDFLAGS can be tweaked directly\n# instead: https://github.com/google/oss-fuzz/pull/7583#issuecomment-1104011067\nMESON_CFLAGS=${CFLAGS:-}\nMESON_CXXFLAGS=${CXXFLAGS:-}\nMESON_LDFLAGS=${LDFLAGS:-}\n\nif [[ \"$SANITIZER\" == introspector ]]; then\n    MESON_CFLAGS=\"${MESON_CFLAGS//-fuse-ld=gold/ }\"\n    MESON_CXXFLAGS=\"${MESON_CXXFLAGS//-fuse-ld=gold/ }\"\n    MESON_LDFLAGS=\"${MESON_LDFLAGS//-fuse-ld=gold/ }\"\n    MESON_LDFLAGS+=\" -flto\"\n    export CC_LD=gold\n    export CXX_LD=gold\nfi\n\napt-get update -y\n\nif [[ \"$ARCHITECTURE\" == i386 ]]; then\n    apt-get install -y pkg-config:i386\nelse\n    apt-get install -y pkg-config\nfi\n\nif [[ \"$SANITIZER\" == undefined ]]; then\n    additional_ubsan_checks=alignment\n    UBSAN_FLAGS=\"-fsanitize=$additional_ubsan_checks -fno-sanitize-recover=$additional_ubsan_checks\"\n    CFLAGS+=\" $UBSAN_FLAGS\"\n    CXXFLAGS+=\" $UBSAN_FLAGS\"\n    MESON_CFLAGS+=\" $UBSAN_FLAGS\"\n    MESON_CXXFLAGS+=\" $UBSAN_FLAGS\"\nfi\n\npip3 install meson ninja\n\nif ! CFLAGS=\"$MESON_CFLAGS\" CXXFLAGS=\"$MESON_CXXFLAGS\" LDFLAGS=\"$MESON_LDFLAGS\" meson -Db_lundef=false -Dlauncher=false build; then\n    cat build/meson-logs/meson-log.txt\n    exit 1\nfi\n\nninja -C ./build -v\n$CC $CFLAGS -c -o fuzz-message.o -Isrc -I subprojects/libcstdaux-*/src -std=c11 -D_GNU_SOURCE \"$SRC/fuzz-message.c\"\n$CXX $CXXFLAGS -o \"$OUT/fuzz-message\" \\\n    fuzz-message.o \\\n    build/src/libbus-static.a \\\n    build/subprojects/libcdvar-*/src/libcdvar-*.a \\\n    build/subprojects/libcutf8-*/src/libcutf8-*.a \\\n    $LIB_FUZZING_ENGINE\n"
    },
    "decorator": {
        "name": "decorator",
        "language": "python",
        "homepage": "https://github.com/micheles/decorator",
        "main_repo": "https://github.com/micheles/decorator",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/micheles/decorator\nlanguage: python\nmain_repo: https://github.com/micheles/decorator\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "defusedxml": {
        "name": "defusedxml",
        "language": "python",
        "homepage": "https://github.com/tiran/defusedxml",
        "main_repo": "https://github.com/tiran/defusedxml",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/tiran/defusedxml\nmain_repo: https://github.com/tiran/defusedxml\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "demangle": {
        "name": "demangle",
        "language": "go",
        "homepage": "https://github.com/ianlancetaylor/demangle",
        "main_repo": "https://github.com/ianlancetaylor/demangle",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ianlancetaylor/demangle\"\nlanguage: go\nmain_repo: \"https://github.com/ianlancetaylor/demangle\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package demangle\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/ianlancetaylor/demangle FuzzTest FuzzTest\n"
    },
    "dgraph": {
        "name": "dgraph",
        "language": "go",
        "homepage": "https://dgraph.io",
        "main_repo": "https://github.com/dgraph-io/dgraph",
        "primary_contact": "security@hypermode.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://dgraph.io\"\nmain_repo: \"https://github.com/dgraph-io/dgraph\"\nprimary_contact: \"security@hypermode.com\"\nauto_ccs :\n  - \"harshil@hypermode.com\"\n  - \"ryan@hypermode.com\"\n  - \"aman@hypermode.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/fuzz_parser_test.go $SRC/dgraph/dql/\nprintf \"package dql\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > dql/register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/hypermodeinc/dgraph/v24/dql FuzzParserTest parser_fuzzer\n"
    },
    "digest": {
        "name": "digest",
        "language": "python",
        "homepage": "https://github.com/bmc/digest",
        "main_repo": "https://github.com/bmc/digest",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/bmc/digest\nlanguage: python\nmain_repo: https://github.com/bmc/digest\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\n"
    },
    "dill": {
        "name": "dill",
        "language": "python",
        "homepage": "https://github.com/uqfoundation/dill",
        "main_repo": "https://github.com/uqfoundation/dill",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/uqfoundation/dill\nmain_repo: https://github.com/uqfoundation/dill\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "distlib": {
        "name": "distlib",
        "language": "python",
        "homepage": "https://github.com/pypa/distlib",
        "main_repo": "https://github.com/pypa/distlib",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pypa/distlib\nlanguage: python\nmain_repo: https://github.com/pypa/distlib\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "distribution": {
        "name": "distribution",
        "language": "go",
        "homepage": "https://github.com/distribution/distribution",
        "main_repo": "https://github.com/distribution/distribution",
        "primary_contact": "cncf-distribution-security@lists.cncf.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/distribution/distribution\"\nmain_repo: \"https://github.com/distribution/distribution\"\nprimary_contact: \"cncf-distribution-security@lists.cncf.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"chrispat@github.com\"\n  - \"clarkbw@github.com\"\n  - \"csnider@mirantis.com\"\n  - \"hswimelar@gitlab.com\"\n  - \"hweiwei@vmware.com\"\n  - \"jpereira@gitlab.com\"\n  - \"justin.cormack@docker.com\"\n  - \"ksquizzato@mirantis.com\"\n  - \"milos.gajdos@docker.com\"\n  - \"sargun@sargun.me\"\n  - \"wwarren@digitalocean.com\"\n  - \"wangyan@vmware.com\"\n  - \"steve.lasker@microsoft.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/cncf-fuzzing/projects/distribution/build.sh\n\n"
    },
    "django": {
        "name": "django",
        "language": "python",
        "homepage": "https://www.djangoproject.com/",
        "main_repo": "https://github.com/django/django.git",
        "primary_contact": "f.apolloner@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "auto_ccs:\n- jammamarkus@gmail.com\n- guidovranken@gmail.com\n- info+django+security@markusholtermann.eu\nfuzzing_engines:\n- libfuzzer\nhomepage: https://www.djangoproject.com/\nlanguage: python\nmain_repo: https://github.com/django/django.git\nprimary_contact: f.apolloner@gmail.com\nsanitizers:\n- address\n- undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS). This is required\n# for projects with C extensions so that they're built with the proper flags.\npython3 -m pip install .\n\nexport DJANGO_SETTINGS_MODULE=fuzzer_project.settings\n\n# Build fuzzers into $OUT. These could be detected in other ways.\nfor fuzzer in $(find $SRC -name '*_fuzzer.py'); do\n  compile_python_fuzzer $fuzzer --add-data django/conf/locale/en/LC_MESSAGES:django/conf/locale/en/LC_MESSAGES\ndone\n"
    },
    "dlplibs": {
        "name": "dlplibs",
        "language": "c++",
        "homepage": "https://www.documentliberation.org",
        "main_repo": null,
        "primary_contact": "dtardon@redhat.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.documentliberation.org\"\nlanguage: c++\nprimary_contact: \"dtardon@redhat.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n# - memory\n  - undefined\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ntar -xJf $SRC/zlib-1.2.11.tar.xz\npushd zlib-1.2.11\n./configure --static\nmake -j$(nproc)\nexport ZLIB_CFLAGS=\"-I$(pwd)\"\nexport ZLIB_LIBS=\"-L$(pwd) -lz\"\npopd\n\ntar -xzf $SRC/lcms2-2.8.tar.gz\npushd lcms2-2.8\n./configure --disable-shared --enable-static --without-jpeg --without-tiff\nmake -C src -j$(nproc)\nexport LCMS2_CFLAGS=\"-I$(pwd)/include\"\nexport LCMS2_LIBS=\"-L$(pwd)/src -llcms2\"\npopd\n\ntar -xJf $SRC/libpng-1.6.34.tar.xz\npushd libpng-1.6.34\n./configure --disable-shared --enable-static CPPFLAGS=\"$ZLIB_CFLAGS\" LDFLAGS=\"$ZLIB_LIBS\"\nmake -j$(nproc)\nexport LIBPNG_CFLAGS=\"-I$(pwd)\"\nexport LIBPNG_LIBS=\"-L$(pwd) -lpng16\"\npopd\n\ntar -xzf $SRC/libxml2-2.9.7.tar.gz\npushd libxml2-2.9.7\n./configure --disable-shared --enable-static --disable-ipv6 --without-python --without-zlib --without-lzma\nmake -j$(nproc)\nexport LIBXML_CFLAGS=\"-I$(pwd)/include\"\nexport LIBXML_LIBS=\"-L$(pwd) -lxml2\"\nexport XML_CFLAGS=\"$LIBXML_CFLAGS\"\nexport XML_LIBS=\"$LIBXML_LIBS\"\npopd\n\ntar -xzf $SRC/icu4c-60_2-src.tgz\npushd icu/source\npatch -p2 < $SRC/icu4c-ubsan.patch\npatch -p3 < $SRC/ofz3670.patch\npatch -p3 < $SRC/ofz4860.patch\n./configure --disable-shared --enable-static --with-data-packaging=static --disable-dyload --disable-strict \\\n    --disable-layout --disable-samples --disable-extras --disable-icuio --disable-plugins \\\n    CPPFLAGS=-DU_USE_STRTOD_L=0\nmake -j$(nproc)\nexport ICU_CFLAGS=\"-I$(pwd) -I$(pwd)/i18n -I$(pwd)/common\"\nexport ICU_LIBS=\"-L$(pwd)/lib -licui18n -licuuc -licudata\"\npopd\n\ntar -xjf $SRC/boost_1_66_0.tar.bz2\npushd boost_1_66_0\npatch -p2 < $SRC/ofz2894.patch\npatch -p2 < $SRC/ofz4303.patch\nexport CPPFLAGS=\"-I$(pwd)\"\npopd\n\ntar -xjf $SRC/mdds-1.3.1.tar.bz2\npushd mdds-1.3.1\n./configure\nexport MDDS_CFLAGS=\"-I$(pwd)/include\"\nexport MDDS_LIBS=' '\npopd\n\npushd librevenge\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tests --enable-fuzzers\nmake -j$(nproc)\nrvnginc=$(pwd)/inc\nrvnglib=$(pwd)/src/lib\nexport REVENGE_CFLAGS=\"-I$(pwd)/inc\"\nexport REVENGE_LIBS=\"-L$(pwd)/src/lib -lrevenge-0.0\"\nexport REVENGE_STREAM_CFLAGS=\"-I$(pwd)/inc\"\nexport REVENGE_STREAM_LIBS=\"-L$(pwd)/src/lib -lrevenge-stream-0.0\"\nexport REVENGE_GENERATORS_CFLAGS=\"-I$(pwd)/inc\"\nexport REVENGE_GENERATORS_LIBS=\"-L$(pwd)/src/lib -lrevenge-generators-0.0\"\npopd\n\npushd libmspub\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers\nmake -j$(nproc)\npopd\n\npushd libcdr\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers --disable-tests\nmake -j$(nproc)\npopd\n\npushd libvisio\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers --disable-tests\nmake -j$(nproc)\npopd\n\npushd libzmf\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers --disable-tests\nmake -j$(nproc)\npopd\n\npushd libpagemaker\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers\nmake -j$(nproc)\npopd\n\npushd libfreehand\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers --disable-tests\nmake -j$(nproc)\npopd\n\npushd libwpd\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers\nmake -j$(nproc)\nexport WPD_CFLAGS=-I$(pwd)/inc\nexport WPD_LIBS=\"-L$(pwd)/src/lib -lwpd-0.10\"\npopd\n\npushd libwpg\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers\nmake -j$(nproc)\npopd\n\npushd libstaroffice\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers\nmake -j$(nproc)\npopd\n\npushd libwps\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers\nmake -j$(nproc)\npopd\n\npushd libmwaw\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --disable-zip --enable-fuzzers\nmake -C src/lib -j$(nproc)\n# Link with less parallelism to avoid memory problems on the builders\nmake -j2\npopd\n\npushd libe-book\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static \\\n    --without-tools --enable-fuzzers --without-liblangtag --disable-tests\nmake -j$(nproc)\npopd\n\npushd libabw\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers\nmake -j$(nproc)\npopd\n\npushd libetonyek\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static \\\n    --without-tools --enable-fuzzers --with-mdds=0.x --without-liblangtag --disable-tests\nmake -j$(nproc)\npopd\n\npushd libqxp\n./autogen.sh\n./configure --without-docs --disable-werror --disable-shared --enable-static --disable-tools --enable-fuzzers --disable-tests\nmake -j$(nproc)\npopd\n\ncp */src/fuzz/*fuzzer $OUT\ncp */src/fuzz/*.dict $OUT\ncp *_seed_corpus.zip $OUT\ncp *.options $OUT\n"
    },
    "dng_sdk": {
        "name": "dng_sdk",
        "language": "c++",
        "homepage": "https://android.googlesource.com/platform/external/dng_sdk/",
        "main_repo": "https://android.googlesource.com/platform/external/dng_sdk/",
        "primary_contact": "adaubert@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://android.googlesource.com/platform/external/dng_sdk/\"\nlanguage: c++\nprimary_contact: \"adaubert@google.com\"\nauto_ccs:\n  - david@adalogics.com\nmain_repo: 'https://android.googlesource.com/platform/external/dng_sdk/'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# compile source\ncd ./source\nrm dng_xmp*\nfind . -name \"*.cpp\" -exec $CXX $CXXFLAGS -DqDNGUseLibJPEG=1 -DqDNGUseXMP=0 -DqDNGThreadSafe=1 -c {} \\;\nar cr libdns_sdk.a *.o\n\n# compile fuzzer\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ../fuzzer/dng_parser_fuzzer.cpp -o $OUT/dng_parser_fuzzer \\\n  ./libdns_sdk.a -I./ -l:libjpeg.a -lz\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $SRC/dng_stage_fuzzer.cpp -o $OUT/dng_stage_fuzzer \\\n  ./libdns_sdk.a -I./ -l:libjpeg.a -lz\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $SRC/dng_camera_profile_fuzzer.cpp -o $OUT/dng_camera_profile_fuzzer \\\n  ./libdns_sdk.a -I./ -l:libjpeg.a -lz\n\nsed -i 's/main/main2/g' $SRC/dng_sdk/source/dng_validate.cpp\nsed -i 's/printf (\"Val/\\/\\//g' $SRC/dng_sdk/source/dng_validate.cpp\nsed -i 's/static//g' $SRC/dng_sdk/source/dng_validate.cpp\n\ncat $SRC/dng_sdk/source/dng_validate.cpp $SRC/dng_validate_fuzzer.cpp >> $SRC/dng_validate_fuzzer.tmp\nmv $SRC/dng_validate_fuzzer.tmp $SRC/dng_validate_fuzzer.cpp\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -DqDNGValidateTarget \\\n  $SRC/dng_sdk/source/dng_globals.cpp \\\n  $SRC/dng_validate_fuzzer.cpp \\\n  -o $OUT/dng_validate_fuzzer \\\n  ./libdns_sdk.a -I./ -l:libjpeg.a -lz\n\ncat $SRC/dng_sdk/source/dng_validate.cpp $SRC/dng_fixed_validate_fuzzer.cpp >> $SRC/dng_fixed_validate_fuzzer.tmp\nmv $SRC/dng_fixed_validate_fuzzer.tmp $SRC/dng_fixed_validate_fuzzer.cpp\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -DqDNGValidateTarget \\\n  $SRC/dng_sdk/source/dng_globals.cpp \\\n  $SRC/dng_fixed_validate_fuzzer.cpp \\\n  -o $OUT/dng_fixed_validate_fuzzer \\\n  ./libdns_sdk.a -I./ -l:libjpeg.a -lz\n\n\n# Create seed corpus and distribute to fuzzers\nmkdir $SRC/seed_corpus\ncp $SRC/dng_sdk/fuzzer/seeds/CVE_2020_9589/*.dng $SRC/seed_corpus/\nfind $SRC/image-tiff/ -regextype sed -regex \".*\\.\\(pbm\\|pgm\\|tif\\|tiff\\|png\\|ppm\\|jpg\\|exif\\)\" -exec cp {} $SRC/seed_corpus/ \\;\nfind $SRC/TiffLibrary/ -regextype sed -regex \".*\\.\\(pbm\\|pgm\\|tif\\|tiff\\|png\\|ppm\\|jpg\\|exif\\)\" -exec cp {} $SRC/seed_corpus/ \\;\nfind $SRC/exif-samples/ -regextype sed -regex \".*\\.\\(pbm\\|pgm\\|tif\\|tiff\\|png\\|ppm\\|jpg\\|exif\\)\" -exec cp {} $SRC/seed_corpus/ \\;\n\n# Download a compressed JPEG\nwget https://upload.wikimedia.org/wikipedia/commons/b/b2/JPEG_compression_Example.jpg -O $SRC/seed_corpus/compressed_JPEG.jpg\n\nzip -r -j $OUT/dng_parser_fuzzer_seed_corpus.zip $SRC/seed_corpus\ncp $OUT/dng_parser_fuzzer_seed_corpus.zip $OUT/dng_stage_fuzzer_seed_corpus.zip\ncp $OUT/dng_parser_fuzzer_seed_corpus.zip $OUT/dng_fixed_validate_fuzzer_seed_corpus.zip\n"
    },
    "dnsmasq": {
        "name": "dnsmasq",
        "language": "c",
        "homepage": "https://thekelleys.org.uk/dnsmasq/doc.html",
        "main_repo": "git://thekelleys.org.uk/dnsmasq.git",
        "primary_contact": "simon@thekelleys.org.uk",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://thekelleys.org.uk/dnsmasq/doc.html\"\nlanguage: c\nprimary_contact: \"simon@thekelleys.org.uk\"\nmain_repo: \"git://thekelleys.org.uk/dnsmasq.git\"\nauto_ccs:\n - \"david@adalogics.com\"\n - \"pemensik@redhat.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport ASAN_OPTIONS=\"detect_leaks=0\"\n\ngit apply  --ignore-space-change --ignore-whitespace $SRC/fuzz_patch.patch \n\nexport OSS_CFLAGS=\"$CFLAGS -g\"\n\nsed -i 's/CFLAGS        =/CFLAGS        = ${OSS_CFLAGS} /g' ./Makefile\nsed -i 's/LDFLAGS       =/LDFLAGS       = ${OSS_CFLAGS} /g' ./Makefile\n\n# Do some modificatiosn to the source\nsed -i 's/recvmsg(/fuzz_recvmsg(/g' ./src/dhcp-common.c \nsed -i 's/recvmsg(/fuzz_recvmsg(/g' ./src/netlink.c \nsed -i 's/ioctl(/fuzz_ioctl(/g' ./src/dhcp.c\nsed -i 's/ioctl(/fuzz_ioctl(/g' ./src/network.c\n\nsed -i 's/if (errno != 0/if (errno == 123123/g' ./src/netlink.c\n\necho \"\" >> ./src/dnsmasq.c \necho \"ssize_t fuzz_recvmsg(int sockfd, struct msghdr *msg, int flags) {return -1;}\" >> ./src/dnsmasq.c\necho \"int fuzz_ioctl(int fd, unsigned long request, void *arg) {return -1;}\" >> ./src/dnsmasq.c\nmake\n\n# Remove main function and create an archive\ncd ./src\nsed -i 's/int main (/int main2 (/g' ./dnsmasq.c\nsed -i 's/fuzz_recvmsg(/fuzz_recvmsg2(/g' ./dnsmasq.c\nsed -i 's/fuzz_ioctl(/fuzz_ioctl2(/g' ./dnsmasq.c\n\nrm dnsmasq.o\n$CC $CFLAGS -c dnsmasq.c -o dnsmasq.o -I./ -DVERSION=\\'\\\"UNKNOWN\\\"\\' \nar cr libdnsmasq.a *.o\n\nsed -i 's/class/class2/g' ./dnsmasq.h\nsed -i 's/new/new2/g' ./dnsmasq.h\n\n# Build the fuzzers\nfor fuzz_name in dhcp6 rfc1035 auth dhcp util; do\n    $CC $CFLAGS -c $SRC/fuzz_${fuzz_name}.c -I./ -I$SRC/ -DVERSION=\\'\\\"UNKNOWN\\\"\\' -g\n    $CC $CFLAGS $LIB_FUZZING_ENGINE ./fuzz_${fuzz_name}.o libdnsmasq.a -o $OUT/fuzz_${fuzz_name}\ndone\n"
    },
    "dnspython": {
        "name": "dnspython",
        "language": "python",
        "homepage": "https://github.com/rthalley/dnspython",
        "main_repo": "https://github.com/rthalley/dnspython",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/rthalley/dnspython\nlanguage: python\nmain_repo: https://github.com/rthalley/dnspython\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "docker-client": {
        "name": "docker-client",
        "language": "jvm",
        "homepage": "https://github.com/spotify/docker-client",
        "main_repo": "https://github.com/spotify/docker-client",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/spotify/docker-client\nmain_repo: https://github.com/spotify/docker-client\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True dependency:copy-dependencies \\\n    org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"./target/docker-client-$CURRENT_VERSION-shaded.jar\" $OUT/docker-client.jar\nls -d ./target/dependency/slf4j-api-*.jar | head -1 | xargs -I {} cp {} $OUT/slf4j-api.jar\n\nALL_JARS='docker-client.jar slf4j-api.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "docutils": {
        "name": "docutils",
        "language": "python",
        "homepage": "https://github.com/jwilk-mirrors/docutils",
        "main_repo": "https://github.com/jwilk-mirrors/docutils",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/jwilk-mirrors/docutils\nlanguage: python\nmain_repo: https://github.com/jwilk-mirrors/docutils\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython3 -m pip install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "dom4j": {
        "name": "dom4j",
        "language": "jvm",
        "homepage": "https://github.com/dom4j/dom4j",
        "main_repo": "https://github.com/dom4j/dom4j.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/dom4j/dom4j\"\nlanguage: jvm\nmain_repo: \"https://github.com/dom4j/dom4j.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\n./gradlew -x test build\ncp \"build/libs/dom4j.jar\" $OUT/dom4j.jar\n\nALL_JARS=\"dom4j.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "double-conversion": {
        "name": "double-conversion",
        "language": "c++",
        "homepage": "https://github.com/google/double-conversion",
        "main_repo": "https://github.com/google/double-conversion.git",
        "primary_contact": "florian@loitsch.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/double-conversion\"\nlanguage: c++\nprimary_contact: \"florian@loitsch.com\"\nauto_ccs:\n  - \"sbucur@google.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nlabels:\n  string_to_double_fuzzer:\n    - sundew\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/google/double-conversion.git'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir -p ${WORK}/double-conversion\ncd ${WORK}/double-conversion\n\ncmake -GNinja ${SRC}/double-conversion/\nninja\n\nfuzzer=\"string_to_double_fuzzer\"\n\n${CXX} ${CXXFLAGS} -std=c++11 -I${SRC}/double-conversion/double-conversion \\\n    -c ${SRC}/${fuzzer}.cc \\\n    -o ${fuzzer}.o\n${CXX} ${CXXFLAGS} -std=c++11 ${fuzzer}.o \\\n    -o ${OUT}/${fuzzer} \"${LIB_FUZZING_ENGINE}\" libdouble-conversion.a\n"
    },
    "dovecot": {
        "name": "dovecot",
        "language": "c",
        "homepage": "https://www.dovecot.org/",
        "main_repo": "https://github.com/dovecot/core",
        "primary_contact": "oss-fuzz@open-xchange.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.dovecot.org/\"\nlanguage: c\nprimary_contact: \"oss-fuzz@open-xchange.com\"\nauto_ccs:\n    - \"david@adalogics.com\"\n    - \"p.antoine@catenacyber.fr\"\n    - \"cmousefi@gmail.com\"\n    - \"boschstephan@gmail.com\"\n    - \"timo.sirainen@gmail.com\"\nmain_repo: 'https://github.com/dovecot/core'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n./autogen.sh\n./configure PANDOC=false --with-fuzzer=clang\nmake\n\n# Copy over the fuzzers\nfind . -name \"fuzz-*\" -executable -exec cp {} $OUT/ \\;\n"
    },
    "dpp": {
        "name": "dpp",
        "language": "c++",
        "homepage": "https://github.com/brainboxdotcc/DPP",
        "main_repo": "https://github.com/brainboxdotcc/DPP.git",
        "primary_contact": "craigedwardsbrainbox@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/brainboxdotcc/DPP\"\nlanguage: c++\nprimary_contact: \"craigedwardsbrainbox@gmail.com\"\nauto_ccs:\n  - \"craigedwards@brainbox.cc\"\nsanitizers:\n  - address\n  - memory:\n     experimental: True\n  - undefined\nmain_repo: 'https://github.com/brainboxdotcc/DPP.git'\n\n",
        "build_sh": null
    },
    "draco": {
        "name": "draco",
        "language": "c++",
        "homepage": "https://github.com/google/draco",
        "main_repo": "https://github.com/google/draco",
        "primary_contact": "fgalligan@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "centipede"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/draco\"\nlanguage: c++\nprimary_contact: \"fgalligan@google.com\"\nauto_ccs:\n  - \"ostava@google.com\"\n  - \"vytyaz@google.com\"\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n  - centipede\nmain_repo: 'https://github.com/google/draco'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsh $SRC/draco/src/draco/tools/fuzz/build.sh\n"
    },
    "dragonfly": {
        "name": "dragonfly",
        "language": "go",
        "homepage": "https://github.com/dragonflyoss/Dragonfly",
        "main_repo": "https://github.com/dragonflyoss/Dragonfly",
        "primary_contact": "zj3142063@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/dragonflyoss/Dragonfly\"\nprimary_contact: \"zj3142063@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/dragonflyoss/Dragonfly'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/dragonflyoss/Dragonfly/dfget/core/uploader FuzzParseParams uploader_fuzz\ncompile_go_fuzzer github.com/dragonflyoss/Dragonfly/supernode/daemon/mgr/cdn Fuzz cdn_fuzz\n"
    },
    "dropbear": {
        "name": "dropbear",
        "language": "c++",
        "homepage": "https://matt.ucc.asn.au/dropbear/dropbear.html",
        "main_repo": "https://github.com/mkj/dropbear",
        "primary_contact": "matt@ucc.asn.au",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://matt.ucc.asn.au/dropbear/dropbear.html\"\nlanguage: c++\nprimary_contact: \"matt@ucc.asn.au\"\nbuilds_per_day: 4\nmain_repo: \"https://github.com/mkj/dropbear\"\n",
        "build_sh": "#!/bin/bash\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n$SRC/dropbear/configure --enable-fuzz --disable-harden --disable-zlib\n\nmake -j$(nproc) fuzz-targets FUZZLIB=$LIB_FUZZING_ENGINE\n\nTARGETS=\"$(make list-fuzz-targets)\"\n\nmake -C $SRC/dropbear-corpus\n\ncp -v $TARGETS $OUT/\ncp -v *.options $OUT/\ncp -v $SRC/dropbear-corpus/*.zip $OUT/\ncp -v $SRC/dropbear-corpus/*.dict $OUT/\n"
    },
    "dropwizard": {
        "name": "dropwizard",
        "language": "jvm",
        "homepage": "https://github.com/dropwizard/dropwizard",
        "main_repo": "https://github.com/dropwizard/dropwizard",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/dropwizard/dropwizard\nmain_repo: https://github.com/dropwizard/dropwizard\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\nJARFILE_LIST=\nfor JARFILE in $(find ./  -name *.jar)\ndo\n  if [[ \"$JARFILE\" == *\"target/\"* ]] && [[ \"$JARFILE\" != *original*.jar ]]\n  then\n    if [[ \"$JARFILE\" != *sources.jar ]] && [[ \"$JARFILE\" != *javadoc.jar ]] && [[ \"$JARFILE\" != *tests.jar ]]\n    then\n      cp $JARFILE $OUT/\n      JARFILE_LIST=\"$JARFILE_LIST$(basename $JARFILE) \"\n    fi\n  fi\ndone\n\ncurr_dir=$(pwd)\nrm -rf $OUT/jar_temp\nmkdir $OUT/jar_temp\ncd $OUT/jar_temp\nfor JARFILE in $JARFILE_LIST\ndo\n  jar -xf $OUT/$JARFILE\ndone\ncd $curr_dir\n\ncp -r $JAVA_HOME $OUT/\n\nBUILD_CLASSPATH=$JAZZER_API_PATH:$OUT/jar_temp\nRUNTIME_CLASSPATH=\\$this_dir/jar_temp:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  $JAVA_HOME/bin/javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  export JAVA_HOME=\\$this_dir/$(basename $JAVA_HOME)\n  export LD_LIBRARY_PATH=\"\\$JAVA_HOME/lib/server\":\\$this_dir\n  export PATH=\\$JAVA_HOME/bin:\\$PATH\n\n  \\$this_dir/jazzer_driver                          \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "duckdb": {
        "name": "duckdb",
        "language": "c++",
        "homepage": "https://duckdb.org/",
        "main_repo": "https://github.com/duckdb/duckdb/",
        "primary_contact": "quack@duckdb.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://duckdb.org/\"\nlanguage: c++\nprimary_contact: \"quack@duckdb.org\"\nmain_repo: \"https://github.com/duckdb/duckdb/\"\nauto_ccs: \n  - \"hannes.muehleisen@gmail.com\"\n  - \"mark@duckdblabs.com\"\n  - \"david@adalogics.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmake relassert CRASH_ON_ASSERT=1 DISABLE_SANITIZER=1\nEXTENSION_LIBS=$(find ./build/relassert/extension/ -name \"*.a\")\nTHIRD_PARTY_LIBS=$(find ./build/relassert/third_party/ -name \"*.a\")\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./test/ossfuzz/parse_fuzz_test.cpp \\\n    -o $OUT/parse_fuzz_test -I./ -I./src/include \\\n    ./build/relassert/src/libduckdb_static.a \\\n    ${EXTENSION_LIBS} ${THIRD_PARTY_LIBS}\n"
    },
    "dulwich": {
        "name": "dulwich",
        "language": "python",
        "homepage": "https://github.com/jelmer/dulwich",
        "main_repo": "https://github.com/jelmer/dulwich",
        "primary_contact": "jvernooij@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/jelmer/dulwich\"\nmain_repo: \"https://github.com/jelmer/dulwich\"\nlanguage: python\nprimary_contact: \"jvernooij@gmail.com\"\nauto_ccs:\n  - \"david.js.lakin@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n. \"$SRC/dulwich/fuzzing/oss-fuzz-scripts/build.sh\"\n"
    },
    "e2fsprogs": {
        "name": "e2fsprogs",
        "language": "c",
        "homepage": "https://github.com/tytso/e2fsprogs",
        "main_repo": "https://github.com/tytso/e2fsprogs",
        "primary_contact": "tytso@mit.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/tytso/e2fsprogs\"\nlanguage: c\nprimary_contact: \"tytso@mit.edu\"\nauto_ccs:\n  - \"theodore.tso@gmail.com\"\n  - \"tytso@google.com\"\n  - \"mxms@google.com\"\nmain_repo: 'https://github.com/tytso/e2fsprogs'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nexport LDFLAGS=\"$CXXFLAGS\"\n$SRC/e2fsprogs/configure\nmake -j$(nproc) all\n\n# build fuzzers\nfor fuzzer in $(find $SRC/fuzz -name '*_fuzzer.cc'); do\n  fuzzer_basename=$(basename -s .cc $fuzzer)\n  $CXX $CXXFLAGS \\\n      $LIB_FUZZING_ENGINE \\\n      -I $SRC/e2fsprogs/lib \\\n      $fuzzer \\\n      -L'./lib/ext2fs' -lext2fs \\\n      -L'./lib/et' -lcom_err \\\n      -o $OUT/$fuzzer_basename\ndone\n"
    },
    "easywsclient": {
        "name": "easywsclient",
        "language": "c++",
        "homepage": "https://github.com/dhbaird/easywsclient",
        "main_repo": "https://github.com/dhbaird/easywsclient",
        "primary_contact": "dhbaird@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/dhbaird/easywsclient\"\nlanguage: c++\nprimary_contact: \"dhbaird@gmail.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/dhbaird/easywsclient'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfor f in $(find $SRC -name '*_fuzzer.cpp'); do\n    b=$(basename -s .cpp $f)\n    $CXX $CXXFLAGS -std=c++11 -g easywsclient.cpp -I. \\\n        $f -o $OUT/$b $LIB_FUZZING_ENGINE\ndone\n"
    },
    "ecc-diff-fuzzer": {
        "name": "ecc-diff-fuzzer",
        "language": "c++",
        "homepage": "https://github.com/catenacyber/elliptic-curve-differential-fuzzer",
        "main_repo": "https://github.com/catenacyber/elliptic-curve-differential-fuzzer",
        "primary_contact": "p.antoine@catenacyber.fr",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/catenacyber/elliptic-curve-differential-fuzzer\"\nlanguage: c++\nprimary_contact: \"p.antoine@catenacyber.fr\"\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nmain_repo: https://github.com/catenacyber/elliptic-curve-differential-fuzzer\narchitectures:\n- x86_64\n- i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# use a linker that supports Dwarf v5\nexport LDFLAGS=\"-fuse-ld=lld\"\n\n# build projects\n#nettle\n(\ncd nettle\ntar -xvf ../gmp-6.2.1.tar.bz2\ncd gmp-6.2.1\n#do not use assembly instructions as we do not know if they will be available on the machine who will run the fuzzer\n#we could do instead --enable-fat\n./configure --disable-shared --disable-assembly\nmake -j$(nproc)\nmake install\ncd ..\nautoreconf\n./configure --disable-shared --disable-openssl\nmake -j$(nproc)\nmake install\n)\n\n#cryptopp\n(\ncd cryptopp\nmake -j$(nproc)\nmake install\n)\n\n#gcrypt\n(\ncd libgpg-error\n# fix for following error\n# error: gettext infrastructure mismatch: using a Makefile.in.in from gettext version 0.19 but the autoconf macros are from gettext version 0.20\ntimeout 3 gettextize -f || true\n./autogen.sh\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n    ./configure -host=i386 --disable-doc --enable-static --disable-shared\nelse\n    ./configure --disable-doc --enable-static --disable-shared\nfi\nmake -j$(nproc)\nmake install\ncd ../gcrypt\n./autogen.sh\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n    ./configure -host=i386 --enable-static --disable-shared --disable-doc --enable-maintainer-mode\nelse\n    ./configure --enable-static --disable-shared --disable-doc --enable-maintainer-mode\nfi\nmake -j$(nproc)\nmake install\n# defined at aria.o:(aria_encrypt) in archive /lib/x86_64-linux-gnu/libcrypto.a\nsed -i -e s/aria_encrypt/ariagencrypt/ /usr/local/lib/libgcrypt.a\n)\n\n#mbedtls\n(\ncd mbedtls\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n    export CFLAGS=\"$CFLAGS -maes -mpclmul\"\nfi\ncmake . -DENABLE_PROGRAMS=0 -DENABLE_TESTING=0\nmake -j$(nproc) all\nmake install\n)\n\n#openssl\n(\ncd openssl\n#option to not have the same exported function poly1305_blocks as in gcrypt\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n    setarch i386 ./config no-poly1305 no-shared no-threads -m32\nelse\n    ./config no-poly1305 no-shared no-threads\nfi\nmake build_generated libcrypto.a\nmake install\n)\n\n#libecc\n(\ncd libecc\n#required by libecc\n(export CFLAGS=\"$CFLAGS -fPIC\"; make; cp build/*.a /usr/local/lib; cp -r include/* /usr/local/include/)\n)\n\n#botan\n(\ncd botan\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n    ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" \\\n               --disable-shared --disable-modules=locking_allocator --disable-shared-library \\\n               --without-os-features=getrandom,getentropy --cpu x86_32\nelse\n    ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" \\\n               --disable-shared --disable-modules=locking_allocator --disable-shared-library \\\n               --without-os-features=getrandom,getentropy\nfi\nmake -j$(nproc) libs\nmake install\n)\n\n#quickjs\n(\ncd quickjs\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n    make qjsc\n    cp qjsc /usr/local/bin/\n    make clean\n    # Makefile should not override CFLAGS\n    sed -i -e 's/CFLAGS=/CFLAGS+=/' Makefile\n    CFLAGS=\"-m32\" make libquickjs.a\nelse\n    make && make install\nfi\ncp quickjs*.h /usr/local/include/\ncp libquickjs.a /usr/local/lib/\n)\n\nexport CARGO_BUILD_TARGET=\"x86_64-unknown-linux-gnu\"\n#build fuzz target\ncd ecfuzzer\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n    export GOARCH=386\n#needed explicitly because of cross compilation cf https://golang.org/cmd/cgo/\n    export CGO_ENABLED=1\n    export CARGO_BUILD_TARGET=i686-unknown-linux-gnu\nfi\nzip -r fuzz_ec_seed_corpus.zip corpus/\ncp fuzz_ec_seed_corpus.zip $OUT/\ncp fuzz_ec.dict $OUT/\ncp fuzz_ec.dict $OUT/fuzz_ec_noblocker.dict\n\nmkdir build\ncd build\n#no afl with long javascript initialization\nif [ \"$FUZZING_ENGINE\" != 'afl' ]; then\n    cmake ..\n    make -j$(nproc)\n    cp ecfuzzer $OUT/fuzz_ec\n    rm -Rf *\nfi\n\n#another target without javascript\ncmake -DDISABLE_JS=ON ..\nmake -j$(nproc)\ncp ecfuzzer $OUT/fuzz_ec_noblocker\n"
    },
    "ecdsa-python": {
        "name": "ecdsa-python",
        "language": "python",
        "homepage": "https://github.com/starkbank/ecdsa-python",
        "main_repo": "https://github.com/starkbank/ecdsa-python/",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/starkbank/ecdsa-python\nlanguage: python\nmain_repo: https://github.com/starkbank/ecdsa-python/\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd ecdsa-python\npython3 ./setup.py install\n\n# Build fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "eclipse-equinox": {
        "name": "eclipse-equinox",
        "language": "jvm",
        "homepage": "https://github.com/eclipse-equinox/equinox",
        "main_repo": "https://github.com/eclipse-equinox/equinox",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/eclipse-equinox/equinox\"\nlanguage: jvm\nmain_repo: \"https://github.com/eclipse-equinox/equinox\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nSRC_SUBDIR=\"\"\n#MVN_FLAGS=\"-Djavac.src.version=17 -Djavac.target.version=17 -DskipTests -Drt.equinox.binaries.loc=${SRC}/equinox.binaries\"\nMVN_FLAGS=\"-DskipTests -Drt.equinox.binaries.loc=${SRC}/equinox.binaries -Pbuild-individual-bundles -Pbree-libs -Papi-check -Dcompare-version-with-baselines.skip=false -Dproject.build.sourceEncoding=UTF-8 -Dmaven.test.failure.ignore=true\"\nALL_JARS=\"\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.14.0\" \\\n\t\t-Dpackaging=jar\npopd\n\n# Build needs to be run in the CVSROOT\npushd \"${SRC}/${LIBRARY_NAME}/${SRC_SUBDIR}\"\n\t${MVN} install ${MVN_FLAGS}\npopd\n\n# ... while the subprojects have varying versions\npushd \"${SRC}/${LIBRARY_NAME}/bundles/org.eclipse.osgi\"\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}-fuzzer\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\t\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "edk2": {
        "name": "edk2",
        "language": "c",
        "homepage": "https://www.tianocore.org",
        "main_repo": "https://github.com/tianocore/edk2",
        "primary_contact": "tamas.k.lengyel@gmail.com",
        "vendor_ccs": [
            "edk2-hbfa-ossfuzz@intel.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.tianocore.org\"\nlanguage: c\nfuzzing_engines:\n   - libfuzzer\nsanitizers:\n   - address\n   - undefined\nprimary_contact: \"tamas.k.lengyel@gmail.com\"\nauto_ccs:\n   - \"rowanbhart@gmail.com\"\nvendor_ccs:\n   - \"edk2-hbfa-ossfuzz@intel.com\"\nmain_repo: \"https://github.com/tianocore/edk2\"\nfile_github_issue: false\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nhbfa-fl/oss-fuzz/build.sh\n"
    },
    "eigen": {
        "name": "eigen",
        "language": "c++",
        "homepage": "http://eigen.tuxfamily.org/index.php?title=Main_Page",
        "main_repo": "https://gitlab.com/libeigen/eigen.git",
        "primary_contact": "eigen-core-team@lists.tuxfamily.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"http://eigen.tuxfamily.org/index.php?title=Main_Page\"\nlanguage: c++\nprimary_contact: \"eigen-core-team@lists.tuxfamily.org\"\nsanitizers:\n - address\n - memory\n - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://gitlab.com/libeigen/eigen.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nmkdir build_dir && cd build_dir\ncmake ..\nmake install\ncd ..\n\n# build fuzzers\nfor fuzzers in $(find $SRC -name '*_fuzzer.cc'); do\n  fuzz_basename=$(basename -s .cc $fuzzers)\n  $CXX $CXXFLAGS -I. -Isrc/Eigen/Core \\\n  $fuzzers -o $OUT/$fuzz_basename $LIB_FUZZING_ENGINE\ndone\n"
    },
    "elfutils": {
        "name": "elfutils",
        "language": "c++",
        "homepage": "https://sourceware.org/elfutils/",
        "main_repo": "https://sourceware.org/git/elfutils.git",
        "primary_contact": "elfutils-devel@sourceware.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://sourceware.org/elfutils/\"\nlanguage: c++\nbuilds_per_day: 4\nprimary_contact: \"elfutils-devel@sourceware.org\"\nmain_repo: \"https://sourceware.org/git/elfutils.git\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nview_restrictions: none\nauto_ccs:\n  - evverx@gmail.com\n  - izzeem@google.com\n  - david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# This script is supposed to be compatible with OSS-Fuzz, i.e. it has to use\n# environment variables like $CC, $CFLAGS, $OUT, link the fuzz targets with CXX\n# (even though the project is written in C) and so on:\n# https://google.github.io/oss-fuzz/getting-started/new-project-guide/#buildsh\n\n# It can be used to build and run the fuzz targets using Docker and the images\n# provided by the OSS-Fuzz project: https://google.github.io/oss-fuzz/advanced-topics/reproducing/#building-using-docker\n\n# It can also be used to build and run the fuzz target locally without Docker.\n# After installing clang and the build dependencies of libelf by running something\n# like `dnf build-dep elfutils-devel` on Fedora or `apt-get build-dep libelf-dev`\n# on Debian/Ubuntu, the following commands should be run:\n#\n#  $ git clone https://github.com/google/oss-fuzz\n#  $ cd oss-fuzz/projects/elfutils\n#  $ git clone https://sourceware.org/git/elfutils.git\n#  $ ./build.sh\n#  $ wget -O fuzz-dwfl-core-corpus.zip \"https://storage.googleapis.com/elfutils-backup.clusterfuzz-external.appspot.com/corpus/libFuzzer/elfutils_fuzz-dwfl-core/public.zip\"\n#  $ unzip -d CORPUS fuzz-dwfl-core-corpus.zip\n#  $ ./out/fuzz-dwfl-core CORPUS/\n\nset -eux\n\nSANITIZER=${SANITIZER:-address}\nflags=\"-O1 -fno-omit-frame-pointer -g -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION -fsanitize=$SANITIZER -fsanitize=fuzzer-no-link\"\n\nexport CC=${CC:-clang}\nexport CFLAGS=${CFLAGS:-$flags}\n\nexport CXX=${CXX:-clang++}\nexport CXXFLAGS=${CXXFLAGS:-$flags}\n\nexport SRC=${SRC:-$(realpath -- $(dirname -- \"$0\"))}\nexport OUT=${OUT:-\"$SRC/out\"}\nmkdir -p \"$OUT\"\n\nexport LIB_FUZZING_ENGINE=${LIB_FUZZING_ENGINE:--fsanitize=fuzzer}\n\ncd \"$SRC/elfutils\"\n\n# ASan isn't compatible with -Wl,--no-undefined: https://github.com/google/sanitizers/issues/380\nsed -i 's/^\\(NO_UNDEFINED=\\).*/\\1/' configure.ac\n\n# ASan isn't compatible with -Wl,-z,defs either:\n# https://clang.llvm.org/docs/AddressSanitizer.html#usage\nsed -i 's/^\\(ZDEFS_LDFLAGS=\\).*/\\1/' configure.ac\n\n# srcfiles.cxx started failing to compile with the OSS-Fuzz toolchain\n# when it was switched from clang-18.0.0 to clang-18.1.8 in\n# https://github.com/google/oss-fuzz/pull/12365.\n# https://github.com/google/oss-fuzz/pull/12365#discussion_r1784702452\n# It's probably an OSS-Fuzz toolchain bug but it doesn't matter much\n# because the srcfiles binary isn't relevant in terms of fuzzing and\n# can safely be excluded.\nsed -i 's/^\\(srcfiles_\\)/#/' src/Makefile.am\nsed -i 's/\\bsrcfiles\\b//' src/Makefile.am\n\nif [[ \"$SANITIZER\" == undefined ]]; then\n    additional_ubsan_checks=alignment\n    UBSAN_FLAGS=\"-fsanitize=$additional_ubsan_checks -fno-sanitize-recover=$additional_ubsan_checks\"\n    CFLAGS=\"$CFLAGS $UBSAN_FLAGS\"\n    CXXFLAGS=\"$CXXFLAGS $UBSAN_FLAGS\"\n\n    # That's basicaly what --enable-sanitize-undefined does to turn off unaligned access\n    # elfutils heavily relies on on i386/x86_64 but without changing compiler flags along the way\n    sed -i 's/\\(check_undefined_val\\)=[0-9]/\\1=1/' configure.ac\nfi\n\nif [[ \"$SANITIZER\" == memory ]]; then\n    CFLAGS+=\" -U_FORTIFY_SOURCE\"\n    CXXFLAGS+=\" -U_FORTIFY_SOURCE\"\nfi\n\n$CC --version\nautoreconf -i -f\nif ! ./configure --enable-maintainer-mode --disable-debuginfod --disable-libdebuginfod \\\n            --disable-demangler --without-bzlib --without-lzma --without-zstd \\\n\t    CC=\"$CC\" CFLAGS=\"-Wno-error $CFLAGS\" CXX=\"$CXX\" CXXFLAGS=\"-Wno-error $CXXFLAGS\" LDFLAGS=\"$CFLAGS\"; then\n    cat config.log\n    exit 1\nfi\n\nASAN_OPTIONS=detect_leaks=0 make -j$(nproc) V=1\n\n# External dependencies used by the fuzz targets have to be built\n# with MSan explicitly to avoid bogus \"security\" bug reports like\n# https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=45630,\n# https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=45631 and\n# https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=45633\n# To make sure all the fuzz targets use the same version of zlib\n# it's also built with ASan and UBSan.\ngit clone https://github.com/madler/zlib\npushd zlib\ngit checkout v1.3.1\nif ! ./configure --static; then\n    cat configure.log\n    exit 1\nfi\nmake -j$(nproc) V=1\npopd\nzlib=zlib/libz.a\n\n# When new fuzz targets are added it usually makes sense to notify the maintainers of\n# the elfutils project using the mailing list: elfutils-devel@sourceware.org. There\n# fuzz targets can be reviewed properly (to make sure they don't fail to compile\n# with -Werror for example), their names can be chosen accordingly (so as not to spam\n# the mailing list with bogus bug reports that are opened and closed once they are renamed)\n# and so on. Also since a lot of bug reports coming out of the blue aren't exactly helpful\n# fuzz targets should probably be added one at a time to make it easier to keep track\n# of them.\nCFLAGS+=\" -Werror -Wall -Wextra\"\nCXXFLAGS+=\" -Werror -Wall -Wextra\"\n\n# fuzz-dwfl-core is kind of a systemd fuzz target in the sense that it resembles the\n# code systemd uses to parse coredumps. Please ping @evverx if it's changed.\n$CC $CFLAGS \\\n\t-D_GNU_SOURCE -DHAVE_CONFIG_H \\\n\t-I. -I./lib -I./libelf -I./libebl -I./libdw -I./libdwelf -I./libdwfl -I./libasm \\\n\t-c \"$SRC/fuzz-dwfl-core.c\" -o fuzz-dwfl-core.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz-dwfl-core.o \\\n\t./libdw/libdw.a ./libelf/libelf.a ./lib/libeu.a \"$zlib\" \\\n\t-o \"$OUT/fuzz-dwfl-core\"\n\n$CC $CFLAGS \\\n  -D_GNU_SOURCE -DHAVE_CONFIG_H \\\n  -I. -I./lib -I./libelf -I./libebl -I./libdw -I./libdwelf -I./libdwfl -I./libasm \\\n  -c \"$SRC/fuzz-libelf.c\" -o fuzz-libelf.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz-libelf.o \\\n\t./libasm/libasm.a ./libebl/libebl.a ./backends/libebl_backends.a ./libcpu/libcpu.a \\\n  ./libdw/libdw.a ./libelf/libelf.a ./lib/libeu.a \"$zlib\" \\\n\t-o \"$OUT/fuzz-libelf\"\n\n$CC $CFLAGS \\\n  -D_GNU_SOURCE -DHAVE_CONFIG_H \\\n  -I. -I./lib -I./libelf -I./libebl -I./libdw -I./libdwelf -I./libdwfl -I./libasm \\\n  -c \"$SRC/fuzz-libdwfl.c\" -o fuzz-libdwfl.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz-libdwfl.o \\\n\t./libasm/libasm.a ./libebl/libebl.a ./backends/libebl_backends.a ./libcpu/libcpu.a \\\n  ./libdw/libdw.a ./libelf/libelf.a ./lib/libeu.a \"$zlib\" \\\n\t-o \"$OUT/fuzz-libdwfl\"\n"
    },
    "envoy": {
        "name": "envoy",
        "language": "c++",
        "homepage": "https://www.envoyproxy.io/",
        "main_repo": "https://github.com/envoyproxy/envoy.git",
        "primary_contact": "htuch@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.envoyproxy.io/\"\nlanguage: c++\nprimary_contact: \"htuch@google.com\"\nauto_ccs:\n  - \"mattklein123@gmail.com\"\n  - \"jmarantz@google.com\"\n  - \"lizan@tetrate.io\"\n  - \"envoy-security@googlegroups.com\"\n  - \"yavlasov@google.com\"\n  - \"asraa@google.com\"\n  - \"adip@google.com\"\n  - \"yanjunxiang@google.com\"\n  - \"tyxia@google.com\"\n  - \"krajshiva@google.com\"\n  - \"boteng@google.com\"\n  - \"leonti@google.com\"\n  - \"copybara-watcher-pod-watcher-git@system.gserviceaccount.com\"\n  - \"copybara-worker@system.gserviceaccount.com\"\ncoverage_extra_args: -ignore-filename-regex=.*\\.cache.*envoy_deps_cache.*\nmain_repo: 'https://github.com/envoyproxy/envoy.git'\nsanitizers:\n - address\n - undefined\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\nlabels:\n  \"*\":\n    - ossfuzz-bugz-1149782\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Overcome missing dependency declaration with path mapping issue. This is\n# similar to the current abseil build (see\n# https://github.com/google/oss-fuzz/pull/12858), to overcome the issue\n# mentioned in https://github.com/bazelbuild/bazel/issues/23681.\nexport USE_BAZEL_VERSION=7.4.0\n\ndeclare -r FUZZ_TARGET_QUERY='\n  let all_fuzz_tests = attr(tags, \"fuzz_target\", \"test/...\") in\n  $all_fuzz_tests - attr(tags, \"no_fuzz\", $all_fuzz_tests)\n'\n\nif [ -n \"${OSS_FUZZ_CI-}\" ]\nthen\n  # CI has fewer resources so restricting to a small number of fuzz targets.\n  # Choosing the header_parser, and header_map_impl.\n  declare -r OSS_FUZZ_TARGETS=\"$(bazel query \"${FUZZ_TARGET_QUERY}\" | grep ':header' | sed 's/$/_oss_fuzz/')\"\nelse\n  declare -r OSS_FUZZ_TARGETS=\"$(bazel query \"${FUZZ_TARGET_QUERY}\" | sed 's/$/_oss_fuzz/')\"\nfi\n\ndeclare -r EXTRA_BAZEL_FLAGS=\"$(\n# Disabling layering_check because it breaks the abseil build. See\n# https://github.com/google/oss-fuzz/blob/f0fa8b5cd3f99b5905e91b336d07a870ca1bc2e3/projects/abseil-cpp/build.sh#L17-L21.\necho \"--features=-layering_check\"\nif [ -n \"$CC\" ]; then\n  echo \"--action_env=CC=${CC}\"\nfi\nif [ -n \"$CXX\" ]; then\n  echo \"--action_env=CXX=${CXX}\"\nfi\necho \"--host_action_env=CC=gcc\"\nif [ \"$SANITIZER\" = \"undefined\" ]\nthen\n  # Bazel uses clang to link binary, which does not link clang_rt ubsan library for C++ automatically.\n  # See issue: https://github.com/bazelbuild/bazel/issues/8777\n  echo \"--linkopt=$(clang -print-file-name=libclang_rt.ubsan_standalone_cxx.a)\"\n  echo \"--linkopt=-fsanitize=undefined\"\nelif [ \"$SANITIZER\" = \"address\" ]\nthen\n  echo \"--copt=-D__SANITIZE_ADDRESS__\" \"--copt=-DADDRESS_SANITIZER=1\" \"--linkopt=-fsanitize=address\"\nfi\n)\"\n\n# The Envoy build configuration may clobber CFLAGS/CXXFLAGS, so we use separate\n# environment variables that are understood by rules_fuzzing.\nexport FUZZING_CFLAGS=\"$CFLAGS\"\nexport FUZZING_CXXFLAGS=\"$CXXFLAGS\"\n\n# Disable instrumentation in various external libraries. These\n# are fuzzed elsewhere.\n# The following disables both coverage-instrumentation and other sanitizer instrumentation.\n# We disable instrumentation in:\n#  antlr4\n#  google_protobuf\n#  absl\n#  googltest\n#  grpc\n#  boringssl\n#  re2\n#  upb\n#  brotli\n#  cel_cpp\n#  yaml_cpp\n#  wasm_cpp_host\n#  libprotobuf-mutator\n#  google_url (gurl)\n#  lightstep_tracer\n# In addition to this, we disable instrumentation in all *.pb.cc (protobuf-generated files)\n# and everything in the bazel-out directory.\ndeclare -r DI=\"$(\nif [ \"$SANITIZER\" != \"coverage\" ]\nthen\n# Envoy code. Disable coverage instrumentation\n  echo \" --per_file_copt=^.*source/extensions/access_loggers/.*\\.cc\\$@-fsanitize-coverage=0\"\n  echo \" --per_file_copt=^.*source/common/protobuf/.*\\.cc\\$@-fsanitize-coverage=0\"\n\n# Envoy test code. Disable coverage instrumentation\n  echo \" --per_file_copt=^.*test/.*\\.cc\\$@-fsanitize-coverage=0\"\n\n# External dependencies. Disable all instrumentation.\n  echo \" --per_file_copt=^.*com_google_protobuf.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*com_google_absl.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*com_github_grpc_grpc.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*boringssl.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*com_googlesource_code_re2.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*upb.*\\.cpp\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*org_brotli.*\\.cpp\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*com_github_jbeder_yaml_cpp.*\\.cpp\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*proxy_wasm_cpp_host/.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*com_github_google_libprotobuf_mutator/.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*com_googlesource_googleurl/.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*com_lightstep_tracer_cpp/.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n\n# External dependency which needs to be compiled with sanitizers. Disable\n# coverage instrumentation.\n  echo \" --per_file_copt=^.*com_google_cel_cpp.*\\.cpp\\$@-fsanitize-coverage=0\"\n  echo \" --per_file_copt=^.*antlr4_runtimes.*\\.cpp\\$@-fsanitize-coverage=0\"\n  echo \" --per_file_copt=^.*googletest.*\\.cc\\$@-fsanitize-coverage=0\"\n\n# All protobuf code and code in bazel-out\n  echo \" --per_file_copt=^.*\\.pb\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\n  echo \" --per_file_copt=^.*bazel-out/.*\\.cc\\$@-fsanitize-coverage=0,-fno-sanitize=all\"\nfi\n)\"\n\n\n# Asssuming we have ~32 cores and ~28.8 GiB RAM. By limiting the\n# number of CPUs (--local_cpu_resources) we limit the per-CPU mem-usage.\n# Benchmark about 3.6 GB per CPU (8 threads for 28.8 GB RAM)\n# TODO(asraa): Remove deprecation warnings when Envoy and deps moves to C++17\nbazel build --verbose_failures --dynamic_mode=off ${DI} \\\n  --spawn_strategy=standalone --genrule_strategy=standalone \\\n  --local_cpu_resources=HOST_CPUS*0.256 \\\n  --//source/extensions/wasm_runtime/v8:enabled=false \\\n  --build_tag_filters=-no_asan --config=oss-fuzz \\\n  ${EXTRA_BAZEL_FLAGS} \\\n  ${OSS_FUZZ_TARGETS[*]}\n\n# Profiling with coverage requires that we resolve+copy all Bazel symlinks and\n# also remap everything under proc/self/cwd to correspond to Bazel build paths.\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n  # The build invoker looks for sources in $SRC, but it turns out that we need\n  # to not be buried under src/, paths are expected at out/proc/self/cwd by\n  # the profiler.\n  declare -r REMAP_PATH=\"${OUT}/proc/self/cwd\"\n  mkdir -p \"${REMAP_PATH}\"\n  # Copy the cc and header files that will be covered.\n  rsync -av \"${SRC}\"/envoy/source \"${REMAP_PATH}\"\n  rsync -av \"${SRC}\"/envoy/test \"${REMAP_PATH}\"\n  rsync -av \"${SRC}\"/envoy/envoy \"${REMAP_PATH}\"\n  # Envoy currently uses a modified version of http_parser (see:\n  # https://github.com/envoyproxy/envoy/issues/19749).\n  declare -r BAZEL_EXTERNAL_REMAP_PATH=\"${REMAP_PATH}/external/envoy/bazel/external\"\n  mkdir -p \"${BAZEL_EXTERNAL_REMAP_PATH}\"\n  rsync -av \"${SRC}\"/envoy/bazel/external/http_parser \"${BAZEL_EXTERNAL_REMAP_PATH}\"\n  # Remove filesystem loop manually.\n  rm -rf \"${SRC}\"/envoy/bazel-envoy/external/envoy\n  # Clean up symlinks with a missing referrant.\n  find \"${SRC}\"/envoy/bazel-envoy/external -follow -type l -ls -delete || echo \"Symlink cleanup soft fail\"\n  rsync -avLk \"${SRC}\"/envoy/bazel-envoy/external \"${REMAP_PATH}\"\n  # For .h, and some generated artifacts, we need bazel-out/. Need to heavily\n  # filter out the build objects from bazel-out/. Also need to resolve symlinks,\n  # since they don't make sense outside the build container.\n  declare -r RSYNC_FILTER_ARGS=(\"--include\" \"*.h\" \"--include\" \"*.cc\" \"--include\" \\\n    \"*.hpp\" \"--include\" \"*.cpp\" \"--include\" \"*.c\" \"--include\" \"*/\" \"--exclude\" \"*\")\n  rsync -avLk \"${RSYNC_FILTER_ARGS[@]}\" \"${SRC}\"/envoy/bazel-out \"${REMAP_PATH}\"\n  rsync -avLkR \"${RSYNC_FILTER_ARGS[@]}\" \"${HOME}\" \"${OUT}\"\n  rsync -avLkR \"${RSYNC_FILTER_ARGS[@]}\" /tmp \"${OUT}\"\nfi\n\nfor oss_fuzz_archive in $(find bazel-bin/ -name '*_oss_fuzz.tar'); do\n    tar -xvf \"${oss_fuzz_archive}\" -C \"${OUT}\"\ndone\n\n# Cleanup bazel- symlinks to avoid oss-fuzz trying to copy out of the build\n# cache.\nrm -f bazel-*\n"
    },
    "esp-v2": {
        "name": "esp-v2",
        "language": "c++",
        "homepage": "https://github.com/GoogleCloudPlatform/esp-v2",
        "main_repo": "https://github.com/GoogleCloudPlatform/esp-v2.git",
        "primary_contact": "nareddyt@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/GoogleCloudPlatform/esp-v2\"\nlanguage: c++\nprimary_contact: \"nareddyt@google.com\"\nauto_ccs:\n- \"taoxuy@google.com\"\n- \"qiwzhang@google.com\"\nsanitizers:\n- address\n- undefined\ncoverage_extra_args: -ignore-filename-regex=.*\\.cache.* -ignore-filename-regex=.*bazel-out.*\nmain_repo: 'https://github.com/GoogleCloudPlatform/esp-v2.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncat <<EOF >> .bazelrc\n#build:oss-fuzz --config=fuzzing\nbuild:oss-fuzz --define=FUZZING_ENGINE=oss-fuzz\nbuild:oss-fuzz --@rules_fuzzing//fuzzing:cc_engine_instrumentation=oss-fuzz\nbuild:oss-fuzz --@rules_fuzzing//fuzzing:cc_engine_sanitizer=none\nbuild:oss-fuzz --dynamic_mode=off\nbuild:oss-fuzz --strip=never\nbuild:oss-fuzz --copt=-fno-sanitize=vptr\nbuild:oss-fuzz --linkopt=-fno-sanitize=vptr\nbuild:oss-fuzz --define=tcmalloc=disabled\nbuild:oss-fuzz --define=signal_trace=disabled\nbuild:oss-fuzz --copt=-D_LIBCPP_DISABLE_DEPRECATION_WARNINGS\nbuild:oss-fuzz --define=force_libcpp=enabled\nbuild:oss-fuzz --linkopt=-lc++\nbuild:oss-fuzz --linkopt=-pthread\nEOF\n\n## Copied from envoy\nexport CFLAGS=\"$CFLAGS\"\nexport CXXFLAGS=\"$CXXFLAGS\"\n\n# Copy $CFLAGS and $CXXFLAGS into Bazel command-line flags, for both\n# compilation and linking.\n#\n# Some flags, such as `-stdlib=libc++`, generate warnings if used on a C source\n# file. Since the build runs with `-Werror` this will cause it to break, so we\n# use `--conlyopt` and `--cxxopt` instead of `--copt`.\n#\ndeclare -r EXTRA_BAZEL_FLAGS=\"$(\nfor f in ${CFLAGS}; do\n  echo \"--conlyopt=${f}\" \"--linkopt=${f}\"\ndone\nfor f in ${CXXFLAGS}; do\n  echo \"--cxxopt=${f}\" \"--linkopt=${f}\"\ndone\nif [ \"$SANITIZER\" = \"undefined\" ]\nthen\n  # Bazel uses clang to link binary, which does not link clang_rt ubsan library for C++ automatically.\n  # See issue: https://github.com/bazelbuild/bazel/issues/8777\n  echo \"--linkopt=$(find $(llvm-config --libdir) -name libclang_rt.ubsan_standalone_cxx-x86_64.a | head -1)\"\n  echo \"--linkopt=-fsanitize=undefined\"\nelif [ \"$SANITIZER\" = \"address\" ]\nthen\n  echo \"--copt=-D__SANITIZE_ADDRESS__\" \"--copt=-DADDRESS_SANITIZER=1\" \"--linkopt=-fsanitize=address\"\nfi\n)\"\n\n# Find targets\ndeclare BAZEL_BUILD_TARGETS=\"\"\ndeclare BAZEL_CORPUS_TARGETS=\"\"\ndeclare FILTERED_FUZZER_TARGETS=\"\"\n\n# In CI we only build a single target as otherwise we exhaust resources in the CI\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n  fuzz_suffix='json_struct_fuzz_test$'\nelse\n  fuzz_suffix='_fuzz_test$'\nfi\n\nfor t in $(bazel query 'src/...' --output label | grep $fuzz_suffix)\ndo\n  declare TAGGED=$(bazel query \"attr('tags', 'no_fuzz', ${t})\")\n  if [ -z \"${TAGGED}\" ]\n  then\n    BASE_PATH=${t//://}\n    BASE_PATH=${BASE_PATH#\"//\"}\n    FILTERED_FUZZER_TARGETS+=\"${BASE_PATH} \"\n    BAZEL_BUILD_TARGETS+=\"${t} \"\n    BAZEL_CORPUS_TARGETS+=\"${t}_corpus \"\n  fi\ndone\n\n# Build driverless libraries.\n# Benchmark about 3 GB per CPU (10 threads for 28.8 GB RAM)\n# TODO(nareddyt): Remove deprecation warnings when Envoy and deps moves to C++17\nbazel build --verbose_failures --dynamic_mode=off --spawn_strategy=sandboxed \\\n  --local_cpu_resources=HOST_CPUS*0.32 \\\n  --genrule_strategy=standalone --strip=never \\\n  --copt=-fno-sanitize=vptr --linkopt=-fno-sanitize=vptr \\\n  --define tcmalloc=disabled --define signal_trace=disabled \\\n  --define ENVOY_CONFIG_ASAN=1 \\\n  --define force_libcpp=enabled --build_tag_filters=-no_asan \\\n  --linkopt=-lc++ --linkopt=-pthread ${EXTRA_BAZEL_FLAGS} --config=oss-fuzz \\\n  ${BAZEL_BUILD_TARGETS[*]} ${BAZEL_CORPUS_TARGETS[*]}\n\n# Profiling with coverage requires that we resolve+copy all Bazel symlinks and\n# also remap everything under proc/self/cwd to correspond to Bazel build paths.\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n  # The build invoker looks for sources in $SRC, but it turns out that we need\n  # to not be buried under src/, paths are expected at out/proc/self/cwd by\n  # the profiler.\n  declare -r REMAP_PATH=\"${OUT}/proc/self/cwd\"\n  mkdir -p \"${REMAP_PATH}\"\n\n  rsync -av \"${SRC}\"/esp-v2/src \"${REMAP_PATH}\"\n  # Remove filesystem loop manually.\n  rm -rf \"${SRC}\"/esp-v2/bazel-esp-v2/external/esp-v2\n  # Clean up symlinks with a missing referrant.\n  find \"${SRC}\"/esp-v2/bazel-esp-v2/external -follow -type l -ls -delete || echo \"Symlink cleanup soft fail\"\n  rsync -avLk \"${SRC}\"/esp-v2/bazel-esp-v2/external \"${REMAP_PATH}\"\n  # For .h, and some generated artifacts, we need bazel-out/. Need to heavily\n  # filter out the build objects from bazel-out/. Also need to resolve symlinks,\n  # since they don't make sense outside the build container.\n  declare -r RSYNC_FILTER_ARGS=(\"--include\" \"*.h\" \"--include\" \"*.cc\" \"--include\" \\\n    \"*.hpp\" \"--include\" \"*.cpp\" \"--include\" \"*.c\" \"--include\" \"*/\" \"--exclude\" \"*\")\n  rsync -avLk \"${RSYNC_FILTER_ARGS[@]}\" \"${SRC}\"/esp-v2/bazel-out \"${REMAP_PATH}\"\n  rsync -avLkR \"${RSYNC_FILTER_ARGS[@]}\" \"${HOME}\" \"${OUT}\"\n  # Some low-level libraries are built located /tmp.\n  # But ESPv2 engineeers don't really look at them.\n  # rsync -avLkR \"${RSYNC_FILTER_ARGS[@]}\" /tmp \"${OUT}\"\nfi\n\n# Copy out test driverless binaries from bazel-bin/.\nfor t in ${FILTERED_FUZZER_TARGETS}\ndo\n  TARGET_BASE=\"$(expr \"$t\" : '.*/\\(.*\\)_fuzz_test')\"\n  TARGET_DRIVERLESS=bazel-bin/\"${t}\"\n  echo \"Copying fuzzer $t\"\n  cp \"${TARGET_DRIVERLESS}\" \"${OUT}\"/\"${TARGET_BASE}\"_fuzz_test\ndone\n\n# Zip up related test corpuses.\n# TODO(nareddyt): just use the .tar directly when\n# https://github.com/google/oss-fuzz/issues/1918 is fixed.\nCORPUS_UNTAR_PATH=\"${PWD}\"/_tmp_corpus\nfor t in ${FILTERED_FUZZER_TARGETS}\ndo\n  echo \"Extracting and zipping fuzzer $t corpus\"\n  TARGET_BASE=\"$(expr \"$t\" : '.*/\\(.*\\)_fuzz_test')\"\n  zip \"${OUT}/${TARGET_BASE}\"_seed_corpus.zip bazel-bin/\"${t}\"_corpus/*\ndone\n\n# Cleanup bazel- symlinks to avoid oss-fuzz trying to copy out of the build\n# cache.\nrm -f bazel-*\n"
    },
    "espeak-ng": {
        "name": "espeak-ng",
        "language": "c++",
        "homepage": "https://github.com/espeak-ng/espeak-ng",
        "main_repo": "https://github.com/espeak-ng/espeak-ng",
        "primary_contact": "msclrhd@googlemail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/espeak-ng/espeak-ng\"\nlanguage: c++\nprimary_contact: \"msclrhd@googlemail.com\"\nauto_ccs:\n- \"valdis.vitolins@gmail.com\"\n- \"p.antoine@catenacyber.fr\"\n- \"sascha.brawer@gmail.com\"\n\nsanitizers:\n- address\nfuzzing_engines:\n- libfuzzer\n- afl\nmain_repo: 'https://github.com/espeak-ng/espeak-ng'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# build project\nexport ASAN_OPTIONS=detect_leaks=0\n./autogen.sh\n./configure --with-libfuzzer=yes --disable-shared --with-speechplayer=no\nmake check || true\ncp tests/ssml-fuzzer.test $OUT/ssml-fuzzer\ncp -r espeak-ng-data/ $OUT/\n"
    },
    "et-xmlfile": {
        "name": "et-xmlfile",
        "language": "python",
        "homepage": "https://github.com/biydnd/et_xmlfile",
        "main_repo": "https://github.com/biydnd/et_xmlfile",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/biydnd/et_xmlfile\nlanguage: python\nmain_repo: https://github.com/biydnd/et_xmlfile\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/lxml\npython3 ./setup.py install\n\ncd $SRC/et_xmlfile\npip3 install .\nfor fuzzer in $(find $SRC/et-xmlfile-fuzzers/ -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "etcd": {
        "name": "etcd",
        "language": "go",
        "homepage": "https://etcd.io",
        "main_repo": "https://github.com/etcd-io/etcd",
        "primary_contact": "ptab@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://etcd.io\"\nmain_repo: \"https://github.com/etcd-io/etcd\"\nprimary_contact: \"ptab@google.com\"\nauto_ccs :\n  - \"etcd-maintainers@googlegroups.com\"\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"sahdev.zala1@gmail.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/cncf-fuzzing/projects/etcd/build.sh\n"
    },
    "evo-inflector": {
        "name": "evo-inflector",
        "language": "jvm",
        "homepage": "https://github.com/atteo/evo-inflector",
        "main_repo": "https://github.com/atteo/evo-inflector",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/atteo/evo-inflector\nmain_repo: https://github.com/atteo/evo-inflector\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\nfind ./ -name pom.xml -exec sed -i 's/source>1.6</source>1.8</g' {} \\;\nfind ./ -name pom.xml -exec sed -i 's/target>1.6</target>1.8</g' {} \\;\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"target/evo-inflector-$CURRENT_VERSION.jar\" $OUT/evo-inflector.jar\n\nALL_JARS=\"evo-inflector.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "example": {
        "name": "example",
        "language": "c++",
        "homepage": "https://my-api.example.com",
        "main_repo": "https://github.com/example/my-api",
        "primary_contact": null,
        "vendor_ccs": [],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "disabled: true\nhomepage: https://my-api.example.com\nmain_repo: https://github.com/example/my-api\nlanguage: c++\nvendor_ccs: []\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd projects/example/my-api-repo\nmake clean  # Not strictly necessary, since we are building in a fresh dir.\nmake -j$(nproc) all    # Build the fuzz targets.\nmake -j$(nproc) check  # Sanity check, not strictly required, but nice to have.\n\n# Copy the fuzzer executables, zip-ed corpora, option and dictionary files to $OUT\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'     # If you have dictionaries.\nfind . -name '*_fuzzer.options' -exec cp -v '{}' $OUT ';'  # If you have custom options.\nfind . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' $OUT ';' # If you have seed corpora (you better have them!)\n"
    },
    "exiv2": {
        "name": "exiv2",
        "language": "c++",
        "homepage": "https://www.exiv2.org",
        "main_repo": "https://github.com/Exiv2/exiv2",
        "primary_contact": "kevinbackhouse@github.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.exiv2.org\"\nlanguage: c++\nprimary_contact: \"kevinbackhouse@github.com\"\nauto_ccs:\n  - \"piponazo@gmail.com\"\nsanitizers:\n  - address\n  - undefined\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/Exiv2/exiv2'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Added to fix a false positive result: https://github.com/google/oss-fuzz/issues/6489\nCXXFLAGS=\"${CXXFLAGS} -fno-sanitize=float-divide-by-zero\"\n\n# Build Exiv2\nmkdir -p build\ncd build\ncmake -DEXIV2_ENABLE_PNG=ON -DEXIV2_ENABLE_WEBREADY=ON -DEXIV2_ENABLE_CURL=OFF -DEXIV2_ENABLE_BMFF=ON -DEXIV2_TEAM_WARNINGS_AS_ERRORS=ON -DBUILD_SHARED_LIBS=OFF -DCMAKE_CXX_COMPILER=\"${CXX}\" -DCMAKE_CXX_FLAGS=\"${CXXFLAGS}\" -DEXIV2_BUILD_FUZZ_TESTS=ON -DEXIV2_TEAM_OSS_FUZZ=ON -DLIB_FUZZING_ENGINE=\"${LIB_FUZZING_ENGINE}\" -DEXIV2_ENABLE_INIH=OFF -DCMAKE_CXX_STANDARD=20 ..\nmake -j $(nproc)\n\n# Copy binary and dictionary to $OUT\ncp ./bin/fuzz-read-print-write $OUT\ncp ../fuzz/exiv2.dict $OUT/fuzz-read-print-write.dict\n\n# Initialize the corpus, using the files in test/data\nmkdir corpus\nfor f in $(find ../test/data -type f -size -20k); do\n    s=$(sha1sum \"$f\" | awk '{print $1}')\n    cp $f corpus/$s\ndone\n\nzip -j $OUT/fuzz-read-print-write.zip corpus/*\n"
    },
    "exp4j": {
        "name": "exp4j",
        "language": "jvm",
        "homepage": "https://github.com/fasseg/exp4j",
        "main_repo": "https://github.com/fasseg/exp4j",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/fasseg/exp4j\nmain_repo: https://github.com/fasseg/exp4j\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"target/exp4j-$CURRENT_VERSION.jar\" $OUT/exp4j.jar\n\nALL_JARS=\"exp4j.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "expat": {
        "name": "expat",
        "language": "c++",
        "homepage": "https://github.com/libexpat/libexpat",
        "main_repo": "https://github.com/libexpat/libexpat",
        "primary_contact": "sebastian@pipping.org",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/libexpat/libexpat\"\nlanguage: c++\nprimary_contact: \"sebastian@pipping.org\"\nauto_ccs:\n - \"rhodri@kynesim.co.uk\"\n - \"hanno@hboeck.de\"\n - \"webmaster@hartwork.org\"\n - \"bshas3@gmail.com\"\nvendor_ccs:\n - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/libexpat/libexpat'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n# Copyright 2025 Sebastian Pipping <sebastian@pipping.org>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# NOTE: We need to drop -stdlib=libc++ to not get (pages of) link errors when\n#       linking against system Protobuf that is linked against GCC's libstdc++\n#       rather than Clang's own libstdc++\nCXXFLAGS=\"${CXXFLAGS/-stdlib=libc++/ }\"\n\n# NOTE: Without -static-libstdc++, the bad build checker in base-runner\n#       will fail with output:\n#       > error while loading shared libraries: libstdc++.so.6:\n#       > cannot open shared object file: No such file or directory\n#       The addition of -Wno-unused-command-line-argument silences Clang's\n#       misleading output on argument -static-libstdc++ appearing as unused.\nCXXFLAGS=\"${CXXFLAGS} -static-libstdc++ -Wno-unused-command-line-argument\"\n\n: ${LD:=\"${CXX}\"}\n: ${LDFLAGS:=\"${CXXFLAGS}\"}  # to make sure we link with sanitizer runtime\n\ncmake_args=(\n    # Specific to Expat\n    -DEXPAT_BUILD_DOCS=OFF\n    -DEXPAT_BUILD_EXAMPLES=OFF\n    -DEXPAT_BUILD_FUZZERS=ON\n    -DEXPAT_BUILD_TESTS=OFF\n    -DEXPAT_BUILD_TOOLS=OFF\n    -DEXPAT_OSSFUZZ_BUILD=ON\n    -DEXPAT_SHARED_LIBS=OFF\n    -DProtobuf_USE_STATIC_LIBS=ON\n\n    # C compiler\n    -DCMAKE_C_COMPILER=\"${CC}\"\n    -DCMAKE_C_FLAGS=\"${CFLAGS}\"\n\n    # C++ compiler\n    -DCMAKE_CXX_COMPILER=\"${CXX}\"\n    -DCMAKE_CXX_FLAGS=\"${CXXFLAGS}\"\n\n    # Linker\n    -DCMAKE_LINKER=\"${LD}\"\n    -DCMAKE_EXE_LINKER_FLAGS=\"${LDFLAGS}\"\n    -DCMAKE_MODULE_LINKER_FLAGS=\"${LDFLAGS}\"\n    -DCMAKE_SHARED_LINKER_FLAGS=\"${LDFLAGS}\"\n)\n\nmkdir -p build\ncd build\ncmake ../expat \"${cmake_args[@]}\"\nmake -j$(nproc)\n\nfor fuzzer in fuzz/*;\ndo\n  cp $fuzzer $OUT\n  fuzzer_name=$(basename $fuzzer)\n  if [[ ${fuzzer_name} =~ ^.*UTF-16$ ]]; then\n    cp $SRC/xml_UTF_16.dict $OUT/${fuzzer_name}.dict\n  elif [[ ${fuzzer_name} =~ ^.*UTF-16LE$ ]]; then\n    cp $SRC/xml_UTF_16LE.dict $OUT/${fuzzer_name}.dict\n  elif [[ ${fuzzer_name} =~ ^.*UTF-16BE$ ]]; then\n    cp $SRC/xml_UTF_16BE.dict $OUT/${fuzzer_name}.dict\n  else\n    cp $SRC/xml.dict $OUT/${fuzzer_name}.dict\n  fi\ndone\n"
    },
    "expr": {
        "name": "expr",
        "language": "go",
        "homepage": "https://github.com/expr-lang/expr",
        "main_repo": "https://github.com/expr-lang/expr.git",
        "primary_contact": "martin.swende@ethereum.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/expr-lang/expr\"\nprimary_contact: \"martin.swende@ethereum.org\"\nauto_ccs:\n  - \"antonmedvio@gmail.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/expr-lang/expr.git\"\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/expr/test/fuzz/fuzz_expr_seed_corpus.zip $OUT/\ncp $SRC/expr/test/fuzz/fuzz_expr.dict $OUT/\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ncompile_native_go_fuzzer github.com/expr-lang/expr/test/fuzz FuzzExpr fuzz_expr\n"
    },
    "exprtk": {
        "name": "exprtk",
        "language": "c++",
        "homepage": "https://www.partow.net/programming/exprtk/index.html",
        "main_repo": "https://github.com/ArashPartow/exprtk.git",
        "primary_contact": "exprtk.dev@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.partow.net/programming/exprtk/index.html\"\nlanguage: c++\nprimary_contact: \"exprtk.dev@gmail.com\"\nauto_ccs:\n    - \"exprtk.dev@gmail.com\"\nfuzzing_engines:\n    - libfuzzer\n    - afl\n    - honggfuzz\nsanitizers:\n    - address\n    - undefined\n    - memory\nmain_repo: 'https://github.com/ArashPartow/exprtk.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/*.dict $OUT/\n\nCXXFLAGS=\"${CXXFLAGS} -O2 -fno-sanitize=integer-divide-by-zero,float-divide-by-zero\"\n\n$CXX -std=c++11 $CXXFLAGS -I. -I$SRC/exprtk \\\n     $SRC/exprtk_fuzzer.cpp -o $OUT/exprtk_fuzzer \\\n     $LIB_FUZZING_ENGINE\n"
    },
    "faad2": {
        "name": "faad2",
        "language": "c",
        "homepage": "https://sourceforge.net/projects/faac",
        "main_repo": "https://github.com/knik0/faad2",
        "primary_contact": "eustas@chromium.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://sourceforge.net/projects/faac\"\nmain_repo: \"https://github.com/knik0/faad2\"\nlanguage: c\nprimary_contact: \"eustas@chromium.org\"\nauto_ccs:\n - \"david@adalogics.com\"\nsanitizers:\n - address\n - memory\n - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport USE_BAZEL_VERSION=7.4.0\nbazel_build_fuzz_tests\n"
    },
    "fabric": {
        "name": "fabric",
        "language": "go",
        "homepage": "https://www.hyperledger.org",
        "main_repo": "https://github.com/hyperledger/fabric",
        "primary_contact": "ale.linux@sopit.net",
        "vendor_ccs": [
            "adam@adalogics.com",
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.hyperledger.org\"\nmain_repo: \"https://github.com/hyperledger/fabric\"\nprimary_contact: \"ale.linux@sopit.net\"\nauto_ccs:\n  - \"gari.r.singh@gmail.com\"\nvendor_ccs:\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# Temporarily disable coverage build in OSS-Fuzz's CI\nif [ -n \"${OSS_FUZZ_CI-}\" ]\nthen\n\tif [ \"${SANITIZER}\" = 'coverage' ]\n\tthen\n\t\texit 0\n\tfi\n\nfi\n\nrm -r $SRC/fabric/cmd/cryptogen\n\ncp $SRC/ccprovider_fuzzer.go ./core/common/ccprovider/\ncp $SRC/persistence_fuzzer.go ./core/chaincode/persistence/mock/\ncp $SRC/policydsl_fuzzer.go $SRC/fabric/common/policydsl/\ncp $SRC/msp_fuzzer.go $SRC/fabric/msp/\ncp $SRC/fabenc_fuzzer.go $SRC/fabric-lib-go/common/flogging/fabenc/\n\ncd $SRC/instrumentation\ngo run main.go --target_dir=$SRC/fabric --check_io_length=true\ncd $SRC/fabric\ngo mod tidy && go mod vendor\n\ngo get github.com/AdaLogics/go-fuzz-headers\ngo mod tidy\ngo mod vendor\n\ncompile_go_fuzzer github.com/hyperledger/fabric/core/chaincode/persistence/mock FuzzPersistence fuzz_persistence\ncompile_go_fuzzer github.com/hyperledger/fabric/core/chaincode/persistence/mock FuzzChaincodePackageStreamerMetadatabytes FuzzChaincodePackageStreamerMetadatabytes\ncompile_go_fuzzer github.com/hyperledger/fabric/core/chaincode/persistence/mock FuzzParseChaincodePackage FuzzParseChaincodePackage\ncompile_go_fuzzer github.com/hyperledger/fabric/core/common/ccprovider FuzzExtractFileEntries FuzzExtractFileEntries\ncompile_go_fuzzer github.com/hyperledger/fabric/common/policydsl FuzzFromString fuzz_from_string\ncompile_go_fuzzer github.com/hyperledger/fabric/msp FuzzDeserializeIdentity fuzz_deserialize_identity\ncd $SRC/fabric-lib-go\ncompile_go_fuzzer github.com/hyperledger/fabric-lib-go/common/flogging/fabenc FuzzParseFormat fuzz_parse_format\n\ncp $SRC/*.options $OUT/\n"
    },
    "face": {
        "name": "face",
        "language": "python",
        "homepage": "https://github.com/mahmoud/face",
        "main_repo": "https://github.com/mahmoud/face",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/mahmoud/face\nmain_repo: https://github.com/mahmoud/face\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "fast-dds": {
        "name": "fast-dds",
        "language": "c++",
        "homepage": "https://www.eprosima.com/",
        "main_repo": "https://github.com/eProsima/Fast-DDS.git",
        "primary_contact": "miguelcompany@eprosima.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.eprosima.com/\"\nlanguage: c++\nprimary_contact: \"miguelcompany@eprosima.com\"\nauto_ccs:\n- \"p.antoine@catenacyber.fr\"\n- \"federico.maggi@gmail.com\"\nsanitizers:\n- address\n- undefined\nmain_repo: 'https://github.com/eProsima/Fast-DDS.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n(\ncd ../tinyxml2\nmake clean\nmake -j$(nproc) all\ncp libtinyxml2.a /usr/local/lib/\ncp *.h /usr/local/include/\n)\n\n(\ncd ../asio/asio\nsh autogen.sh\n./configure\nmake -j$(nproc) install\n)\n\n(\ncd ..\nmkdir Fast-CDR/build && cd Fast-CDR/build\ncmake .. -DBUILD_SHARED_LIBS=OFF\ncmake --build . --target install\n)\n\n(\ncd ..\ncd foonathan_memory_vendor\nmkdir build && cd build\ncmake .. -DBUILD_SHARED_LIBS=OFF\ncmake --build . --target install\n)\n\n# build project\nmkdir build && cd build\ncmake .. -DBUILD_SHARED_LIBS=OFF\nmake -j $(nproc)\ncd ..\n\nfind build/fuzz -maxdepth 3 -type f -name 'fuzz_*' | while read fuzzer; do\n    cp \"$fuzzer\" $OUT/\ndone\n\nfind fuzz/ -type d -name 'fuzz_*_seed_corpus' | while read corpus_dir; do\n  zip -j $OUT/$(basename \"$corpus_dir\").zip $corpus_dir/*\ndone"
    },
    "fast-xml-parser": {
        "name": "fast-xml-parser",
        "language": "javascript",
        "homepage": "https://naturalintelligence.github.io/fast-xml-parser/",
        "main_repo": "https://github.com/NaturalIntelligence/fast-xml-parser",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://naturalintelligence.github.io/fast-xml-parser/\nlanguage: javascript\nmain_repo: https://github.com/NaturalIntelligence/fast-xml-parser\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install dependencies.\nnpm install\nnpm install --save-dev @jazzer.js/core\n\n# Build Fuzzers.\ncompile_javascript_fuzzer fast-xml-parser fuzz.js -i fast-xml-parser --sync\n"
    },
    "fast_float": {
        "name": "fast_float",
        "language": "c++",
        "homepage": "https://github.com/fastfloat/fast_float",
        "main_repo": "https://github.com/fastfloat/fast_float.git",
        "primary_contact": "lemire@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/fastfloat/fast_float\"\nlanguage: c++\nprimary_contact: \"lemire@gmail.com\"\nauto_ccs:\n  - \"nathaniel.brough@gmail.com\"\nmain_repo: \"https://github.com/fastfloat/fast_float.git\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "fastcsv": {
        "name": "fastcsv",
        "language": "jvm",
        "homepage": "https://github.com/osiegmar/FastCSV",
        "main_repo": "https://github.com/osiegmar/FastCSV.git",
        "primary_contact": "oliver@siegmar.de",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/osiegmar/FastCSV\"\nlanguage: jvm\nprimary_contact: \"oliver@siegmar.de\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/osiegmar/FastCSV.git\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nexport JAVA_HOME=\"$OUT/open-jdk-17\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\n./gradlew --console=plain lib:jar\ncp lib/build/libs/fastcsv-*.jar $OUT/fastcsv.jar\n\nALL_JARS=\"fastcsv.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer --release 17\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-17/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-17/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "fasthttp": {
        "name": "fasthttp",
        "language": "go",
        "homepage": "https://github.com/valyala/fasthttp",
        "main_repo": "https://github.com/valyala/fasthttp",
        "primary_contact": "erik@dubbelboer.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/valyala/fasthttp\"\nprimary_contact: \"erik@dubbelboer.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/valyala/fasthttp'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\ncompile_native_go_fuzzer github.com/valyala/fasthttp FuzzCookieParse fuzzCookieParse\ncompile_native_go_fuzzer github.com/valyala/fasthttp FuzzVisitHeaderParams fuzzVisitHeaderParams\ncompile_native_go_fuzzer github.com/valyala/fasthttp FuzzResponseReadLimitBody fuzzResponseReadLimitBody\ncompile_native_go_fuzzer github.com/valyala/fasthttp FuzzRequestReadLimitBody fuzzRequestReadLimitBody\ncompile_native_go_fuzzer github.com/valyala/fasthttp FuzzURIUpdateBytes fuzzURIUpdateBytes\n"
    },
    "fastify": {
        "name": "fastify",
        "language": "javascript",
        "homepage": "https://www.fastify.dev",
        "main_repo": "https://github.com/fastify/fastify",
        "primary_contact": "matteo.collina@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://www.fastify.dev\nlanguage: javascript\nmain_repo: https://github.com/fastify/fastify\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nprimary_contact: \"matteo.collina@gmail.com\"\nauto_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncp $SRC/fuzzers/projects/fastify/*.js $SRC/fastify\n$SRC/fuzzers/projects/fastify/build.sh\n"
    },
    "fastjson": {
        "name": "fastjson",
        "language": "go",
        "homepage": "https://github.com/valyala/fastjson",
        "main_repo": "https://github.com/valyala/fastjson",
        "primary_contact": "valyala@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/valyala/fastjson\"\nprimary_contact: \"valyala@gmail.com\"\nauto_ccs :\n- \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nmain_repo: 'https://github.com/valyala/fastjson'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\ncompile_go_fuzzer github.com/valyala/fastjson Fuzz fuzz\n"
    },
    "fastjson2": {
        "name": "fastjson2",
        "language": "jvm",
        "homepage": "https://github.com/alibaba/fastjson2",
        "main_repo": "https://github.com/alibaba/fastjson2",
        "primary_contact": "shaojin.wensj@alibaba-inc.com",
        "vendor_ccs": [
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/alibaba/fastjson2\"\nlanguage: jvm\nprimary_contact: \"shaojin.wensj@alibaba-inc.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/alibaba/fastjson2\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Copy seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\nmvn package -Dmaven.test.skip=true -Djdk.version=15\nCURRENT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"core/target/fastjson2-$CURRENT_VERSION.jar\" $OUT/fastjson2.jar\n\nPROJECT_JARS=\"fastjson2.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $PROJECT_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $PROJECT_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "feign": {
        "name": "feign",
        "language": "jvm",
        "homepage": "https://github.com/openfeign/feign",
        "main_repo": "https://github.com/openfeign/feign",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/openfeign/feign\nmain_repo: https://github.com/openfeign/feign\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\nmkdir ~/.m2\ncp $SRC/toolchains.xml ~/.m2/toolchains.xml\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false dependency:copy-dependencies\n\nJARFILE_LIST=\nfor JARFILE in $(find ./  -name *.jar)\ndo\n  if [[ \"$JARFILE\" == *\"target/\"* ]] || [[ \"$JARFILE\" == *\"build/\"* ]]\n  then\n    if [[ \"$JARFILE\" != *sources.jar ]] && [[ \"$JARFILE\" != *javadoc.jar ]] && [[ \"$JARFILE\" != *tests.jar ]]\n    then\n      cp $JARFILE $OUT/\n      JARFILE_LIST=\"$JARFILE_LIST$(basename $JARFILE) \"\n    fi\n  fi\ndone\n\ncurr_dir=$(pwd)\nrm -rf $OUT/jar_temp\nmkdir $OUT/jar_temp\ncd $OUT/jar_temp\nfor JARFILE in $JARFILE_LIST\ndo\n  jar -xf $OUT/$JARFILE\ndone\ncd $curr_dir\n\nBUILD_CLASSPATH=$JAZZER_API_PATH:$OUT/jar_temp\nRUNTIME_CLASSPATH=\\$this_dir/jar_temp:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \"\\$0\")\nif [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\nthen\nmem_settings='-Xmx1900m:-Xss900k'\nelse\nmem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir         \\\n  \\$this_dir/jazzer_driver                                \\\n  --agent_path=\\$this_dir/jazzer_agent_deploy.jar         \\\n  --cp=$RUNTIME_CLASSPATH                                 \\\n  --target_class=$fuzzer_basename                         \\\n  --jvm_args=\"\\$mem_settings\"                             \\\n  \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "ffmpeg": {
        "name": "ffmpeg",
        "language": "c++",
        "homepage": "https://www.ffmpeg.org",
        "main_repo": "https://git.ffmpeg.org/ffmpeg.git",
        "primary_contact": "ffmpeg-security@ffmpeg.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.ffmpeg.org\"\nlanguage: c++\nprimary_contact: \"ffmpeg-security@ffmpeg.org\"\narchitectures:\n - x86_64\n - i386\nauto_ccs:\n - \"michaelni@gmx.at\"\n - \"michael@niedermayer.cc\"\n - \"jrummell@google.com\"\n - \"tfoucu@google.com\"\n - \"twsmith@mozilla.com\"\n - \"kempfjb@gmail.com\"\n - \"jordyzomer@google.com\"\nfuzzing_engines:\n - afl\n - honggfuzz\n - libfuzzer\nsanitizers:\n - address\n - memory\n - undefined\nselective_unpack: true\nmain_repo: 'https://git.ffmpeg.org/ffmpeg.git'\n",
        "build_sh": "#!/bin/bash -eux\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Disable UBSan vptr since several targets built with -fno-rtti.\nexport CFLAGS=\"$CFLAGS -fno-sanitize=vptr\"\nexport CXXFLAGS=\"$CXXFLAGS -fno-sanitize=vptr\"\n\nif [[ \"$CXXFLAGS\" == *\"-fsanitize=address\"* ]]; then\n    export CXXFLAGS=\"$CXXFLAGS -fno-sanitize-address-use-odr-indicator\"\nfi\n\nif [[ \"$CFLAGS\" == *\"-fsanitize=address\"* ]]; then\n    export CFLAGS=\"$CFLAGS -fno-sanitize-address-use-odr-indicator\"\nfi\n\nif [[ \"$ARCHITECTURE\" == i386 ]]; then\n  export CFLAGS=\"$CFLAGS -m32\"\n  export CXXFLAGS=\"$CXXFLAGS -m32\"\nfi\n\n# Build dependencies.\nexport FFMPEG_DEPS_PATH=$SRC/ffmpeg_deps\nmkdir -p $FFMPEG_DEPS_PATH\n\n\nif [[ \"$ARCHITECTURE\" == i386 ]]; then\n  LIBDIR='lib/i386-linux-gnu'\n  export PKG_CONFIG_PATH=\"$FFMPEG_DEPS_PATH/$LIBDIR/pkgconfig:$FFMPEG_DEPS_PATH/lib/pkgconfig\"\nelse\n  LIBDIR='lib/x86_64-linux-gnu'\n  export PKG_CONFIG_PATH=\"$FFMPEG_DEPS_PATH/$LIBDIR/pkgconfig:$FFMPEG_DEPS_PATH/lib/pkgconfig\"\nfi\n\n# The option `-fuse-ld=gold` can't be passed via `CFLAGS` or `CXXFLAGS` because\n# Meson injects `-Werror=ignored-optimization-argument` during compile tests.\n# Remove the `-fuse-ld=` and let Meson handle it.\n# https://github.com/mesonbuild/meson/issues/6377#issuecomment-575977919\nexport MESON_CFLAGS=\"$CFLAGS\"\nif [[ \"$CFLAGS\" == *\"-fuse-ld=gold\"* ]]; then\n    export MESON_CFLAGS=\"${CFLAGS//-fuse-ld=gold/}\"\n    export CC_LD=gold\nfi\nexport MESON_CXXFLAGS=\"$CXXFLAGS\"\nif [[ \"$CXXFLAGS\" == *\"-fuse-ld=gold\"* ]]; then\n    export MESON_CXXFLAGS=\"${CXXFLAGS//-fuse-ld=gold/}\"\n    export CXX_LD=gold\nfi\n\nmeson_install() {\n  cd $SRC/$1\n  CFLAGS=\"$MESON_CFLAGS\" CXXFLAGS=\"$MESON_CXXFLAGS\" \\\n  meson setup build -Dprefix=\"$FFMPEG_DEPS_PATH\" -Ddefault_library=static -Dprefer_static=true \\\n                    --libdir \"$LIBDIR\" ${2:-}\n  meson compile -C build\n  meson install -C build\n}\n\nmeson_install bzip2\n\ncd $SRC/zlib\n./configure --prefix=\"$FFMPEG_DEPS_PATH\" --enable-static --disable-shared\nmake clean\nmake -j$(nproc)\nmake install\n\ncd $SRC/libxml2\n./autogen.sh --prefix=\"$FFMPEG_DEPS_PATH\" --enable-static \\\n      --without-debug --without-ftp --without-http \\\n      --without-legacy --without-python\nmake clean\nmake -j$(nproc)\nmake install\n\nmeson_install freetype\nmeson_install fribidi \"-Ddocs=false -Dtests=false\"\nmeson_install harfbuzz \"-Ddocs=disabled -Dtests=disabled\"\nmeson_install fontconfig\n\ncd $SRC/libass\n./autogen.sh\n./configure --prefix=\"$FFMPEG_DEPS_PATH\" --enable-static --disable-shared --disable-asm\nmake -j$(nproc)\nmake install\n\ncd $SRC\nbzip2 -f -d alsa-lib-*\ntar xf alsa-lib-*\nrm alsa-lib-*.tar\ncd alsa-lib-*\n./configure --prefix=\"$FFMPEG_DEPS_PATH\" --enable-static --disable-shared\nmake clean\nmake -j$(nproc) all\nmake install\n\ncd $SRC/fdk-aac\nautoreconf -fiv\nCXXFLAGS=\"$CXXFLAGS -fno-sanitize=shift-base,signed-integer-overflow\" \\\n./configure --prefix=\"$FFMPEG_DEPS_PATH\" --disable-shared\nmake clean\nmake -j$(nproc) all\nmake install\n\ncd $SRC/libvpx\nif [[ \"$SANITIZER\" == \"memory\" ]] || [[ \"$FUZZING_ENGINE\" == \"centipede\" ]]; then\n      TARGET=\"--target=generic-gnu\"\nelif [[ \"$ARCHITECTURE\" == i386 ]]; then\n      TARGET=\"--target=x86-linux-gcc\"\nelse\n      TARGET=\"\"\nfi\n\nLDFLAGS=\"$CXXFLAGS\" ./configure --prefix=\"$FFMPEG_DEPS_PATH\" \\\n        --disable-docs --disable-examples --disable-tools --disable-unit-tests \\\n        --enable-vp9-highbitdepth \\\n        --size-limit=12288x12288 \\\n        --extra-cflags=\"-DVPX_MAX_ALLOCABLE_MEMORY=1073741824\" \\\n        $TARGET\n\nmake clean\nmake -j$(nproc) all\nmake install\n\ncd $SRC/ogg\n./autogen.sh\n./configure --prefix=\"$FFMPEG_DEPS_PATH\" --enable-static --disable-crc\nmake clean\nmake -j$(nproc)\nmake install\n\ncd $SRC/opus\n./autogen.sh\n./configure --prefix=\"$FFMPEG_DEPS_PATH\" --enable-static\nmake clean\nmake -j$(nproc) all\nmake install\n\ncd $SRC/theora\nif [[ \"$ARCHITECTURE\" == i386 ]]; then\n\n      THEORA_BUILD_ARGS='--disable-asm'\nelse\n      THEORA_BUILD_ARGS=''\nfi\n# theora requires ogg, need to pass its location to the \"configure\" script.\nCFLAGS=\"$CFLAGS -fPIC\" LDFLAGS=\"-L$FFMPEG_DEPS_PATH/lib/\" \\\n      CPPFLAGS=\"$CXXFLAGS -I$FFMPEG_DEPS_PATH/include/\" \\\n      LD_LIBRARY_PATH=\"$FFMPEG_DEPS_PATH/lib/\" \\\n      ./autogen.sh\n./configure --with-ogg=\"$FFMPEG_DEPS_PATH\" --prefix=\"$FFMPEG_DEPS_PATH\" \\\n      --enable-static --disable-examples $THEORA_BUILD_ARGS\nmake clean\nmake -j$(nproc)\nmake install\n\ncd $SRC/vorbis\n./autogen.sh\n./configure --prefix=\"$FFMPEG_DEPS_PATH\" --enable-static\nmake clean\nmake -j$(nproc)\nmake install\n\n# Remove shared libraries to avoid accidental linking against them.\nrm $FFMPEG_DEPS_PATH/lib/*.so\nrm $FFMPEG_DEPS_PATH/lib/*.so.*\n\n# Build ffmpeg.\ncd $SRC/ffmpeg\nif [[ \"$ARCHITECTURE\" == i386 ]]; then\n\n      FFMPEG_BUILD_ARGS='--arch=\"i386\" --cpu=\"i386\" --disable-inline-asm --disable-asm'\nelse\n      FFMPEG_BUILD_ARGS=''\nfi\n\nif [ \"$SANITIZER\" = \"memory\" ] || [ \"$FUZZING_ENGINE\" = \"centipede\" ]; then\n  FFMPEG_BUILD_ARGS=\"$FFMPEG_BUILD_ARGS --disable-asm\"\nfi\n\n./configure \\\n        --cc=$CC --cxx=$CXX --ld=\"$CXX $CXXFLAGS -std=c++11\" \\\n        --extra-cflags=\"-I$FFMPEG_DEPS_PATH/include\" \\\n        --extra-ldflags=\"-L$FFMPEG_DEPS_PATH/lib\" \\\n        --prefix=\"$FFMPEG_DEPS_PATH\" \\\n        --pkg-config-flags=\"--static\" \\\n        --enable-ossfuzz \\\n        --libfuzzer=$LIB_FUZZING_ENGINE \\\n        --optflags=-O1 \\\n        --enable-gpl \\\n        --enable-nonfree \\\n        --enable-libass \\\n        --enable-libfdk-aac \\\n        --enable-libfreetype \\\n        --enable-libopus \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libxml2 \\\n        --enable-nonfree \\\n        --disable-libdrm \\\n        --disable-muxers \\\n        --disable-protocols \\\n        --disable-demuxer=rtp,rtsp,sdp \\\n        --disable-devices \\\n        --disable-shared \\\n        --disable-doc \\\n        --disable-programs \\\n        $FFMPEG_BUILD_ARGS\nmake clean\nmake -j$(nproc) install\n\n# Download test samples, will be used as seed corpus.\n# DISABLED.\n# TODO: implement a better way to maintain a minimized seed corpora\n# for all targets. As of 2017-05-04 now the combined size of corpora\n# is too big for ClusterFuzz (over 10Gb compressed data).\nexport TEST_SAMPLES_PATH=$SRC/ffmpeg/fate-suite/\nmake fate-rsync SAMPLES=$TEST_SAMPLES_PATH\n\nrsync -av rsync://samples.ffmpeg.org/samples/avi/ffv1/testset/ $SRC/ffmpeg/ffv1testset\n\n# Build the fuzzers.\ncd $SRC/ffmpeg\n\nFUZZ_TARGET_SOURCE=$SRC/ffmpeg/tools/target_dec_fuzzer.c\n\nexport TEMP_VAR_CODEC=\"AV_CODEC_ID_H264\"\nexport TEMP_VAR_CODEC_TYPE=\"VIDEO\"\n\nCONDITIONALS=$(grep 'BSF 1$' config_components.h | sed 's/#define CONFIG_\\(.*\\)_BSF 1/\\1/')\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n      # When running in CI, check the first targets only to save time and disk space\n      CONDITIONALS=(${CONDITIONALS[@]:0:2})\nfi\nfor c in $CONDITIONALS; do\n      fuzzer_name=ffmpeg_BSF_${c}_fuzzer\n      symbol=$(echo $c | sed \"s/.*/\\L\\0/\")\n      echo -en \"[libfuzzer]\\nmax_len = 1000000\\n\" >$OUT/${fuzzer_name}.options\n      make tools/target_bsf_${symbol}_fuzzer\n      mv tools/target_bsf_${symbol}_fuzzer $OUT/${fuzzer_name}\ndone\n\n# Build fuzzers for decoders.\nCONDITIONALS=$(grep 'DECODER 1$' config_components.h | sed 's/#define CONFIG_\\(.*\\)_DECODER 1/\\1/')\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n      # When running in CI, check the first targets only to save time and disk space\n      CONDITIONALS=(${CONDITIONALS[@]:0:2})\nfi\nfor c in $CONDITIONALS; do\n      fuzzer_name=ffmpeg_AV_CODEC_ID_${c}_fuzzer\n      symbol=$(echo $c | sed \"s/.*/\\L\\0/\")\n      echo -en \"[libfuzzer]\\nmax_len = 1000000\\n\" >$OUT/${fuzzer_name}.options\n      make tools/target_dec_${symbol}_fuzzer\n      mv tools/target_dec_${symbol}_fuzzer $OUT/${fuzzer_name}\ndone\n\n# Build fuzzers for encoders\nCONDITIONALS=$(grep 'ENCODER 1$' config_components.h | sed 's/#define CONFIG_\\(.*\\)_ENCODER 1/\\1/')\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n      # When running in CI, check the first targets only to save time and disk space\n      CONDITIONALS=(${CONDITIONALS[@]:0:2})\nfi\n\nfor c in $CONDITIONALS; do\n      fuzzer_name=ffmpeg_AV_CODEC_ID_${c}_fuzzer\n      symbol=$(echo $c | sed \"s/.*/\\L\\0/\")\n      echo -en \"[libfuzzer]\\nmax_len = 1000000\\n\" >$OUT/${fuzzer_name}.options\n      make tools/target_enc_${symbol}_fuzzer\n      mv tools/target_enc_${symbol}_fuzzer $OUT/${fuzzer_name}\ndone\n\n\n# Build fuzzer for sws\nfuzzer_name=ffmpeg_SWS_fuzzer\necho -en \"[libfuzzer]\\nmax_len = 1000000\\n\" >$OUT/${fuzzer_name}.options\nmake tools/target_sws_fuzzer\nmv tools/target_sws_fuzzer $OUT/${fuzzer_name}\n\n# Build fuzzer for swr\nfuzzer_name=ffmpeg_SWR_fuzzer\necho -en \"[libfuzzer]\\nmax_len = 1000000\\n\" >$OUT/${fuzzer_name}.options\nmake tools/target_swr_fuzzer\nmv tools/target_swr_fuzzer $OUT/${fuzzer_name}\n\n# Build fuzzer for demuxer\nfuzzer_name=ffmpeg_DEMUXER_fuzzer\necho -en \"[libfuzzer]\\nmax_len = 1000000\\n\" >$OUT/${fuzzer_name}.options\nmake tools/target_dem_fuzzer\nmv tools/target_dem_fuzzer $OUT/${fuzzer_name}\n\n# We do not need raw reference files for the muxer\nrm $(find fate-suite -name '*.s16')\nrm $(find fate-suite -name '*.dec')\nrm $(find fate-suite -name '*.pcm')\n\nzip -r $OUT/${fuzzer_name}_seed_corpus.zip fate-suite\nzip -r $OUT/ffmpeg_AV_CODEC_ID_HEVC_fuzzer_seed_corpus.zip fate-suite/hevc fate-suite/hevc-conformance\nzip -r $OUT/ffmpeg_AV_CODEC_ID_FFV1_fuzzer_seed_corpus.zip ffv1testset\n\n# Build fuzzer for demuxer fed at IO level\nfuzzer_name=ffmpeg_IO_DEMUXER_fuzzer\nmake tools/target_io_dem_fuzzer\nmv tools/target_io_dem_fuzzer $OUT/${fuzzer_name}\n\n#Build fuzzers for individual demuxers\n./configure \\\n        --cc=$CC --cxx=$CXX --ld=\"$CXX $CXXFLAGS -std=c++11\" \\\n        --extra-cflags=\"-I$FFMPEG_DEPS_PATH/include\" \\\n        --extra-ldflags=\"-L$FFMPEG_DEPS_PATH/lib\" \\\n        --prefix=\"$FFMPEG_DEPS_PATH\" \\\n        --pkg-config-flags=\"--static\" \\\n        --enable-ossfuzz \\\n        --libfuzzer=$LIB_FUZZING_ENGINE \\\n        --optflags=-O1 \\\n        --enable-gpl \\\n        --enable-libxml2 \\\n        --disable-libdrm \\\n        --disable-muxers \\\n        --disable-protocols \\\n        --disable-devices \\\n        --disable-shared \\\n        --disable-encoders \\\n        --disable-filters \\\n        --disable-muxers \\\n        --disable-parsers \\\n        --disable-decoders \\\n        --disable-hwaccels \\\n        --disable-bsfs \\\n        --disable-vaapi \\\n        --disable-vdpau \\\n        --disable-v4l2_m2m \\\n        --disable-cuda_llvm \\\n        --enable-demuxers \\\n        --disable-demuxer=rtp,rtsp,sdp \\\n        --disable-doc \\\n        --disable-programs \\\n        $FFMPEG_BUILD_ARGS\n\nCONDITIONALS=$(grep 'DEMUXER 1$' config_components.h | sed 's/#define CONFIG_\\(.*\\)_DEMUXER 1/\\1/')\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n      # When running in CI, check the first targets only to save time and disk space\n      CONDITIONALS=(${CONDITIONALS[@]:0:2})\nfi\n\nfor c in $CONDITIONALS; do\n      fuzzer_name=ffmpeg_dem_${c}_fuzzer\n      symbol=$(echo $c | sed \"s/.*/\\L\\0/\")\n      make tools/target_dem_${symbol}_fuzzer\n      mv tools/target_dem_${symbol}_fuzzer $OUT/${fuzzer_name}\ndone\n\n# Find relevant corpus in test samples and archive them for every fuzzer.\n#cd $SRC\n#python group_seed_corpus.py $TEST_SAMPLES_PATH $OUT/\n"
    },
    "ffms2": {
        "name": "ffms2",
        "language": "c++",
        "homepage": "https://github.com/FFMS/ffms2",
        "main_repo": "https://github.com/FFMS/ffms2",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/FFMS/ffms2\"\nmain_repo: \"https://github.com/FFMS/ffms2\"\nlanguage: c++\nfuzzing_engines:\n- libfuzzer\n- honggfuzz\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- \"david@adalogics.com\"\n- \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh\nmake install-libLTLIBRARIES\n\n# The media libraries has a significant set of dynamic library dependencies,\n# and to resolve this we copy them all over.\nfind /usr/local/lib -name \"libffms2.so*\" -exec cp \"{}\" $OUT \\;\nDYNLIBS_TO_COPY=\"libavformat.so* libavcodec.so* libavutil.so* libswscale.so* libswresample.so* libxml2.so* libgme.so* libopenmpt.so* libchromaprint.so* libbluray.so* libssh-gcrypt.so* libvpx.so* libwebpmux.so* libwebp.so* librsvg-2.so* libgobject-2.0.so* libglib-2.0.so* libcairo.so* libzvbi.so* libsnappy.so* libaom.so* libcodec2.so* libgsm.so* libmp3lame.so* libopenjp2.so* libopus.so* libshine.so* libspeex.so* libtheoraenc.so* libtheoradec.so* libtwolame.so* libvorbis.so* libvorbisenc.so* libwavpack.so* libx264.so* libx265.so* libxvidcore.so* libva.so* libva-drm.so* libva-x11.so* libvdpau.so* libX11.so* libxcb.so* libdrm.so* libOpenCL.so* libfontconfig.so* libfreetype.so* libpixman-1.so* libpng16.so* libxcb-shm.so* libxcb-render.so* libXrender.so* libXext.so* libmpg123.so* libvorbisfile.so* libcairo-gobject.so* libgdk_pixbuf-2.0.so* libgmodule-2.0.so* libgio-2.0.so* libpangocairo-1.0.so* libpango-1.0.so* libfribidi.so* libthai.so* libharfbuzz.so* libgraphite2.so* libpangoft2-1.0.so* libsoxr.so* libdatrie.so* libogg.so* libXfixes.so* libnuma.so* libXau.so* libXdmcp.so* libbsd.so* libicuuc.so* libicudata.so*\"\n\nfor dynlibname in $DYNLIBS_TO_COPY; do\n  find /usr/lib -name \"${dynlibname}\" -exec cp {} $OUT \\;\ndone\n\nfor f in $SRC/*_fuzzer.cc; do\n  fuzzer=$(basename \"$f\" _fuzzer.cc)\n  $CXX $CXXFLAGS -std=c++11 -I$SRC/ffms2/include \\\n    $SRC/${fuzzer}_fuzzer.cc -o $OUT/${fuzzer}_fuzzer \\\n    $LIB_FUZZING_ENGINE -lpthread $OUT/libffms2.so \\\n    $OUT/*.so*\n\n  patchelf --set-rpath '$ORIGIN/' $OUT/${fuzzer}_fuzzer\ndone\n"
    },
    "fftw3": {
        "name": "fftw3",
        "language": "c++",
        "homepage": "http://fftw.org/",
        "main_repo": "https://github.com/fftw/fftw3.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adlogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"http://fftw.org/\"\nmain_repo: \"https://github.com/fftw/fftw3.git\"\nlanguage: c++\nvendor_ccs:\n- \"david@adlogics.com\"\n- \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nsh bootstrap.sh\nmake -j4\n\nfor f in $SRC/*_fuzzer.cc; do\n  fuzzer=$(basename \"$f\" _fuzzer.cc)\n  $CXX $CXXFLAGS -I$SRC/fftw3 -I$SRC/fftw3/api \\\n    $SRC/${fuzzer}_fuzzer.cc -o $OUT/${fuzzer}_fuzzer \\\n    $LIB_FUZZING_ENGINE -lpthread ./.libs/libfftw3.a\ndone\n\n"
    },
    "file": {
        "name": "file",
        "language": "c++",
        "homepage": "http://www.darwinsys.com/file/",
        "main_repo": "https://github.com/file/file.git",
        "primary_contact": "zoulasc@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.darwinsys.com/file/\"\nlanguage: c++\nprimary_contact: \"zoulasc@gmail.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n# - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/file/file.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nautoreconf -i\n./configure --enable-static --enable-fsect-man5\nmake V=1 all\n\n$CXX $CXXFLAGS -std=c++11 -Isrc/ \\\n     $SRC/magic_fuzzer.cc -o $OUT/magic_fuzzer \\\n     $LIB_FUZZING_ENGINE ./src/.libs/libmagic.a -l:libz.a -l:liblz4.a -l:libbz2.a -l:liblzma.a -l:libzstd.a\n$CXX $CXXFLAGS -std=c++11 -Isrc/ \\\n     $SRC/magic_fuzzer_loaddb.cc -o $OUT/magic_fuzzer_loaddb \\\n     $LIB_FUZZING_ENGINE ./src/.libs/libmagic.a -l:libz.a -l:liblz4.a -l:libbz2.a -l:liblzma.a -l:libzstd.a\n$CXX $CXXFLAGS -std=c++11 -Isrc/ \\\n     $SRC/magic_fuzzer_fd.cc -o $OUT/magic_fuzzer_fd \\\n     $LIB_FUZZING_ENGINE ./src/.libs/libmagic.a -l:libz.a -l:liblz4.a -l:libbz2.a -l:liblzma.a -l:libzstd.a\n\ncp ./magic/magic.mgc $OUT/\n\nmkdir pocs_all\nfind $SRC/pocs/ -type f -print0 | xargs -0 -I % mv -f % ./pocs_all\n\nzip -j $OUT/magic_fuzzer_seed_corpus.zip ./tests/*.testfile $SRC/binary-samples/{elf,pe}-* $SRC/pocs_all\n"
    },
    "filelock": {
        "name": "filelock",
        "language": "python",
        "homepage": "https://github.com/google/oss-fuzz/pull/8244",
        "main_repo": "https://github.com/tox-dev/py-filelock",
        "primary_contact": "gaborjbernat@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/oss-fuzz/pull/8244\"\nlanguage: python\nprimary_contact: \"gaborjbernat@gmail.com\"\nmain_repo: \"https://github.com/tox-dev/py-filelock\"\nauto_ccs:\n- \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "filesystem_spec": {
        "name": "filesystem_spec",
        "language": "python",
        "homepage": "https://github.com/fsspec/filesystem_spec",
        "main_repo": "https://github.com/fsspec/filesystem_spec",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/fsspec/filesystem_spec\nlanguage: python\nmain_repo: https://github.com/fsspec/filesystem_spec\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "fio": {
        "name": "fio",
        "language": "c++",
        "homepage": "http://git.kernel.dk/fio.git",
        "main_repo": "https://github.com/axboe/fio.git",
        "primary_contact": "axboe@kernel.dk",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://git.kernel.dk/fio.git\"\nlanguage: c++\nprimary_contact: \"axboe@kernel.dk\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\n  - \"sitsofe@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/axboe/fio.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nexport LDFLAGS=\"$CXXFLAGS\"\n./configure\nmake -j$(nproc)\ncp t/fuzz/fuzz_parseini $OUT/\n\n# builds corpus\nzip -r $OUT/fuzz_parseini_seed_corpus.zip examples\n"
    },
    "fips203": {
        "name": "fips203",
        "language": "rust",
        "homepage": "https://crates.io/crates/fips203",
        "main_repo": "https://github.com/integritychain/fips203",
        "primary_contact": "eschorn@integritychain.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://crates.io/crates/fips203\"\nmain_repo: \"https://github.com/integritychain/fips203\"\nlanguage: rust\nprimary_contact: \"eschorn@integritychain.com\"\nauto_ccs:\n  - \"eschorn@gmail.com\"\nfile_github_issue: true\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build fuzzers, zip corpus\n\ncd $SRC/fips203\ncargo fuzz build -O --debug-assertions\ncp fuzz/target/x86_64-unknown-linux-gnu/release/ml_kem_fuzz $OUT/\nzip -q $OUT/ml_kem_fuzz_seed_corpus.zip fuzz/corpus/ml_kem_fuzz/*\n\n\n"
    },
    "firefox": {
        "name": "firefox",
        "language": "c++",
        "homepage": "https://www.mozilla.org/firefox/",
        "main_repo": "https://hg.mozilla.org/mozilla-central/",
        "primary_contact": "choller@mozilla.com",
        "vendor_ccs": [
            "oss-fuzz@mozilla-fuzzing.iam.gserviceaccount.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.mozilla.org/firefox/\"\nlanguage: c++\nmain_repo: https://hg.mozilla.org/mozilla-central/\nprimary_contact: \"choller@mozilla.com\"\nauto_ccs:\n  - twsmith@mozilla.com\n  - sledru@mozilla.com\nvendor_ccs:\n  - oss-fuzz@mozilla-fuzzing.iam.gserviceaccount.com\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nrun_tests: False\n# libraries from $OUT/firefox/dependentlibs.list\ncoverage_extra_args: >\n -object firefox/firefox\n -object firefox/libnspr4.so\n -object firefox/libplc4.so\n -object firefox/libplds4.so\n -object firefox/libmozsandbox.so\n -object firefox/liblgpllibs.so\n -object firefox/libnssutil3.so\n -object firefox/libnss3.so\n -object firefox/libsmime3.so\n -object firefox/libmozsqlite3.so\n -object firefox/libssl3.so\n -object firefox/libmozgtk.so\n -object firefox/libxul.so\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n  touch $OUT/exit\n  exit 0\nfi\n\nsource $HOME/.cargo/env\n\n# Case-sensitive names of internal Firefox fuzzing targets. Edit to add more.\nFUZZ_TARGETS=(\n  ContentSecurityPolicyParser\n  FeaturePolicyParser\n  # WebRTC\n  SdpParser\n  StunParser\n  # Image\n  ImageGIF\n  ImageICO\n  ImageBMP\n  # Demuxing\n  MediaADTS\n  MediaFlac\n  MediaMP3\n  MediaOgg\n  MediaWebM\n  # MediaWAV disabled due to frequent OOMs\n)\n\n# Firefox object (build) directory and configuration file.\nexport MOZ_OBJDIR=$WORK/obj-fuzz\nexport MOZCONFIG=$SRC/mozconfig.$SANITIZER\n\n# Without this, a host tool used during Rust part of the build will fail\nexport ASAN_OPTIONS=\"detect_leaks=0\"\n\n# Install remaining dependencies.\nexport SHELL=/bin/bash\n\nrustup default nightly\n\n./mach --no-interactive bootstrap --application-choice browser\n\n# Skip patches for now\nrm tools/fuzzing/libfuzzer/patches/*.patch\ntouch tools/fuzzing/libfuzzer/patches/dummy.patch\n\n# Update internal libFuzzer.\n(cd tools/fuzzing/libfuzzer && ./clone_libfuzzer.sh HEAD)\n\n# Build!\n./mach build\n./mach gtest buildbutdontrun\n\n# Packages Firefox only to immediately extract the archive. Some files are\n# replaced with gtest-variants, which is required by the fuzzing interface.\n# Weighs in shy of 1GB afterwards. About double for coverage builds.\n./mach package\ntar -xf $MOZ_OBJDIR/dist/firefox*bz2 -C $OUT\ncp -L $MOZ_OBJDIR/dist/bin/gtest/libxul.so $OUT/firefox\ncp $OUT/firefox/dependentlibs.list $OUT/firefox/dependentlibs.list.gtest\n\n# Get absolute paths of the required system libraries.\nLIBRARIES=$({\n  xargs -I{} ldd $OUT/firefox/{} | gawk '/=> [/]/ {print $3}' | sort -u\n} < $OUT/firefox/dependentlibs.list)\n\n# Copy libraries. Less than 50MB total.\nmkdir -p $OUT/lib\nfor LIBRARY in $LIBRARIES; do cp -L $LIBRARY $OUT/lib; done\n\n# Build a wrapper binary for each target to set environment variables.\nfor FUZZ_TARGET in ${FUZZ_TARGETS[@]}\ndo\n  $CC $CFLAGS -O0 \\\n    -DFUZZ_TARGET=$FUZZ_TARGET \\\n    $SRC/target.c -o $OUT/$FUZZ_TARGET\ndone\n\ncp $SRC/*.options $OUT\n\n# SdpParser\nfind media/webrtc -iname \"*.sdp\" \\\n  -type f -exec zip -qu $OUT/SdpParser_seed_corpus.zip \"{}\" \\;\ncp $SRC/fuzzdata/dicts/sdp.dict $OUT/SdpParser.dict\n\n# StunParser\nfind media/webrtc -iname \"*.stun\" \\\n  -type f -exec zip -qu $OUT/StunParser_seed_corpus.zip \"{}\" \\;\ncp $SRC/fuzzdata/dicts/stun.dict $OUT/StunParser.dict\n\n# ImageGIF\nzip -rj $OUT/ImageGIF_seed_corpus.zip $SRC/fuzzdata/samples/gif\ncp $SRC/fuzzdata/dicts/gif.dict $OUT/ImageGIF.dict\n\n# ImageICO\nzip -rj $OUT/ImageICO_seed_corpus.zip $SRC/fuzzdata/samples/ico\n\n# ImageBMP\nzip -rj $OUT/ImageBMP_seed_corpus.zip $SRC/fuzzdata/samples/bmp\n\n# MediaADTS\nzip -rj $OUT/MediaADTS_seed_corpus.zip $SRC/fuzzdata/samples/aac\n\n# MediaFlac\nzip -rj $OUT/MediaFlac_seed_corpus.zip $SRC/fuzzdata/samples/flac\n\n# MediaMP3\nzip -rj $OUT/MediaMP3_seed_corpus.zip $SRC/fuzzdata/samples/mp3\n\n# MediaOgg\nzip -rj $OUT/MediaOgg_seed_corpus.zip $SRC/fuzzdata/samples/ogg\n\n# MediaWebM\nzip -rj $OUT/MediaWebM_seed_corpus.zip $SRC/fuzzdata/samples/webm\n\n# MediaWAV\n# zip -rj $OUT/MediaWAV_seed_corpus.zip $SRC/fuzzdata/samples/wav\n"
    },
    "firestore": {
        "name": "firestore",
        "language": "c++",
        "homepage": "https://firebase.google.com/docs/firestore/",
        "main_repo": "https://github.com/firebase/firebase-ios-sdk.git",
        "primary_contact": "varconst@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://firebase.google.com/docs/firestore/\"\nlanguage: c++\nprimary_contact: \"varconst@google.com\"\nauto_ccs:\n  - \"varconst@google.com\"\n  - \"rgowman@google.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/firebase/firebase-ios-sdk.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $WORK\n\n# Disable UBSan vptr since Firestore depends on other libraries that are built\n# with -fno-rtti.\nexport CFLAGS=\"$CFLAGS -fno-sanitize=vptr\"\nexport CXXFLAGS=\"$CXXFLAGS -fno-sanitize=vptr\"\n\n# Build the project using cmake with FUZZING option enabled to link to OSS Fuzz\n# fuzzing library defined in ${LIB_FUZZING_ENGINE}.\ncd $SRC/firebase-ios-sdk\n\n# Do not use Werror anywhere\nsed -i 's/-Werror=reorder//g' ./cmake/compiler_setup.cmake\nsed -i 's/-Werror=return-type//g' ./cmake/compiler_setup.cmake\nsed -i 's/-Wall -Wextra -Werror//g' ./cmake/compiler_setup.cmake\nsed -i 's/-Wuninitialized/#-Wu/g' ./cmake/compiler_setup.cmake\nsed -i 's/-Wfno-common/#-Wu/g' ./cmake/compiler_setup.cmake\nsed -i 's/-Werror//g' ./scripts/sync_project.rb\nsed -i 's/-Werror=reorder//g' ./FirebaseFirestore.podspec\nsed -i 's/ReadContext context/\\/\\/ReadContext/g' ./Firestore/fuzzing/serializer_fuzzer.cc\nsed -i 's/serializer.Dec/\\/\\/serializer/g' ./Firestore/fuzzing/serializer_fuzzer.cc\n\nmkdir build && cd build\ncmake -DFIREBASE_IOS_BUILD_TESTS=OFF -DFIREBASE_IOS_BUILD_BENCHMARKS=OFF -DFUZZING=ON ..\nmake -j$(nproc)\n\n# Copy fuzzing targets, dictionaries, and zipped corpora to $OUT.\nFUZZERS_DIR=Firestore/fuzzing\nfind ${FUZZERS_DIR} -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind ${FUZZERS_DIR} -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind ${FUZZERS_DIR} -name \"*_fuzzer_seed_corpus\" -type d -execdir zip -r ${OUT}/{}.zip {} ';'\n"
    },
    "flac": {
        "name": "flac",
        "language": "c++",
        "homepage": "https://xiph.org/flac/",
        "main_repo": "https://github.com/xiph/flac.git",
        "primary_contact": "mvanb1@gmail.com",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://xiph.org/flac/\"\nlanguage: c++\nprimary_contact: \"mvanb1@gmail.com\"\nauto_ccs:\n - \"erik.de.castro.lopo@gmail.com\"\nvendor_ccs:\n - \"twsmith@mozilla.com\"\nsanitizers:\n - address\n - undefined\n - memory\narchitectures:\n - x86_64\n - i386\ncoverage_extra_args: -ignore-filename-regex=/usr/lib/jvm/.*\nmain_repo: 'https://github.com/xiph/flac.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport ASAN_OPTIONS=\"detect_leaks=0\"\n\nif [[ $CFLAGS = *sanitize=address* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DASAN\"\nfi\n\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\n\nexport CFLAGS=\"$CFLAGS -D_FORTIFY_SOURCE=0\"\nexport CXXFLAGS=\"$CXXFLAGS -D_FORTIFY_SOURCE=0 -D_GLIBCXX_DEBUG\"\n\n# Build libogg\nmkdir $SRC/libogg-install\ncd $SRC/ogg\n./autogen.sh\n./configure --disable-crc --disable-shared --prefix=\"$SRC/libogg-install\"\nmake -j$(nproc)\nmake install\n\n# Build libflac\ncd $SRC/flac/\n./autogen.sh\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    LD_LIBRARY_PATH=\"$SRC/libogg-install/lib\" ./configure --with-ogg=\"$SRC/libogg-install\" --enable-static --disable-shared --disable-oggtest --disable-examples --disable-programs --disable-xmms-plugin --disable-asm-optimizations --disable-sse --enable-oss-fuzzers\nelse\n    LD_LIBRARY_PATH=\"$SRC/libogg-install/lib\" ./configure --with-ogg=\"$SRC/libogg-install\" --enable-static --disable-shared --disable-oggtest --disable-examples --disable-programs --disable-xmms-plugin --enable-oss-fuzzers\nfi\nmake -j$(nproc)\n\n# Copy decoder fuzzers\ncd $SRC/flac/oss-fuzz\ncp fuzzer_* $OUT\ncd $SRC\n\n# Build fuzzer_exo\n$CXX $CXXFLAGS -I $SRC/flac/oss-fuzz/ -I $SRC/flac/include/ -I $SRC/ExoPlayer/extensions/flac/src/main/jni/ -I /usr/lib/jvm/java-11-openjdk-amd64/include/ -I /usr/lib/jvm/java-11-openjdk-amd64/include/linux/ fuzzer_exo.cpp \\\n    $SRC/flac/src/libFLAC++/.libs/libFLAC++.a $SRC/flac/src/libFLAC/.libs/libFLAC.a $SRC/libogg-install/lib/libogg.a $LIB_FUZZING_ENGINE -o $OUT/fuzzer_exo\n\n# Build libflac again for encoder fuzzers, but now with additional define\ncd $SRC/flac/\necho \"#define FUZZING_BUILD_MODE_FLAC_SANITIZE_SIGNED_INTEGER_OVERFLOW\" >> config.h\n\nmake -j$(nproc)\n\n# Copy encoder fuzzers\ncd $SRC/flac/oss-fuzz\ncp fuzzer_encoder fuzzer_encoder_v2 $OUT\n\n# Copy seed corpus\ncd $SRC/flac/oss-fuzz/seedcorpus || exit 0\nfor fuzzerName in *; do\n    zip -j $OUT/${fuzzerName}_seed_corpus.zip ${fuzzerName}/*\ndone\n"
    },
    "flask-jwt-extended": {
        "name": "flask-jwt-extended",
        "language": "python",
        "homepage": "https://github.com/vimalloc/flask-jwt-extended",
        "main_repo": "https://github.com/vimalloc/flask-jwt-extended",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/vimalloc/flask-jwt-extended\nmain_repo: https://github.com/vimalloc/flask-jwt-extended\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "flask-restx": {
        "name": "flask-restx",
        "language": "python",
        "homepage": "https://github.com/python-restx/flask-restx",
        "main_repo": "https://github.com/python-restx/flask-restx",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/python-restx/flask-restx\nlanguage: python\nmain_repo: https://github.com/python-restx/flask-restx\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed -i \"s/werkzeug !=2.0.0/werkzeug ==2.1.2/g\" ./requirements/install.pip\ncd $SRC/flask-restx\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "flask-wtf": {
        "name": "flask-wtf",
        "language": "python",
        "homepage": "https://github.com/wtforms/flask-wtf/",
        "main_repo": "https://github.com/wtforms/flask-wtf/",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/wtforms/flask-wtf/\nmain_repo: https://github.com/wtforms/flask-wtf/\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "flask": {
        "name": "flask",
        "language": "python",
        "homepage": "https://github.com/pallets/flask",
        "main_repo": "https://github.com/pallets/flask",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pallets/flask\nlanguage: python\nmain_repo: https://github.com/pallets/flask\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build Werkzeug from latest\ncd $SRC/werkzeug\npip3 install -r ./requirements/dev.in\npip3 install .\n\n# Build flask\ncd $SRC/flask\npython3 -m pip install importlib_metadata\npip3 install .\n\n# Build flask-cors\ncd $SRC/flask-cors\npip3 install requests\npip3 install .\n\n# Build flask-cors fuzzers\ncd $SRC/flask-cors\ncompile_python_fuzzer $SRC/cors_fuzz_flask.py\n\n# Build flask fuzzers\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\n# Copy dictionaries out\ncp $SRC/fuzzing/dictionaries/http.dict $OUT/fuzz_werkzeug_http.dict\n"
    },
    "flatbuffers": {
        "name": "flatbuffers",
        "language": "c++",
        "homepage": "https://github.com/google/flatbuffers",
        "main_repo": "https://github.com/google/flatbuffers",
        "primary_contact": "derekbailey@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/flatbuffers\"\nlanguage: c++\nprimary_contact: \"derekbailey@google.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\n  - \"vglavnyy@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/google/flatbuffers'\nfile_github_issue: True\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n  \ncd $SRC/flatbuffers\nmkdir build\ncd build\ncmake -DOSS_FUZZ:BOOL=ON -G \"Unix Makefiles\" ../tests/fuzzer\nmake\n\ncp ../tests/fuzzer/*.dict $OUT/\ncp *.bfbs $OUT/\ncp *_fuzzer $OUT/\n"
    },
    "flate2-rs": {
        "name": "flate2-rs",
        "language": "rust",
        "homepage": "https://github.com/rust-lang/flate2-rs",
        "main_repo": "https://github.com/rust-lang/flate2-rs",
        "primary_contact": "david@adalogics.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/rust-lang/flate2-rs\"\nmain_repo: \"https://github.com/rust-lang/flate2-rs\"\nprimary_contact: \"david@adalogics.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"alex@alexcrichton.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/flate2-rs\ncargo fuzz build -O\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_gz_roundtrip $OUT/fuzz_gz_roundtrip\n"
    },
    "flex": {
        "name": "flex",
        "language": "c",
        "homepage": "https://github.com/westes/flex",
        "main_repo": "https://github.com/westes/flex",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/westes/flex\"\nmain_repo: \"https://github.com/westes/flex\"\nlanguage: c\nvendor_ccs:\n- \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport ASAN_OPTIONS=\"detect_leaks=0\"\n\n./autogen.sh\n./configure\nmake V=1\n\ngit apply $SRC/flex-patch.diff\ncd src\n$CC $CFLAGS -c main.c -DM4=2 -o main.o\ncd ../\n\n# Remove some object files we dont need. This is needed because we will link to\n# all othero bject files in the src folder.\nmv ./src/stage1*.o /tmp/\nmv ./src/libmain.o /tmp/\nmv ./src/flex-main.o /tmp/\nmv ./src/libyywrap.o /tmp/\n\n$CC $CFLAGS -c $SRC/fuzz-scanopt.c -I$SRC/flex/src\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./fuzz-scanopt.o ./src/*.o -o $OUT/fuzz-scanopt\n\n$CC $CFLAGS -c $SRC/fuzz-main.c -I$SRC/flex/src\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./fuzz-main.o ./src/*.o -o $OUT/fuzz-main\n\ncp $SRC/*.options $OUT/\n"
    },
    "fluent-bit": {
        "name": "fluent-bit",
        "language": "c++",
        "homepage": "https://github.com/fluent/fluent-bit",
        "main_repo": "https://github.com/fluent/fluent-bit/",
        "primary_contact": "edsiper@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/fluent/fluent-bit\"\nprimary_contact: \"edsiper@gmail.com\"\nlanguage: c++\nauto_ccs:\n  - \"david@adalogics.com\"\n  - \"wppttt@amazon.com\"\n  - \"zh0512xx@gmail.com\"\n  - \"leonardo@calyptia.com\"\nmain_repo: 'https://github.com/fluent/fluent-bit/'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfind /usr/ -name \"libyaml*.so\" -exec rm {} \\;\nfind /usr/ -name \"libyaml-0*\" -exec rm {} \\;\n\n# For fuzz-introspector, cxclude all functions in the fluent-bit/lib/ directory\nexport FUZZ_INTROSPECTOR_CONFIG=$SRC/fuzz_introspector_exclusion.config\ncat > $FUZZ_INTROSPECTOR_CONFIG <<EOF\nFILES_TO_AVOID\nfluent-bit/lib\nEOF\n\ncd fluent-bit\n\n# Patch files for fuzzing purposes. Only do if they have not already been patched.\nif [ $(grep \"fuzz\" -ic ./lib/msgpack-c/src/zone.c) -eq 0 ]\nthen\n  # Avoid building tests we don't need\n  sed -i 's/prepare_unit_tests(flb/#prepare_unit_tests(flb/g' ./tests/internal/CMakeLists.txt\n  sed -i 's/malloc(/fuzz_malloc(/g' ./lib/msgpack-c/src/zone.c\n  sed -i 's/struct msgpack_zone_chunk {/void *fuzz_malloc(size_t size) {if (size > 0xa00000) return NULL;\\nreturn malloc(size);}\\nstruct msgpack_zone_chunk {/g' ./lib/msgpack-c/src/zone.c\nfi\n\n# Remove the existing build, which makes it more convenient to build \n# fuzzers with multiple sanitizers using the same working directory.\nrm -rf ./build\nmkdir build\ncd build\nexport CFLAGS=\"$CFLAGS -fcommon -DFLB_TESTS_OSSFUZZ=ON\"\nexport CXXFLAGS=\"$CXXFLAGS -fcommon -DFLB_TESTS_OSSFUZZ=ON\"\n\n# Plugins enabled/disabled\nINPUT_PLUGINS=\"-DFLB_IN_COLLECTD=OFF \\\n  -DFLB_IN_CPU=OFF     \\\n  -DFLB_IN_DISK=OFF    \\\n  -DFLB_IN_DOCKER=OFF  \\\n  -DFLB_IN_EXEC=OFF    \\\n  -DFLB_IN_FORWARD=OFF \\\n  -DFLB_IN_HEAD=OFF    \\\n  -DFLB_IN_HEALTH=OFF  \\\n  -DFLB_IN_KMSG=OFF    \\\n  -DFLB_IN_MEM=OFF     \\\n  -DFLB_IN_MQTT=OFF    \\\n  -DFLB_IN_NETIF=OFF   \\\n  -DFLB_IN_PROC=OFF    \\\n  -DFLB_IN_RANDOM=OFF  \\\n  -DFLB_IN_SERIAL=OFF  \\\n  -DFLB_IN_STDIN=OFF   \\\n  -DFLB_IN_SYSLOG=OFF  \\\n  -DFLB_IN_SYSTEMD=OFF \\\n  -DFLB_IN_TAIL=OFF    \\\n  -DFLB_IN_TCP=OFF     \\\n  -DFLB_IN_THERMAL=OFF \\\n  -DFLB_IN_WINLOG=OFF\"\n\nOUTPUT_PLUGINS=\"-DFLB_OUT_AZURE=OFF  \\\n  -DFLB_OUT_BIGQUERY=OFF      \\\n  -DFLB_OUT_COUNTER=OFF       \\\n  -DFLB_OUT_DATADOG=OFF       \\\n  -DFLB_OUT_ES=OFF            \\\n  -DFLB_OUT_FILE=OFF          \\\n  -DFLB_OUT_FLOWCOUNTER=OFF   \\\n  -DFLB_OUT_FORWARD=OFF       \\\n  -DFLB_OUT_GELF=OFF          \\\n  -DFLB_OUT_HTTP=ON           \\\n  -DFLB_OUT_INFLUXDB=OFF      \\\n  -DFLB_OUT_KAFKA=OFF         \\\n  -DFLB_OUT_KAFKA_REST=OFF    \\\n  -DFLB_OUT_LOKI=OFF          \\\n  -DFLB_OUT_NATS=OFF          \\\n  -DFLB_OUT_NRLOGS=OFF        \\\n  -DFLB_OUT_NULL=OFF          \\\n  -DFLB_OUT_PGSQL=OFF         \\\n  -DFLB_OUT_PLOT=OFF          \\\n  -DFLB_OUT_SLACK=OFF         \\\n  -DFLB_OUT_SPLUNK=OFF        \\\n  -DFLB_OUT_STACKDRIVER=OFF   \\\n  -DFLB_OUT_STDOUT=ON         \\\n  -DFLB_OUT_SYSLOG=OFF        \\\n  -DFLB_OUT_TCP=OFF\"\n\nMISC_PLUGINS=\"-DFLB_LUAJIT=OFF \\\n  -DFLB_STREAM_PROCESSOR=OFF\"\n\nFILTER_PLUGINS=\"-DFLB_FILTER_ALTER_SIZE=ON  \\\n  -DFLB_FILTER_AWS=ON              \\\n  -DFLB_FILTER_GREP=ON             \\\n  -DFLB_FILTER_KUBERNETES=ON       \\\n  -DFLB_FILTER_MODIFY=ON           \\\n  -DFLB_FILTER_NEST=ON             \\\n  -DFLB_FILTER_PARSER=ON           \\\n  -DFLB_FILTER_RECORD_MODIFIER=ON  \\\n  -DFLB_FILTER_REWRITE_TAG=ON      \\\n  -DFLB_FILTER_THROTTLE=ON\"\n\nEXTRA_FLAGS=\"-DFLB_BINARY=OFF \\\n  -DFLB_EXAMPLES=OFF \\\n  -DFLB_METRICS=ON   \\\n  -DFLB_DEBUG=ON     \\\n  -DMBEDTLS_FATAL_WARNINGS=OFF \\\n  -DFLB_CONFIG_YAML=ON\"\n\ncmake -DFLB_TESTS_INTERNAL=ON \\\n      -DFLB_TESTS_INTERNAL_FUZZ=ON \\\n      -DFLB_TESTS_OSSFUZZ=ON \\\n      ${EXTRA_FLAGS} \\\n      ${INPUT_PLUGINS} \\\n      ${FILTER_PLUGINS} \\\n      ${MISC_PLUGINS} \\\n      ${OUTPUT_PLUGINS} \\\n      ..\n\nif [[ \"$SANITIZER\" == introspector ]]; then\n  make\nelse\n  make -j$(nproc)\nfi\n\ncp $SRC/fluent-bit/build/bin/*OSSFUZZ ${OUT}/\n\n# Add seeds to config-yaml fuzzer\nmkdir -p $SRC/config_yaml_seeds\ncd $SRC/config_yaml_seeds\nfind $SRC/fluent-bit/tests/internal/data/config_format/yaml -name \"*.yaml\" -exec cp {} . \\;\nzip -rj $OUT/flb-it-fuzz-config_yaml_fuzzer_OSSFUZZ_seed_corpus.zip $SRC/config_yaml_seeds/*\n"
    },
    "fluxcd": {
        "name": "fluxcd",
        "language": "go",
        "homepage": "https://fluxcd.io/",
        "main_repo": "https://github.com/fluxcd/flux2",
        "primary_contact": "cncf-flux-security@lists.cncf.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://fluxcd.io/\"\nmain_repo: \"https://github.com/fluxcd/flux2\"\nprimary_contact: \"cncf-flux-security@lists.cncf.io\"\nauto_ccs :\n  - \"hidde@weave.works\"\n  - \"scott@r6by.com\"\n  - \"paulo.gomes.uk@gmail.com\"\n  - \"david@adalogics.com\"\n  - \"adam@adalogics.com\"\n  - \"max@e13.dev\"\n  - \"matheuscscp@gmail.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# This code improves the use of Go Native by:\n# - Dynamically discovering and building all fuzz tests within the project root path.\n# - Supporting single (during PR checks) or multiple repositories (oss-fuzz).\n# - Enabling execution via CI builds and Makefile targets for each repo.\n\nGOPATH=\"${GOPATH:-/root/go}\"\nORG_ROOT=\"${ORG_ROOT:-${GOPATH}/src/github.com/fluxcd}\"\nPREBUILD_SCRIPT_PATH=\"${PREBUILD_SCRIPT_PATH:-tests/fuzz/oss_fuzz_prebuild.sh}\"\nPOSTBUILD_SCRIPT_PATH=\"${POSTBUILD_SCRIPT_PATH:-tests/fuzz/oss_fuzz_postbuild.sh}\"\n\n# source_prebuild_script sources the prebuild script, which executes project-specific\n# code and exposes environment variables that are needed during the generic build process.\n#\n# Examples of usage may be organising directory structure for embedding\n# files, downloading artifacts or setting environment variables.\nfunction source_prebuild_script(){\n\tif [ -f \"${PREBUILD_SCRIPT_PATH}\" ]; then\n\t\t# shellcheck source=/dev/null\n\t\t. \"${PREBUILD_SCRIPT_PATH}\"\n\tfi\n}\n\n# source_postbuild_script sources the postbuild script, which executes project-specific\n# code and unset environment variables that may break follow-up processes.\nfunction source_postbuild_script(){\n\tif [ -f \"${POSTBUILD_SCRIPT_PATH}\" ]; then\n\t\t# shellcheck source=/dev/null\n\t\t. \"${POSTBUILD_SCRIPT_PATH}\"\n\tfi\n}\n\n# go_native_build_all_fuzzers builds all Go Native fuzz tests defined in modules within\n# the given project dir.\n#\n# Args:\n# \tproject_dir\nfunction go_native_build_all_fuzzers(){\n\tlocal project_path=\"$1\"\n\n\tcd \"${project_path}\"\n\n\tsource_prebuild_script\n\n\tmodules=$(find . -mindepth 1 -maxdepth 4 -type f -name 'go.mod' | cut -c 3- | sed 's|/[^/]*$$||' | sort -u | sed 's;/go.mod;;g' | sed 's;go.mod;.;g')\n\tfor module in ${modules}; do\n\t\tcd \"${project_path}/${module}\"\n\n\t\tlocal test_files\n\t\ttest_files=$(grep -r --include='**_test.go' --files-with-matches 'func Fuzz' . || echo \"\")\n\t\tif [ -z \"${test_files}\" ]; then\n\t\t\tcontinue\n\t\tfi\n\n\t\t# go-118-fuzz-build is required for each module.\n\t\tgo get -u github.com/AdamKorcz/go-118-fuzz-build/testing\n\n\t\t# The go get command above can affect transient dependencies, may lead\n\t\t# to the go.sym to become out of sync, which would cause build to break.\n\t\t# go mod tidy will only work if the current module has a reference\n\t\t# to the above dependency, so we create one.\n\t\tlocal pkgName\n\t\tpkgName=\"$(grep -h '^package ' -- *.go | head -n 1)\"\n\t\tif [ -z \"${test_files}\" ]; then\n\t\t\tpkgName=\"package fuzz\"\n\t\tfi\n\t\t\n\t\tcat <<EOF > dep-placeholder.go\n${pkgName}\n\nimport _ \"github.com/AdamKorcz/go-118-fuzz-build/testing\"\nEOF\n\t\t# With the reference above, this updates go.sum.\n\t\tgo mod tidy\n\n\t\t# Iterate through all Go Fuzz targets, compiling each into a fuzzer.\n\t\tfor file in ${test_files}; do\n\t\t\t# If the subdir is a module, skip this file, as it will be handled\n\t\t\t# at the next iteration of the outer loop. \n\t\t\tif [ -f \"$(dirname \"${file}\")/go.mod\" ]; then\n\t\t\t\tcontinue\n\t\t\tfi\n\n\t\t\ttargets=$(grep -oP 'func \\K(Fuzz\\w*)' \"${file}\")\n\t\t\tfor target_name in ${targets}; do\n\t\t\t\tlocal module_name\n\t\t\t\tlocal fuzzer_name\n\t\t\t\tlocal target_dir\n\n\t\t\t\t# Transform module path into module name (e.g. git/libgit2 to git_libgit2).\n\t\t\t\tmodule_name=\"${module/\\//_}_\"\n\t\t\t\t# If module equal '._', use empty string instead.\n\t\t\t\tmodule_name=\"${module/#%._}\"\n\n\t\t\t\t# Compose fuzzer name based on the lowercase version of the func names.\n\t\t\t\tfuzzer_name=\"${target_name,,}\"\n\t\t\t\t# The module name is added after the fuzz prefix, for better discoverability.\n\t\t\t\tfuzzer_name=\"${target_name/fuzz_/fuzz_${module_name}}\"\n\t\t\t\ttarget_dir=$(dirname \"${file}\")\n\n\t\t\t\techo \"Building ${file}.${target_name} into ${fuzzer_name}\"\n\t\t\t\tcompile_native_go_fuzzer \"${target_dir}\" \"${target_name}\" \"${fuzzer_name}\"\n\t\t\tdone\n\t\tdone\n\tdone\n}\n\nfunction loop_through_org_repositories(){\n\tlocal repos=\"\"\n\trepos=\"$(find \"${ORG_ROOT}\" -type d -mindepth 1 -maxdepth 1)\"\n\tfor repo in ${repos}; do\n\t\tgo_native_build_all_fuzzers \"${repo}\"\n\tdone\n}\n\nfunction main(){\n\t# If SRC is set to a Flux project, only its fuzzers will be built.\n\tif grep -h '^module github.com/fluxcd/' \"${SRC}/go.mod\"; then\n\t\techo \"Building Go Native fuzzers for ${SRC}\"\n\t\tgo_native_build_all_fuzzers \"${SRC}\"\n\t\texit $?\n\tfi\n\t\n\techo \"Going through all repositories in ${ORG_ROOT}\"\n\tloop_through_org_repositories \n}\n\nmain\n"
    },
    "flyway": {
        "name": "flyway",
        "language": "jvm",
        "homepage": "https://github.com/flyway/flyway",
        "main_repo": "https://github.com/flyway/flyway",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/flyway/flyway\nmain_repo: https://github.com/flyway/flyway\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n\n# Install mongo-jdbc-dependency required byu flyway\ncd mongo-jdbc-driver/\ngit checkout v1.19\n./gradlew clean shadowJar\n$MVN install:install-file \\\n  -Dfile=../mongo-jdbc-driver/build/libs/mongo-jdbc-standalone-1.19.jar \\\n  -DgroupId=com.github.kornilova203 -DartifactId=mongo-jdbc-driver \\\n  -Dversion=1.19 -Dpackaging=jar -DgeneratePom=true\n\n# Buuild flyway\ncd ../flyway\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True dependency:copy-dependencies\n\nJARFILE_LIST=\nfor JARFILE in $(find ./  -name *.jar)\ndo\n  if [[ \"$JARFILE\" == *\"target/\"* ]] || [[ \"$JARFILE\" == *\"build/\"* ]] || [[ \"$JARFILE\" == *\"dist/\"* ]]\n  then\n    if [[ \"$JARFILE\" != *sources.jar ]] && [[ \"$JARFILE\" != *javadoc.jar ]] && [[ \"$JARFILE\" != *tests.jar ]]\n    then\n      cp $JARFILE $OUT/\n      JARFILE_LIST=\"$JARFILE_LIST$(basename $JARFILE) \"\n    fi\n  fi\ndone\n\ncurr_dir=$(pwd)\nrm -rf $OUT/jar_temp\nmkdir $OUT/jar_temp\ncd $OUT/jar_temp\nfor JARFILE in $JARFILE_LIST\ndo\n  jar -xf $OUT/$JARFILE\ndone\ncd $curr_dir\n\nBUILD_CLASSPATH=$JAZZER_API_PATH:$OUT/jar_temp\nRUNTIME_CLASSPATH=\\$this_dir/jar_temp:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "fmt": {
        "name": "fmt",
        "language": "c++",
        "homepage": "https://github.com/fmtlib/fmt",
        "main_repo": "https://github.com/fmtlib/fmt.git",
        "primary_contact": "pauldreikossfuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/fmtlib/fmt\"\nlanguage: c++\nprimary_contact: \"pauldreikossfuzz@gmail.com\"\nauto_ccs:\n - \"victor.zverovich@gmail.com\"\nmain_repo: 'https://github.com/fmtlib/fmt.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#create zip files with initial corpus, taken from version control.\n#for f in $(ls fuzzers/initial_corpus/) ;do\n#  zip -j -r $OUT/fuzzer_${f}_seed_corpus.zip fuzzers/initial_corpus/$f\n#done\n\nmkdir build\ncd build\n\n# use C++ 14 instead of 17, because even if clang is\n# bleeding edge, cmake is old in the oss fuzz image.\n\ncmake .. \\\n-GNinja \\\n-DCMAKE_BUILD_TYPE=Debug \\\n-DCMAKE_CXX_STANDARD=14 \\\n-DFMT_DOC=Off \\\n-DFMT_TEST=Off \\\n-DFMT_SAFE_DURATION_CAST=On \\\n-DFMT_FUZZ=On \\\n-DFMT_FUZZ_LINKMAIN=Off \\\n-DFMT_FUZZ_LDFLAGS=$LIB_FUZZING_ENGINE\n\ncmake --build .\n\ncp bin/*fuzzer $OUT\n"
    },
    "fontations": {
        "name": "fontations",
        "language": "rust",
        "homepage": "https://github.com/googlefonts/fontations",
        "main_repo": "https://github.com/googlefonts/fontations",
        "primary_contact": "rsheeter@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/googlefonts/fontations\"\nlanguage: rust\nprimary_contact: \"rsheeter@google.com\"\nauto_ccs:\n  - \"drott@google.com\"\n  - \"grieger@google.com\"\n  - \"colin.rofls@gmail.com\"\n  - \"cbrokaw@google.com\"\n  - \"clupo@google.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nmain_repo: 'https://github.com/googlefonts/fontations'",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# To test:\n#   export SRC=/tmp\n#   export OUT=/tmp\n#   git clone --depth 1 https://github.com/googlefonts/fontations /tmp/fontations\n#   rm -rf /tmp/{font_srcs,corpus_tmp}\n#   projects/fontations/build.sh\n\nCLONE_TMP=\"$SRC/font_srcs\"\nCORPUS_TMP=\"$SRC/corpus_tmp\"\nmkdir \"$CLONE_TMP\"\nmkdir \"$CORPUS_TMP\"\n\npushd \"$CLONE_TMP\"\ngit clone --depth 1 https://github.com/unicode-org/text-rendering-tests.git\ngit clone --depth 1 https://github.com/googlefonts/color-fonts.git\ngit clone --depth 1 https://github.com/harfbuzz/harfbuzz.git\nfor d in text-rendering-tests/fonts color-fonts/fonts harfbuzz/test; do\n    find $d -name '*.[ot]t[fc]' -execdir cp {} ${CORPUS_TMP} \\;\ndone\npopd\n\npushd \"$CORPUS_TMP\"\nzip seed_corpus.zip *\npopd\n\ncd $SRC/fontations\n# Add +nightly after cargo if running locally and getting: error: the option `Z` is only accepted on the nightly compiler\ncargo fuzz build -O --debug-assertions\n\n# Based on zip-rs\nRELEASE_DIR=target/x86_64-unknown-linux-gnu/release\nnum_fuzzers=0\nfor fuzzer in $(find $RELEASE_DIR -maxdepth 1 -type f -executable -name 'fuzz_*'  -exec basename {} \\;); do\n    cp -v \"$CORPUS_TMP/seed_corpus.zip\" $(basename $fuzzer)_seed_corpus.zip\n    cp -v \"$RELEASE_DIR/$fuzzer\" $OUT/\n    num_fuzzers=$((num_fuzzers+1))\ndone\n\n# If we found 0 fuzzers something is very wrong\n[[ \"$num_fuzzers\" -gt 0 ]] || { echo \"No fuzzers!\"; exit 1; }"
    },
    "fonttools": {
        "name": "fonttools",
        "language": "python",
        "homepage": "https://github.com/behdad/fonttools",
        "main_repo": "https://github.com/behdad/fonttools",
        "primary_contact": "cosimo@anthrotype.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/behdad/fonttools\nlanguage: python\nmain_repo: https://github.com/behdad/fonttools\nprimary_contact: 'cosimo@anthrotype.com'\nsanitizers:\n- address\n- undefined\nauto_ccs:\n- behdad.esfahbod@gmail.com\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\nzip $OUT/fuzz_compile_seed_corpus.zip $SRC/fonttools/Tests/ttx/data/TestBOM.ttx\n"
    },
    "freeimage": {
        "name": "freeimage",
        "language": "c++",
        "homepage": "http://freeimage.sourceforge.net/",
        "main_repo": "https://svn.code.sf.net/p/freeimage/svn/",
        "primary_contact": "drolon@infonie.fr",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://freeimage.sourceforge.net/\"\nmain_repo: 'https://svn.code.sf.net/p/freeimage/svn/'\nlanguage: c++\nprimary_contact: \"drolon@infonie.fr\"\n\nsanitizers:\n  - address\n  - undefined\n\nlabels:\n  load_from_memory_fuzzer:\n    - sundew\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# b44ExpLogTable.cpp only contains a definition of main().\nsed -i 's/Source\\/OpenEXR\\/IlmImf\\/b44ExpLogTable.cpp//' Makefile.srcs\nsed -i 's/Source\\/LibTIFF4\\/tif_getimage.c/Source\\/LibTIFF4\\/tif_getimage.c Source\\/LibTIFF4\\/tif_hash_set.c/g' ./Makefile.srcs\nexport CXXFLAGS=\"$CXXFLAGS -std=c++14\"  # Avoid C++17 build error\n(\n # Avoid tmpnam link error\n cd Source/LibJXR\n dos2unix ./image/encode/strenc.c\n patch -p1 -i $SRC/jxrlib_tmpnam.patch\n)\nmake LIBRARIES=-lc++ -j$(nproc) -f Makefile.gnu libfreeimage.a\n\nINSTALL_DIR=$PWD\n\ncd $SRC\n\n$CXX $CXXFLAGS -I${INSTALL_DIR}/ -I${INSTALL_DIR}/Source $LIB_FUZZING_ENGINE \\\n  load_from_memory_fuzzer.cc ${INSTALL_DIR}/libfreeimage.a \\\n  -o $OUT/load_from_memory_fuzzer\n"
    },
    "freeradius": {
        "name": "freeradius",
        "language": "c++",
        "homepage": "https://freeradius.org",
        "main_repo": "https://github.com/FreeRADIUS/freeradius-server.git",
        "primary_contact": "a.cudbardb@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://freeradius.org\"\nlanguage: c++\nprimary_contact: \"a.cudbardb@gmail.com\"\nauto_ccs:\n- \"adekok@gmail.com\"\n- \"p.antoine@catenacyber.fr\"\nmain_repo: 'https://github.com/FreeRADIUS/freeradius-server.git'\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfunction copy_lib\n    {\n    local fuzzer_path=$1\n    local lib=$2\n    cp $(ldd ${fuzzer_path} | grep \"${lib}\" | awk '{ print $3 }') ${OUT}/lib\n    }\n\nmkdir -p $OUT/lib\n\n# git apply --ignore-whitespace $SRC/patch.diff\n# build project\n./configure --enable-fuzzer --enable-coverage --enable-address-sanitizer\n# make tries to compile regular programs as fuzz targets\n# so -i flag ignores these errors\nmake -i -j$(nproc)\nmake -i install\n# use shared libraries\nldconfig\nls ./build/bin/local/fuzzer_* | while read i; do\n    patchelf --set-rpath '$ORIGIN/lib' ${i}\n    copy_lib ${i} libfreeradius\n    copy_lib ${i} talloc\n    copy_lib ${i} kqueue\n    copy_lib ${i} libunwind\n    cp ${i} $OUT/\ndone\ncp -r /usr/local/share/freeradius/dictionary $OUT/dict\n# export FR_DICTIONARY_DIR=/out/dictionary/\n# export FR_LIBRARY_PATH=/out/lib/\n"
    },
    "freerdp": {
        "name": "freerdp",
        "language": "c",
        "homepage": "https://www.freerdp.com/",
        "main_repo": "https://github.com/FreeRDP/FreeRDP",
        "primary_contact": "team@freerdp.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "centipede",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.freerdp.com/\"\nmain_repo: \"https://github.com/FreeRDP/FreeRDP\"\nlanguage: c\nprimary_contact: \"team@freerdp.com\"\nauto_ccs:\n  - \"freerdpproject@gmail.com\"\n  - \"estetus@gmail.com\"\nbuilds_per_day: 4\nfuzzing_engines:\n  - afl\n  - centipede\n  - honggfuzz\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\narchitectures:\n  - x86_64\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Avoid compilation issue due to some undefined references. They are defined in\n# libc++ and used by Centipede so -lc++ needs to come after centipede's lib.\nif [[ $FUZZING_ENGINE == centipede ]]\nthen\n    sed -i \\\n        '/$ENV{LIB_FUZZING_ENGINE}/a \\ \\ \\ \\ \\ \\ \\ \\ -lc++' \\\n        cmake/ConfigOptions.cmake\nfi\n\ncase $SANITIZER in\n  address) SANITIZERS_ARGS=\"-DWITH_SANITIZE_ADDRESS=ON\" ;;\n  memory) SANITIZERS_ARGS=\"-DWITH_SANITIZE_MEMORY=ON\" ;;\n  *) SANITIZERS_ARGS=\"\" ;;\nesac\n\n: ${LD:=\"${CXX}\"}\n: ${LDFLAGS:=\"${CXXFLAGS}\"}  # to make sure we link with sanitizer runtime\n\ncmake_args=(\n    # clang-15 segfaults on linking binaries when LTO is enabled,\n    # see https://github.com/google/oss-fuzz/pull/10448#issuecomment-1578160436\n    -DCMAKE_INTERPROCEDURAL_OPTIMIZATION=OFF\n\n    $SANITIZERS_ARGS\n\n    -DCMAKE_BUILD_TYPE=Debug\n    -DBUILD_SHARED_LIBS=OFF\n\n    # C compiler\n    -DCMAKE_C_COMPILER=\"${CC}\"\n    -DCMAKE_C_FLAGS=\"${CFLAGS}\"\n\n    # C++ compiler\n    -DCMAKE_CXX_COMPILER=\"${CXX}\"\n    -DCMAKE_CXX_FLAGS=\"${CXXFLAGS}\"\n\n    # Linker\n    -DCMAKE_LINKER=\"${LD}\"\n    -DCMAKE_EXE_LINKER_FLAGS=\"${LDFLAGS}\"\n    -DCMAKE_MODULE_LINKER_FLAGS=\"${LDFLAGS}\"\n    -DCMAKE_SHARED_LINKER_FLAGS=\"${LDFLAGS}\"\n)\n\n# Build the project and fuzzers.\nrm -rf build\ncmake \"${cmake_args[@]}\" -S . -B build -G Ninja -C ci/cmake-preloads/config-oss-fuzz.cmake\ncmake --build build --parallel --target fuzzers\n\nfor f in $(find build/Testing/ -name 'TestFuzz*' -type f);\ndo\n    cp $f $OUT/\ndone\n"
    },
    "freetype2": {
        "name": "freetype2",
        "language": "c++",
        "homepage": "https://www.freetype.org/",
        "main_repo": "https://github.com/freetype/freetype2-testing.git",
        "primary_contact": "lemzwerg@gmail.com",
        "vendor_ccs": [
            "jkew@mozilla.com",
            "jmuizelaar@mozilla.com",
            "lsalzman@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.freetype.org/\"\nlanguage: c++\nprimary_contact: \"lemzwerg@gmail.com\"\nauto_ccs:\n  - \"lemzwerg@googlemail.com\"\n  - \"HinTak.Leung@gmail.com\"\n  - \"ewaldhew@gmail.com\"\n  - \"apodtele@gmail.com\"\n  - \"prince.cherusker@gmail.com\"\n  - \"drott@chromium.org\"\n  - \"bungeman@chromium.org\"\nvendor_ccs:\n  - \"jkew@mozilla.com\"\n  - \"jmuizelaar@mozilla.com\"\n  - \"lsalzman@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/freetype/freetype2-testing.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eux\n#\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Tell CMake what fuzzing engine to link:\nexport CMAKE_FUZZING_ENGINE=\"$LIB_FUZZING_ENGINE\"\n\nbash \"fuzzing/scripts/build-fuzzers.sh\"\nbash \"fuzzing/scripts/prepare-oss-fuzz.sh\"\n\n# Rename the `legacy' target to `ftfuzzer' for historical reasons:\nfor f in \"${OUT}/legacy\"*; do\n    mv \"${f}\" \"${f/legacy/ftfuzzer}\"\ndone\n\nzip -ju \"${OUT}/ftfuzzer_seed_corpus.zip\" \"${SRC}/font-corpus/\"*\n"
    },
    "fribidi": {
        "name": "fribidi",
        "language": "c",
        "homepage": "https://github.com/fribidi/fribidi",
        "main_repo": "https://github.com/fribidi/fribidi.git",
        "primary_contact": "dov.grobgeld@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://github.com/fribidi/fribidi\"\nlanguage: c\nprimary_contact: \"dov.grobgeld@gmail.com\"\nauto_ccs:\n  - \"behdad.esfahbod@gmail.com\"\n  - \"behdad@gnu.org\"\n  - \"ebrahim@gnu.org\"\n  - \"dr.khaled.hosny@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/fribidi/fribidi.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# setup\nbuild=$WORK/build\n\n# cleanup\nrm -rf $build\nmkdir -p $build\n\n# Build the library.\nmeson --default-library=static --wrap-mode=nodownload -Ddocs=false \\\n      -Dfuzzer_ldflags=\"$(echo $LIB_FUZZING_ENGINE)\" \\\n      $build \\\n  || (cat build/meson-logs/meson-log.txt && false)\n\n# Build the fuzzers.\nninja -v -j$(nproc) -C $build bin/fribidi-fuzzer\nmv $build/bin/fribidi-fuzzer $OUT/\n\n# Archive and copy to $OUT seed corpus if the build succeeded.\nzip $OUT/fribidi-fuzzer_seed_corpus.zip test/*.{input,reference} test/fuzzing/*\n"
    },
    "frr": {
        "name": "frr",
        "language": "c++",
        "homepage": "https://frrouting.org",
        "main_repo": "https://github.com/FRRouting/frr",
        "primary_contact": "security@lists.frrouting.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://frrouting.org\"\nlanguage: c++\nprimary_contact: \"security@lists.frrouting.org\"\nauto_ccs:\n- \"qlyoung@qlyoung.net\"\n- \"equinox-ossfuzz@diac24.net\"\n- \"menotdonald@gmail.com\"\n- \"mjs.ietf@gmail.com\"\n- \"rwgbsd@gmail.com\"\nfuzzing_engines:\n - libfuzzer\nmain_repo: 'https://github.com/FRRouting/frr'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nfunction copy_lib\n    {\n    local fuzzer_path=$1\n    local lib=$2\n    cp $(ldd ${fuzzer_path} | grep \"${lib}\" | awk '{ print $3 }') ${OUT}/lib/ || true\n    }\n\nmkdir -p $OUT/lib\n\n# build dependency\n(\ncd $SRC/libyang\nmkdir build; cd build\ncmake -DBUILD_SHARED_LIBS=OFF -DENABLE_LYD_PRIV=ON -DCMAKE_INSTALL_PREFIX:PATH=/usr \\\n    -D CMAKE_BUILD_TYPE:String=\"Release\" ..\nmake -j$(nproc)\nmake install\n)\n\n# build project\nexport ASAN_OPTIONS=detect_leaks=0\nexport CFLAGS=\"${CFLAGS} -DFUZZING_OVERRIDE_LLVMFuzzerTestOneInput\"\nexport CXXFLAGS=\"${CXXFLAGS} -DFUZZING_OVERRIDE_LLVMFuzzerTestOneInput\"\n./bootstrap.sh\n./configure --enable-libfuzzer --enable-static --enable-static-bin --sbindir=$SRC/bin\nmake -j$(nproc)\nmake install\ncp ./lib/.libs/libfrr.so.0 $OUT/lib/\ncp $SRC/bin/bgpd $OUT/\ncp $SRC/bin/ospfd $OUT/\ncp $SRC/bin/pimd $OUT/\ncp $SRC/bin/zebra $OUT/\n\n# build corpus\ncd $SRC/corpi\nfind . -type d -maxdepth 1 | while read i; do zip -j $OUT/\"$i\"_seed_corpus.zip \"$i\"/*; done\n\nfind $OUT -maxdepth 1 -type f -executable | while read i; do\n    grep \"LLVMFuzzerTestOneInput\" ${i} > /dev/null 2>&1 || continue\n    patchelf --set-rpath '$ORIGIN/lib' ${i}\n    copy_lib ${i} libpcre2\n    copy_lib ${i} libyang\n    copy_lib ${i} libelf\n    copy_lib ${i} libjson-c\n    copy_lib ${i} libprotobuf-c\ndone\n\npatchelf --remove-needed libpcre2-8.so.0 $OUT/lib/libyang.so.2\n"
    },
    "fsnotify": {
        "name": "fsnotify",
        "language": "go",
        "homepage": "https://github.com/fsnotify/fsnotify",
        "main_repo": "https://github.com/fsnotify/fsnotify",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/fsnotify/fsnotify\"\nlanguage: go\nmain_repo: \"https://github.com/fsnotify/fsnotify\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package fsnotify\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\necho building\ncompile_native_go_fuzzer github.com/fsnotify/fsnotify FuzzInotify FuzzInotify\n"
    },
    "ftfy": {
        "name": "ftfy",
        "language": "python",
        "homepage": "https://github.com/rspeer/python-ftfy",
        "main_repo": "https://github.com/rspeer/python-ftfy",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/rspeer/python-ftfy\nlanguage: python\nmain_repo: https://github.com/rspeer/python-ftfy\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "fuzzing-puzzles": {
        "name": "fuzzing-puzzles",
        "language": "c++",
        "homepage": "https://github.com/google/fuzzer-test-suite",
        "main_repo": "https://github.com/google/fuzzer-test-suite",
        "primary_contact": "kcc@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/google/fuzzer-test-suite\nlanguage: c++\nprimary_contact: kcc@google.com\nmain_repo: https://github.com/google/fuzzer-test-suite\nauto_ccs:\n  - \"metzman@google.com\"\n  - \"mmoroz@google.com\"\n\nsanitizers:\n  - address\n\nfuzzing_engines:\n  - honggfuzz\n\ndisabled: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$CXX $CXXFLAGS $SRC/fuzzing-puzzles/MultipleConstraintsOnSmallInputTest.cpp \\\n    -o $OUT/multiple_constraints_on_small_input_honggfuzz_fuzzer \\\n    $LIB_FUZZING_ENGINE\n"
    },
    "fuzztest-example": {
        "name": "fuzztest-example",
        "language": "c++",
        "homepage": "https://github.com/google/fuzztest",
        "main_repo": "https://github.com/google/fuzztest",
        "primary_contact": "david@adalogics.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/fuzztest\"\nlanguage: c++\nprimary_contact: \"david@adalogics.com\"\nmain_repo: \"https://github.com/google/fuzztest\"\nfuzzing_engines:\n - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd fuzztest\ngit apply  --ignore-space-change --ignore-whitespace $SRC/fuzztest-enable-fuzzers.diff\n\n# Compile gfuzztests\ncd codelab\ncompile_fuzztests.sh\n"
    },
    "fuzztest-raksha": {
        "name": "fuzztest-raksha",
        "language": "c++",
        "homepage": "https://github.com/google/fuzztest",
        "main_repo": "https://github.com/google/fuzztest",
        "primary_contact": "david@adalogics.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/fuzztest\"\nlanguage: c++\nprimary_contact: \"david@adalogics.com\"\nmain_repo: \"https://github.com/google/fuzztest\"\nfuzzing_engines:\n - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Extend with oss-fuzz settings. To be upsteamed?\ncd $SRC/raksha\ngit apply  --ignore-space-change --ignore-whitespace $SRC/raksha-fuzztest.diff\n\n# Compile gfuzztests\nexport FUZZTEST_TARGET_FOLDER=\"//src/...\"\ncompile_fuzztests.sh\n"
    },
    "fuzzywuzzy": {
        "name": "fuzzywuzzy",
        "language": "jvm",
        "homepage": "https://github.com/xdrop/fuzzywuzzy",
        "main_repo": "https://github.com/xdrop/fuzzywuzzy",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/xdrop/fuzzywuzzy\nmain_repo: https://github.com/xdrop/fuzzywuzzy\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"package/target/fuzzywuzzy-$CURRENT_VERSION.jar\" $OUT/fuzzywuzzy.jar\ncp \"build/target/fuzzywuzzy-build-$CURRENT_VERSION.jar\" $OUT/fuzzywuzzy-build.jar\ncp diffutils/target/diffutils-*.jar $OUT/diffutils.jar\n\nALL_JARS=\"fuzzywuzzy.jar:fuzzywuzzy-build.jar:diffutils.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir     \\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar     --cp=$RUNTIME_CLASSPATH     --target_class=$fuzzer_basename     --jvm_args=\"\\$mem_settings\"     \\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "fwupd": {
        "name": "fwupd",
        "language": "c",
        "homepage": "https://github.com/fwupd/fwupd",
        "main_repo": "https://github.com/fwupd/fwupd",
        "primary_contact": "hughsient@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/fwupd/fwupd\"\nlanguage: c\nprimary_contact: \"hughsient@gmail.com\"\nmain_repo: 'https://github.com/fwupd/fwupd'\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 fwupd/contrib/ci/oss-fuzz.py\n"
    },
    "g-api-auth-httplib2": {
        "name": "g-api-auth-httplib2",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-auth-library-python-httplib2",
        "main_repo": "https://github.com/googleapis/google-auth-library-python-httplib2/",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-auth-library-python-httplib2\nlanguage: python\nmain_repo: https://github.com/googleapis/google-auth-library-python-httplib2/\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-auth-library-python": {
        "name": "g-api-auth-library-python",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-auth-library-python",
        "main_repo": "https://github.com/googleapis/google-auth-library-python",
        "primary_contact": "kittureddy@google.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "auto_ccs:\n- saisunder@google.com\n- stim@google.com\n- clundin@google.com\n- sijunliu@google.com\nfuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-auth-library-python\nlanguage: python\nmain_repo: https://github.com/googleapis/google-auth-library-python\nprimary_contact: kittureddy@google.com\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install -r docs/requirements-docs.txt\npip3 install .\n\n# Embed certificates and private key too\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data \"$PWD/tests/data/privatekey.pem:.\" --add-data \"$PWD/tests/data/public_cert.pem:.\"\ndone\n"
    },
    "g-api-pubsub": {
        "name": "g-api-pubsub",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-pubsub",
        "main_repo": "https://github.com/googleapis/python-pubsub",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-pubsub\nlanguage: python\nmain_repo: https://github.com/googleapis/python-pubsub\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-py-api-common-protos": {
        "name": "g-api-py-api-common-protos",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-api-common-protos",
        "main_repo": "https://github.com/googleapis/python-api-common-protos",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-api-common-protos\nlanguage: python\nmain_repo: https://github.com/googleapis/python-api-common-protos\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build protoc with default options.\nunset CFLAGS CXXFLAGS\nmkdir $SRC/protobuf-install/\ncd $SRC/protobuf-install/\ncmake -Dprotobuf_BUILD_TESTS=OFF $SRC/protobuf\nmake -j$(nproc)\nmake install\nldconfig\n\ncd $SRC/protobuf/python\npython3 setup.py build\npip3 install .\n\n# Compile .proto specs\ncd $SRC/python-api-common-protos/\nfor target in quota billing routing log; do\n  protoc --python_out=. --proto_path=. google/api/$target.proto\ndone\n\n# Compile fuzzer\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-py-oauthlib": {
        "name": "g-api-py-oauthlib",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-auth-library-python-oauthlib",
        "main_repo": "https://github.com/googleapis/google-auth-library-python-oauthlib",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-auth-library-python-oauthlib\nlanguage: python\nmain_repo: https://github.com/googleapis/google-auth-library-python-oauthlib\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-python-bigquery-storage": {
        "name": "g-api-python-bigquery-storage",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-bigquery-storage",
        "main_repo": "https://github.com/googleapis/python-bigquery-storage",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-bigquery-storage\nlanguage: python\nmain_repo: https://github.com/googleapis/python-bigquery-storage\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nGRPC_PYTHON_CFLAGS=\"${CFLAGS}\" GRPC_PYTHON_BUILD_SYSTEM_RE2=true GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true GRPC_PYTHON_BUILD_SYSTEM_ZLIB=true pip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-python-client": {
        "name": "g-api-python-client",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-api-python-client",
        "main_repo": "https://github.com/googleapis/google-api-python-client",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-api-python-client\nlanguage: python\nmain_repo: https://github.com/googleapis/google-api-python-client\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build flask fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-python-cloud-core": {
        "name": "g-api-python-cloud-core",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-cloud-core",
        "main_repo": "https://github.com/googleapis/python-cloud-core",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-cloud-core\nlanguage: python\nmain_repo: https://github.com/googleapis/python-cloud-core\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-python-firestore": {
        "name": "g-api-python-firestore",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-firestore",
        "main_repo": "https://github.com/googleapis/python-firestore",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-firestore\nlanguage: python\nmain_repo: https://github.com/googleapis/python-firestore\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-python-tasks": {
        "name": "g-api-python-tasks",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-cloud-python/tree/main/packages/google-cloud-tasks",
        "main_repo": "https://github.com/googleapis/google-cloud-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-cloud-python/tree/main/packages/google-cloud-tasks\nlanguage: python\nmain_repo: https://github.com/googleapis/google-cloud-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nGRPC_PYTHON_CFLAGS=\"${CFLAGS}\" \\\nGRPC_PYTHON_BUILD_SYSTEM_RE2=true \\\nGRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true \\\nGRPC_PYTHON_BUILD_SYSTEM_ZLIB=true \\\nMAX_JOBS=$(nproc) \\\npython3 -m pip install -v . --no-binary :all:\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-resource-manager": {
        "name": "g-api-resource-manager",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-cloud-python/tree/main/packages/google-cloud-resource-manager",
        "main_repo": "https://github.com/googleapis/google-cloud-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-cloud-python/tree/main/packages/google-cloud-resource-manager\nlanguage: python\nmain_repo: https://github.com/googleapis/google-cloud-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nGRPC_PYTHON_CFLAGS=\"${CFLAGS}\" \\\nGRPC_PYTHON_BUILD_SYSTEM_RE2=true \\\nGRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true \\\nGRPC_PYTHON_BUILD_SYSTEM_ZLIB=true \\\nMAX_JOBS=$(nproc) \\\npython3 -m pip install -v . --no-binary :all:\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-resumable-media-python": {
        "name": "g-api-resumable-media-python",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-resumable-media-python",
        "main_repo": "https://github.com/googleapis/google-resumable-media-python",
        "primary_contact": "gorcester@google.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-resumable-media-python\nlanguage: python\nmain_repo: https://github.com/googleapis/google-resumable-media-python\nprimary_contact: gorcester@google.com\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-api-secret-manager": {
        "name": "g-api-secret-manager",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-secret-manager",
        "main_repo": "https://github.com/googleapis/python-secret-manager",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-secret-manager\nlanguage: python\nmain_repo: https://github.com/googleapis/python-secret-manager\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd packages/google-cloud-secret-manager/\n\nGRPC_PYTHON_CFLAGS=\"${CFLAGS}\" GRPC_PYTHON_BUILD_SYSTEM_RE2=true GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true GRPC_PYTHON_BUILD_SYSTEM_ZLIB=true python3 -m pip install -v .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-apis-py-api-core": {
        "name": "g-apis-py-api-core",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-api-core",
        "main_repo": "https://github.com/googleapis/python-api-core",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-api-core\nlanguage: python\nmain_repo: https://github.com/googleapis/python-api-core\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build flask fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-auth-library-java": {
        "name": "g-auth-library-java",
        "language": "jvm",
        "homepage": "developers.google.com/identity",
        "main_repo": "https://github.com/googleapis/google-auth-library-java/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"developers.google.com/identity\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/googleapis/google-auth-library-java/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=google-auth-library-java\nPROJECT_GROUP_ID=com.google.auth\nPROJECT_ARTIFACT_ID=google-auth-library\nMAIN_REPOSITORY=https://github.com/googleapis/google-auth-library-java/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  FUZZ_TARGET_DEPENDENCIES=\":google-auth-library-oauth2-http :google-auth-library-credentials :google-auth-library-appengine\"\n  \n  for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "g-cloud-logging-py": {
        "name": "g-cloud-logging-py",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-logging",
        "main_repo": "https://github.com/googleapis/python-logging",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-logging\nlanguage: python\nmain_repo: https://github.com/googleapis/python-logging\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-http-java-client": {
        "name": "g-http-java-client",
        "language": "jvm",
        "homepage": "https://github.com/googleapis/google-http-java-client/",
        "main_repo": "https://github.com/googleapis/google-http-java-client/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/googleapis/google-http-java-client/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/googleapis/google-http-java-client/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=google-http-java-client\nPROJECT_GROUP_ID=com.google.http-client\nPROJECT_ARTIFACT_ID=google-http-client\nMAIN_REPOSITORY=https://github.com/googleapis/google-http-java-client/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -Denforcer.skip=true -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  FUZZ_TARGET_DEPENDENCIES=\":google-http-client :google-http-client-gson\"\n  \n  for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--target_class=com.example.$fuzzer_basename \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "g-oauth-java-client": {
        "name": "g-oauth-java-client",
        "language": "jvm",
        "homepage": "https://github.com/googleapis/google-oauth-java-client",
        "main_repo": "https://github.com/googleapis/google-oauth-java-client",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/googleapis/google-oauth-java-client\nmain_repo: https://github.com/googleapis/google-oauth-java-client\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\n\ncp \"./google-oauth-client/target/google-oauth-client-$CURRENT_VERSION.jar\" $OUT/oauth.jar\n\nALL_JARS='oauth.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "g-py-bigquery": {
        "name": "g-py-bigquery",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-bigquery",
        "main_repo": "https://github.com/googleapis/python-bigquery",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-bigquery\nlanguage: python\nmain_repo: https://github.com/googleapis/python-bigquery\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build flask fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "g-py-crc32c": {
        "name": "g-py-crc32c",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-crc32c",
        "main_repo": "https://github.com/googleapis/python-crc32c",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-crc32c\nlanguage: python\nmain_repo: https://github.com/googleapis/python-crc32c\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit submodule update --init --recursive\n\nmkdir usr\nexport CRC32C_INSTALL_PREFIX=$(pwd)/usr\n\nmkdir google_crc32c/build\ncd google_crc32c/build\ncmake \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DCRC32C_BUILD_TESTS=no \\\n  -DCRC32C_BUILD_BENCHMARKS=no \\\n  -DBUILD_SHARED_LIBS=yes \\\n  -DCMAKE_INSTALL_PREFIX:PATH=${CRC32C_INSTALL_PREFIX} \\\n  ../\nmake all install\ncd ../../\n\n\npython3 setup.py build_ext \\\n  --include-dirs=$(pwd)/usr/include \\\n  --library-dirs=$(pwd)/usr/lib \\\n  --rpath=$(pwd)/usr/lib\npip3 install -e .[testing]\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gast": {
        "name": "gast",
        "language": "python",
        "homepage": "https://github.com/serge-sans-paille/gast",
        "main_repo": "https://github.com/serge-sans-paille/gast",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/serge-sans-paille/gast\nlanguage: python\nmain_repo: https://github.com/serge-sans-paille/gast\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gc-iam": {
        "name": "gc-iam",
        "language": "python",
        "homepage": "https://github.com/googleapis/google-cloud-python/tree/main/packages/google-cloud-iam",
        "main_repo": "https://github.com/googleapis/google-cloud-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/google-cloud-python/tree/main/packages/google-cloud-iam\nlanguage: python\nmain_repo: https://github.com/googleapis/google-cloud-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\nGRPC_PYTHON_CFLAGS=\"${CFLAGS}\" \\\nGRPC_PYTHON_BUILD_SYSTEM_RE2=true \\\nGRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true \\\nGRPC_PYTHON_BUILD_SYSTEM_ZLIB=true \\\npython3 -m pip install -v . --no-binary :all:\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gcloud-error-py": {
        "name": "gcloud-error-py",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-error-reporting",
        "main_repo": "https://github.com/googleapis/python-error-reporting",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-error-reporting\nlanguage: python\nmain_repo: https://github.com/googleapis/python-error-reporting\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install mock\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gcloud-go": {
        "name": "gcloud-go",
        "language": "go",
        "homepage": "https://github.com/googleapis/google-cloud-go",
        "main_repo": "https://github.com/googleapis/google-cloud-go",
        "primary_contact": "codyoss@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/googleapis/google-cloud-go\"\nmain_repo: \"https://github.com/googleapis/google-cloud-go\"\nprimary_contact: \"codyoss@google.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n\ncompile_go_fuzzer cloud.google.com/go/spanner/spansql FuzzParseQuery fuzz_parse_query\n"
    },
    "gcp-python-cloud-storage": {
        "name": "gcp-python-cloud-storage",
        "language": "python",
        "homepage": "https://github.com/googleapis/python-storage",
        "main_repo": "https://github.com/googleapis/python-storage",
        "primary_contact": "gorcester@google.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/python-storage\nlanguage: python\nmain_repo: https://github.com/googleapis/python-storage\nprimary_contact: gorcester@google.com\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gdal": {
        "name": "gdal",
        "language": "c++",
        "homepage": "https://gdal.org",
        "main_repo": "https://github.com/OSGeo/gdal",
        "primary_contact": "even.rouault@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://gdal.org\"\nlanguage: c++\nprimary_contact: \"even.rouault@gmail.com\"\nauto_ccs:\n  - \"schwehr@gmail.com\"\n  - \"mateusz@loskot.net\"\n  - \"bishop.dev@gmail.com\"\n  - \"juergen.fischer@gmail.com\"\n  - \"athomas@thinkspatial.com.au\"\n  - \"ari.jolma@gmail.com\"\n  - \"bjorn.harrtell@gmail.com\"\n  - \"nyall.dawson@gmail.com\"\n  - \"uygabel@gmail.com\"\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/OSGeo/gdal'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "gdbm": {
        "name": "gdbm",
        "language": "c",
        "homepage": "https://www.gnu.org.ua/software/gdbm",
        "main_repo": "https://git.gnu.org.ua/gdbm.git",
        "primary_contact": "sergey.poznyakoff@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.gnu.org.ua/software/gdbm\"\nlanguage: c\nprimary_contact: \"sergey.poznyakoff@gmail.com\"\nauto_ccs:\n  - \"gray@gnu.org\"\nmain_repo: \"https://git.gnu.org.ua/gdbm.git\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Bootstrap and configure project\n./bootstrap --no-po\n./configure --disable-shared --enable-debug --disable-nls\n# Build project\nmake -j$(nproc) all\n# Build fuzzer\ncd fuzz\n$CC $CFLAGS -c -I.. -I../src -I../tools -ogdbm_fuzzer.o gdbm_fuzzer.c\n$CXX $CXXFLAGS -ogdbm_fuzzer gdbm_fuzzer.o ../tools/libgdbmapp.a ../src/.libs/libgdbm.a $LIB_FUZZING_ENGINE\n\ncp gdbm_fuzzer $OUT\ncp gdbm_fuzzer.rc $OUT\n\n# Create seed\nPATH=$SRC/gdbm/tools:$PATH sh ./build_seed.sh -C seed\nzip -rj \"$OUT/gdbm_fuzzer_seed_corpus.zip\" seed/\n"
    },
    "gdk-pixbuf": {
        "name": "gdk-pixbuf",
        "language": "c",
        "homepage": "https://gitlab.gnome.org/GNOME/gdk-pixbuf/",
        "main_repo": "https://gitlab.gnome.org/GNOME/gdk-pixbuf.git",
        "primary_contact": "ebassi@gnome.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: https://gitlab.gnome.org/GNOME/gdk-pixbuf/\nlanguage: c\nprimary_contact: ebassi@gnome.org\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://gitlab.gnome.org/GNOME/gdk-pixbuf.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nPREFIX=$WORK/prefix\nmkdir -p $PREFIX\n\nexport PKG_CONFIG=\"`which pkg-config` --static\"\nexport PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig\nexport PATH=$PREFIX/bin:$PATH\n\nBUILD=$WORK/build\n\nrm -rf $WORK/*\nrm -rf $BUILD\nmkdir -p $BUILD\n\n# Build glib\npushd $SRC/glib-2.64.2\nmeson \\\n    --prefix=$PREFIX \\\n    --libdir=lib \\\n    --default-library=static \\\n    -Db_lundef=false \\\n    -Doss_fuzz=enabled \\\n    -Dlibmount=disabled \\\n    -Dinternal_pcre=true \\\n    _builddir\nninja -C _builddir\nninja -C _builddir install\npopd\n\n# Build gdk-pixbuf\npushd $SRC/gdk-pixbuf\nmeson \\\n    --prefix=$PREFIX \\\n    --libdir=lib \\\n    --default-library=static \\\n    -Dintrospection=disabled \\\n    -Dgtk_doc=false \\\n    -Dman=false \\\n    -Ddocs=false \\\n    -Dbuiltin_loaders='all' \\\n    _builddir\nninja -C _builddir\nninja -C _builddir install\npopd\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nif [ ! -f \"${OUT}/gdk-pixbuf_seed_corpus.zip\" ]; then\n  echo \"missing seed corpus\"\n  exit 1\nfi\n\nif [ ! -f \"${OUT}/gdk-pixbuf.dict\" ]; then\n  echo \"missing dictionary\"\n  exit 1\nfi\n\nPREDEPS_LDFLAGS=\"-Wl,-Bdynamic -ldl -lm -lc -pthread -lrt -lpthread\"\nDEPS=\"gmodule-2.0 glib-2.0 gio-2.0 gobject-2.0 gdk-pixbuf-2.0\"\nBUILD_CFLAGS=\"$CFLAGS `pkg-config --static --cflags $DEPS`\"\nBUILD_LDFLAGS=\"-Wl,-static `pkg-config --static --libs $DEPS`\"\n\nfuzzers=$(find $SRC/fuzz/ -name \"*_fuzzer.c\")\nfor f in $fuzzers; do\n  fuzzer_name=$(basename $f .c)\n  $CC $CFLAGS $BUILD_CFLAGS -c $f -o $WORK/${fuzzer_name}.o\n  $CXX $CXXFLAGS \\\n    $WORK/${fuzzer_name}.o -o $OUT/${fuzzer_name} \\\n    $PREDEPS_LDFLAGS \\\n    $BUILD_LDFLAGS \\\n    $LIB_FUZZING_ENGINE \\\n    -Wl,-Bdynamic\n  ln -sf $OUT/gdk-pixbuf_seed_corpus.zip $OUT/${fuzzer_name}_seed_corpus.zip\n  ln -sf $OUT/gdk-pixbuf.dict $OUT/${fuzzer_name}.dict\ndone\n"
    },
    "genshi": {
        "name": "genshi",
        "language": "python",
        "homepage": "https://github.com/edgewall/genshi",
        "main_repo": "https://github.com/edgewall/genshi",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/edgewall/genshi\nmain_repo: https://github.com/edgewall/genshi\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "geos": {
        "name": "geos",
        "language": "c++",
        "homepage": "https://geos.osgeo.org",
        "main_repo": "https://git.osgeo.org/gitea/geos/geos.git",
        "primary_contact": "mtnclimb@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://geos.osgeo.org\"\nlanguage: c++\nprimary_contact: \"mtnclimb@gmail.com\"\nauto_ccs :\n- \"strk@kbt.io\"\n- \"lr@pcorp.us\"\n- \"p.antoine@catenacyber.fr\"\n\nsanitizers:\n- address\n- undefined\nmain_repo: 'https://git.osgeo.org/gitea/geos/geos.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nmkdir build\ncd build\ncmake -DBUILD_SHARED_LIBS=OFF ..\nmake -j$(nproc)\ncp bin/fuzz* $OUT/\n"
    },
    "gfwx": {
        "name": "gfwx",
        "language": "c++",
        "homepage": "http://www.gfwx.org/",
        "main_repo": "https://github.com/kalcutter/gfwx",
        "primary_contact": "fyffe@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.gfwx.org/\"\nlanguage: c++\nprimary_contact: \"fyffe@google.com\"\nmain_repo: \"https://github.com/kalcutter/gfwx\"\nsanitizers:\n - address\n - undefined\n - memory\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\n\nmake\n\ncp fuzzer-encoder $OUT/\ncp fuzzer-encoder_seed_corpus.zip $OUT/\n\ncp fuzzer-decoder $OUT/\ncp fuzzer-decoder_seed_corpus.zip $OUT/\n"
    },
    "ghostscript": {
        "name": "ghostscript",
        "language": "c++",
        "homepage": "https://ghostscript.com",
        "main_repo": "git://git.ghostscript.com/ghostpdl.git",
        "primary_contact": "skau@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://ghostscript.com\"\nlanguage: c++\nprimary_contact: \"skau@google.com\"\nauto_ccs:\n  - \"henry.stiles@artifex.com\"\n  - \"bmgordon@google.com\"\n  - \"skau@google.com\"\n  - \"sebastian.rasmussen@artifex.com\"\n  - \"julians.artifex@gmail.com\"\n  - \"chris.liddell@artifex.com\"\n  - \"ken.sharp@artifex.com\"\n  - \"david@adalogics.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nmain_repo: 'git://git.ghostscript.com/ghostpdl.git'\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build CUPS\npushd $SRC/cups\n# Fix bad line\nsed -i '2110s/\\(\\s\\)f->value/\\1(int)f->value/' cups/ppd-cache.c\n\nLSB_BUILD=y ./configure --prefix=\"$WORK\" --libdir=\"$OUT\" --disable-gnutls \\\n   --disable-libusb --with-components=core\n\nmake clean\nmake install-headers install-libs\nmake -C filter libs install-libs\ninstall -m755 cups-config \"$WORK\"/cups-config\npopd\n\nrm -rf cups/libs || die\nrm -rf freetype || die\nrm -rf zlib || die\n\nmv $SRC/freetype freetype\n\nCUPSCONFIG=\"$WORK/cups-config\"\nCUPS_CFLAGS=$($CUPSCONFIG --cflags)\nCUPS_LDFLAGS=$($CUPSCONFIG --ldflags)\nCUPS_LIBS=$($CUPSCONFIG --image --libs)\nexport CXXFLAGS=\"$CXXFLAGS $CUPS_CFLAGS\"\n\nCPPFLAGS=\"${CPPFLAGS:-} $CUPS_CFLAGS -DPACIFY_VALGRIND\" ./autogen.sh \\\n  CUPSCONFIG=$CUPSCONFIG \\\n  --enable-freetype --enable-fontconfig \\\n  --enable-cups --with-ijs --with-jbig2dec \\\n  --with-drivers=pdfwrite,cups,ljet4,laserjet,pxlmono,pxlcolor,pcl3,uniprint,pgmraw,ps2write,png16m,tiffsep1,faxg3,psdcmyk,eps2write,bmpmono,xpswrite\nmake -j$(nproc) libgs\n\nfuzzers=\"gstoraster_fuzzer                \\\n         gstoraster_fuzzer_all_colors     \\\n         gstoraster_ps_fuzzer             \\\n         gstoraster_pdf_fuzzer            \\\n         gs_device_pdfwrite_fuzzer        \\\n         gs_device_pxlmono_fuzzer         \\\n         gs_device_pgmraw_fuzzer          \\\n         gs_device_ps2write_fuzzer        \\\n         gs_device_png16m_fuzzer          \\\n         gs_device_psdcmyk_fuzzer         \\\n         gs_device_eps2write_fuzzer       \\\n         gs_device_faxg3_fuzzer           \\\n         gs_device_bmpmono_fuzzer         \\\n         gs_device_xpswrite_fuzzer        \\\n         gs_device_pxlcolor_fuzzer        \\\n         gs_device_tiffsep1_fuzzer        \\\n         gs_device_pdfwrite_opts_fuzzer\"\n\nfor fuzzer in $fuzzers; do\n  $CXX $CXXFLAGS $CUPS_LDFLAGS -std=c++11 -I. -I$SRC \\\n    $SRC/${fuzzer}.cc \\\n    -o \"$OUT/${fuzzer}\" \\\n    -Wl,-rpath='$ORIGIN' \\\n    $CUPS_LIBS \\\n    $LIB_FUZZING_ENGINE bin/gs.a\ndone\n\n# Create PDF seed corpus\nzip -j \"$OUT/gstoraster_pdf_fuzzer_seed_corpus.zip\" $SRC/pdf_seeds/*\n\n# Create corpus for gstoraster_fuzzer_all_colors. Only use seeds of a few KB in size.\nmkdir -p \"$WORK/all_color_seeds\"\nfor f in examples/ridt91.eps examples/snowflak.ps $SRC/pdf_seeds/pdf.pdf; do\n  # Prepend a single byte to seed, because it's used to determine the color\n  # scheme in the gstoraster_fuzzer_all_colors.\n  printf \"\\x01\" | cat - \"$f\" > tmp_file.txt\n  mv tmp_file.txt $f\n  s=$(sha1sum \"$f\" | awk '{print $1}')\n  cp \"$f\" \"$WORK/all_color_seeds/$s\"\ndone\nzip -j \"$OUT/gstoraster_fuzzer_all_colors_seed_corpus.zip\" \"$WORK\"/all_color_seeds/*\n\n# Do the same thing with pdfwrites opt fuzzer, but multiple bytes\nmkdir -p \"$WORK/gs_device_pdfwrite_opts_fuzzer_seeds\"\nfor f in examples/ridt91.eps examples/snowflak.ps $SRC/pdf_seeds/pdf.pdf; do\n  # Prepend the number of bytes used for picking options in the opts fuzzer\n  printf \"\\x01\\x01\" | cat - \"$f\" > tmp_file.txt\n  mv tmp_file.txt $f\n  s=$(sha1sum \"$f\" | awk '{print $1}')\n  cp \"$f\" \"$WORK/gs_device_pdfwrite_opts_fuzzer_seeds/$s\"\ndone\nzip -j \"$OUT/gs_device_pdfwrite_opts_fuzzer_seed_corpus.zip\" \"$WORK\"/gs_device_pdfwrite_opts_fuzzer_seeds/*\n\n# Create seeds for gstoraster_fuzzer\nmkdir -p \"$WORK/seeds\"\nfor f in examples/*.{ps,pdf}; do\n  s=$(sha1sum \"$f\" | awk '{print $1}')\n  cp \"$f\" \"$WORK/seeds/$s\"\ndone\n\n# Create corpus for gstoraster_fuzzer\nzip -j \"$OUT/gstoraster_fuzzer_seed_corpus.zip\" \"$WORK\"/seeds/*\ncp \"$OUT/gstoraster_fuzzer_seed_corpus.zip\" \"$OUT/gs_device_pdfwrite_fuzzer_seed_corpus.zip\"\ncp \"$OUT/gstoraster_fuzzer_seed_corpus.zip\" \"$OUT/gs_device_pxlmono_fuzzer_seed_corpus.zip\"\ncp \"$OUT/gstoraster_fuzzer_seed_corpus.zip\" \"$OUT/gs_device_eps2write_fuzzer_seed_corpus.zip\"\ncp \"$OUT/gstoraster_fuzzer_seed_corpus.zip\" \"$OUT/gs_device_bmpmono_fuzzer_seed_corpus.zip\"\ncp \"$OUT/gstoraster_fuzzer_seed_corpus.zip\" \"$OUT/gs_device_xpswrite_fuzzer_seed_corpus.zip\"\ncp \"$OUT/gstoraster_fuzzer_seed_corpus.zip\" \"$OUT/gs_device_pxlcolor_fuzzer_seed_corpus.zip\"\n\n# Copy out options\ncp $SRC/*.options $OUT/\n\n# Copy out dictionary\nfuzzers_with_dict=\"gstoraster_fuzzer  \\\n         gstoraster_fuzzer_all_colors \\\n         gstoraster_pdf_fuzzer        \\\n         gs_device_pdfwrite_fuzzer    \\\n         gs_device_faxg3_fuzzer       \\\n         gs_device_bmpmono_fuzzer     \\\n         gs_device_xpswrite_fuzzer\"\n\nfor fuzzer in $fuzzers_with_dict; do\n  cp $SRC/dicts/pdf.dict $OUT/${fuzzer}.dict\ndone\ncp $SRC/dicts/ps.dict $OUT/gstoraster_ps_fuzzer.dict\n"
    },
    "giflib": {
        "name": "giflib",
        "language": "c++",
        "homepage": "http://giflib.sourceforge.net/",
        "main_repo": "https://git.code.sf.net/p/giflib/code",
        "primary_contact": "esr@thyrsus.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://giflib.sourceforge.net/\"\nmain_repo: \"https://git.code.sf.net/p/giflib/code\"\nlanguage: c++\nprimary_contact: \"esr@thyrsus.com\"\nauto_ccs:\n  - \"vincent.ulitzsch@live.de\"\n  - \"bshas3@gmail.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\ncoverage_extra_args: -ignore-filename-regex=.*/LPM/.*\n",
        "build_sh": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -e\nSOURCES=(dgif_lib.c egif_lib.c getarg.c gifalloc.c gif_err.c gif_font.c \\\n        gif_hash.c openbsd-reallocarray.c qprintf.c quantize.c)\ncd $SRC/giflib-code\nrm -f *.o\nfor file in ${SOURCES[@]};\ndo\n    name=$(basename $file .c)\n    $CC -c -I . $CFLAGS $file -o $name.o\ndone\nar rc libgif.a *.o\n\ncd $SRC\n$CXX $CFLAGS -Wall -c -I giflib-code dgif_target.cc -o dgif_target.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -std=c++11  -I giflib-code dgif_fuzz_common.cc dgif_target.o  \\\n        -o $OUT/dgif_target giflib-code/libgif.a\n\n$CXX $CXXFLAGS -Wall -c -I giflib-code egif_target.cc -o egif_target.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -std=c++11  -I giflib-code egif_fuzz_common.cc egif_target.o  \\\n        -o $OUT/egif_target giflib-code/libgif.a\n\nrm -rf genfiles && mkdir genfiles && LPM/external.protobuf/bin/protoc gif_fuzz_proto.proto --cpp_out=genfiles\n\n$CXX $CXXFLAGS -DNDEBUG -Wall -c -I giflib-code dgif_protobuf_target.cc -I libprotobuf-mutator/ \\\n-I genfiles \\\n-I LPM/external.protobuf/include \\\n -o dgif_protobuf_target.o\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -DNDEBUG -std=c++14 -I. -I giflib-code dgif_protobuf_target.o dgif_fuzz_common.cc genfiles/gif_fuzz_proto.pb.cc \\\nProtoToGif.cpp \\\n-I LPM/external.protobuf/include \\\n-I genfiles \\\nLPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\nLPM/src/libprotobuf-mutator.a \\\n-Wl,--start-group LPM/external.protobuf/lib/lib*.a -Wl,--end-group \\\n        -o $OUT/dgif_protobuf_target giflib-code/libgif.a\n\n\n# Place dict and config in OUT\nwget -O $OUT/gif.dict \\\n  https://raw.githubusercontent.com/mirrorer/afl/master/dictionaries/gif.dict \\\n  &> /dev/null\ncp $SRC/*.options $OUT/\nfind $SRC/giflib-code -iname \"*.gif\" -exec \\\n  zip -ujq $OUT/dgif_target_seed_corpus.zip \"{}\" \\;\n"
    },
    "gimli": {
        "name": "gimli",
        "language": "rust",
        "homepage": "https://github.com/gimli-rs/gimli",
        "main_repo": "https://github.com/gimli-rs/gimli",
        "primary_contact": "philipjcraig@gmail.com",
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/gimli-rs/gimli\"\nlanguage: rust\nprimary_contact: \"philipjcraig@gmail.com\"\nmain_repo: \"https://github.com/gimli-rs/gimli\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nvendor_ccs:\n  - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncargo fuzz build -O\ncargo fuzz list | while read i; do\n    cp fuzz/target/x86_64-unknown-linux-gnu/release/$i $OUT/\n\n    if [ -d \"$SRC/gimli/fuzz/corpus/${i}\" ]; then\n        zip -rj \"$OUT/${i}_seed_corpus.zip\" \"$SRC/gimli/fuzz/corpus/${i}\"\n    fi\ndone\n"
    },
    "git": {
        "name": "git",
        "language": "c++",
        "homepage": "https://git-scm.com",
        "main_repo": "https://github.com/git/git",
        "primary_contact": "steadmon@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://git-scm.com\"\nlanguage: c++\nprimary_contact: \"steadmon@google.com\"\nauto_ccs:\n  - \"git-fuzz-reports@google.com\"\n  - \"emilyshaffer@google.com\"\n  - \"jonathantanmy@google.com\"\n  - \"jrn@google.com\"\n  - \"david@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\nmain_repo: 'https://github.com/git/git'\n\n# Disable honggfuzz due to undiagnosed build failures\nfuzzing_engines:\n  - libfuzzer\n  - afl\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build zlib\npushd \"$SRC/zlib\"\n./configure --static --prefix=\"$WORK\"\nmake -j$(nproc) CFLAGS=\"$CFLAGS -fPIC\"\nmake install\npopd\nexport ZLIB_PATH=$WORK\n\n# Enable a timeout for lockfiles rather than exit immediately. This is to\n# overcome in case multiple processes try to lock a file around the same\n# time. \nsed -i 's/hold_lock_file_for_update_timeout(lk, path, flags, 0);/hold_lock_file_for_update_timeout(lk, path, flags, 5000);/g' lockfile.h\n\n# build fuzzers\nmake -j$(nproc) CC=$CC CXX=$CXX CFLAGS=\"$CFLAGS\" \\\n  FUZZ_CXXFLAGS=\"$CXXFLAGS -Wl,--allow-multiple-definition\" \\\n  LIB_FUZZING_ENGINE=\"common-main.o $LIB_FUZZING_ENGINE\" fuzz-all\n\nFUZZERS=\"\"\n# FUZZERS=\"$FUZZERS fuzz-cmd-apply-check\"\nFUZZERS=\"$FUZZERS fuzz-cmd-bundle-verify\"\nFUZZERS=\"$FUZZERS fuzz-cmd-diff\"\n# FUZZERS=\"$FUZZERS fuzz-cmd-status\"\n# FUZZERS=\"$FUZZERS fuzz-cmd-tag-create\"\n# FUZZERS=\"$FUZZERS fuzz-cmd-unpack-objects\"\n# FUZZERS=\"$FUZZERS fuzz-cmd-version\"\n# FUZZERS=\"$FUZZERS fuzz-command\"\nFUZZERS=\"$FUZZERS fuzz-commit-graph\"\nFUZZERS=\"$FUZZERS fuzz-config\"\nFUZZERS=\"$FUZZERS fuzz-credential-from-url-gently\"\nFUZZERS=\"$FUZZERS fuzz-date\"\nFUZZERS=\"$FUZZERS fuzz-pack-headers\"\nFUZZERS=\"$FUZZERS fuzz-pack-idx\"\nFUZZERS=\"$FUZZERS fuzz-parse-attr-line\"\nFUZZERS=\"$FUZZERS fuzz-url-decode-mem\"\nFUZZERS=\"$FUZZERS fuzz-url-end-with-slash\"\n\n# copy fuzzers\nfor fuzzer in $FUZZERS ; do\n  cp oss-fuzz/$fuzzer $OUT\ndone\n\n# build commit-graph corpus\nASAN_OPTIONS=detect_leaks=0 ./git commit-graph write\nzip -j $OUT/fuzz-commit-graph_seed_corpus .git/objects/info/commit-graph\n\n# Git's own packfiles are too big for effective fuzzing\n# build corpora from a new repository\nmkdir mock-repo\npushd mock-repo\n../git init\necho \"abc\" > TEMP_1\n../git add .\n../git config user.email \"you@example.com\"\n../git config user.name \"Your Name\"\n../git commit -m \"initial commit\"\n../git repack\nzip -j $OUT/fuzz-pack-idx_seed_corpus.zip .git/objects/pack/*.idx\nzip -j $OUT/fuzz-cmd-unpack-objects_seed_corpus .git/objects/pack/*.pack\nfor packfile in .git/objects/pack/*.pack ; do\n  dd ibs=1 skip=12 if=$packfile of=$packfile.trimmed\ndone\nzip -j $OUT/fuzz-pack-headers_seed_corpus.zip .git/objects/pack/*.pack.trimmed\nASAN_OPTIONS=detect_leaks=0 ../git bundle create test.bundle master\nzip -j $OUT/fuzz-cmd-bundle-verify_seed_corpus test.bundle\necho \"adc\\nrb\\n\" > TEMP_1\n../git diff > test.patch\nzip -j $OUT/fuzz-cmd-apply-check_seed_corpus test.patch\npopd\nrm -rf mock-repo\n\nfor fuzzer in $FUZZERS ; do\n  cat >$OUT/$fuzzer.options << EOF\n[libfuzzer]\ndetect_leaks = 0\nEOF\ndone\n\necho -e \"max_len = 250\\n\" >> $OUT/fuzz-cmd-tag-create.options\n\n# Generate existing file for temp git repository\necho \"TEMP1TEMP1TEMP1TEMP1\" > $OUT/TEMP_1\necho \"TEMP2TEMP2TEMP2TEMP2\" > $OUT/TEMP_2\n"
    },
    "gitdb": {
        "name": "gitdb",
        "language": "python",
        "homepage": "https://github.com/gitpython-developers/gitdb",
        "main_repo": "https://github.com/gitpython-developers/gitdb",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/gitpython-developers/gitdb\nlanguage: python\nmain_repo: https://github.com/gitpython-developers/gitdb\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gitea": {
        "name": "gitea",
        "language": "go",
        "homepage": "https://github.com/go-gitea/gitea",
        "main_repo": "https://github.com/go-gitea/gitea",
        "primary_contact": "security@gitea.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/go-gitea/gitea\"\nprimary_contact: \"security@gitea.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"xiaolunwen@gmail.com\"\n  - \"lauris@nix.lv\"\n  - \"techknowlogick@gitea.io\"\n  - \"sapk@sapk.fr\"\n  - \"zeripath@gmail.com\"\n  - \"john.olheiser@gmail.com\"\n  - \"the6543dev@gmail.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/go-gitea/gitea\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ncompile_native_go_fuzzer code.gitea.io/gitea/tests/fuzz FuzzMarkdownRenderRaw fuzz_markdown_render_raw gofuzz\ncompile_native_go_fuzzer code.gitea.io/gitea/tests/fuzz FuzzMarkupPostProcess fuzz_markup_post_process gofuzz\n"
    },
    "github_scarecrow": {
        "name": "github_scarecrow",
        "language": "python",
        "homepage": "https://github.com/Alan32Liu/github-scarecrow",
        "main_repo": "https://github.com/Alan32Liu/github-scarecrow",
        "primary_contact": "donggeliu@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\n# dummy\nhomepage: 'https://github.com/Alan32Liu/github-scarecrow'\nprimary_contact: 'donggeliu@google.com'\nlanguage: python\nsanitizers:\n  - address\nmain_repo: 'https://github.com/Alan32Liu/github-scarecrow'\nfile_github_issue: True\nauto_ccs:\n  - 'gongh@google.com'",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_python_fuzzer ../shell_injection_poc_fuzzer.py\n"
    },
    "gitoxide": {
        "name": "gitoxide",
        "language": "rust",
        "homepage": "https://crates.io/crates/gitoxide",
        "main_repo": "https://github.com/Byron/gitoxide",
        "primary_contact": "byronimo@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://crates.io/crates/gitoxide\"\nlanguage: rust\nprimary_contact: \"byronimo@gmail.com\"\nauto_ccs:\n  - \"nathaniel.brough@gmail.com\"\nmain_repo: \"https://github.com/Byron/gitoxide\"\nfile_github_issue: true\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\ncoverage_extra_args: >\n  -ignore-filename-regex=.*/rustc/.*",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -eox pipefail\n\nexport CARGO_BUILD_TARGET_DIR=$WORK/shared_cache\n\nFUZZ_CRATE_DIRS=$(find . -type d -name fuzz -exec dirname $(readlink -f {}) \\;)\n\nfor CRATE_DIR in ${FUZZ_CRATE_DIRS[@]};\ndo\n  echo \"Building crate: $CRATE_DIR\"\n  cd $CRATE_DIR\n  cargo +nightly fuzz build -O --debug-assertions\n  FUZZ_TARGET_OUTPUT_DIR=$CARGO_BUILD_TARGET_DIR/x86_64-unknown-linux-gnu/release\n  for f in fuzz/fuzz_targets/*.rs\n  do\n      FUZZ_TARGET_NAME=$(basename ${f%.*})\n      CRATE_NAME=$(basename $CRATE_DIR)\n      OUT_FUZZER_NAME=$OUT/$CRATE_NAME-$FUZZ_TARGET_NAME\n      cp $FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT_FUZZER_NAME\n      FUZZ_CORPUS_BUILDER=./fuzz/fuzz_targets/${FUZZ_TARGET_NAME}_corpus_builder.sh\n      if test -f \"$FUZZ_CORPUS_BUILDER\"; then\n          $FUZZ_CORPUS_BUILDER $SRC/gitoxide ${OUT_FUZZER_NAME}_seed_corpus.zip\n      fi\n      FUZZ_DICT=./fuzz/fuzz_targets/${FUZZ_TARGET_NAME}.dict\n      if test -f \"$FUZZ_DICT\"; then\n            cp $FUZZ_DICT ${OUT_FUZZER_NAME}.dict\n      fi\n  done\ndone\n"
    },
    "gitpython": {
        "name": "gitpython",
        "language": "python",
        "homepage": "https://github.com/gitpython-developers/gitpython",
        "main_repo": "https://github.com/gitpython-developers/gitpython",
        "primary_contact": "byronimo@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/gitpython-developers/gitpython\"\nlanguage: python\nprimary_contact: \"byronimo@gmail.com\"\nauto_ccs:\n  - \"david.js.lakin@gmail.com\"\n  - \"eliahkagan@gmail.com\"\nmain_repo: \"https://github.com/gitpython-developers/gitpython\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n. \"$SRC/gitpython/fuzzing/oss-fuzz-scripts/build.sh\"\n"
    },
    "glaze": {
        "name": "glaze",
        "language": "c++",
        "homepage": "https://github.com/stephenberry/glaze",
        "main_repo": "https://github.com/stephenberry/glaze.git",
        "primary_contact": "pauldreikossfuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/stephenberry/glaze\"\nlanguage: c++\nprimary_contact: \"pauldreikossfuzz@gmail.com\"\nauto_ccs:\n   - \"stephenberry.developer@gmail.com\"\nmain_repo: \"https://github.com/stephenberry/glaze.git\"\nfile_github_issue: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfuzzing/ossfuzz.sh\n"
    },
    "glib": {
        "name": "glib",
        "language": "c++",
        "homepage": "https://gitlab.gnome.org/GNOME/glib/",
        "main_repo": "https://gitlab.gnome.org/GNOME/glib",
        "primary_contact": "bugzilla@tecnocode.co.uk",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://gitlab.gnome.org/GNOME/glib/\"\nlanguage: c++\nprimary_contact: \"bugzilla@tecnocode.co.uk\"\nauto_ccs:\n- philip.withnall@gmail.com\n- mwl458@gmail.com\n- iain@orangesquash.org.uk\n- slomo@coaxion.net\n- trevi55@gmail.com\n- mcatanza@redhat.com\n- tcullum@redhat.com\nsanitizers:\n- address\n- undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nhelp_url: https://gitlab.gnome.org/GNOME/glib/tree/master/fuzzing#how-to-reproduce-oss-fuzz-bugs-locally\nmain_repo: 'https://gitlab.gnome.org/GNOME/glib'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nBUILD=$WORK/meson\n\nrm -rf $BUILD\nmkdir $BUILD\n\nmeson $BUILD \\\n  -Doss_fuzz=enabled \\\n  -Db_lundef=false \\\n  -Ddefault_library=static \\\n  -Dlibmount=disabled\n\nninja -C $BUILD\n\nfind $BUILD/fuzzing -maxdepth 1 -executable -type f -exec cp \"{}\" $OUT \\;\n\nfind fuzzing -type f -name \"*.dict\" -exec cp \"{}\" $OUT \\;\n\nfor CORPUS in $(find fuzzing -type f -name \"*.corpus\"); do\n  BASENAME=${CORPUS##*/}\n  zip $OUT/${BASENAME%%.*}_seed_corpus.zip . -ws -r -i@$CORPUS\ndone\n"
    },
    "glog": {
        "name": "glog",
        "language": "c++",
        "homepage": "https://github.com/google/glog",
        "main_repo": "https://github.com/google/glog",
        "primary_contact": "sergiu.deitsch@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/glog\"\nlanguage: c++\nprimary_contact: \"sergiu.deitsch@gmail.com\"\nauto_ccs :\n- \"p.antoine@catenacyber.fr\"\n\nmain_repo: 'https://github.com/google/glog'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\ncmake .. -DWITH_FUZZING=ossfuzz -DBUILD_SHARED_LIBS=OFF\nmake -j$(nproc)\ncp fuzz_* $OUT/\n"
    },
    "glom": {
        "name": "glom",
        "language": "python",
        "homepage": "https://github.com/mahmoud/glom",
        "main_repo": "https://github.com/mahmoud/glom",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/mahmoud/glom\nlanguage: python\nmain_repo: https://github.com/mahmoud/glom\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "glslang": {
        "name": "glslang",
        "language": "c++",
        "homepage": "https://github.com/khronosgroup/glslang",
        "main_repo": "https://github.com/khronosgroup/glslang",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/khronosgroup/glslang\"\nmain_repo: \"https://github.com/khronosgroup/glslang\"\nlanguage: c++\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir -p build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Release -DENABLE_CTEST=ON -DCMAKE_VERBOSE_MAKEFILE=ON -DENABLE_OPT=0 ../\nmake V=1 -j4 install\n\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $SRC/compile_fuzzer.cc \\\n\t-DENABLE_HLSL -DENABLE_OPT=0 -DGLSLANG_OSINCLUDE_UNIX \\\n\t-I/src/glslang/glslang/Include/ -I/src/glslang/glslang/.. \\\n\t-I/src/glslang/build/include -I/src/glslang/SPIRV/.. \\\n\t./glslang/libglslang.a ./SPIRV/libSPIRV.a \\\n\t./glslang/libglslang-default-resource-limits.a ./SPIRV/libSPVRemapper.a \\\n\t-lpthread ./glslang/libMachineIndependent.a \\\n\t./glslang/OSDependent/Unix/libOSDependent.a \\\n\t./glslang/libGenericCodeGen.a \\\n\t-o $OUT/compile_fuzzer\n"
    },
    "gluon": {
        "name": "gluon",
        "language": "go",
        "homepage": "https://proton.me",
        "main_repo": "https://github.com/ProtonMail/gluon",
        "primary_contact": "security@proton.me",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://proton.me\"\nlanguage: go\nprimary_contact: \"security@proton.me\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/ProtonMail/gluon\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\ncompile_native_go_fuzzer github.com/ProtonMail/gluon/imap       FuzzNewParsedMessage    fuzz_new_parsed_message\ncompile_native_go_fuzzer github.com/ProtonMail/gluon/rfc5322    FuzzParseAddress        fuzz_parse_address\ncompile_native_go_fuzzer github.com/ProtonMail/gluon/rfc5322    FuzzRFC5322             fuzz_rfc5322\ncompile_native_go_fuzzer github.com/ProtonMail/gluon/rfc822     FuzzParseDec            fuzz_parse_dec\n"
    },
    "gnucobol": {
        "name": "gnucobol",
        "language": "c",
        "homepage": "https://www.gnu.org/software/gnucobol/",
        "main_repo": "https://svn.code.sf.net/p/gnucobol/code/branches/gnucobol-3.x",
        "primary_contact": "simonsobisch@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://www.gnu.org/software/gnucobol/\"\r\nlanguage: c\r\n\r\nprimary_contact: \"simonsobisch@gmail.com\"\r\nauto_ccs:\r\n  - \"simonsobisch@gnu.org\"\r\n\r\nsanitizers:\r\n  - address\r\n  - memory:\r\n     experimental: True\r\n  - undefined\r\n\r\narchitectures:\r\n - x86_64\r\n - i386\r\n\r\n# 'https://svn.code.sf.net/p/gnucobol/code/trunk' is the \"next big version\" (unstable),\r\n# code installed in OS package managers is found in 3.x branch\r\nmain_repo: 'https://svn.code.sf.net/p/gnucobol/code/branches/gnucobol-3.x'\r\n",
        "build_sh": null
    },
    "gnupg": {
        "name": "gnupg",
        "language": "c++",
        "homepage": "https://www.gnupg.org",
        "main_repo": "git://git.gnupg.org/gnupg.git",
        "primary_contact": "p.antoine@catenacyber.fr",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.gnupg.org\"\nlanguage: c++\nprimary_contact: \"p.antoine@catenacyber.fr\"\nmain_repo: 'git://git.gnupg.org/gnupg.git'\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#compile and link statically dependencies\ncd ..\ncd libgpg-error\nsed -i 's/0.19/0.20/g' ./po/Makefile.in.in\n./autogen.sh\n./configure --disable-doc --enable-static --disable-shared\nmake\nmake install\ncd ..\ncd libgcrypt\n./autogen.sh\n./configure --disable-doc --enable-static --disable-shared\nmake\nmake install\ncd ..\ncd libassuan\n./autogen.sh\n./configure --disable-doc --enable-static --disable-shared\nmake\nmake install\ncd ..\ncd libksba\n./autogen.sh\n./configure --disable-doc --enable-static --disable-shared\nmake\nmake install\ncd ..\ncd npth\n./autogen.sh\n./configure --disable-doc --enable-static --disable-shared\nmake\nmake install\ncd ..\n\n\n# build project\ncd gnupg\nmkdir tests/fuzz\ncp ../fuzz_* tests/fuzz\ngit apply ../fuzz.diff\n./autogen.sh\n./configure --disable-doc --enable-maintainer-mode\nmake -j$(nproc) all\n\n# build fuzzers\ncd tests/fuzz\n# export fuzzers and other associated stuff\ncp fuzz_* $OUT/\n"
    },
    "gnutls": {
        "name": "gnutls",
        "language": "c++",
        "homepage": "https://www.gnutls.org",
        "main_repo": "https://gitlab.com/gnutls/gnutls.git",
        "primary_contact": "daiki.ueno@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.gnutls.org\"\nlanguage: c++\nprimary_contact: \"daiki.ueno@gmail.com\"\nauto_ccs:\n  - \"rockdaboot@gmail.com\"\n  - \"nisse@lysator.liu.se\"\n  - \"anderjuaristi.cictg@gmail.com\"\n  - \"dbaryshkov@gmail.com\"\n  - \"zfridric@redhat.com\"\n\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://gitlab.com/gnutls/gnutls.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport DEPS_PATH=$SRC/deps\nexport PKG_CONFIG_PATH=$DEPS_PATH/lib64/pkgconfig:$DEPS_PATH/lib/pkgconfig\nexport CPPFLAGS=\"-I$DEPS_PATH/include\"\nexport LDFLAGS=\"-L$DEPS_PATH/lib -L$DEPS_PATH/lib64\"\nexport GNULIB_SRCDIR=$SRC/gnulib\n\n# gnutls requires autoconf 2.71 minimum which is not available in the Ubuntu 20 base image\n# Skip this step if a newer base image is used\nif grep -q -F \"20.04\" /etc/os-release ; then\n    cd /tmp\n    wget https://archive.ubuntu.com/ubuntu/pool/main/a/autoconf/autoconf_2.71-2_all.deb\n    # Ensure file is not modified or corrupted before install\n    if echo \"96b528889794c4134015a63c75050f93d8aecdf5e3f2a20993c1433f4c61b80e autoconf_2.71-2_all.deb\" | sha256sum --check --status ; then\n    \t# Install but use G option to prevent downgrade in case this is\n    \tdpkg -i -G /tmp/autoconf_2.71-2_all.deb\n    fi\nfi\n\ncd \"$SRC\"/libunistring\n./autogen.sh\nASAN_OPTIONS=detect_leaks=0 \\\n  ./configure --enable-static --disable-shared --prefix=\"$DEPS_PATH\"\nmake -j\"$(nproc)\"\nmake install\n\ncd \"$SRC\"/libidn2\n./bootstrap\nASAN_OPTIONS=detect_leaks=0 \\\n  ./configure --enable-static --disable-shared --disable-doc --disable-gcc-warnings --prefix=\"$DEPS_PATH\"\nmake -j\"$(nproc)\"\nmake install\n\n# always disable assembly in GMP to avoid issues due to SIGILL\n#   https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=3119\n#   https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=3159\nGMP_CONFIGURE_FLAGS=\"--disable-assembly --disable-fat\"\n\ncd \"$SRC\"/gmp\nif [[ -e .bootstrap ]]; then\n    bash .bootstrap\nfi\nASAN_OPTIONS=detect_leaks=0 \\\n  ./configure --disable-shared --prefix=\"$DEPS_PATH\" $GMP_CONFIGURE_FLAGS\nmake -j\"$(nproc)\"\nmake install\n\ncd $SRC/libtasn1\nbash bootstrap\n./configure --disable-gcc-warnings --disable-gtk-doc --disable-gtk-doc-pdf --disable-doc \\\n  --disable-shared --enable-static --prefix=\"$DEPS_PATH\"\nmake -j\"$(nproc)\"\nmake install\n\nNETTLE_CONFIGURE_FLAGS=\"--disable-assembler\"  # Temporarily disalbe asm to work around error \"undefined reference to [...]\"\nif [[ $CFLAGS = *sanitize=memory* ]]; then\n  NETTLE_CONFIGURE_FLAGS=\"--disable-assembler --disable-fat\"\nfi\ncd \"$SRC\"/nettle\nbash .bootstrap\nASAN_OPTIONS=detect_leaks=0 \\\n  ./configure --enable-static --disable-shared --disable-documentation --prefix=\"$DEPS_PATH\" $NETTLE_CONFIGURE_FLAGS\n( make -j\"$(nproc)\" || make -j\"$(nproc)\" ) && make install\nif test $? != 0; then\n  echo \"Failed to compile nettle\"\n  exit 1\nfi\n\n\nGNUTLS_CONFIGURE_FLAGS=\"\"\nif [[ $CFLAGS = *sanitize=memory* ]]; then\n  GNUTLS_CONFIGURE_FLAGS=\"--disable-hardware-acceleration\"\nfi\ncd \"$SRC\"/gnutls\n./bootstrap\nASAN_OPTIONS=detect_leaks=0 LIBS=\"-lunistring\" CXXFLAGS=\"$CXXFLAGS -L$DEPS_PATH/lib\" \\\n  ./configure --enable-fuzzer-target --disable-gcc-warnings --enable-static --disable-shared --disable-doc --disable-tests \\\n    --disable-tools --disable-cxx --disable-maintainer-mode --disable-libdane --without-p11-kit \\\n    --disable-full-test-suite $GNUTLS_CONFIGURE_FLAGS\n\n# Do not use the syscall interface for randomness in oss-fuzz, it seems\n# to confuse memory sanitizer.\nsed -i 's|include <sys/syscall.h>|include <sys/syscall.h>\\n#undef SYS_getrandom|' lib/nettle/sysrng-linux.c\n\nmake -j\"$(nproc)\" -C gl\nmake -j\"$(nproc)\" -C lib\n\ncd fuzz\nmake oss-fuzz\nfind . -name '*_fuzzer' -exec cp -v '{}' \"$OUT\" ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' \"$OUT\" ';'\nfind . -name '*_fuzzer.options' -exec cp -v '{}' \"$OUT\" ';'\n\nfor dir in *_fuzzer.in; do\n    fuzzer=$(basename \"$dir\" .in)\n    zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"${dir}/\"\ndone\n"
    },
    "go-attestation": {
        "name": "go-attestation",
        "language": "go",
        "homepage": "https://github.com/google/go-attestation",
        "main_repo": "https://github.com/google/go-attestation",
        "primary_contact": "bweeks@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/go-attestation\"\nprimary_contact: \"bweeks@google.com\"\nauto_ccs:\n  - \"ericchiang@google.com\"\n  - \"jsonp@google.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nlanguage: go\nmain_repo: 'https://github.com/google/go-attestation'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n\ncompile_go_fuzzer github.com/google/go-attestation/attest FuzzParseEventLog \\\n    parse_event_log_fuzzer\ncompile_go_fuzzer github.com/google/go-attestation/attest FuzzParseAKPublic12 \\\n    parse_ak_public12_fuzzer\ncompile_go_fuzzer github.com/google/go-attestation/attest FuzzParseAKPublic20 \\\n    parse_ak_public20_fuzzer\ncompile_go_fuzzer github.com/google/go-attestation/attest FuzzParseEKCertificate \\\n    parse_ek_certificate_fuzzer\n"
    },
    "go-cmp": {
        "name": "go-cmp",
        "language": "go",
        "homepage": "https://github.com/google/go-cmp/cmp",
        "main_repo": "https://github.com/google/go-cmp/cmp",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/go-cmp/cmp\"\nlanguage: go\nmain_repo: \"https://github.com/google/go-cmp/cmp\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./cmp/\ngo mod tidy\nprintf \"package cmp\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/google/go-cmp/cmp FuzzDiff FuzzDiff\n"
    },
    "go-coap": {
        "name": "go-coap",
        "language": "go",
        "homepage": "https://plgd.dev",
        "main_repo": "https://github.com/plgd-dev/go-coap",
        "primary_contact": "daniel.adam@plgd.dev",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://plgd.dev\"\nlanguage: go\nprimary_contact: \"daniel.adam@plgd.dev\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/plgd-dev/go-coap\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\ncompile_native_go_fuzzer $(pwd)/udp/coder       FuzzDecode          fuzz_decode_udp\ncompile_native_go_fuzzer $(pwd)/tcp/coder       FuzzDecode          fuzz_decode_tcp\ncompile_native_go_fuzzer $(pwd)/message         FuzzUnmarshalData   fuzz_unmarshal_data\ncompile_native_go_fuzzer $(pwd)/message/codes   FuzzUnmarshalJSON   fuzz_unmarshal_json\n"
    },
    "go-containerregistry": {
        "name": "go-containerregistry",
        "language": "go",
        "homepage": "https://github.com/google/go-containerregistry",
        "main_repo": "https://github.com/google/go-containerregistry",
        "primary_contact": "jason@chainguard.dev",
        "vendor_ccs": [
            "adam@adalogics.com",
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/go-containerregistry\"\nlanguage: go\nprimary_contact: \"jason@chainguard.dev\"\nmain_repo: \"https://github.com/google/go-containerregistry\"\nauto_ccs:\n  - \"go-containerregistry@chainguard.dev\"\nvendor_ccs:\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncp $SRC/fuzz.go $SRC/go-containerregistry/pkg/name/\ncompile_go_fuzzer github.com/google/go-containerregistry/pkg/name FuzzParseReference fuzz_parse_reference\n"
    },
    "go-coredns": {
        "name": "go-coredns",
        "language": "go",
        "homepage": "https://coredns.io",
        "main_repo": "https://github.com/coredns/coredns.git",
        "primary_contact": "security@coredns.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://coredns.io\"\nprimary_contact: \"security@coredns.io\"\nmain_repo: 'https://github.com/coredns/coredns.git'\nauto_ccs :\n- \"miek@miek.nl\"\n- \"p.antoine@catenacyber.fr\"\n- \"yong.tang.github@gmail.com\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Same as usual except for added -tags gofuzz.\n\ncd $GOPATH/src/github.com/coredns/coredns\n\n#make\nls plugin/*/fuzz.go | while read target\ndo\n    fuzzed_plugin=`echo $target | cut -d'/' -f 2`\n    compile_go_fuzzer github.com/coredns/coredns/plugin/$fuzzed_plugin Fuzz fuzz_plugin_$fuzzed_plugin gofuzz\ndone\n\ncompile_go_fuzzer github.com/coredns/coredns/test Fuzz fuzz_core gofuzz\n"
    },
    "go-dhcp": {
        "name": "go-dhcp",
        "language": "go",
        "homepage": "https://github.com/insomniacslk/dhcp",
        "main_repo": "https://github.com/insomniacslk/dhcp.git",
        "primary_contact": "insomniac@slackware.it",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/insomniacslk/dhcp\"\nlanguage: go\nprimary_contact: \"insomniac@slackware.it\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/insomniacslk/dhcp.git\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\ngo get github.com/stretchr/testify/assert@v1.6.1\nsed -i '58s/^/\\/\\//g' dhcpv6/dhcpv6_test.go\n\ncompile_native_go_fuzzer github.com/insomniacslk/dhcp/dhcpv4       FuzzDHCPv4    fuzz_DHCPv4\ncompile_native_go_fuzzer github.com/insomniacslk/dhcp/dhcpv6       FuzzDHCPv6    fuzz_DHCPv6\ncompile_native_go_fuzzer github.com/insomniacslk/dhcp/rfc1035label FuzzLabel     fuzz_Label\n"
    },
    "go-dns": {
        "name": "go-dns",
        "language": "go",
        "homepage": "https://github.com/miekg/dns",
        "main_repo": "https://github.com/miekg/dns",
        "primary_contact": "miek@miek.nl",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/miekg/dns\"\nprimary_contact: \"miek@miek.nl\"\nauto_ccs:\n  - \"me+google@tomthorogood.co.uk\"\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/miekg/dns\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# Same as usual except for added -tags fuzz.\ncompile_go_fuzzer github.com/miekg/dns FuzzNewRR fuzz_newrr fuzz\ncompile_go_fuzzer github.com/miekg/dns Fuzz fuzz_msg_unpack fuzz\n"
    },
    "go-ethereum": {
        "name": "go-ethereum",
        "language": "go",
        "homepage": "https://github.com/ethereum/go-ethereum",
        "main_repo": "https://github.com/ethereum/go-ethereum",
        "primary_contact": "peter@ethereum.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/ethereum/go-ethereum\"\nprimary_contact: \"peter@ethereum.org\"\nauto_ccs :\n  - \"fjl@ethereum.org\"\n  - \"martin.swende@ethereum.org\"\n  - \"marius.vanderwijden@ethereum.org\"\n  - \"garyrong@ethereum.org\"\n  - \"zsfelfoldi@ethereum.org\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/ethereum/go-ethereum'\n",
        "build_sh": null
    },
    "go-git": {
        "name": "go-git",
        "language": "go",
        "homepage": "https://github.com/go-git/go-git",
        "main_repo": "https://github.com/go-git/go-git",
        "primary_contact": "go-git-security@googlegroups.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/go-git/go-git\"\nlanguage: go\nprimary_contact: \"go-git-security@googlegroups.com\"\nauto_ccs:\n  - \"paulo.gomes.uk@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/go-git/go-git\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# This code improves the use of Go Native by:\n# - Dynamically discovering and building all fuzz tests within the project root path.\n# - Supporting single (during PR checks) or multiple repositories (oss-fuzz).\n# - Enabling execution via CI builds and Makefile targets for each repo.\n\nGOPATH=\"${GOPATH:-/root/go}\"\nORG_ROOT=\"${ORG_ROOT:-${GOPATH}/src/github.com/go-git}\"\nPREBUILD_SCRIPT_PATH=\"${PREBUILD_SCRIPT_PATH:-tests/fuzz/oss_fuzz_prebuild.sh}\"\nPOSTBUILD_SCRIPT_PATH=\"${POSTBUILD_SCRIPT_PATH:-tests/fuzz/oss_fuzz_postbuild.sh}\"\n\n# source_prebuild_script sources the prebuild script, which executes project-specific\n# code and exposes environment variables that are needed during the generic build process.\n#\n# Examples of usage may be organising directory structure for embedding\n# files, downloading artifacts or setting environment variables.\nfunction source_prebuild_script(){\n\tif [ -f \"${PREBUILD_SCRIPT_PATH}\" ]; then\n\t\t# shellcheck source=/dev/null\n\t\t. \"${PREBUILD_SCRIPT_PATH}\"\n\tfi\n}\n\n# source_postbuild_script sources the postbuild script, which executes project-specific\n# code and unset environment variables that may break follow-up processes.\nfunction source_postbuild_script(){\n\tif [ -f \"${POSTBUILD_SCRIPT_PATH}\" ]; then\n\t\t# shellcheck source=/dev/null\n\t\t. \"${POSTBUILD_SCRIPT_PATH}\"\n\tfi\n}\n\n# go_native_build_all_fuzzers builds all Go Native fuzz tests defined in modules within\n# the given project dir.\n#\n# Args:\n# \tproject_dir\nfunction go_native_build_all_fuzzers(){\n\tlocal project_path=\"$1\"\n\n\tcd \"${project_path}\"\n\n\tsource_prebuild_script\n\n\tmodules=$(find . -mindepth 1 -maxdepth 4 -type f -name 'go.mod' | cut -c 3- | sed 's|/[^/]*$$||' | sort -u | sed 's;/go.mod;;g' | sed 's;go.mod;.;g')\n\tfor module in ${modules}; do\n\t\tcd \"${project_path}/${module}\"\n\n\t\tlocal test_files\n\t\ttest_files=$(grep -r --include='**_test.go' --files-with-matches 'func Fuzz' . || echo \"\")\n\t\tif [ -z \"${test_files}\" ]; then\n\t\t\tcontinue\n\t\tfi\n\n\t\t# go-118-fuzz-build is required for each module.\n\t\tgo get -u github.com/AdamKorcz/go-118-fuzz-build/testing\n\n\t\t# The go get command above can affect transient dependencies, may lead\n\t\t# to the go.sym to become out of sync, which would cause build to break.\n\t\t# go mod tidy will only work if the current module has a reference\n\t\t# to the above dependency, so we create one.\n\t\tlocal pkgName\n\t\tpkgName=\"$(grep -h '^package ' -- *.go | head -n 1)\"\n\t\tif [ -z \"${test_files}\" ]; then\n\t\t\tpkgName=\"package fuzz\"\n\t\tfi\n\t\t\n\t\tcat <<EOF > dep-placeholder.go\n${pkgName}\n\nimport _ \"github.com/AdamKorcz/go-118-fuzz-build/testing\"\nEOF\n\t\t# With the reference above, this updates go.sum.\n\t\tgo mod tidy\n\n\t\t# Iterate through all Go Fuzz targets, compiling each into a fuzzer.\n\t\tfor file in ${test_files}; do\n\t\t\t# If the subdir is a module, skip this file, as it will be handled\n\t\t\t# at the next iteration of the outer loop. \n\t\t\tif [ -f \"$(dirname \"${file}\")/go.mod\" ]; then\n\t\t\t\tcontinue\n\t\t\tfi\n\t\t\t\n\t\t\t# Remove all funcs that are not Fuzz tests. Some were resulting\n\t\t\t# in errors due to referring to other test files.\n\t\t\t#\n\t\t\t# Suite based tests funcs were also failing with the error:\n\t\t\t#   cannot use t (variable of type ...) as *\"testing\".T value in argument to suite.Run\n\t\t\t#\n\t\t\t# As those are not needed for fuzzing purposes they are removed.\n\t\t\tsed -i '/^func Fuzz/!{/^func /,/^}/d}' \"${file}\"\n\t\t\t# Remove global declarations and any comments.\n\t\t\tsed -i '/^\\(var\\|const\\)\\b/d; /^\\s*\\/\\//d; /^\\s*\\/\\*/,/\\*\\//d' \"${file}\"\n\t\t\t# Remove structs which may be referring to subtypes from other test files.\n\t\t\tsed -i '/^type .* struct {/,/^}/d' \"${file}\"\n\n\t\t\t# Ensure the file is still properly formatted.\n\t\t\tgo fmt \"${file}\"\n\t\t\tgoimports -w \"${file}\"\n\n\t\t\ttargets=$(grep -oP 'func \\K(Fuzz\\w*)' \"${file}\")\n\t\t\tfor target_name in ${targets}; do\n\t\t\t\tlocal module_name\n\t\t\t\tlocal fuzzer_name\n\t\t\t\tlocal target_dir\n\n\t\t\t\t# Transform module path into module name (e.g. git/libgit2 to git_libgit2).\n\t\t\t\tmodule_name=\"${module/\\//_}_\"\n\t\t\t\t# If module equal '._', use empty string instead.\n\t\t\t\tmodule_name=\"${module/#%._}\"\n\n\t\t\t\t# Compose fuzzer name based on the lowercase version of the func names.\n\t\t\t\tfuzzer_name=\"${target_name,,}\"\n\t\t\t\t# The module name is added after the fuzz prefix, for better discoverability.\n\t\t\t\tfuzzer_name=\"${target_name/fuzz_/fuzz_${module_name}}\"\n\t\t\t\ttarget_dir=$(dirname \"${file}\")\n\n\t\t\t\techo \"Building ${file}.${target_name} into ${fuzzer_name}\"\n\t\t\t\tcat \"${file}\"\n\t\t\t\tcompile_native_go_fuzzer \"${target_dir}\" \"${target_name}\" \"${fuzzer_name}\"\n\t\t\tdone\n\t\tdone\n\tdone\n}\n\nfunction loop_through_org_repositories(){\n\tlocal repos=\"\"\n\trepos=\"$(find \"${ORG_ROOT}\" -type d -mindepth 1 -maxdepth 1)\"\n\tfor repo in ${repos}; do\n\t\tgo_native_build_all_fuzzers \"${repo}\"\n\tdone\n}\n\nfunction main(){\n\tif grep -h '^module github.com/go-git/' \"${SRC}/go.mod\"; then\n\t\techo \"Building Go Native fuzzers for ${SRC}\"\n\t\tgo_native_build_all_fuzzers \"${SRC}\"\n\t\texit $?\n\tfi\n\t\n\techo \"Going through all repositories in ${ORG_ROOT}\"\n\tloop_through_org_repositories \n}\n\nmain\n"
    },
    "go-humanize": {
        "name": "go-humanize",
        "language": "go",
        "homepage": "https://github.com/dustin/go-humanize",
        "main_repo": "https://github.com/dustin/go-humanize",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/dustin/go-humanize\"\nlanguage: go\nmain_repo: \"https://github.com/dustin/go-humanize\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package humanize\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\necho building\ncompile_native_go_fuzzer github.com/dustin/go-humanize FuzzParseBytes FuzzParseBytes\n"
    },
    "go-json-iterator": {
        "name": "go-json-iterator",
        "language": "go",
        "homepage": "https://jsoniter.com",
        "main_repo": "https://github.com/json-iterator/go",
        "primary_contact": "taowen@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://jsoniter.com\"\nmain_repo: \"https://github.com/json-iterator/go\"\nprimary_contact: \"taowen@gmail.com\"\nauto_ccs:\n- \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\ncompile_go_fuzzer github.com/json-iterator/go Fuzz fuzz_json\n"
    },
    "go-ldap": {
        "name": "go-ldap",
        "language": "go",
        "homepage": "https://github.com/go-ldap/ldap",
        "main_repo": "https://github.com/go-ldap/ldap",
        "primary_contact": "cp@lumen.sh",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/go-ldap/ldap\"\nlanguage: go\nprimary_contact: \"cp@lumen.sh\"\nauto_ccs:\n  - \"johnweldon4@gmail.com\"\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/go-ldap/ldap\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\ncompile_native_go_fuzzer github.com/go-ldap/ldap    FuzzParseDN                 fuzz_parse_dn\ncompile_native_go_fuzzer github.com/go-ldap/ldap    FuzzDecodeEscapedSymbols    fuzz_decode_escaped_symbols\ncompile_native_go_fuzzer github.com/go-ldap/ldap    FuzzEscapeDN                fuzz_escape_dn\n"
    },
    "go-ole": {
        "name": "go-ole",
        "language": "go",
        "homepage": "https://github.com/go-ole/go-ole",
        "main_repo": "https://github.com/go-ole/go-ole",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/go-ole/go-ole\"\nlanguage: go\nmain_repo: \"https://github.com/go-ole/go-ole\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package ole\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/go-ole/go-ole FuzzGUID FuzzGUID\n"
    },
    "go-pprof": {
        "name": "go-pprof",
        "language": "go",
        "homepage": "https://github.com/google/pprof",
        "main_repo": "https://github.com/google/pprof",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/pprof\"\nlanguage: go\nmain_repo: \"https://github.com/google/pprof\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/fuzz_test.go $SRC/pprof/profile/\nprintf \"package pprof\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz/register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/google/pprof/profile FuzzParseData FuzzParseData\n"
    },
    "go-readline": {
        "name": "go-readline",
        "language": "go",
        "homepage": "https://github.com/chzyer/readline",
        "main_repo": "https://github.com/chzyer/readline",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/chzyer/readline\"\nlanguage: go\nmain_repo: \"https://github.com/chzyer/readline\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo mod tidy\nprintf \"package readline\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./register.go\ngo mod tidy\ncp $SRC/fuzz_test.go ./\ncompile_native_go_fuzzer github.com/chzyer/readline FuzzReadline FuzzReadline\n"
    },
    "go-redis": {
        "name": "go-redis",
        "language": "go",
        "homepage": "https://github.com/redis/go-redis",
        "main_repo": "https://github.com/redis/go-redis",
        "primary_contact": "vladimir.webdev@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/redis/go-redis\"\nmain_repo: \"https://github.com/redis/go-redis\"\nprimary_contact: \"vladimir.webdev@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\ncompile_go_fuzzer github.com/redis/go-redis/v9/fuzz Fuzz fuzz gofuzz\n"
    },
    "go-sftp": {
        "name": "go-sftp",
        "language": "go",
        "homepage": "https://github.com/pkg/sftp",
        "main_repo": "https://github.com/pkg/sftp",
        "primary_contact": "nicola.murino@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/pkg/sftp\"\nprimary_contact: \"nicola.murino@gmail.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/pkg/sftp'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer . Fuzz fuzz_sftp\n"
    },
    "go-shlex": {
        "name": "go-shlex",
        "language": "go",
        "homepage": "https://github.com/google/shlex",
        "main_repo": "https://github.com/google/shlex",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/shlex\"\nlanguage: go\nmain_repo: \"https://github.com/google/shlex\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package shlex\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\necho building\ncompile_native_go_fuzzer github.com/google/shlex FuzzLexer FuzzLexer\n"
    },
    "go-snappy": {
        "name": "go-snappy",
        "language": "go",
        "homepage": "https://github.com/golang/snappy",
        "main_repo": "https://github.com/golang/snappy",
        "primary_contact": "nigeltao@golang.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/golang/snappy\"\nprimary_contact: \"nigeltao@golang.org\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/golang/snappy'\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer . FuzzRoundTrip fuzz_roundtrip gofuzz\ncompile_go_fuzzer . FuzzDecode fuzz_decode gofuzz\n"
    },
    "go-sqlite3": {
        "name": "go-sqlite3",
        "language": "go",
        "homepage": "http://mattn.github.io/go-sqlite3/",
        "main_repo": "https://github.com/mattn/go-sqlite3/",
        "primary_contact": "mattn.jp@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://mattn.github.io/go-sqlite3/\"\nprimary_contact: \"mattn.jp@gmail.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/mattn/go-sqlite3/'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $GOPATH/src/github.com/mattn/go-sqlite3\n\ncompile_go_fuzzer github.com/mattn/go-sqlite3/_example/fuzz FuzzOpenExec fuzz_open_exec\n\n# generate corpus\ngo run _example/simple/simple.go\necho -n -e \"select id, name from foo\\x00\" > simple.fuzc\ncat foo.db >> simple.fuzc\nzip -r $OUT/fuzz_open_exec_seed_corpus.zip simple.fuzc\n"
    },
    "go-toml": {
        "name": "go-toml",
        "language": "go",
        "homepage": "https://github.com/pelletier/go-toml",
        "main_repo": "https://github.com/pelletier/go-toml",
        "primary_contact": "pelletier.thomas@gmail.com",
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/pelletier/go-toml\"\nlanguage: go\nmain_repo: \"https://github.com/pelletier/go-toml\"\nprimary_contact: \"pelletier.thomas@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - maxnair.dev@gmail.com\nfile_github_issue: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir -p $OUT/benchmark\ncp benchmark/benchmark.toml $OUT/benchmark/benchmark.toml\ncompile_go_fuzzer github.com/pelletier/go-toml/v2/ossfuzz FuzzToml fuzz_toml gofuzz\n"
    },
    "go-yaml": {
        "name": "go-yaml",
        "language": "go",
        "homepage": "https://github.com/go-yaml/yaml",
        "main_repo": "https://github.com/go-yaml/yaml",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/go-yaml/yaml\"\nlanguage: go\nmain_repo: \"https://github.com/go-yaml/yaml\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package yaml\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer gopkg.in/yaml.v3 FuzzDecode FuzzDecode\n\n"
    },
    "gobgp": {
        "name": "gobgp",
        "language": "go",
        "homepage": "https://osrg.github.io/gobgp",
        "main_repo": "https://github.com/osrg/gobgp",
        "primary_contact": "fujita.tomonori@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://osrg.github.io/gobgp\"\nlanguage: go\nprimary_contact: \"fujita.tomonori@gmail.com\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/osrg/gobgp\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\nsed -i '/func BenchmarkNormalizeFlowSpecOpValues(/,/^}/ s/^/\\/\\//' pkg/packet/bgp/bgp_test.go\n\ncompile_native_go_fuzzer $PWD/pkg/packet/rtr           FuzzParseRTR                fuzz_parse_rtr\ncompile_native_go_fuzzer $PWD/pkg/packet/bmp           FuzzParseBMPMessage         fuzz_parse_bmp_message\ncompile_native_go_fuzzer $PWD/pkg/packet/bgp           FuzzParseBGPMessage         fuzz_parse_bgp_message\ncompile_native_go_fuzzer $PWD/pkg/packet/bgp           FuzzParseLargeCommunity     fuzz_parse_large_community\ncompile_native_go_fuzzer $PWD/pkg/packet/bgp           FuzzParseFlowSpecComponents fuzz_parse_flow_spec_components\ncompile_native_go_fuzzer $PWD/pkg/packet/mrt           FuzzMRT                     fuzz_mrt\ncompile_native_go_fuzzer $PWD/pkg/zebra                FuzzZapi                    fuzz_zapi\n"
    },
    "gogo-protobuf": {
        "name": "gogo-protobuf",
        "language": "go",
        "homepage": "https://github.com/gogo/protobuf",
        "main_repo": "https://github.com/gogo/protobuf",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/gogo/protobuf\"\nlanguage: go\nmain_repo: \"https://github.com/gogo/protobuf\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir fuzzing\ncp $SRC/fuzz_test.go ./fuzzing/\ncd fuzzing\ngo mod tidy\nprintf \"package fuzzing\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\necho building\ncompile_native_go_fuzzer github.com/gogo/protobuf/fuzzing FuzzProtoUnmarshal FuzzProtoUnmarshal\n"
    },
    "golang-appengine": {
        "name": "golang-appengine",
        "language": "go",
        "homepage": "https://github.com/golang/appengine",
        "main_repo": "https://github.com/golang/appengine",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/golang/appengine\"\nlanguage: go\nmain_repo: \"https://github.com/golang/appengine\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./v2/blobstore/\ncd $SRC/appengine/v2\ngo mod tidy\nprintf \"package appengine\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer google.golang.org/appengine/v2/blobstore FuzzParseUpload FuzzParseUpload\n"
    },
    "golang-protobuf": {
        "name": "golang-protobuf",
        "language": "go",
        "homepage": "https://github.com/protocolbuffers/protobuf-go",
        "main_repo": "https://github.com/protocolbuffers/protobuf-go",
        "primary_contact": "stapelberg@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/protocolbuffers/protobuf-go\"\nmain_repo: \"https://github.com/protocolbuffers/protobuf-go\"\nprimary_contact: \"stapelberg@google.com\"\nauto_ccs:\n - \"lassefolger@google.com\"\n - \"stapelberg@google.com\"\n - \"dneil@google.com\"\nsanitizers:\n - address\nfuzzing_engines:\n - libfuzzer\nlanguage: go\n",
        "build_sh": "# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n. internal/fuzz/oss-fuzz-build.sh\n"
    },
    "golang": {
        "name": "golang",
        "language": "go",
        "homepage": "https://golang.org/",
        "main_repo": "https://github.com/golang/go",
        "primary_contact": "security@golang.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://golang.org/\"\nmain_repo: \"https://github.com/golang/go\"\nprimary_contact: \"security@golang.org\"\nauto_ccs:\n - \"bracewell@google.com\"\n - \"dneil@google.com\"\n - \"rsc@google.com\"\n - \"Adam@adalogics.com\"\nlanguage: go\nsanitizers:\n - address\nfuzzing_engines:\n - libfuzzer\n",
        "build_sh": "# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Temporarily disable coverage build in OSS-Fuzz's CI\nif [ -n \"${OSS_FUZZ_CI-}\" ]\nthen\n\tif [ \"${SANITIZER}\" = 'coverage' ]\n\tthen\n\t\texit 0\n\tfi\n\nfi\n\nexport GOTOOLCHAIN=\"local\"\n\nexport FUZZ_ROOT=\"github.com/dvyukov/go-fuzz-corpus\"\n\ncd $SRC/go-118-fuzz-build\ngo build .\nmv go-118-fuzz-build /root/go/bin/\n\ncd $SRC/text\ncp $SRC/unicode_fuzzer.go ./encoding/unicode/\nfind . -name \"*_test.go\" ! -name 'fuzz_test.go' -type f -exec rm -f {} +\ncompile_go_fuzzer golang.org/x/text/encoding/unicode FuzzUnicodeTransform fuzz_unicode_transform\n\nfunction setup_golang_fuzzers() {\n\tcd $SRC/golang\n\t# These two directories cause build issues and are not used by oss-fuzz.\n\t# They can be removed:\n\trm -r sqlparser\n\trm -r parser\n\n\tmkdir $SRC/golang/math && cp $SRC/math_big_fuzzer.go $SRC/golang/math/\n\n\tmkdir $SRC/golang/text && cp $SRC/text_fuzzer.go $SRC/golang/text/\n\tcp $SRC/language_fuzzer.go $SRC/golang/text/\n\n\tmkdir -p $SRC/golang/crypto/x509\n\tcp $SRC/x509_fuzzer.go $SRC/golang/crypto/x509/\n\n\tmkdir -p $SRC/golang/crypto/ecdsa\n\tcp $SRC/ecdsa_fuzzer.go ./crypto/ecdsa/\n\n\tmkdir -p $SRC/golang/crypto/dsa\n\tcp $SRC/dsa_fuzzer.go ./crypto/dsa/\n\n\tmkdir -p $SRC/golang/crypto/aes\n\tcp $SRC/aes_fuzzer.go ./crypto/aes/\n\n\tmkdir $SRC/golang/fp\n\tcp $SRC/filepath_fuzzer.go $SRC/golang/fp/\n\n\tcp $SRC/strings_fuzzer.go $SRC/golang/strings/\n\n\tcp $SRC/multipart_fuzzer.go $SRC/golang/multipart/main.go\n\n\tmkdir $SRC/golang/encoding && cp $SRC/encoding_fuzzer.go $SRC/golang/encoding/\n\n\tgo mod init \"github.com/dvyukov/go-fuzz-corpus\"\n\tmkdir fuzzingdep\n\tprintf \"package fuzzingdep\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > fuzzingdep/register.go\n\tgo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=\"$SRC\"/go-118-fuzz-build\n\tgo mod tidy\n}\n\nfunction compile_fuzzers() {\n\t# version is used as suffix for the binaries\n\tversion=$1\n\tcompile_go_fuzzer $FUZZ_ROOT/encoding FuzzEncoding fuzz_encoding$version\n\tcompile_go_fuzzer $FUZZ_ROOT/strings FuzzStringsSplit fuzz_strings_split$version\n\tcompile_go_fuzzer $FUZZ_ROOT/fp FuzzFpGlob glob_fuzzer$version\n\tif [ \"${version}\" != '_latest_master' ]\n        then\n\t\tcompile_go_fuzzer $FUZZ_ROOT/crypto/ecdsa FuzzEcdsaSign FuzzEcdsaSign$version\n\t\tcompile_native_go_fuzzer $FUZZ_ROOT/crypto/ecdsa FuzzEcdsaVerify FuzzEcdsaVerify$version\n\t\tcompile_native_go_fuzzer $FUZZ_ROOT/crypto/dsa FuzzDsaSign FuzzDsaSign$version\n\t\tcompile_native_go_fuzzer $FUZZ_ROOT/crypto/dsa FuzzDsaVerify FuzzDsaVerify$version\n        fi\n\tcompile_go_fuzzer $FUZZ_ROOT/crypto/x509 FuzzParseCert fuzz_parse_cert$version\n\tcompile_go_fuzzer $FUZZ_ROOT/crypto/x509 FuzzPemDecrypt fuzz_pem_decrypt$version\n\tcompile_go_fuzzer $FUZZ_ROOT/crypto/aes FuzzAesCipherDecrypt fuzz_aes_cipher_decrypt$version\n\tcompile_go_fuzzer $FUZZ_ROOT/crypto/aes FuzzAesCipherEncrypt fuzz_aes_cipher_encrypt$version\n\tcompile_go_fuzzer $FUZZ_ROOT/text FuzzAcceptLanguage accept_language_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/text FuzzMultipleParsers fuzz_multiple_parsers$version\n\tcompile_go_fuzzer $FUZZ_ROOT/text FuzzCurrency currency_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/math FuzzFloatSetString fuzz_float_set_string$version\n\tcompile_go_fuzzer $FUZZ_ROOT/math FuzzBigGobdecode fuzz_big_gobdecode$version\n\tcompile_go_fuzzer $FUZZ_ROOT/math FuzzBigIntCmp1 big_cmp_fuzzer1$version\n\tcompile_go_fuzzer $FUZZ_ROOT/math FuzzBigIntCmp2 big_cmp_fuzzer2$version\n\tcompile_go_fuzzer $FUZZ_ROOT/math FuzzRatSetString big_rat_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/math FuzzFloat64SpecialCases fuzz_float64_special_cases$version\n\tcompile_go_fuzzer $FUZZ_ROOT/asn1 Fuzz asn_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/csv Fuzz csv_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/elliptic Fuzz elliptic_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/flate Fuzz flate_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/fmt Fuzz fmt_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/gzip Fuzz gzip_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/httpreq Fuzz httpreq_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/jpeg Fuzz jpeg_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/json Fuzz json_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/lzw Fuzz lzw_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/mime Fuzz mime_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/multipart Fuzz multipart_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/png Fuzz png_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/tar Fuzz tar_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/time Fuzz time_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/xml Fuzz xml_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/zip Fuzz zip_fuzzer$version\n\tcompile_go_fuzzer $FUZZ_ROOT/zlib Fuzz zlib_fuzzer$version\n\n\tzip $OUT/fuzz_pem_decrypt${version}_seed_corpus.zip $SRC/go/src/crypto/x509/testdata/*\n\tzip $OUT/fuzz_parse_cert${version}_seed_corpus.zip $SRC/go/src/crypto/x509/testdata/*\n}\n\n\n# Build fuzzers with Go 1.18\nsetup_golang_fuzzers\ncompile_fuzzers \"\"\n\ncd $SRC/go/src/regexp\ncp $SRC/regexp_fuzzer.go ./\ngo mod init regexpPackage\ngo mod tidy\nfind . -name \"*_test.go\" ! -name 'fuzz_test.go' -type f -exec rm -f {} +\ncompile_go_fuzzer regexpPackage FuzzCompile fuzz_regexp_compile\ncompile_go_fuzzer regexpPackage FuzzCompilePOSIX fuzz_compile_posix\ncompile_go_fuzzer regexpPackage FuzzReplaceAll fuzz_replace_all\ncompile_go_fuzzer regexpPackage FuzzFindMatchApis fuzz_find_match_apis\n\n#cd $SRC/go/src/archive/tar\n#go mod init tarPackage\n#go mod tidy\n#find . -name \"*_test.go\" ! -name 'fuzz_test.go' -type f -exec rm -f {} +\n#go get github.com/AdamKorcz/go-118-fuzz-build/testingtypes\n#go get github.com/AdamKorcz/go-118-fuzz-build/utils\n#compile_native_go_fuzzer tarPackage FuzzReader fuzz_std_lib_tar_reader\n#zip $OUT/fuzz_std_lib_tar_reader_seed_corpus.zip $SRC/go/src/archive/tar/testdata/*.tar\n\ncp $SRC/h2c_fuzzer.go $SRC/net/http2/h2c/\ncd $SRC/net/http2/h2c\ncd $SRC/instrumentation && go run main.go --target_dir=$SRC/net --check_io_length=true && cd -\ngo mod tidy\ncompile_go_fuzzer . FuzzH2c fuzz_x_h2c\nmv $SRC/fuzz_x_h2c.options $OUT/\n\ncp $SRC/openpgp_fuzzer.go $SRC/crypto/openpgp/packet\ncd $SRC/crypto/openpgp/packet\ncd $SRC/instrumentation && go run main.go --target_dir=$SRC/crypto --check_io_length=true && cd -\ngo mod tidy\ncompile_go_fuzzer . FuzzOpenpgpRead fuzz_openpgp_read\n\ncd $SRC/image/webp\ncp $SRC/webp_fuzzer.go ./\ncompile_go_fuzzer . FuzzWebpDecode fuzz_webp_decode\nzip $OUT/fuzz_webp_decode_seed_corpus.zip $SRC/image/testdata/*.webp\n\ncd $SRC/image/tiff\ncp $SRC/tiff_fuzzer.go ./\ncompile_go_fuzzer . FuzzTiffDecode fuzz_tiff_decode\ncp $SRC/fuzz_tiff_decode.options $OUT/\nzip $OUT/fuzz_tiff_decode_seed_corpus.zip $SRC/image/testdata/*.tiff\n\ncd $SRC/go/src/archive/tar\ncp $SRC/fuzz_tar_reader.go ./\nrm ./*_test.go\n\n#compile_go_fuzzer tarPackage FuzzTarReader fuzz_tar_reader\n#mv $SRC/fuzz_tar_reader.options $OUT/\n#zip $OUT/fuzz_tar_reader_seed_corpus.zip $SRC/go/src/archive/tar/testdata/*.tar\n\n#cd $SRC/go/src/archive/zip\n#go mod init zipPackage\n#go mod tidy\n#find . -name \"*_test.go\" ! -name 'fuzz_test.go' -type f -exec rm -f {} +\n#go get github.com/AdamKorcz/go-118-fuzz-build/testingtypes\n#go get github.com/AdamKorcz/go-118-fuzz-build/utils\n#compile_native_go_fuzzer zipPackage FuzzReader fuzz_std_lib_zip_reader\n#zip $OUT/fuzz_std_lib_zip_reader_seed_corpus.zip $SRC/go/src/archive/zip/testdata/*.zip\n\ncd $SRC/go/src/internal/saferio\ngo mod init saferioPackage\ngo mod tidy\n\ncd $SRC/go/src/internal/zstd\ngo mod init zstdPackage\ngo mod tidy\n\ncd $SRC/go/src/image/png\ngo mod init pngPackage\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=\"$SRC\"/go-118-fuzz-build\ncompile_native_go_fuzzer pngPackage FuzzDecode fuzz_png_decode\nzip $OUT/fuzz_png_decode_seed_corpus.zip ./testdata/*.png\n\ncd $SRC/go/src/compress/gzip\ngo mod init gzipPackage\ngo mod tidy\nfind . -name \"*_test.go\" ! -name 'fuzz_test.go' -type f -exec rm -f {} +\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=\"$SRC\"/go-118-fuzz-build\ncompile_native_go_fuzzer gzipPackage FuzzReader fuzz_std_lib_gzip_reader\nzip $OUT/fuzz_std_lib_gzip_reader_seed_corpus.zip $SRC/go/src/compress/gzip/testdata/*\n\n# golangs build from source currently breaks.\n\ncd $SRC/go/src/html\ngo mod init htmlPackage\ngo mod tidy\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=\"$SRC\"/go-118-fuzz-build\ncompile_native_go_fuzzer htmlPackage FuzzEscapeUnescape fuzz_html_escape_unescape\n\n# Install latest Go from master branch and build fuzzers again\ncd $SRC\nrm -r go\nrm -r golang\ngit clone --depth 1 https://github.com/golang/go\ngit clone --depth 1 https://github.com/dvyukov/go-fuzz-corpus $SRC/golang\ncd $SRC/go/src\n# delete failing test\nrm ./cmd/cgo/internal/testsanitizers/msan_test.go\n./all.bash\nls /src/go/bin\nexport GOROOT=\"/src/go\"\nexport PATH=/src/go/bin:$PATH\n\n# build fuzzers\nsetup_golang_fuzzers\ncompile_fuzzers \"_latest_master\"\n\n# options files\ncp $SRC/glob_fuzzer.options $OUT/\ncp $SRC/glob_fuzzer.options $OUT/glob_fuzzer_latest_master.options\n"
    },
    "gonids": {
        "name": "gonids",
        "language": "go",
        "homepage": "https://github.com/google/gonids",
        "main_repo": "https://github.com/google/gonids",
        "primary_contact": "duane.security@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/gonids\"\nprimary_contact: \"duane.security@gmail.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/google/gonids'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/google/gonids FuzzParseRule fuzz_parserule\n\ncd $SRC\nunzip emerging.rules.zip\ncd rules\ni=0\nmkdir corpus\n# quit output for commands\nset +x\ncat *.rules | while read l; do echo $l > corpus/$i.rule; i=$((i+1)); done\nset -x\nzip -q -r $OUT/fuzz_parserule_seed_corpus.zip corpus\n\n"
    },
    "gopacket": {
        "name": "gopacket",
        "language": "go",
        "homepage": "https://github.com/google/gopacket",
        "main_repo": "https://github.com/google/gopacket",
        "primary_contact": "gconnell@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/gopacket\"\nprimary_contact: \"gconnell@google.com\"\nauto_ccs :\n- \"p.antoine@catenacyber.fr\"\n\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nmain_repo: 'https://github.com/google/gopacket'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n\ncompile_go_fuzzer github.com/google/gopacket/layers FuzzLayer fuzz_layers\n"
    },
    "gopsutil": {
        "name": "gopsutil",
        "language": "go",
        "homepage": "https://github.com/shirou/gopsutil",
        "main_repo": "https://github.com/shirou/gopsutil",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/shirou/gopsutil\"\nlanguage: go\nmain_repo: \"https://github.com/shirou/gopsutil\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./process/\ngo mod tidy\nprintf \"package process\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./process/register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/shirou/gopsutil/v4/process FuzzTest FuzzTest\n"
    },
    "gosnmp": {
        "name": "gosnmp",
        "language": "go",
        "homepage": "https://github.com/gosnmp/gosnmp",
        "main_repo": "https://github.com/gosnmp/gosnmp",
        "primary_contact": "tim.rots@protonmail.ch",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/gosnmp/gosnmp\"\nlanguage: go\nprimary_contact: \"tim.rots@protonmail.ch\"\nauto_ccs:\n  - \"superq@gmail.com\"\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/gosnmp/gosnmp\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\nsed -i '5,6d' marshal_test.go\nsed -i '/func BenchmarkSendOneRequest(/,/^}/ s/^/\\/\\//' marshal_test.go\n\ncompile_native_go_fuzzer github.com/gosnmp/gosnmp FuzzUnmarshal  fuzz_unmarshal marshal\n"
    },
    "gpac": {
        "name": "gpac",
        "language": "c",
        "homepage": "https://gpac.io",
        "main_repo": "https://github.com/gpac/gpac",
        "primary_contact": "project.gpac@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://gpac.io\"\nmain_repo: \"https://github.com/gpac/gpac\"\nprimary_contact: \"project.gpac@gmail.com\"\nlanguage: c\nauto_ccs:\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./configure --static-build --extra-cflags=\"${CFLAGS}\" --extra-ldflags=\"${CFLAGS}\"\nmake\n\n\nfuzzers=$(find $SRC/gpac/testsuite/oss-fuzzers -name \"fuzz_*.c\")\nfor f in $fuzzers; do\n\n    fuzzerName=$(basename $f .c)\n    echo \"Building fuzzer $fuzzerName\"\n\n    $CC $CFLAGS -I./include -I./ -DGPAC_HAVE_CONFIG_H -c $f\n    $CXX $CXXFLAGS $LIB_FUZZING_ENGINE $fuzzerName.o -o $OUT/$fuzzerName \\\n      ./bin/gcc/libgpac_static.a \\\n      -lm -lz -lpthread -lssl -lcrypto -DGPAC_HAVE_CONFIG_H\n\n\n    if [ -d \"$SRC/gpac/testsuite/oss-fuzzers/${fuzzerName}_corpus\" ]; then\n        zip -j $OUT/${fuzzerName}_seed_corpus.zip $SRC/gpac/testsuite/oss-fuzzers/${fuzzerName}_corpus/*\n    fi\n\ndone"
    },
    "gprof2dot": {
        "name": "gprof2dot",
        "language": "python",
        "homepage": "https://github.com/jrfonseca/gprof2dot",
        "main_repo": "https://github.com/jrfonseca/gprof2dot",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jrfonseca/gprof2dot\nmain_repo: https://github.com/jrfonseca/gprof2dot\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gpsd": {
        "name": "gpsd",
        "language": "c",
        "homepage": "https://gpsd.io",
        "main_repo": "https://gitlab.com/gpsd/gpsd",
        "primary_contact": "gpsd-dev@nongnu.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://gpsd.io\"\nlanguage: c\nprimary_contact: \"gpsd-dev@nongnu.org\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\n  - \"gem@rellim.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\nmain_repo: 'https://gitlab.com/gpsd/gpsd'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nexport CC=\"$CC $CFLAGS\"\nexport CXX=\"$CXX $CFLAGS\"\nexport CFLAGS=\"\"\nexport CXXFLAGS=\"$CFLAGS\"\n\nscons\n\npushd fuzzer/\nmake\n\ncp FuzzJson $OUT/FuzzJson\ncp FuzzPacket $OUT/FuzzPacket\npopd\n\npushd $SRC/oss-fuzz-bloat/gpsd\ncp FuzzJson_seed_corpus.zip $OUT/FuzzJson_seed_corpus.zip\ncp FuzzPacket_seed_corpus.zip $OUT/FuzzPacket_seed_corpus.zip\npopd\n"
    },
    "graphicsfuzz-spirv": {
        "name": "graphicsfuzz-spirv",
        "language": "c++",
        "homepage": "https://www.graphicsfuzz.com",
        "main_repo": "https://github.com/google/graphicsfuzz",
        "primary_contact": "afdx@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "none"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.graphicsfuzz.com\"\nlanguage: c++\nmain_repo: \"https://github.com/google/graphicsfuzz\"\nprimary_contact: \"afdx@google.com\"\nauto_ccs:\n  - \"paulthomson@google.com\"\n  - \"metzman@google.com\"\n\nfuzzing_engines:\n  - none\n\nsanitizers:\n  - address\n  - memory\n  - undefined\n\narchitectures:\n  - x86_64\n  - i386\n\ndisabled: True\nblackbox: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# TODO(metzman): Use some kind of bash loop here.\nmkdir glslang/build\npushd glslang/build\n\ncmake -G \"Ninja\" -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" ..\nninja\ncp StandAlone/glslangValidator $OUT\npopd\n\nmkdir SPIRV-Tools/build\npushd SPIRV-Tools/build\n\n# TODO: If cmake respects LDFLAGS, do we need to specify the compilers and their flags?\n# Link failure without LDFLAGS=\"-lpthread\"\nLDFLAGS=\"-lpthread\" cmake -G \"Ninja\" -DSPIRV_SKIP_TESTS=ON  -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" ..\nninja\ncp tools/spirv-as tools/spirv-dis tools/spirv-val tools/spirv-opt $OUT/\npopd\n\nmkdir SPIRV-Cross/build\npushd SPIRV-Cross/build\ncmake -G \"Ninja\" -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_COMPILER=$CC -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" ..\nninja\ncp spirv-cross $OUT/\n\n"
    },
    "graphicsmagick": {
        "name": "graphicsmagick",
        "language": "c++",
        "homepage": "http://www.graphicsmagick.org/",
        "main_repo": "https://foss.heptapod.net/graphicsmagick/graphicsmagick",
        "primary_contact": "bobjfriesenhahn@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "afl"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.graphicsmagick.org/\"\nmain_repo: \"https://foss.heptapod.net/graphicsmagick/graphicsmagick\"\nlanguage: c++\nprimary_contact: \"bobjfriesenhahn@gmail.com\"\nauto_ccs:\n    - troyjp@gmail.com\n    - alex.gaynor@gmail.com\n    - paul.l.kehrer@gmail.com\nsanitizers:\n    - address\n    - memory\n    - undefined\narchitectures:\n    - x86_64\n    - i386\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n  - afl\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./fuzzing/oss-fuzz-build.sh\n"
    },
    "graphql-java": {
        "name": "graphql-java",
        "language": "jvm",
        "homepage": "https://github.com/graphql-java/graphql-java",
        "main_repo": "https://github.com/graphql-java/graphql-java",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/graphql-java/graphql-java\nmain_repo: https://github.com/graphql-java/graphql-java\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n# Retrieve JDK-11\nwget https://download.java.net/openjdk/jdk11.0.0.1/ri/openjdk-11.0.0.1_linux-x64_bin.tar.gz -O openjdk-11.tar.gz\ntar -zxf openjdk-11.tar.gz\nrm -f openjdk-11.tar.gz\ncp -r jdk-11.0.0.1 $OUT/\nJAVA_HOME=$OUT/jdk-11.0.0.1\nPATH=$JAVA_HOME/bin:$PATH\n\n# Add task for copy dependency jars\necho \"\ntask copyToLib(type: Copy) {\n    into \\\"\\${buildDir}/dependencies\\\"\n    from configurations.runtimeClasspath\n}\" >> ./build.gradle\n\n# Gradle build with gradle wrapper\nrm -rf $HOME/.gradle/caches/\n./gradlew clean build shadowJar copyToLib -x test -x javadoc -x sources\n./gradlew --stop\n\ncp \"./build/libs/$(basename ./build/tmp/jar/*.jar)\" $OUT/graphql-java.jar\n\nALL_JARS=\"graphql-java.jar\"\n\n# Copy dependency jars\nfor JARFILE in $(ls ./build/dependencies/*.jar)\ndo\n  cp $JARFILE $OUT/\n  ALL_JARS=$ALL_JARS\" $(basename $JARFILE)\"\ndone\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "greenmail": {
        "name": "greenmail",
        "language": "jvm",
        "homepage": "https://github.com/greenmail-mail-test/greenmail",
        "main_repo": "https://github.com/greenmail-mail-test/greenmail.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/greenmail-mail-test/greenmail\"\nlanguage: jvm\nmain_repo: \"https://github.com/greenmail-mail-test/greenmail.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15 -Djdk.version=15\"\n$MVN clean package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\ncp ./greenmail-core/target/greenmail-$CURRENT_VERSION.jar $OUT/greenmail-core.jar\n\nALL_JARS=\"greenmail-core.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "grok": {
        "name": "grok",
        "language": "c++",
        "homepage": "https://github.com/GrokImageCompression/grok",
        "main_repo": "https://github.com/GrokImageCompression/grok.git",
        "primary_contact": "boxerab@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/GrokImageCompression/grok\"\nprimary_contact: \"boxerab@gmail.com\"\nlanguage: c++\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/GrokImageCompression/grok.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\ncmake .. -DGRK_BUILD_CODEC=OFF -DBUILD_SHARED_LIBS=OFF -DGRK_BUILD_THIRDPARY=ON\nmake clean -s\nmake -j$(nproc) -s\ncd ..\n\n./tests/fuzzers/build_google_oss_fuzzers.sh\n./tests/fuzzers/build_seed_corpus.sh\n"
    },
    "groovy": {
        "name": "groovy",
        "language": "jvm",
        "homepage": "https://groovy-lang.org/",
        "main_repo": "https://github.com/apache/groovy.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://groovy-lang.org/\nlanguage: jvm\nmain_repo: https://github.com/apache/groovy.git\nsanitizers:\n- address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nALL_JARS=\"\"\n\npushd \"${SRC}/groovy\"\n\t./gradlew shadowJar\n\tcp -v ./build/libs/groovy-raw-*-SNAPSHOT.jar \"$OUT/groovy.jar\"\n\tALL_JARS=\"${ALL_JARS} groovy.jar\"\n\n  cp -v ./subprojects/groovy-test/build/libs/groovy-test-*-SNAPSHOT-all.jar \"$OUT/groovy-test.jar\"\n\tALL_JARS=\"${ALL_JARS} groovy-test.jar\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "grpc-gateway": {
        "name": "grpc-gateway",
        "language": "go",
        "homepage": "https://github.com/grpc-ecosystem/grpc-gateway",
        "main_repo": "https://github.com/grpc-ecosystem/grpc-gateway",
        "primary_contact": "grpc-gateway-maintainers@googlegroups.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/grpc-ecosystem/grpc-gateway\"\nprimary_contact: \"grpc-gateway-maintainers@googlegroups.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/grpc-ecosystem/grpc-gateway'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/grpc-ecosystem/grpc-gateway/v2/internal/httprule Fuzz fuzz gofuzz\n"
    },
    "grpc-go": {
        "name": "grpc-go",
        "language": "go",
        "homepage": "https://grpc.io/",
        "main_repo": "https://github.com/grpc/grpc-go",
        "primary_contact": "menghanl@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://grpc.io/\"\nprimary_contact: \"menghanl@google.com\"\nauto_ccs:\n  - \"dfawley@google.com\"\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/grpc/grpc-go'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz*.go $GOPATH/src/google.golang.org/grpc/examples/\n\n# seems needed to build the targets with the golang modules...\ncd $GOPATH/src/google.golang.org/grpc/examples/\ncompile_go_fuzzer google.golang.org/grpc/examples FuzzHelloClient fuzz_helloclient\ncompile_go_fuzzer google.golang.org/grpc/examples FuzzHelloServer fuzz_helloserver\n"
    },
    "grpc-httpjson-transcoding": {
        "name": "grpc-httpjson-transcoding",
        "language": "c++",
        "homepage": "https://github.com/grpc-ecosystem/grpc-httpjson-transcoding",
        "main_repo": "https://github.com/grpc-ecosystem/grpc-httpjson-transcoding.git",
        "primary_contact": "nareddyt@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/grpc-ecosystem/grpc-httpjson-transcoding\"\nmain_repo: \"https://github.com/grpc-ecosystem/grpc-httpjson-transcoding.git\"\nlanguage: c++\nprimary_contact: \"nareddyt@google.com\"\nauto_ccs:\n- \"yangshuo@google.com\"\n- \"taoxuy@google.com\"\n- \"qiwzhang@google.com\"\n- \"justinmp@google.com\"\n\nfuzzing_engines:\n- libfuzzer\n- afl\n- honggfuzz\n\nsanitizers:\n- address\n- undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# This project uses bazel rules_fuzzing.\n\nbazel_build_fuzz_tests\n"
    },
    "grpc-py": {
        "name": "grpc-py",
        "language": "python",
        "homepage": "https://github.com/grpc/grpc",
        "main_repo": "https://github.com/grpc/grpc",
        "primary_contact": "j.belleville.richard@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/grpc/grpc\nprimary_contact: \"j.belleville.richard@gmail.com\"\nlanguage: python\nmain_repo: https://github.com/grpc/grpc\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install --upgrade pip\npip3 install -r ./requirements.txt\n\nGRPC_PYTHON_CFLAGS=\"${CFLAGS}\" GRPC_PYTHON_BUILD_SYSTEM_RE2=true GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=true GRPC_PYTHON_BUILD_SYSTEM_ZLIB=true pip3 install -v . \n\n# Install grpcio_status\ncd src/python/grpcio_status\npip3 install .\n\ncd $SRC/grpc/examples/python/helloworld\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data helloworld_pb2.py:. --add-data helloworld_pb2_grpc.py:.\ndone\n"
    },
    "grpc-swift": {
        "name": "grpc-swift",
        "language": "swift",
        "homepage": "https://github.com/grpc/grpc-swift",
        "main_repo": "https://github.com/grpc/grpc-swift",
        "primary_contact": "gbarnett@apple.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/grpc/grpc-swift\"\nlanguage: swift\nprimary_contact: \"gbarnett@apple.com\"\nauto_ccs :\n- \"lukasa@apple.com\"\n- \"pp_adams@apple.com\"\n- \"p.antoine@catenacyber.fr\"\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- thread\nmain_repo: 'https://github.com/grpc/grpc-swift'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n. precompile_swift\n# build project\ncd FuzzTesting\nswift build -c debug $SWIFTFLAGS\n\n(\ncd .build/debug/\nfind . -maxdepth 1 -type f -name \"*Fuzzer\" -executable | while read i; do cp $i $OUT/\"$i\"-debug; done\n)\nswift build -c release $SWIFTFLAGS\n(\ncd .build/release/\nfind . -maxdepth 1 -type f -name \"*Fuzzer\" -executable | while read i; do cp $i $OUT/\"$i\"-release; done\n)\n"
    },
    "gson": {
        "name": "gson",
        "language": "jvm",
        "homepage": "https://github.com/google/gson",
        "main_repo": "https://github.com/google/gson",
        "primary_contact": "emcmanus@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/gson\"\nlanguage: jvm\nprimary_contact: \"emcmanus@google.com\"\nmain_repo: \"https://github.com/google/gson\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport JAVA_HOME=\"$OUT/open-jdk-17\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\n# Skip ProGuard because it is only needed for tests (which are skipped as well) and\n# because it would fail since `jmods` JDK folder is removed from this Docker image\nMAVEN_ARGS=\"-DskipTests -Dproguard.skip\"\n# Only build 'gson' Maven module\ncd gson\n$MVN --batch-mode --update-snapshots package ${MAVEN_ARGS}\ncd ..\nfind ./gson -name \"gson-*.jar\" -exec mv {} $OUT/gson.jar \\;\n\nALL_JARS=\"gson.jar\"\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name 'Fuzz*.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-17/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-17/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "gss-ntlmssp": {
        "name": "gss-ntlmssp",
        "language": "c",
        "homepage": "https://github.com/gssapi/gss-ntlmssp",
        "main_repo": "https://github.com/gssapi/gss-ntlmssp",
        "primary_contact": "ssorce@redhat.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/gssapi/gss-ntlmssp\"\nlanguage: c\nprimary_contact: \"ssorce@redhat.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: \"https://github.com/gssapi/gss-ntlmssp\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nautoreconf -f -i\n./configure --disable-shared --enable-static --without-wbclient\nmake\n\npushd fuzzing/\nmake fuzzer\n\ncp fuzz-accept-sec-context $OUT/\ncp fuzz-accept-sec-context.dict $OUT/\npopd\n"
    },
    "gstreamer": {
        "name": "gstreamer",
        "language": "c++",
        "homepage": "https://gstreamer.freedesktop.org/",
        "main_repo": "https://gitlab.freedesktop.org/gstreamer/gstreamer.git",
        "primary_contact": "gstreamer-security@lists.freedesktop.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://gstreamer.freedesktop.org/\"\nlanguage: c++\nprimary_contact: \"gstreamer-security@lists.freedesktop.org\"\nauto_ccs:\n - \"bilboed@bilboed.com\"\n - \"tim@centricular.com\"\n - \"slomo@coaxion.net\"\n - \"mduponchelle1@gmail.com\"\n - \"saunierthibault@gmail.com\"\n - \"ystreet00@gmail.com\"\n - \"thaytan@noraisin.net\"\nmain_repo: 'https://gitlab.freedesktop.org/gstreamer/gstreamer.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/gstreamer/ci/fuzzing/build-oss-fuzz.sh\n"
    },
    "guava": {
        "name": "guava",
        "language": "jvm",
        "homepage": "https://github.com/google/guava",
        "main_repo": "https://github.com/google/guava.git",
        "primary_contact": "emcmanus@google.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/guava\"\nlanguage: jvm\nmain_repo: \"https://github.com/google/guava.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nprimary_contact: \"emcmanus@google.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"guava/target/guava-$CURRENT_VERSION.jar\" \"$OUT/guava.jar\"\n\nALL_JARS=\"guava.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\njavac -cp $BUILD_CLASSPATH ${SRC}/*.java\ninstall ${SRC}/*.class ${OUT}/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "guetzli": {
        "name": "guetzli",
        "language": "c++",
        "homepage": "https://github.com/google/guetzli",
        "main_repo": "https://github.com/google/guetzli",
        "primary_contact": "robryk@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/google/guetzli\"\nlanguage: c++\nprimary_contact: \"robryk@google.com\"\nauto_ccs:\n  - \"szabadka@google.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/google/guetzli'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmake guetzli_static\n$CXX $CXXFLAGS -std=c++11 -I. fuzz_target.cc $LIB_FUZZING_ENGINE \\\n  -o $OUT/guetzli_fuzzer bin/Release/libguetzli_static.a\n\ncp $SRC/guetzli_fuzzer_seed_corpus.zip $OUT/\n"
    },
    "guice": {
        "name": "guice",
        "language": "jvm",
        "homepage": "https://github.com/google/guice",
        "main_repo": "https://github.com/google/guice.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/guice\"\nlanguage: jvm\nmain_repo: \"https://github.com/google/guice.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncat > patch.diff <<- EOM\n--- a/pom.xml\t2022-05-05 09:49:53.028735612 +0200\n+++ b/pom.xml\t2022-05-05 09:49:30.445695122 +0200\n@@ -120,7 +120,7 @@\n      | The last stable release version id, used for generating API diffs between released versions\n     -->\n     <guice.lastStableRelease>7.0.0</guice.lastStableRelease>\n-    <guice.skipTests>false</guice.skipTests>\n+    <guice.skipTests>true</guice.skipTests>\n     <gpg.skip>true</gpg.skip>\n   </properties>\n\nEOM\n\ngit apply patch.diff\n\ncd core\ncat > patch2.diff <<- EOM\n--- a/pom.xml\t2022-05-05 13:32:09.413975213 +0200\n+++ b/pom.xml\t2022-05-05 13:33:53.389402985 +0200\n@@ -68,6 +68,24 @@\n\n   <build>\n     <plugins>\n+      <plugin>\n+        <groupId>org.apache.maven.plugins</groupId>\n+        <artifactId>maven-assembly-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <phase>package</phase>\n+            <goals>\n+              <goal>single</goal>\n+            </goals>\n+            <configuration>\n+              <descriptorRefs>\n+                <descriptorRef>jar-with-dependencies</descriptorRef>\n+              </descriptorRefs>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n       <!--\n        | Add standard LICENSE and NOTICE files\n       -->\n\nEOM\n\ngit apply patch2.diff\ncd ..\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"core/target/guice-$CURRENT_VERSION-jar-with-dependencies.jar\" \"$OUT/guice.jar\"\n\nALL_JARS=\"guice.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--disabled_hooks=\\\"com.code_intelligence.jazzer.sanitizers.ReflectiveCall\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "gunicorn": {
        "name": "gunicorn",
        "language": "python",
        "homepage": "https://github.com/benoitc/gunicorn",
        "main_repo": "https://github.com/benoitc/gunicorn",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/benoitc/gunicorn\nlanguage: python\nmain_repo: https://github.com/benoitc/gunicorn\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "gwt": {
        "name": "gwt",
        "language": "jvm",
        "homepage": "https://www.gwtproject.org/",
        "main_repo": "https://github.com/gwtproject/gwt/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.gwtproject.org/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/gwtproject/gwt/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\nrun_tests: False",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=gwt\nPROJECT_GROUP_ID=org.gwtproject\nPROJECT_ARTIFACT_ID=gwt-dev\nMAIN_REPOSITORY=https://github.com/gwtproject/gwt/\n\nMAVEN_ARGS=\"-Djavac.src.version=1.8 -Djavac.target.version=1.8 -Denforcer.skip=true -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n  # build tools for gwt\n  git -C tools pull || git clone https://github.com/gwtproject/tools/ tools\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  mvn -pl $PROJECT install -DskipTests\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  export JAVA_HOME=\"$OUT/open-jdk-8\"\n  mkdir -p $JAVA_HOME\n  rsync -aL --exclude=*.zip \"/usr/lib/jvm/java-8-openjdk-amd64/\" \"$JAVA_HOME\"\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # dependency:build-classpath won't work for ant generated jars\n  cp $SRC/project-parent/gwt/build/lib/gwt-dev.jar $OUT/\n  cp $SRC/project-parent/gwt/build/lib/gwt-user.jar $OUT/\n\n  ALL_JARS=\"gwt-dev.jar gwt-user.jar\"\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes:$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\")\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent/fuzz-targets -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  JAVA_HOME=\\\"\\$this_dir/open-jdk-8/\\\" \\\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "h11": {
        "name": "h11",
        "language": "python",
        "homepage": "https://github.com/python-hyper/h11",
        "main_repo": "https://github.com/python-hyper/h11",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/python-hyper/h11\nmain_repo: https://github.com/python-hyper/h11\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "h2database": {
        "name": "h2database",
        "language": "jvm",
        "homepage": "https://h2database.com/",
        "main_repo": "https://github.com/h2database/h2database.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://h2database.com/\"\nlanguage: jvm\nmain_repo: \"https://github.com/h2database/h2database.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\" \n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd h2\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/h2-$CURRENT_VERSION.jar\" \"$OUT/h2.jar\"\npopd\n\nALL_JARS=\"h2.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH $SRC/*.java\ncp $SRC/*.class $OUT/\n\n# generate jazzer start script\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  #javac -cp $SRC:$BUILD_CLASSPATH $fuzzer\n  #cp $SRC/$fuzzer_basename.class $OUT/\n  #for member_class in $(find $SRC -maxdepth 1 -name \"$fuzzer_basename\\$*.class\"); do\n  #  cp $member_class $OUT/\n  #done\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--disabled_hooks=\\\"com.code_intelligence.jazzer.sanitizers.SqlInjection\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "h2o": {
        "name": "h2o",
        "language": "c++",
        "homepage": "https://github.com/h2o/h2o",
        "main_repo": "https://github.com/h2o/h2o",
        "primary_contact": "jonathan.foote@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/h2o/h2o\"\nlanguage: c++\nprimary_contact: \"jonathan.foote@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nauto_ccs:\n  - \"frederik.deweerdt@gmail.com\"\n  - \"kazuhooku@gmail.com\"\n  - \"i.nagata110@gmail.com\"\n  - \"hfujita@fastly.com\"\n  - \"security@fastly.com\"\n  - \"mtakayama@fastly.com\"\n  - \"gfuji@fastly.com\"\n  - \"nalramli@fastly.com\"\n  - \"ethompson@fastly.com\"\n\nmain_repo: 'https://github.com/h2o/h2o'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd $SRC/h2o\ncmake -DBUILD_FUZZER=ON -DOSS_FUZZ=ON -DOPENSSL_USE_STATIC_LIBS=TRUE .\nmake\ncp ./h2o-fuzzer-* $OUT/\n\nzip -jr $OUT/h2o-fuzzer-http1_seed_corpus.zip $SRC/h2o/fuzz/http1-corpus\nzip -jr $OUT/h2o-fuzzer-http2_seed_corpus.zip $SRC/h2o/fuzz/http2-corpus\nzip -jr $OUT/h2o-fuzzer-http3_seed_corpus.zip $SRC/h2o/fuzz/http3-corpus\nzip -jr $OUT/h2o-fuzzer-url_seed_corpus.zip $SRC/h2o/fuzz/url-corpus\n\ncp $SRC/*.options $SRC/h2o/fuzz/*.dict $OUT/\npopd\n"
    },
    "h3": {
        "name": "h3",
        "language": "c",
        "homepage": "https://github.com/uber/h3",
        "main_repo": "https://github.com/uber/h3",
        "primary_contact": "isaacnf0x@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/uber/h3\"\nlanguage: c\nprimary_contact: \"isaacnf0x@gmail.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\n  - \"h3-dev@googlegroups.com\"\n  - \"isv.damocles@gmail.com\"\n  - \"ajfriend@gmail.com\"\n  - \"nick.rabinowitz@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/uber/h3'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\ncmake ..\nmake -j$(nproc) h3\n\nH3_BASE=/src/h3/\n\nfor fuzzer in $(find $H3_BASE/src/apps/fuzzers -name '*.c'); do\n  fuzzer_basename=$(basename -s .c $fuzzer)\n  # H3_USE_LIBFUZZER is needed so that H3 does not try to build its own\n  # implementation of `main`\n  $CC $CFLAGS -DH3_PREFIX=\"\" \\\n    -DH3_USE_LIBFUZZER=1 \\\n    -I$H3_BASE/src/apps/applib/include \\\n    -I$H3_BASE/src/h3lib/include \\\n    -I$H3_BASE/build/src/h3lib/include \\\n    -o $fuzzer_basename.o \\\n    -c $fuzzer\n\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE -rdynamic \\\n    $fuzzer_basename.o \\\n    -o $OUT/$fuzzer_basename \\\n    lib/libh3.a\ndone\n"
    },
    "h5py": {
        "name": "h5py",
        "language": "python",
        "homepage": "https://github.com/h5py/h5py",
        "main_repo": "https://github.com/h5py/h5py",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/h5py/h5py\nlanguage: python\nmain_repo: https://github.com/h5py/h5py\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "hadoop": {
        "name": "hadoop",
        "language": "jvm",
        "homepage": "https://hadoop.apache.org/",
        "main_repo": "https://github.com/apache/hadoop/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://hadoop.apache.org/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/apache/hadoop/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=hadoop\nPROJECT_GROUP_ID=org.apache.hadoop\nPROJECT_ARTIFACT_ID=hadoop\nMAIN_REPOSITORY=https://github.com/apache/hadoop/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  FUZZ_TARGET_DEPENDENCIES=\":hadoop-common\"\n  \n   for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "halide": {
        "name": "halide",
        "language": "c++",
        "homepage": "https://halide-lang.org/",
        "main_repo": "https://github.com/halide/Halide",
        "primary_contact": "srj@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://halide-lang.org/\"\nlanguage: c++\nprimary_contact: \"srj@google.com\"\nmain_repo: \"https://github.com/halide/Halide\"\nfile_github_issue: false\nauto_ccs:\n  - alex.reinking@gmail.com\n  - nathaniel.brough@gmail.com\n\nfuzzing_engines:\n - honggfuzz\n - libfuzzer\n\nsanitizers:\n - address\n # LLVM isn't building with Undefined sanitizer\n # - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################ \nset euox pipefail\n\nexport LDFLAGS=\"-fuse-ld=lld\"\n\ndeclare -A LLVM_SANITIZER=( [\"address\"]=\"Address\" [\"undefined\"]=\"Undefined\" [\"memory\"]=\"Memory\" )\n\nif [[ -v LLVM_SANITIZER[$SANITIZER] ]]; then\n  LLVM_SANITIZER_FLAG=\"-DLLVM_USE_SANITIZER=${LLVM_SANITIZER[$SANITIZER]}\" \nelse\n  LLVM_SANITIZER_FLAG=\"\"\nfi\n\ncmake -DCMAKE_BUILD_TYPE=Release \\\n        -DLLVM_ENABLE_PROJECTS=\"clang\" \\\n        -DLLVM_TARGETS_TO_BUILD=\"X86\" \\\n        $LLVM_SANITIZER_FLAG \\\n        -DLLVM_ENABLE_TERMINFO=OFF \\\n        -DLLVM_ENABLE_ASSERTIONS=ON \\\n        -DLLVM_ENABLE_EH=OFF \\\n        -DLLVM_ENABLE_RTTI=OFF \\\n        -DLLVM_BUILD_32_BITS=OFF \\\n        -DLLVM_INCLUDE_BENCHMARKS=OFF \\\n        -DLLVM_INCLUDE_EXAMPLES=OFF \\\n        -DLLVM_INCLUDE_TESTS=OFF \\\n        -DCMAKE_INSTALL_MODE=ABS_SYMLINK \\\n        -S $SRC/llvm-project/llvm -B $WORK/llvm-build\ncmake --build $WORK/llvm-build -j$(nproc)\ncmake --install $WORK/llvm-build --prefix $WORK/llvm-install\n\n# Cleanup space so github runners don't run out of disk space.\nrm -rf $WORK/llvm-build $SRC/llvm-project\n\nexport LLVM_DIR=$WORK/llvm-install\n\ncmake -G Ninja  -S . -B build -DCMAKE_BUILD_TYPE=Release \\\n  -DTARGET_WEBASSEMBLY=OFF \\\n  -DWITH_TUTORIALS=OFF \\\n  -DWITH_UTILS=OFF \\\n  -DWITH_PYTHON_BINDINGS=OFF \\\n  -DWITH_TESTS=ON \\\n  -DWITH_TEST_AUTO_SCHEDULE=OFF \\\n  -DWITH_TEST_CORRECTNESS=OFF \\\n  -DWITH_TEST_ERROR=OFF \\\n  -DWITH_TEST_WARNING=OFF \\\n  -DWITH_TEST_PERFORMANCE=OFF \\\n  -DWITH_TEST_RUNTIME=OFF \\\n  -DWITH_TEST_GENERATOR=OFF \\\n  -DWITH_TEST_FUZZ=ON \\\n  -DBUILD_SHARED_LIBS=OFF\n\ncmake --build ./build --target build_fuzz -j$(nproc)\n\ncp ./build/test/fuzz/fuzz_* $OUT\n"
    },
    "hamcrest": {
        "name": "hamcrest",
        "language": "jvm",
        "homepage": "http://hamcrest.org/",
        "main_repo": "https://github.com/hamcrest/JavaHamcrest.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: http://hamcrest.org/\nlanguage: jvm\nmain_repo: https://github.com/hamcrest/JavaHamcrest.git\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nALL_JARS=\"\"\n\npushd \"${SRC}/hamcrest\"\n\t./gradlew jar\n  install -v ./hamcrest/build/libs/hamcrest-*-SNAPSHOT.jar \"$OUT/hamcrest.jar\"\n\tALL_JARS=\"${ALL_JARS} hamcrest.jar\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "haproxy": {
        "name": "haproxy",
        "language": "c++",
        "homepage": "https://github.com/haproxy/haproxy",
        "main_repo": "https://github.com/haproxy/haproxy",
        "primary_contact": "adam@adalogics.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/haproxy/haproxy\"\nprimary_contact: \"adam@adalogics.com\"\nlanguage: c++\nauto_ccs:\n  - \"david@adalogics.com\"\n  - \"timwolla@googlemail.com\"\n  - \"willy@1wt.eu\"\n  - \"tribuslukas58@gmail.com\"\n  - \"christopher.faulet@gmail.com\"\n  - \"vkrasnobaeva@haproxy.com\"\n  - \"wlallemand@haproxy.com\"\nsanitizers:\n  - address\n\n# Bug reports are public by default:\nview_restrictions: none\nmain_repo: 'https://github.com/haproxy/haproxy'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nexport ORIG_CFLAGS=${CFLAGS}\ncd haproxy\n\n# Fix some things in the Makefile where there are no options available\nsed 's/COPTS += $(DEBUG) $(OPTIONS_CFLAGS) $(CFLAGS) $(ADDINC)/COPTS += $(DEBUG) $(OPTIONS_CFLAGS) $(CFLAGS) $(ADDINC) ${ORIG_CFLAGS}/g' -i Makefile\nsed 's/LDOPTS = $(TARGET_LDFLAGS) $(OPTIONS_LDFLAGS) $(ADDLIB)/LDOPTS = $(TARGET_LDFLAGS) $(OPTIONS_LDFLAGS) $(ADDLIB) ${CXXFLAGS}/g' -i Makefile\nmake TARGET=generic CC=${CC} LD=${CXX} \n\n# Make a copy of the main file since it has many global functions we need to declare\n# We dont want the main function but we need the rest of the stuff in haproxy.c\ncd /src/haproxy\nsed 's/int main(int argc/int main2(int argc/g' -i ./src/haproxy.c\nsed 's/dladdr(main,/dladdr(main2,/g' -i ./src/tools.c\nsed 's/(void*)main/(void*)main2/g' -i ./src/tools.c\n\n\nSETTINGS=\"-Iinclude -g -DUSE_POLL -DUSE_TPROXY -DCONFIG_HAPROXY_VERSION=\\\"\\\" -DCONFIG_HAPROXY_DATE=\\\"\\\"\"\n\n$CC $CFLAGS $SETTINGS -c -o ./src/haproxy.o ./src/haproxy.c\nar cr libhaproxy.a ./src/*.o\n\nfor fuzzer in hpack_decode cfg_parser; do\n  cp $SRC/fuzz_${fuzzer}.c .\n  $CC $CFLAGS $SETTINGS -c fuzz_${fuzzer}.c  -o fuzz_${fuzzer}.o\n  $CXX -g $CXXFLAGS $LIB_FUZZING_ENGINE  fuzz_${fuzzer}.o libhaproxy.a -o $OUT/fuzz_${fuzzer}\ndone\n"
    },
    "harfbuzz": {
        "name": "harfbuzz",
        "language": "c++",
        "homepage": "https://github.com/harfbuzz/harfbuzz",
        "main_repo": "https://github.com/harfbuzz/harfbuzz.git",
        "primary_contact": "harfbuzz-admin@googlegroups.com",
        "vendor_ccs": [
            "jmuizelaar@mozilla.com",
            "lsalzman@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://github.com/harfbuzz/harfbuzz\"\nlanguage: c++\nprimary_contact: \"harfbuzz-admin@googlegroups.com\"\nauto_ccs:\n  - \"behdad.esfahbod@gmail.com\"\n  - \"ebrahim@gnu.org\"\n  - \"ebraminio@gmail.com\"\n  - \"grieger@google.com\"\n  - \"rsheeter@google.com\"\n  - \"dr.khaled.hosny@gmail.com\"\n  - \"jfkthame@gmail.com\"\n  - \"qxliu@google.com\"\n  - \"ckitagawa@google.com\"\n  - \"drott@chromium.org\"\n  - \"fwang@igalia.com\"\nvendor_ccs:\n  - \"jmuizelaar@mozilla.com\"\n  - \"lsalzman@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/harfbuzz/harfbuzz.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Disable:\n# 1. UBSan vptr since target built with -fno-rtti.\nexport CFLAGS=\"$CFLAGS -fno-sanitize=vptr -DHB_NO_VISIBILITY\"\nexport CXXFLAGS=\"$CXXFLAGS -fno-sanitize=vptr -DHB_NO_VISIBILITY\"\n\n# setup\nbuild=$WORK/build\n\n# cleanup\nrm -rf $build\nmkdir -p $build\n\n# Build the library.\nmeson --default-library=static --wrap-mode=nodownload \\\n      -Dexperimental_api=true \\\n      -Dfuzzer_ldflags=\"$(echo $LIB_FUZZING_ENGINE)\" \\\n      $build \\\n  || (cat build/meson-logs/meson-log.txt && false)\n\n# Build the fuzzers.\nninja -v -j$(nproc) -C $build test/fuzzing/hb-{shape,draw,repacker,subset,set}-fuzzer\nmv $build/test/fuzzing/hb-{shape,draw,repacker,subset,set}-fuzzer $OUT/\n\n# Archive and copy to $OUT seed corpus if the build succeeded.\nmkdir all-fonts\nfor d in \\\n\ttest/shape/data/in-house/fonts \\\n\ttest/shape/data/aots/fonts \\\n\ttest/shape/data/text-rendering-tests/fonts \\\n\ttest/api/fonts \\\n\ttest/fuzzing/fonts \\\n\tperf/fonts \\\n\t; do\n\tcp $d/* all-fonts/\ndone\n\nzip $OUT/hb-shape-fuzzer_seed_corpus.zip all-fonts/*\ncp $OUT/hb-shape-fuzzer_seed_corpus.zip $OUT/hb-draw-fuzzer_seed_corpus.zip\ncp $OUT/hb-shape-fuzzer_seed_corpus.zip $OUT/hb-subset-fuzzer_seed_corpus.zip\nzip $OUT/hb-set-fuzzer_seed_corpus.zip ./test/fuzzing/sets/*\nzip $OUT/hb-repacker-fuzzer_seed_corpus.zip ./test/fuzzing/graphs/*\n\n"
    },
    "hcl": {
        "name": "hcl",
        "language": "go",
        "homepage": "https://github.com/hashicorp/hcl",
        "main_repo": "https://github.com/hashicorp/hcl",
        "primary_contact": "security@hashicorp.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/hashicorp/hcl\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nprimary_contact: \"security@hashicorp.com\"\nauto_ccs:\n  - jfinnigan@hashicorp.com\n  - kent@hashicorp.com\nmain_repo: 'https://github.com/hashicorp/hcl'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFUZZERS_PACKAGE=github.com/hashicorp/hcl/v2\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\ncompile_native_go_fuzzer $FUZZERS_PACKAGE/hclsyntax/fuzz FuzzParseTemplate FuzzParseTemplate\ncompile_native_go_fuzzer $FUZZERS_PACKAGE/hclsyntax/fuzz FuzzParseTraversalAbs FuzzParseTraversalAbs\ncompile_native_go_fuzzer $FUZZERS_PACKAGE/hclsyntax/fuzz FuzzParseExpression FuzzParseExpression\ncompile_native_go_fuzzer $FUZZERS_PACKAGE/hclsyntax/fuzz FuzzParseConfig FuzzHclSyntaxParseConfig\ncompile_native_go_fuzzer $FUZZERS_PACKAGE/json/fuzz FuzzParse FuzzParse\ncompile_native_go_fuzzer $FUZZERS_PACKAGE/hclwrite/fuzz FuzzParseConfig FuzzHclWriteParseConfig\n\nzip $OUT/FuzzParseTemplate_seed_corpus.zip $SRC/hcl/hclsyntax/fuzz/testdata/fuzz/FuzzParseTemplate/*\nzip $OUT/FuzzParseTraversalAbs_seed_corpus.zip $SRC/hcl/hclsyntax/fuzz/testdata/fuzz/FuzzParseTraversalAbs/*\nzip $OUT/FuzzParseTemplate_seed_corpus.zip $SRC/hcl/hclsyntax/fuzz/testdata/fuzz/FuzzParseTemplate/*\nzip $OUT/FuzzParseExpression_seed_corpus.zip $SRC/hcl/hclsyntax/fuzz/testdata/fuzz/FuzzParseExpression/*\nzip $OUT/FuzzParse_seed_corpus.zip $SRC/hcl/json/fuzz/testdata/fuzz/FuzzParse/*\nzip $OUT/FuzzHclWriteParseConfig_seed_corpus.zip $SRC/hcl/hclsyntax/fuzz/testdata/fuzz/FuzzParseConfig/*\n"
    },
    "hdf5": {
        "name": "hdf5",
        "language": "c",
        "homepage": "https://www.hdfgroup.org/solutions/hdf5/",
        "main_repo": "https://github.com/HDFGroup/hdf5",
        "primary_contact": "derobins@hdfgroup.org",
        "vendor_ccs": [
            "Adam@adalogics.com",
            "David@adalogics.com",
            "jhenderson@hdfgroup.org",
            "nfortne2@hdfgroup.org",
            "hyoklee@hdfgroup.org"
        ],
        "fuzzing_engines": [
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.hdfgroup.org/solutions/hdf5/\"\nmain_repo: \"https://github.com/HDFGroup/hdf5\"\nlanguage: c\nprimary_contact: \"derobins@hdfgroup.org\"\nvendor_ccs:\n  - \"Adam@adalogics.com\"\n  - \"David@adalogics.com\"\n  - \"jhenderson@hdfgroup.org\"\n  - \"nfortne2@hdfgroup.org\"\n  - \"hyoklee@hdfgroup.org\"  \nsanitizers:\n  - address\n  - undefined\n  - memory\nfuzzing_engines:\n# - afl  # Temporarily disabled after a clang-18 bump, to avoid link errors \"undefined reference to [...]\"\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport LDFLAGS=\"${CFLAGS}\"\nexport CMAKE_C_FLAGS=\"${CC} ${CFLAGS}\"\nexport CMAKE_CXX_FLAGS=\"${CXX} ${CXXFLAGS}\"\n\nmkdir build-dir\ncd build-dir\ncmake -G \"Unix Makefiles\" \\\n    -DCMAKE_BUILD_TYPE:STRING=Release \\\n    -DBUILD_SHARED_LIBS:BOOL=OFF \\\n    -DBUILD_TESTING:BOOL=OFF \\\n    -DCMAKE_VERBOSE_MAKEFILES:BOOL=ON \\\n    -DHDF5_BUILD_EXAMPLES:BOOL=OFF \\\n    -DHDF5_BUILD_TOOLS:BOOL=OFF \\\n    -DHDF5_ENABLE_SANITIZERS:BOOL=ON \\\n    -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=ON \\\n    ..\n\n# Make the build verbose for easy logging inspection\ncmake --build . --verbose --config Release -j$(nproc)\ncd $SRC/hdf5\n\n$CC $CFLAGS  -std=c99 -c \\\n  -I/src/hdf5/src -I/src/hdf5/build-dir/src -I./src/H5FDsubfiling/ \\\n  $SRC/h5_read_fuzzer.c\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE h5_read_fuzzer.o ./build-dir/bin/libhdf5.a -lz -o $OUT/h5_read_fuzzer\n\n$CC $CFLAGS  -std=c99 -c \\\n  -I/src/hdf5/src -I/src/hdf5/build-dir/src -I./src/H5FDsubfiling/ \\\n  $SRC/h5_extended_fuzzer.c\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE h5_extended_fuzzer.o ./build-dir/bin/libhdf5.a -lz -o $OUT/h5_extended_fuzzer\n\nzip -j $OUT/h5_extended_fuzzer_seed_corpus.zip $SRC/hdf5/test/testfiles/*.h5\n"
    },
    "hdrhistogram": {
        "name": "hdrhistogram",
        "language": "jvm",
        "homepage": "https://github.com/HdrHistogram/HdrHistogram.git",
        "main_repo": "https://github.com/HdrHistogram/HdrHistogram.git",
        "primary_contact": "gil@azul.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/HdrHistogram/HdrHistogram.git\"\nlanguage: jvm\nprimary_contact: \"gil@azul.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/HdrHistogram/HdrHistogram.git\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n#pathc internal error with JDK 15 java.util.ConcurrentModificationException in maven-bundle-plugin\ncat > patch.diff <<- EOM\ndiff --git a/pom.xml b/pom.xml\nindex 5a49778..35391b1 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -79,7 +79,7 @@\n             <plugin>\n                 <groupId>org.apache.felix</groupId>\n                 <artifactId>maven-bundle-plugin</artifactId>\n-                <version>4.2.1</version>\n+                <version>5.1.1</version>\n                 <extensions>true</extensions>\n             </plugin>\n             <plugin>\n@@ -97,19 +97,6 @@\n                     </archive>\n                 </configuration>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-javadoc-plugin</artifactId>\n-                <version>3.3.1</version>\n-                <executions>\n-                    <execution>\n-                        <id>attach-javadocs</id>\n-                        <goals>\n-                            <goal>jar</goal>\n-                        </goals>\n-                    </execution>\n-                </executions>\n-            </plugin>\n             <plugin>\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-source-plugin</artifactId>\nEOM\n\ngit apply patch.diff\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\ncp HdrHistogram.jar $OUT/HdrHistogram.jar\n\nALL_JARS=\"HdrHistogram.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "helm": {
        "name": "helm",
        "language": "go",
        "homepage": "https://helm.sh",
        "main_repo": "https://github.com/helm/helm",
        "primary_contact": "cncf-helm-core-maintainers@lists.cncf.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://helm.sh\"\nmain_repo: \"https://github.com/helm/helm\"\nprimary_contact: \"cncf-helm-core-maintainers@lists.cncf.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"scott@r6by.com\"\n  - \"matt.farina@gmail.com\"\n  - \"marc.khouzam@gmail.com\"\n  - \"martyintech@gmail.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# helm specifies Go 1.17 as the minimum Go version, and this causes go mod tidy\n# to fail because Go 1.17 and Go 1.16 would select different versions of\n# a dependency (github.com/mattn/go-isatty). By default, tidy acts as if\n# the -compat flag were set to the version prior to the one indicated by\n# the 'go' directive in the go.mod file.\n#\n# Since we use Go 1.19 to instrument the code, we patch the minimum version in go.mod.\nsed -i 's/go 1.17/go 1.19/g' $SRC/helm/go.mod\n\n$SRC/cncf-fuzzing/projects/helm/build.sh\n"
    },
    "hermes": {
        "name": "hermes",
        "language": "c++",
        "homepage": "https://github.com/facebook/hermes",
        "main_repo": "https://github.com/facebook/hermes.git",
        "primary_contact": "neildhar@meta.com",
        "vendor_ccs": [
            "oss-fuzz@meta.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/facebook/hermes\"\nlanguage: c++\nprimary_contact: \"neildhar@meta.com\"\nauto_ccs:\n  - \"hmf@meta.com\"\n  - \"yaohway@meta.com\"\n  - \"axxu@meta.com\"\n  - \"avp@meta.com\"\n  - \"luigiconiglio@meta.com\"\n  - \"edq@meta.com\"\nvendor_ccs:\n  - \"oss-fuzz@meta.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/facebook/hermes.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Copy seed corpora\nmv $SRC/hermes_seed_corpus.zip $OUT\n\n# Copy dictionary file\nmv $SRC/hermes.dict $OUT\n\n# build ICU for linking statically.\ncd $SRC/icu/source\n./configure --disable-shared --enable-static --disable-layoutex \\\n  --disable-tests --disable-samples --with-data-packaging=static\nmake install -j$(nproc)\n\n# Ugly ugly hack to get static linking to work for icu.\ncd lib\nls *.a | xargs -n1 ar x\nrm *.a\nar r libicu.a *.{ao,o}\nln -s $PWD/libicu.a /usr/lib/x86_64-linux-gnu/libicudata.a\nln -s $PWD/libicu.a /usr/lib/x86_64-linux-gnu/libicuuc.a\nln -s $PWD/libicu.a /usr/lib/x86_64-linux-gnu/libicui18n.a\n\nif [ \"${SANITIZER}\" = address ]\nthen\n    CONFIGURE_FLAGS=\"-DHERMES_ENABLE_ADDRESS_SANITIZER=ON\"\nelif [ \"${SANITIZER}\" = undefined ]\nthen\n    CONFIGURE_FLAGS=\"-DHERMES_ENABLE_UNDEFINED_BEHAVIOR_SANITIZER=ON\"\nelse\n    CONFIGURE_FLAGS=\"\"\nfi\n\ncmake -S \"${SRC}/hermes\" -B \"${OUT}/build\" ${CONFIGURE_FLAGS} -DHERMES_USE_STATIC_ICU=ON \\\n                 -DBUILD_SHARED_LIBS=OFF -DHERMES_BUILD_SHARED_JSI=OFF \\\n                 -DHERMES_FUZZING_FLAG=${LIB_FUZZING_ENGINE} -DHERMES_ENABLE_LIBFUZZER=ON\ncmake --build \"$OUT/build\" --target fuzzer-jsi-entry -j 4\ncp \"${OUT}/build/bin/fuzzer-jsi-entry\" \"${OUT}\"\n"
    },
    "hibernate-orm": {
        "name": "hibernate-orm",
        "language": "jvm",
        "homepage": "https://hibernate.org/",
        "main_repo": "https://github.com/hibernate/hibernate-orm",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://hibernate.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/hibernate/hibernate-orm\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nALL_JARS=\"\"\n\nHIBERNATE_ORM_VERSION=$(./gradlew properties --no-daemon --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\n\npushd \"${SRC}/hibernate-orm/hibernate-core\"\n\t# use bundled gradlew deployer\n\t../gradlew -Dorg.gradle.java.home=\"$(dirname $(dirname $(which javac)))\" shadowJar\n\n\tinstall -v target/libs/hibernate-core-$HIBERNATE_ORM_VERSION-all.jar $OUT/hibernate-core.jar\n\tALL_JARS=\"${ALL_JARS} hibernate-core.jar\"\npopd\n\n#\n# We use HSQLDB\n#\nALL_JARS=\"${ALL_JARS} hsqldb-2.7.0.jar\"\ninstall -v /src/hsqldb-2.7.0.jar ${OUT}/\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ninstall -v $SRC/*.class $OUT/\n\n# install the hibernate config files\ninstall -v $SRC/*.xml $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--disabled_hooks=\\\"com.code_intelligence.jazzer.sanitizers.SqlInjection\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "hibernate-validator": {
        "name": "hibernate-validator",
        "language": "jvm",
        "homepage": "https://github.com/hibernate/hibernate-validator",
        "main_repo": "https://github.com/hibernate/hibernate-validator.git",
        "primary_contact": "irali@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/hibernate/hibernate-validator\"\nlanguage: jvm\nprimary_contact: \"irali@google.com\"\nmain_repo: \"https://github.com/hibernate/hibernate-validator.git\"\nfile_github_issue: false\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport JAVA_HOME=\"$OUT/open-jdk-17\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\nMAVEN_ARGS=\"-Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true -Dpmd.skip=true \\\n  -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n  -DperformRelease=True\"\n$MVN clean package ${MAVEN_ARGS} org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./engine -name \"hibernate-validator-$CURRENT_VERSION.jar\" -exec mv {} $OUT/hibernate-validator.jar \\;\n\nALL_JARS=\"hibernate-validator.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac -cp $BUILD_CLASSPATH ${SRC}/*.java\ninstall ${SRC}/*.class ${OUT}/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-17/\\\" \\\nLD_LIBRARY_PATH=\\\"/usr/lib/jvm/java-17-openjdk-amd64/lib/server/\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "highwayhash": {
        "name": "highwayhash",
        "language": "c++",
        "homepage": "https://github.com/google/highwayhash",
        "main_repo": "https://github.com/google/highwayhash",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/highwayhash\"\nlanguage: c++\nmain_repo: \"https://github.com/google/highwayhash\"\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\ncmake ../\nmake\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -I/src/highwayhash \\\n  CMakeFiles/nanobenchmark.dir/highwayhash/instruction_sets.cc.o \\\n  CMakeFiles/nanobenchmark.dir/highwayhash/os_specific.cc.o \\\n    ../highwayhash/highwayhash_fuzzer.cc \\\n    libhighwayhash.a -lpthread \\\n    -o $OUT/highwayhash_fuzzer\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -I/src/highwayhash \\\n    ../highwayhash/sip_hash_fuzzer.cc \\\n    libhighwayhash.a -lpthread \\\n    -o $OUT/sip_hash_fuzzer\n"
    },
    "hikaricp": {
        "name": "hikaricp",
        "language": "jvm",
        "homepage": "https://github.com/brettwooldridge/HikariCP",
        "main_repo": "https://github.com/brettwooldridge/HikariCP.git",
        "primary_contact": "irali@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/brettwooldridge/HikariCP\"\nlanguage: jvm\nprimary_contact: \"irali@google.com\"\nmain_repo: \"https://github.com/brettwooldridge/HikariCP.git\"\nfile_github_issue: false\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport JAVA_HOME=\"$OUT/open-jdk-17\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\nMAVEN_ARGS=\"-Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true -Dpmd.skip=true \\\n  -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n  -DperformRelease=True\"\n$MVN clean package $MAVEN_ARGS org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./ -name \"HikariCP-$CURRENT_VERSION.jar\" -exec mv {} $OUT/hikaricp.jar \\;\n\nALL_JARS=\"hikaricp.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-17/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-17/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone"
    },
    "hiredis-py": {
        "name": "hiredis-py",
        "language": "python",
        "homepage": "https://github.com/redis/hiredis-py",
        "main_repo": "https://github.com/redis/hiredis-py",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/redis/hiredis-py\nlanguage: python\nmain_repo: https://github.com/redis/hiredis-py\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Compiles native code with sanitizers due to OSS-Fuzz flags\npython3 ./setup.py install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "hiredis": {
        "name": "hiredis",
        "language": "c",
        "homepage": "https://github.com/redis/hiredis",
        "main_repo": "https://github.com/redis/hiredis",
        "primary_contact": "michael.grunder@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/redis/hiredis\"\nprimary_contact: \"michael.grunder@gmail.com\"\nlanguage: c\nauto_ccs:\n  - \"Adam@adalogics.com\"\nmain_repo: \"https://github.com/redis/hiredis\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmake USE_SSL=0 static\n\n$CC $CFLAGS -std=c99 -pedantic -c -O3 -fPIC -I./ \\\n\tfuzzing/format_command_fuzzer.c -o format_command_fuzzer.o\n\n$CXX $CXXFLAGS -O3 -fPIC $LIB_FUZZING_ENGINE format_command_fuzzer.o \\\n\t-o $OUT/format_command_fuzzer libhiredis.a\n"
    },
    "hive": {
        "name": "hive",
        "language": "jvm",
        "homepage": "https://hive.apache.org/",
        "main_repo": "https://github.com/apache/hive/tree/master/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://hive.apache.org/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/apache/hive/tree/master/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=hive\nPROJECT_GROUP_ID=org.apache.hive\nPROJECT_ARTIFACT_ID=hive\nMAIN_REPOSITORY=https://github.com/apache/hive/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -Dmaven.javadoc.skip=true -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  FUZZ_TARGET_DEPENDENCIES=\":hive-common :hive-serde\"\n  \n  for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install -pl '!:metastore-tools-common,!:hive-metastore-benchmarks' $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "hoextdown": {
        "name": "hoextdown",
        "language": "c++",
        "homepage": "https://github.com/kjdev/hoextdown",
        "main_repo": "https://github.com/kjdev/hoextdown.git",
        "primary_contact": "kjclev@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/kjdev/hoextdown\"\nlanguage: c++\nprimary_contact: \"kjclev@gmail.com\"\nmain_repo: 'https://github.com/kjdev/hoextdown.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# temporary hack to make the build honor CFLAGS. Needs proper fix upstream.\nsed -i 's/^CFLAGS.*//g' Makefile\n# build project\nmake -j$(nproc) libhoedown.a\n\n# build fuzzers\n$CC $CFLAGS -c -std=c99 -Isrc \\\n    \"$SRC/hoextdown/test/hoedown_fuzzer.c\" -o $WORK/hoedown_fuzzer.o\n$CXX $CXXFLAGS -std=c++11 -Isrc \\\n    $WORK/hoedown_fuzzer.o -o $OUT/hoedown_fuzzer \\\n    $LIB_FUZZING_ENGINE \"$SRC/hoextdown/libhoedown.a\"\n\ncp $SRC/*.options $OUT/\ncp $SRC/*.dict $OUT/\n\n# build corpus\nmkdir -p corpus\nfind $SRC/hoextdown/test -type f -name '*.text' | while read in_file\ndo\n  # Genreate unique name for each input...\n  out_file=$(sha1sum \"$in_file\" | cut -c 1-32)\n  cat \"$in_file\" >> \"corpus/$out_file\"\ndone\n\nzip -j $OUT/hoextdown_fuzzer_corpus.zip corpus/*\n"
    },
    "hostap": {
        "name": "hostap",
        "language": "c++",
        "homepage": "https://w1.fi/cvs.html",
        "main_repo": "git://w1.fi/srv/git/hostap.git",
        "primary_contact": "j@w1.fi",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://w1.fi/cvs.html\"\nlanguage: c++\nprimary_contact: \"j@w1.fi\"\nauto_ccs:\n   - \"elver@google.com\"\nfuzzing_engines:\n  - afl\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'git://w1.fi/srv/git/hostap.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd 'tests'\n\nexport LDO=$CXX\nexport LDFLAGS=\"$CXXFLAGS $LIB_FUZZING_ENGINE\"\nexport CFLAGS=\"$CFLAGS -MMD\"\n\nif [[ \"$ARCHITECTURE\" == \"i386\" ]]; then\n\t# Force static link\n\trm -v /lib/i386-linux-gnu/libcrypto.so* || :\nfi\n\n# Specific to hostap's rules.include: set empty, as we directly set required\n# sanitizer flags in CFLAGS and LDFLAGS (above).\nexport FUZZ_FLAGS=\n\nfor target in fuzzing/*; do\n  [[ -d \"$target\" ]] || continue\n\n  (\n    cd \"$target\"\n    make clean\n\n    if [[ \"$target\" == \"fuzzing/tls-server\" ]]; then\n      export CFLAGS=\"$CFLAGS -DCERTDIR='\\\"hwsim/auth_serv/\\\"'\"\n    fi\n\n    make -j$(nproc) V=1 LIBFUZZER=y\n    mv -v \"${target##*/}\" \"${OUT}/\"\n\n    if [[ -d 'corpus' ]]; then\n      (cd 'corpus' && zip \"${OUT}/${target##*/}_seed_corpus.zip\" *)\n    fi\n  )\ndone\n\n# Copy required data.\ncp -a \"hwsim\" \"${OUT}/\"\n"
    },
    "hpn-ssh": {
        "name": "hpn-ssh",
        "language": "c++",
        "homepage": "https://www.psc.edu/home-hpn-ssh",
        "main_repo": "https://github.com/rapier1/hpn-ssh.git",
        "primary_contact": "rapier1@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz",
            "centipede"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.psc.edu/home-hpn-ssh\"\nlanguage: c++\nprimary_contact: \"rapier1@gmail.com\"\nauto_ccs:\n  - \"rapier@psc.edu\"\n  - \"mwd@psc.edu\"\nmain_repo: 'https://github.com/rapier1/hpn-ssh.git'\nfuzzing_engines:\n  - afl\n  - libfuzzer\n  - honggfuzz\n  - centipede",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#git pull --all\n#git checkout oss_fuzz_tests\n\n# Enable null cipher\nsed -i 's/#define CFLAG_INTERNAL.*/#define CFLAG_INTERNAL 0/' cipher.c\n\n# Turn off agent unlock password failure delays\nsed -i 's|\\(usleep.*\\)|// \\1|' ssh-agent.c\n\n# Build project\nautoreconf\nenv\nif ! env CFLAGS=\"\" ./configure \\\n    --without-hardening \\\n    --without-zlib-version-check \\\n    --with-cflags=\"-DWITH_XMSS=1\" \\\n    --with-cflags-after=\"$CFLAGS\" \\\n    --with-ldflags-after=\"-g $CFLAGS\" ; then\n\techo \"------ config.log:\" 1>&2\n\tcat config.log 1>&2\n\techo \"ERROR: configure failed\" 1>&2\n\texit 1\nfi\nmake -j$(nproc) all\n\n# Build fuzzers\nEXTRA_CFLAGS=\"-DCIPHER_NONE_AVAIL=1\"\nSTATIC_CRYPTO=\"-Wl,-Bstatic -lcrypto -Wl,-Bdynamic\"\n\nSK_NULL=ssh-sk-null.o\nSK_DUMMY=sk-dummy.o\n\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c \\\n\tregress/misc/fuzz-harness/ssh-sk-null.cc -o ssh-sk-null.o\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c \\\n\t-DSK_DUMMY_INTEGRATE=1 regress/misc/sk-dummy/sk-dummy.c -o sk-dummy.o\n\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/pubkey_fuzz.cc -o $OUT/pubkey_fuzz \\\n\t-lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO $LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/privkey_fuzz.cc -o $OUT/privkey_fuzz \\\n\t-lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO $LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/sig_fuzz.cc -o $OUT/sig_fuzz \\\n\t-lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO $LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/authopt_fuzz.cc -o $OUT/authopt_fuzz \\\n\tauth-options.o -lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/sshsig_fuzz.cc -o $OUT/sshsig_fuzz \\\n\tsshsig.o -lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/sshsigopt_fuzz.cc -o $OUT/sshsigopt_fuzz \\\n\tsshsig.o -lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/kex_fuzz.cc -o $OUT/kex_fuzz \\\n\t-lssh -lopenbsd-compat -lz $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c \\\n\tregress/misc/fuzz-harness/agent_fuzz_helper.c -o agent_fuzz_helper.o\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c -DENABLE_SK_INTERNAL=1 ssh-sk.c -o ssh-sk.o\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/agent_fuzz.cc -o $OUT/agent_fuzz \\\n\t$SK_DUMMY agent_fuzz_helper.o ssh-sk.o -lssh -lopenbsd-compat -lz \\\n\t$STATIC_CRYPTO $LIB_FUZZING_ENGINE\n\n# Prepare seed corpora\nCASES=\"$SRC/openssh-fuzz-cases\"\n(set -e ; cd ${CASES}/key ; zip -r $OUT/pubkey_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/privkey ; zip -r $OUT/privkey_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/sig ; zip -r $OUT/sig_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/authopt ; zip -r $OUT/authopt_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/sshsig ; zip -r $OUT/sshsig_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/sshsigopt ; zip -r $OUT/sshsigopt_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/kex ; zip -r $OUT/kex_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/agent ; zip -r $OUT/agent_fuzz_seed_corpus.zip .)\n"
    },
    "hsqldb": {
        "name": "hsqldb",
        "language": "jvm",
        "homepage": "www.hsqldb.org",
        "main_repo": "https://svn.code.sf.net/p/hsqldb/svn/",
        "primary_contact": "ft@cluedup.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"www.hsqldb.org\"\nlanguage: jvm\nmain_repo: \"https://svn.code.sf.net/p/hsqldb/svn/\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nprimary_contact: \"ft@cluedup.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\" \n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd ${SRC}/hsqldb-svn/build\n$ANT -Dbuild.debug=true hsqldb\ncp ../lib/hsqldb.jar $OUT/\npopd\n\nALL_JARS=\"hsqldb.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n\n# generate jazzer start script\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  #javac -cp $SRC:$BUILD_CLASSPATH $fuzzer\n  #cp $SRC/$fuzzer_basename.class $OUT/\n  #for member_class in $(find $SRC -maxdepth 1 -name \"$fuzzer_basename\\$*.class\"); do\n  #  cp $member_class $OUT/\n  #done\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--disabled_hooks=\\\"com.code_intelligence.jazzer.sanitizers.SqlInjection\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "html2text": {
        "name": "html2text",
        "language": "python",
        "homepage": "https://github.com/Alir3z4/html2text",
        "main_repo": "https://github.com/Alir3z4/html2text",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/Alir3z4/html2text\nmain_repo: https://github.com/Alir3z4/html2text\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "html5lib-python": {
        "name": "html5lib-python",
        "language": "python",
        "homepage": "https://github.com/html5lib/html5lib-python",
        "main_repo": "https://github.com/html5lib/html5lib-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/html5lib/html5lib-python\nmain_repo: https://github.com/html5lib/html5lib-python\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "htmlunit": {
        "name": "htmlunit",
        "language": "jvm",
        "homepage": "https://htmlunit.sourceforge.io",
        "main_repo": "https://github.com/HtmlUnit/htmlunit.git",
        "primary_contact": "ronaldbrill@googlemail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://htmlunit.sourceforge.io\"\nlanguage: jvm\nmain_repo: \"https://github.com/HtmlUnit/htmlunit.git\"\nprimary_contact: \"ronaldbrill@googlemail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-DskipTests -Dmaven.javadoc.skip -Denforcer.skip=true -Dgpg.skip\"\n\nALL_JARS=\"\"\n#LIBRARY_NAME=\"htmlunit\" #set by Dockerfile\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} ${MVN_FLAGS} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}\"\n\t${MVN} ${MVN_FLAGS} install\n\tCURRENT_VERSION=$(${MVN} ${MVN_FLAGS} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}-fuzzer\"\n\t${MVN} ${MVN_FLAGS} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\"\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "htslib": {
        "name": "htslib",
        "language": "c++",
        "homepage": "https://www.htslib.org/",
        "main_repo": "https://github.com/samtools/htslib.git",
        "primary_contact": "rmd@sanger.ac.uk",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.htslib.org/\"\nlanguage: c++\nprimary_contact: \"rmd@sanger.ac.uk\"\nauto_ccs:\n        - \"aw7@sanger.ac.uk\"\n        - \"jkb@sanger.ac.uk\"\n        - \"vo2@sanger.ac.uk\"\nmain_repo: 'https://github.com/samtools/htslib.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nautoconf\nautoheader\n./configure\nmake -j$(nproc) libhts.a test/fuzz/hts_open_fuzzer.o\n\n# build fuzzers\n$CXX $CXXFLAGS -o \"$OUT/hts_open_fuzzer\" test/fuzz/hts_open_fuzzer.o $LIB_FUZZING_ENGINE libhts.a -lz -lbz2 -llzma -lcurl -lcrypto -lpthread\n"
    },
    "http-parser": {
        "name": "http-parser",
        "language": "c++",
        "homepage": "https://github.com/nodejs/http-parser",
        "main_repo": "https://github.com/nodejs/http-parser",
        "primary_contact": "info@bnoordhuis.nl",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/nodejs/http-parser\"\nprimary_contact: \"info@bnoordhuis.nl\"\nlanguage: c++\nauto_ccs:\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/nodejs/http-parser'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd http-parser\nmake http_parser.o\n\n$CC $CFLAGS -I. -DHTTP_PARSER_STRICT=0  -Wall -Wextra -Werror -c fuzzers/fuzz_parser.c -o fuzz_parser.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -Wall -Wextra -Werror http_parser.o fuzz_parser.o -o $OUT/fuzz_parser\n\n$CC $CFLAGS -I. -DHTTP_PARSER_STRICT=0  -Wall -Wextra -Werror -c fuzzers/fuzz_url.c -o fuzz_url.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -Wall -Wextra -Werror http_parser.o fuzz_url.o -o $OUT/fuzz_url \n"
    },
    "http-pattern-matcher": {
        "name": "http-pattern-matcher",
        "language": "c++",
        "homepage": "https://github.com/google/http_pattern_matcher",
        "main_repo": "https://github.com/google/http_pattern_matcher.git",
        "primary_contact": "nareddyt@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/google/http_pattern_matcher\"\nmain_repo: \"https://github.com/google/http_pattern_matcher.git\"\nlanguage: c++\nprimary_contact: \"nareddyt@google.com\"\nauto_ccs:\n- \"yangshuo@google.com\"\n- \"taoxuy@google.com\"\n- \"qiwzhang@google.com\"\n- \"justinmp@google.com\"\nsanitizers:\n- address\n- undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n# - memory\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# This project uses bazel rules_fuzzing.\n\nbazel_build_fuzz_tests\n"
    },
    "httparse": {
        "name": "httparse",
        "language": "rust",
        "homepage": "https://github.com/seanmonstar/httparse",
        "main_repo": "https://github.com/seanmonstar/httparse",
        "primary_contact": "seanmonstar@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/seanmonstar/httparse\"\nmain_repo: \"https://github.com/seanmonstar/httparse\"\nprimary_contact: \"seanmonstar@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/httparse\ncargo fuzz build -O\ncp fuzz/target/x86_64-unknown-linux-gnu/release/parse_request $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/parse_headers $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/parse_chunk_size $OUT/\n"
    },
    "httpcomponents-client": {
        "name": "httpcomponents-client",
        "language": "jvm",
        "homepage": "https://github.com/apache/httpcomponents-client",
        "main_repo": "https://github.com/apache/httpcomponents-client.git",
        "primary_contact": null,
        "vendor_ccs": [
            "patrice.salathe@code-intelligence.com",
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "yoshi.weber@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/apache/httpcomponents-client\nlanguage: jvm\nmain_repo: https://github.com/apache/httpcomponents-client.git\nsanitizers:\n- address\nvendor_ccs:\n- patrice.salathe@code-intelligence.com\n- wagner@code-intelligence.com\n- yakdan@code-intelligence.com\n- glendowne@code-intelligence.com\n- hlin@code-intelligence.com\n- bug-disclosure@code-intelligence.com\n- yoshi.weber@gmail.com",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"httpclient5/target/httpclient5-$CURRENT_VERSION.jar\" \"$OUT/httpclient5.jar\"\n\n$MVN package $MAVEN_ARGS -f \"httpcomponents-core/pom.xml\"\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout -f httpcomponents-core/pom.xml)\ncp \"httpcomponents-core/httpcore5/target/httpcore5-$CURRENT_VERSION.jar\" \"$OUT/httpcore5.jar\"\ncp \"httpcomponents-core/httpcore5-h2/target/httpcore5-h2-$CURRENT_VERSION.jar\" \"$OUT/httpcore5-h2.jar\"\n\ncd slf4j\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"slf4j-api/target/slf4j-api-$CURRENT_VERSION.jar\" \"$OUT/slf4j.jar\"\ncd $SRC\n\nALL_JARS=\"httpclient5.jar httpcore5.jar slf4j.jar httpcore5-h2.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "httpcomponents-core": {
        "name": "httpcomponents-core",
        "language": "jvm",
        "homepage": "https://github.com/apache/httpcomponents-core",
        "main_repo": "https://github.com/apache/httpcomponents-core.git",
        "primary_contact": null,
        "vendor_ccs": [
            "patrice.salathe@code-intelligence.com",
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/apache/httpcomponents-core\nlanguage: jvm\nmain_repo: https://github.com/apache/httpcomponents-core.git\nsanitizers:\n- address\nvendor_ccs:\n- patrice.salathe@code-intelligence.com\n- wagner@code-intelligence.com\n- yakdan@code-intelligence.com\n- glendowne@code-intelligence.com\n- hlin@code-intelligence.com\n- bug-disclosure@code-intelligence.com",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\n\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"httpcore5/target/httpcore5-$CURRENT_VERSION.jar\" \"$OUT/httpcore5.jar\"\n\nALL_JARS=\"httpcore5.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "httpcore": {
        "name": "httpcore",
        "language": "python",
        "homepage": "https://github.com/encode/httpcore",
        "main_repo": "https://github.com/encode/httpcore",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/encode/httpcore\nmain_repo: https://github.com/encode/httpcore\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "httplib2": {
        "name": "httplib2",
        "language": "python",
        "homepage": "https://github.com/httplib2/httplib2",
        "main_repo": "https://github.com/httplib2/httplib2",
        "primary_contact": "temotor@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/httplib2/httplib2\"\nlanguage: python\nprimary_contact: \"temotor@gmail.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: \"https://github.com/httplib2/httplib2\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install six pytest cryptography\npython3 setup.py install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find ./tests/ -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "httpretty": {
        "name": "httpretty",
        "language": "python",
        "homepage": "https://github.com/gabrielfalcao/httpretty",
        "main_repo": "https://github.com/gabrielfalcao/httpretty",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/gabrielfalcao/httpretty\nmain_repo: https://github.com/gabrielfalcao/httpretty\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "httpx": {
        "name": "httpx",
        "language": "python",
        "homepage": "https://github.com/encode/httpx",
        "main_repo": "https://github.com/encode/httpx",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/encode/httpx\nmain_repo: https://github.com/encode/httpx\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "hugo": {
        "name": "hugo",
        "language": "go",
        "homepage": "https://github.com/gohugoio/hugo",
        "main_repo": "https://github.com/gohugoio/hugo",
        "primary_contact": "bjorn.erik.pedersen@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/gohugoio/hugo\"\nprimary_contact: \"bjorn.erik.pedersen@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/gohugoio/hugo'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/fuzz.go $SRC/hugo/tpl/transform/\n\ncompile_go_fuzzer github.com/gohugoio/hugo/tpl/transform FuzzMarkdownify fuzzmarkdownify\n"
    },
    "hunspell": {
        "name": "hunspell",
        "language": "c++",
        "homepage": "https://hunspell.github.io/",
        "main_repo": "https://github.com/hunspell/hunspell.git",
        "primary_contact": "caolanm@gmail.com",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://hunspell.github.io/\"\nlanguage: c++\nprimary_contact: \"caolanm@gmail.com\"\nvendor_ccs:\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - i386\n  - x86_64\nmain_repo: 'https://github.com/hunspell/hunspell.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/hunspell/oss-fuzz-build.sh\n"
    },
    "hwloc": {
        "name": "hwloc",
        "language": "c",
        "homepage": "https://github.com/open-mpi/hwloc",
        "main_repo": "https://github.com/open-mpi/hwloc",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/open-mpi/hwloc\"\nmain_repo: \"https://github.com/open-mpi/hwloc\"\nlanguage: c\nvendor_ccs:\n- david@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n./autogen.sh\n./configure --enable-static --disable-shared LDFLAGS=\"-static\" CFLAGS=\"${CFLAGS}\" LDFLAGS=\"${CFLAGS}\"\nmake LDFLAGS=-all-static\n\nfor f in $SRC/*_fuzzer.c; do\n  fuzzer=$(basename \"$f\" _fuzzer.c)\n  $CC $CFLAGS -I$SRC/hwloc/include -c $SRC/${fuzzer}_fuzzer.c \\\n    -o $SRC/${fuzzer}_fuzzer.o\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE $SRC/${fuzzer}_fuzzer.o \\\n    -o $OUT/${fuzzer}_fuzzer \\\n    -Wl,--start-group ./hwloc/.libs/libhwloc.a ./netloc/.libs/libnetloc.a \\\n    ./utils/hwloc/.libs/libutils_common.a -Wl,--end-group\ndone\n\ncp $SRC/*.options $OUT/\n"
    },
    "hyperium": {
        "name": "hyperium",
        "language": "rust",
        "homepage": "https://github.com/hyperium/",
        "main_repo": "https://github.com/hyperium/",
        "primary_contact": "sean.monstar@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/hyperium/\"\nmain_repo: \"https://github.com/hyperium/\"\nprimary_contact: \"sean.monstar@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"ver@buoyant.io\"\n  - \"eliza@buoyant.io\"\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/http\ncargo fuzz build -O\ncp ./fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_http $OUT/\n\ncd $SRC/h2\ncargo fuzz build -O\ncp ./fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_client $OUT/\ncp ./fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_e2e $OUT/\ncp ./fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_hpack $OUT/\n\nfor fuzz_name in fuzz_e2e fuzz_client; do\n\techo \"[libfuzzer]\" > $OUT/${fuzz_name}.options\n\techo \"detect_leaks=0\" >> $OUT/${fuzz_name}.options\ndone\n"
    },
    "ibmswtpm2": {
        "name": "ibmswtpm2",
        "language": "c++",
        "homepage": "https://sourceforge.net/projects/ibmswtpm2/",
        "main_repo": "https://git.code.sf.net/p/ibmswtpm2/tpm2",
        "primary_contact": "kgoldman@us.ibm.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://sourceforge.net/projects/ibmswtpm2/\nlanguage: c++\nprimary_contact: kgoldman@us.ibm.com\nmain_repo: https://git.code.sf.net/p/ibmswtpm2/tpm2\nauto_ccs:\n  - \"john.s.andersen@intel.com\"\n  - \"william.c.roberts@intel.com\"\n  - \"david.wooten@ieee.org\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nmake -j$(nproc) fuzz_tpm_server\ncp fuzz_tpm_server $OUT/fuzz_tpm_server\n"
    },
    "ical4j": {
        "name": "ical4j",
        "language": "jvm",
        "homepage": "https://github.com/ical4j/ical4j",
        "main_repo": "https://github.com/ical4j/ical4j.git",
        "primary_contact": "fortuna@micronode.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/ical4j/ical4j\"\nlanguage: jvm\nprimary_contact: \"fortuna@micronode.com\"\nsanitizers:\n  - address\nmain_repo: 'https://github.com/ical4j/ical4j.git'\n",
        "build_sh": null
    },
    "icalendar": {
        "name": "icalendar",
        "language": "python",
        "homepage": "https://icalendar.readthedocs.io/en/latest/",
        "main_repo": "https://github.com/collective/icalendar.git",
        "primary_contact": "johannes@raggam.co.at",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://icalendar.readthedocs.io/en/latest/\"\nlanguage: python\nprimary_contact: \"johannes@raggam.co.at\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\n  - \"niccokunzmann@googlemail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\n  - undefined\nmain_repo: \"https://github.com/collective/icalendar.git\"\n",
        "build_sh": null
    },
    "icu": {
        "name": "icu",
        "language": "c++",
        "homepage": "https://icu.unicode.org",
        "main_repo": "https://github.com/unicode-org/icu.git",
        "primary_contact": "ftang@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "afl"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://icu.unicode.org\"\nlanguage: c++\nprimary_contact: \"ftang@google.com\"\nauto_ccs:\n - icu-security@unicode.org\n - andy.heninger@gmail.com\n - markus.icu@gmail.com\n - jefgen.msft@gmail.com\n - shane@unicode.org\n - srl295@gmail.com\n - ftang@google.com\n - roubert@google.com\n - elango@unicode.org\n - richard_gillam@apple.com\nsanitizers:\n - address\n - undefined \n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n  - afl\n  # - centipede disabled due to https://github.com/google/oss-fuzz/pull/12365 clang 18 update\n\nmain_repo: 'https://github.com/unicode-org/icu.git'\n",
        "build_sh": "#!/bin/bash -eux\n#\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# need \"-p\" as otherwise centipede fails\nmkdir -p $WORK/icu\ncd $WORK/icu\n\n# TODO: icu build failes without -DU_USE_STRTOD_L=0\nDEFINES=\"-DU_CHARSET_IS_UTF8=1 -DU_USING_ICU_NAMESPACE=0 -DU_ENABLE_DYLOAD=0 -DU_USE_STRTOD_L=0\"\nCFLAGS=\"$CFLAGS $DEFINES\"\nCXXFLAGS=\"$CXXFLAGS $DEFINES\"\n\nCFLAGS=$CFLAGS CXXFLAGS=$CXXFLAGS CC=$CC CXX=$CXX \\\n  /bin/bash $SRC/icu/icu4c/source/runConfigureICU Linux \\\n   --with-library-bits=64 --with-data-packaging=static --enable-static --disable-shared\n\nexport ASAN_OPTIONS=\"detect_leaks=0\"\nexport UBSAN_OPTIONS=\"detect_leaks=0,enum=0\"\n\nmake -j$(nproc)\n\n# Pick up additional flags (-std=...) added by runConfigureICU.\nCXXFLAGS=\"$CXXFLAGS $(config/icu-config --noverify --cxxflags)\"\n\n$CXX $CXXFLAGS -c $SRC/icu/icu4c/source/test/fuzzer/locale_util.cpp \\\n     -I$SRC/icu/icu4c/source/common \\\n     -I$SRC/icu4c/source/test/fuzzer\n\nFUZZER_PATH=$SRC/icu/icu4c/source/test/fuzzer\n# Assumes that all fuzzers files end with'_fuzzer.cpp'.\nFUZZERS=$FUZZER_PATH/*_fuzzer.cpp\n\nfor fuzzer in $FUZZERS; do\n  file=${fuzzer:${#FUZZER_PATH}+1}\n  $CXX $CXXFLAGS \\\n    $fuzzer -o $OUT/${file/.cpp/} locale_util.o \\\n    -I$SRC/icu/icu4c/source/common -I$SRC/icu/icu4c/source/i18n -L$WORK/icu/lib \\\n    $LIB_FUZZING_ENGINE -licui18n -licuuc -licutu -licudata\ndone\n\n# Assumes that all seed files end with '*_fuzzer_seed_corpus.txt'.\nCORPUS=$SRC/icu/icu4c/source/test/fuzzer/*_fuzzer_seed_corpus.txt\nfor corpus in $CORPUS; do\n    zipfile=${corpus:${#FUZZER_PATH}+1}\n    zip $OUT/${zipfile/.txt/.zip} $corpus\ndone\n\ncp $SRC/icu/icu4c/source/test/fuzzer/*.dict  $OUT/\n"
    },
    "idna": {
        "name": "idna",
        "language": "python",
        "homepage": "https://github.com/kjd/idna",
        "main_repo": "https://github.com/kjd/idna",
        "primary_contact": "kim@cynosure.com.au",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/kjd/idna\nlanguage: python\nmain_repo: https://github.com/kjd/idna\nprimary_contact: kim@cynosure.com.au\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "igraph": {
        "name": "igraph",
        "language": "c",
        "homepage": "https://github.com/igraph/igraph",
        "main_repo": "https://github.com/igraph/igraph",
        "primary_contact": "szhorvat@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer",
            "centipede"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/igraph/igraph\"\nmain_repo: \"https://github.com/igraph/igraph\"\nlanguage: c\nprimary_contact: \"szhorvat@gmail.com\"\ncoverage_extra_args: -ignore-filename-regex=.*libxml2-2.*/.* -ignore-filename-regex=.*/vendor/.*\nauto_ccs:\n  - \"Adam@adalogics.com\"\n  - \"ntamas@gmail.com\"\n  - \"vtraag@gmail.com\"\n  - \"igraphossfuzz@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\n  - i386\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n  - centipede\n",
        "build_sh": null
    },
    "ijson": {
        "name": "ijson",
        "language": "python",
        "homepage": "https://github.com/ICRAR/ijson",
        "main_repo": "https://github.com/ICRAR/ijson",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/ICRAR/ijson\nlanguage: python\nmain_repo: https://github.com/ICRAR/ijson\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" == \"introspector\" ]; then\n    export CFLAGS=\"\"\n    export CXXFLAGS=\"\"\nfi\n\ncd $SRC/yajl/\n./configure\nmake install\n\ncd $SRC/ijson\npython3 ./setup.py install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data /usr/local/lib/libyajl.so:. --add-data /usr/local/lib/libyajl.so.2:.\ndone\n"
    },
    "image-png": {
        "name": "image-png",
        "language": "rust",
        "homepage": "https://github.com/image-rs/image-png",
        "main_repo": "https://github.com/image-rs/image-png",
        "primary_contact": "andreas.molzer@gmx.de",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/image-rs/image-png\"\nmain_repo: \"https://github.com/image-rs/image-png\"\nprimary_contact: \"andreas.molzer@gmx.de\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"fintelia@gmail.com\"\n  - \"david@adalogics.com\"\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC\ncd image-png\ncargo fuzz build -O\n\ncp fuzz/target/x86_64-unknown-linux-gnu/release/decode $OUT/\nfind . -type f -name \"*.png\" -exec zip -r -j \"$OUT/decode_seed_corpus.zip\" {} +\n\ncp fuzz/target/x86_64-unknown-linux-gnu/release/buf_independent $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/roundtrip $OUT/\n\n"
    },
    "image-rs": {
        "name": "image-rs",
        "language": "rust",
        "homepage": "https://docs.rs/image/0.23.14/image",
        "main_repo": "https://github.com/image-rs/image",
        "primary_contact": "andreas.molzer@gmx.de",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://docs.rs/image/0.23.14/image\"\nmain_repo: \"https://github.com/image-rs/image\"\nprimary_contact: \"andreas.molzer@gmx.de\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"fintelia@gmail.com\"\n  - \"p.antoine@catenacyber.fr\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# ---- Build fuzz corpuses ---- #\nfunction zip_files() {\n   # Get the arguments\n   directory=$1\n   extension=$2\n   zipfile=$3\n\n   # Find all files with the given extension in the given directory and its subdirectories\n   # and add them to the zip file\n   find \"$directory\" -type f -name \"*.$extension\" -exec zip -r -j \"$zipfile\" {} +\n}\n\nFORMATS=(\"bmp\" \"exr\" \"gif\" \"hdr\" \"ico\" \"jpeg\" \"png\" \"pnm\" \"tga\" \"tiff\" \"webp\")\n\nfor FORMAT in \"${FORMATS[@]}\"\ndo\n     zip_files . $FORMAT \"$OUT/fuzzer_script_${FORMAT}_seed_corpus.zip\"\ndone\n\n# ---- Build fuzz harnesses ----\n\ncargo fuzz build -O\ncargo fuzz list | while read i; do\n    cp fuzz/target/x86_64-unknown-linux-gnu/release/$i $OUT/\ndone\n"
    },
    "imageio": {
        "name": "imageio",
        "language": "python",
        "homepage": "https://imageio.github.io",
        "main_repo": "https://github.com/imageio/imageio",
        "primary_contact": "almar.klein@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://imageio.github.io\"\nlanguage: python\nprimary_contact: \"almar.klein@gmail.com\"\nauto_ccs:\n  - \"sebastian@wallkoetter.net\"\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/imageio/imageio'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 setup.py build install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find . -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "imagemagick": {
        "name": "imagemagick",
        "language": "c++",
        "homepage": "https://www.imagemagick.org",
        "main_repo": "https://github.com/imagemagick/imagemagick",
        "primary_contact": "dirk@lemstra.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.imagemagick.org\"\nlanguage: c++\nprimary_contact: \"dirk@lemstra.org\"\nauto_ccs:\n  - paul.l.kehrer@gmail.com\n  - alex.gaynor@gmail.com\n  - urban.warrior.fuzz@gmail.com\n  - jon.sneyers@gmail.com\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/imagemagick/imagemagick'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.  #\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n. oss-fuzz/build.sh\n"
    },
    "immer": {
        "name": "immer",
        "language": "c++",
        "homepage": "https://sinusoid.es/immer",
        "main_repo": "https://github.com/arximboldi/immer.git",
        "primary_contact": "juanpe@sinusoid.al",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://sinusoid.es/immer\"\nlanguage: c++\nprimary_contact: \"juanpe@sinusoid.al\"\nmain_repo: 'https://github.com/arximboldi/immer.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nmkdir build\ncd build\ncmake .. \\\n      -DBOEHM_GC_INCLUDE_DIR=/usr/include \\\n      -DBOEHM_GC_LIBRARIES=/usr/lib/x86_64-linux-gnu/libgc.a \\\n      -Dimmer_BUILD_TESTS=OFF\nmake -j$(nproc) fuzzers\n\nfor fuzzer in extra/fuzzer/*; do\n    if [[ -f $fuzzer && -x $fuzzer ]]; then\n        cp $fuzzer $OUT\n    fi\ndone\n"
    },
    "importlib_metadata": {
        "name": "importlib_metadata",
        "language": "python",
        "homepage": "https://github.com/python/importlib_metadata",
        "main_repo": "https://github.com/python/importlib_metadata",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/python/importlib_metadata\nlanguage: python\nmain_repo: https://github.com/python/importlib_metadata\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "inchi": {
        "name": "inchi",
        "language": "c",
        "homepage": "https://www.inchi-trust.org/",
        "main_repo": "https://github.com/IUPAC-InChI/InChI",
        "primary_contact": "member-info@inchi-trust.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.inchi-trust.org/\"\nmain_repo: \"https://github.com/IUPAC-InChI/InChI\"\nlanguage: c\nprimary_contact: \"member-info@inchi-trust.org\"\nsanitizers:\n  - address\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd INCHI-1-SRC\n$CC $CFLAGS -Wno-everything -DTARGET_API_LIB -DCOMPILE_ANSI_ONLY -ansi -c \\\n    INCHI_BASE/src/*.c INCHI_API/libinchi/src/*.c INCHI_API/libinchi/src/ixa/*.c\nar rcs $WORK/libinchi.a *.o\n\nfor fuzzer in $SRC/*_fuzzer.c; do\n  fuzzer_basename=$(basename -s .c $fuzzer)\n\n  $CC $CFLAGS \\\n      -I INCHI_BASE/src/ \\\n      -I INCHI_API/libinchi/src/ \\\n      -I INCHI_API/libinchi/src/ixa/ \\\n      $fuzzer -c -o ${fuzzer_basename}.o\n\n  $CXX $CXXFLAGS \\\n      ${fuzzer_basename}.o -o $OUT/$fuzzer_basename \\\n      $LIB_FUZZING_ENGINE $WORK/libinchi.a\ndone\n"
    },
    "influxdb": {
        "name": "influxdb",
        "language": "go",
        "homepage": "https://github.com/influxdata/influxdb",
        "main_repo": "https://github.com/influxdata/influxdb",
        "primary_contact": "william@influxdata.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/influxdata/influxdb\"\nlanguage: go\nprimary_contact: \"william@influxdata.com\"\nauto_ccs:\n  - \"palbert@influxdata.com\"\n  - \"ryan@influxdata.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\ndisabled: true\nmain_repo: 'https://github.com/influxdata/influxdb'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n\ncompile_go_fuzzer github.com/influxdata/influxdb/jsonweb FuzzJsonWeb fuzzjsonweb\n"
    },
    "iniconfig": {
        "name": "iniconfig",
        "language": "python",
        "homepage": "https://github.com/pytest-dev/iniconfig",
        "main_repo": "https://github.com/pytest-dev/iniconfig",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "file_github_issue: true\nfuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pytest-dev/iniconfig\nlanguage: python\nmain_repo: https://github.com/pytest-dev/iniconfig\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\nview_restrictions: none\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "inih": {
        "name": "inih",
        "language": "c",
        "homepage": "https://github.com/benhoyt/inih",
        "main_repo": "https://github.com/benhoyt/inih",
        "primary_contact": "benhoyt@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/benhoyt/inih\"\nlanguage: c\nprimary_contact: \"benhoyt@gmail.com\"\nauto_ccs:\n  - \"pkillarjun@protonmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/benhoyt/inih'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Compile the fuzzer binary for oss-fuzz infrastructure.\n$CC $CFLAGS -c ini.c\n$CC $CFLAGS -c inihfuzz.c\n$CXX $CFLAGS $LIB_FUZZING_ENGINE inihfuzz.o ini.o -o inihfuzz\n\n# Setup for oss-fuzz infrastructure.\ncp inihfuzz $OUT/\nzip -r inihfuzz_seed_corpus.zip tests/*.ini\nmv inihfuzz_seed_corpus.zip $OUT/\n"
    },
    "ion-java": {
        "name": "ion-java",
        "language": "jvm",
        "homepage": "https://github.com/amazon-ion/ion-java/",
        "main_repo": "https://github.com/amazon-ion/ion-java/",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/amazon-ion/ion-java/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/amazon-ion/ion-java/\"\nsanitizers:\n  - address\nauto_ccs:\n  - \"ion-team@amazon.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=ion-java\nPROJECT_GROUP_ID=com.amazon.ion\nPROJECT_ARTIFACT_ID=ion-java\nMAIN_REPOSITORY=https://github.com/amazon-ion/ion-java/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  # set_project_version_in_fuzz_targets_dependency\n\n  pushd $PROJECT\n    export ION_JAVA_VERSION=$(cat ./project.version)\n  popd\n\n  #install\n  (cd $PROJECT && ./gradlew publishToMavenLocal --info --stacktrace -x javadoc -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi\n"
    },
    "ipaddress": {
        "name": "ipaddress",
        "language": "python",
        "homepage": "https://github.com/phihag/ipaddress",
        "main_repo": "https://github.com/phihag/ipaddress",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/phihag/ipaddress\nmain_repo: https://github.com/phihag/ipaddress\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "ipfs": {
        "name": "ipfs",
        "language": "go",
        "homepage": "https://github.com/ipfs/go-datastore",
        "main_repo": "https://github.com/ipfs/go-datastore",
        "primary_contact": "will.scott@protocol.ai",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ipfs/go-datastore\"\nprimary_contact: \"will.scott@protocol.ai\"\nauto_ccs :\n- \"stebalien@protocol.ai\"\n- \"yolan@protocol.ai\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nmain_repo: 'https://github.com/ipfs/go-datastore'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd fuzz\n\nfunction compile_ds_fuzzer {\n  fuzzer=$1\n\n  if [ $# == 2 ]; then\n    rm provider* || true\n    DS_PROVIDERS=\"$2\" go generate\n  fi\n\n  compile_go_fuzzer github.com/ipfs/go-datastore/fuzz Fuzz $fuzzer\n}\n\ncompile_ds_fuzzer ipfs_ds_flatfs\ncompile_ds_fuzzer ipfs_ds_badger \"github.com/ipfs/go-ds-badger\"\ncompile_ds_fuzzer ipfs_ds_badger2 \"github.com/ipfs/go-ds-badger2\"\n\n"
    },
    "ipykernel": {
        "name": "ipykernel",
        "language": "python",
        "homepage": "https://github.com/ipython/ipykernel",
        "main_repo": "https://github.com/ipython/ipykernel",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/ipython/ipykernel\nmain_repo: https://github.com/ipython/ipykernel\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "ipython": {
        "name": "ipython",
        "language": "python",
        "homepage": "ipython.readthedocs.org",
        "main_repo": "https://github.com/ipython/ipython",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: ipython.readthedocs.org\nlanguage: python\nmain_repo: https://github.com/ipython/ipython\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd ipython\npython3 -m pip install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "iroha": {
        "name": "iroha",
        "language": "c++",
        "homepage": "https://github.com/hyperledger/iroha",
        "main_repo": "https://github.com/hyperledger/iroha.git",
        "primary_contact": "boldrev@soramitsu.co.jp",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/hyperledger/iroha\"\nlanguage: c++\nprimary_contact: \"boldrev@soramitsu.co.jp\"\nauto_ccs:\n  - \"andrei@soramitsu.co.jp\"\n  - \"kovalev@soramitsu.co.jp\"\n  - \"igor@soramitsu.co.jp\"\n  - \"gorbachev@soramitsu.co.jp\"\nsanitizers:\n  - address\nmain_repo: 'https://github.com/hyperledger/iroha.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/iroha\n./clean.sh\nmkdir build\ncd build\n \ncmake -DCMAKE_TOOLCHAIN_FILE=/opt/dependencies/scripts/buildsystems/vcpkg.cmake -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" -DFUZZING=ON ..\nmake fuzzing\n  \ncp test_bin/* $OUT/"
    },
    "irssi": {
        "name": "irssi",
        "language": "c++",
        "homepage": "https://github.com/irssi/irssi",
        "main_repo": "https://github.com/irssi/irssi",
        "primary_contact": "ahf@irssi.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://github.com/irssi/irssi\"\nlanguage: c++\nprimary_contact: \"ahf@irssi.org\"\nauto_ccs:\n  - \"dx@dxzone.com.ar\"\n  - \"joseph.bisch@gmail.com\"\n  - \"ailin.nemui@gmail.com\"\n  - \"staff@irssi.org\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/irssi/irssi'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# setup\nBUILD=$WORK/Build\nfuzz_targets=(\n    src/fe-fuzz/irssi-fuzz\n    src/fe-fuzz/server-fuzz\n    src/fe-fuzz/irc/core/event-get-params-fuzz\n    src/fe-fuzz/fe-common/core/theme-load-fuzz\n)\n\nif [ \"$FUZZING_ENGINE\" = honggfuzz ]; then\n    export CC=\"$SRC\"/\"$FUZZING_ENGINE\"/hfuzz_cc/hfuzz-clang\n    export CXX=\"$SRC\"/\"$FUZZING_ENGINE\"/hfuzz_cc/hfuzz-clang++\nfi\n\n# cleanup\nrm -rf \"$BUILD\"\nmkdir -p \"$BUILD\"\n\n# Configure the project.\nmeson \"$BUILD\" -Dstatic-dependency=yes -Dinstall-glib=force \\\n      -Dwith-fuzzer=yes -Dwith-fuzzer-lib=$LIB_FUZZING_ENGINE \\\n      -Dfuzzer-link-language=cpp \\\n    || ( cat \"$BUILD\"/meson-logs/meson-log.txt && false )\n\n# now build all fuzz targets\nninja -C \"$BUILD\" -v \"${fuzz_targets[@]}\"\n( cd \"$BUILD\" && mv \"${fuzz_targets[@]}\" \"$OUT\" )\n\ngit clone --depth 1 https://github.com/irssi-import/themes         theme-load-fuzz_corpus\ngit clone --depth 1 https://github.com/irssi/irssi-fuzzing-corpora\n\nfind theme-load-fuzz_corpus -mindepth 1 -maxdepth 1 \\( -type d -o \\! -name \\*.theme \\) -exec rm -fr {} +\n\nzip -q -j \"$OUT\"/theme-load-fuzz_seed_corpus.zip theme-load-fuzz_corpus/*\nzip -q -j \"$OUT\"/irssi-fuzz_seed_corpus.zip      irssi-fuzzing-corpora/irssi-fuzz-corpus/*\nzip -q -j \"$OUT\"/server-fuzz_seed_corpus.zip     irssi-fuzzing-corpora/server-fuzz-corpus/*\n\n# get tokens.txt dictionary from irssi/src/fe-fuzz/\ncp src/fe-fuzz/tokens.txt \"$OUT\"/server-fuzz.dict\n\ncp \"$SRC\"/*.options \"$SRC\"/*.dict \"$OUT\"/\n"
    },
    "isodate": {
        "name": "isodate",
        "language": "python",
        "homepage": "https://github.com/gweis/isodate",
        "main_repo": "https://github.com/gweis/isodate",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/gweis/isodate\nlanguage: python\nmain_repo: https://github.com/gweis/isodate\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "istio-ztunnel": {
        "name": "istio-ztunnel",
        "language": "rust",
        "homepage": "https://github.com/istio/ztunnel",
        "main_repo": "https://github.com/istio/ztunnel",
        "primary_contact": "istio-security-vulnerability-reports@googlegroups.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/istio/ztunnel\"\nmain_repo: 'https://github.com/istio/ztunnel'\nprimary_contact: \"istio-security-vulnerability-reports@googlegroups.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"howardjohn@google.com\"\n  - \"gregory.hanson@solo.io\"\nlanguage: rust\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncargo fuzz build --release --debug-assertions\nFUZZ_TARGET_OUTPUT_DIR=out/rust/x86_64-unknown-linux-gnu/release\nfor f in fuzz/fuzz_targets/*.rs\ndo\n    FUZZ_TARGET_NAME=$(basename ${f%.*})\n    cp $FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT/\ndone\n"
    },
    "istio": {
        "name": "istio",
        "language": "go",
        "homepage": "https://github.com/istio/istio",
        "main_repo": "https://github.com/istio/istio",
        "primary_contact": "istio-security-vulnerability-reports@googlegroups.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/istio/istio\"\nprimary_contact: \"istio-security-vulnerability-reports@googlegroups.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"john.howard@solo.io\"\n  - \"kconner@redhat.com\"\n  - \"jdpettit@google.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/istio/istio'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build fuzzers\nif [ -n \"${OSS_FUZZ_CI-}\" ]\nthen\n\techo \"Skipping most fuzzers since the OSS-fuzz CI may fail from running out of disk space.\"\n\tcompile_go_fuzzer istio.io/istio/tests/fuzz FuzzCRDRoundtrip fuzz_crd_roundtrip\nelse\n\t$SRC/istio/tests/fuzz/oss_fuzz_build.sh\nfi\n\n"
    },
    "itext7": {
        "name": "itext7",
        "language": "jvm",
        "homepage": "https://itextpdf.com/products/itext-7",
        "main_repo": "https://github.com/itext/itext7",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "michael.nothhard@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://itextpdf.com/products/itext-7\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/itext/itext7\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"michael.nothhard@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=itext7\nPROJECT_GROUP_ID=com.itextpdf\nPROJECT_ARTIFACT_ID=kernel\nMAIN_REPOSITORY=https://github.com/itext/itext7\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  mvn -pl $PROJECT install -DskipTests\n  mvn -pl $PROJECT/kernel install -DskipTests #only build kernel subproject (root is useless)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  $MVN -pl $PROJECT install -DskipTests -Dmaven.repo.local=$OUT/m2\n  $MVN -pl $PROJECT/kernel install -DskipTests -Dmaven.repo.local=$OUT/m2\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  # RUNTIME_CLASSPATH=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "itoa": {
        "name": "itoa",
        "language": "rust",
        "homepage": "https://github.com/dtolnay/itoa",
        "main_repo": "https://github.com/dtolnay/itoa",
        "primary_contact": "dtolnay@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/dtolnay/itoa\"\nprimary_contact: \"dtolnay@gmail.com\"\nmain_repo: \"https://github.com/dtolnay/itoa\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"adetaylor@chromium.org\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC\ncd itoa\ncargo fuzz build -O\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_itoa $OUT/\n"
    },
    "itsdangerous": {
        "name": "itsdangerous",
        "language": "python",
        "homepage": "https://github.com/pallets/itsdangerous",
        "main_repo": "https://github.com/pallets/itsdangerous",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pallets/itsdangerous\nlanguage: python\nmain_repo: https://github.com/pallets/itsdangerous\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "iverilog": {
        "name": "iverilog",
        "language": "c++",
        "homepage": "https://steveicarus.github.io/iverilog",
        "main_repo": "https://github.com/steveicarus/iverilog",
        "primary_contact": "steve@icarus.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://steveicarus.github.io/iverilog\"\nlanguage: c++\nprimary_contact: \"steve@icarus.com\"\nauto_ccs:\n  - \"capuanobailey@gmail.com\"\nmain_repo: \"https://github.com/steveicarus/iverilog\"\n",
        "build_sh": null
    },
    "ja3": {
        "name": "ja3",
        "language": "python",
        "homepage": "https://engineering.salesforce.com/tls-fingerprinting-with-ja3-and-ja3s-247362855967/",
        "main_repo": "https://github.com/salesforce/ja3.git",
        "primary_contact": "jalthouse@salesforce.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://engineering.salesforce.com/tls-fingerprinting-with-ja3-and-ja3s-247362855967/\"\nlanguage: python\nprimary_contact: \"jalthouse@salesforce.com\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\n  - undefined\nmain_repo: \"https://github.com/salesforce/ja3.git\"\n",
        "build_sh": null
    },
    "jackson-core": {
        "name": "jackson-core",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-core",
        "main_repo": "https://github.com/FasterXML/jackson-core",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-core\"\nlanguage: jvm\nprimary_contact: \"tatu@fasterxml.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/FasterXML/jackson-core\"\nsanitizers:\n  - address\nauto_ccs:\n  - \"Adam@adalogics.com\"\n  - \"David@adalogics.com\"\n  - \"fanningpj@gmail.com\"\nvendor_ccs:\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Copy seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-P!java14+ -Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n\nDEPENDENCIES=\"jackson-core jackson-databind jackson-annotations\"\nfor dependency in $DEPENDENCIES; do\n  cd $SRC/$dependency\n  mvn package $MAVEN_ARGS\n  current_version=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\n  cp \"target/$dependency-$current_version.jar\" $OUT/$dependency.jar\ndone\n\nALL_JARS=$(echo $DEPENDENCIES | xargs printf -- \"%s.jar \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n  if [ \"$fuzzer_basename\" == \"DataInputFuzzer\" ]; then\n    cp $SRC/$fuzzer_basename\\$MockFuzzDataInput.class $OUT/\n  fi\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "jackson-databind": {
        "name": "jackson-databind",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-databind",
        "main_repo": "https://github.com/FasterXML/jackson-databind.git",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-databind\"\nlanguage: jvm\nprimary_contact: \"tatu@fasterxml.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/FasterXML/jackson-databind.git\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\n  - \"David@adalogics.com\"\n  - \"fanningpj@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/javaparser\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n$MVN package -DskipTests\ncp javaparser-core/target/javaparser-core-$CURRENT_VERSION.jar $OUT/javaparser-core.jar\ncp javaparser-symbol-solver-core/target/javaparser-symbol-solver-core-$CURRENT_VERSION.jar $OUT/javaparser-symbol-solver.jar\ncd $SRC/jackson-databind\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\nmv $SRC/github-samples/jackson/*.zip $OUT/\nzip $OUT/ObjectReaderRandomClassFuzzer_seed_corpus.zip $SRC/javaparser/javaparser-core/src/main/java/com/github/javaparser/Processor.java\n\n# jackson-databind\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/jackson-databind-$CURRENT_VERSION.jar\" \"$OUT/jackson-databind.jar\"\n\n# jackson-core\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS -f \"jackson-core/pom.xml\"\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout -f \"jackson-core/pom.xml\")\ncp \"jackson-core/target/jackson-core-$CURRENT_VERSION.jar\" \"$OUT/jackson-core.jar\"\n\n# jackson-annnotations\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS -f \"jackson-annotations/pom.xml\"\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout -f \"jackson-annotations/pom.xml\")\ncp \"jackson-annotations/target/jackson-annotations-$CURRENT_VERSION.jar\" \"$OUT/jackson-annotations.jar\"\n\nALL_JARS=\"jackson-databind.jar jackson-core.jar jackson-annotations.jar javaparser-symbol-solver.jar javaparser-core.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  if [ \"$fuzzer_basename\" != \"ObjectReaderRandomClassFuzzer\" ]; then\n    cp $SRC/$fuzzer_basename\\$DummyClass.class $OUT/\n  fi\n  if [ \"$fuzzer_basename\" == \"AdaLObjectReader3Fuzzer\" ]; then\n    cp $SRC/$fuzzer_basename\\$NoCheckSubTypeValidator.class $OUT/\n    cp $SRC/$fuzzer_basename\\$MockFuzzDataInput.class $OUT/\n  fi\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--instrumentation_excludes=com.fasterxml.jackson.core.** \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jackson-dataformat-xml": {
        "name": "jackson-dataformat-xml",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-dataformat-xml",
        "main_repo": "https://github.com/FasterXML/jackson-dataformat-xml",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "adam@adalogics.com",
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-dataformat-xml\"\nlanguage: jvm\nprimary_contact: \"tatu@fasterxml.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/FasterXML/jackson-dataformat-xml\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-P!java14+ -Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package dependency:copy-dependencies $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\nmkdir -p $OUT/dependency\ncp \"target/jackson-dataformat-xml-$CURRENT_VERSION.jar\" $OUT/jackson-dataformat-xml.jar\nfor jarfile in $(find $SRC/jackson-dataformat-xml/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\n\nALL_JARS=\"jackson-dataformat-xml.jar\"\nALL_DEPENDENCY=$(find $OUT/dependency -name *.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"$OUT/dependency/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"\\$this_dir/dependency/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "jackson-dataformats-binary": {
        "name": "jackson-dataformats-binary",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-dataformats-binary",
        "main_repo": "https://github.com/FasterXML/jackson-dataformats-binary",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "adam@adalogics.com",
            "david@adalogics.com",
            "arthur.chan@adalogics.com",
            "tyagregg@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-dataformats-binary\"\nlanguage: jvm\nprimary_contact: \"tatu@fasterxml.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/FasterXML/jackson-dataformats-binary\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n  - \"tyagregg@gmail.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-P!java14+ -Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n\nmvn package dependency:copy-dependencies $MAVEN_ARGS\nCURRENT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nDATAFORMAT_PREFIX=jackson-dataformat\n\nmkdir -p $OUT/dependency\ncp \"avro/target/$DATAFORMAT_PREFIX-avro-$CURRENT_VERSION.jar\" $OUT/$DATAFORMAT_PREFIX-avro.jar\nfor jarfile in $(find avro/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"cbor/target/$DATAFORMAT_PREFIX-cbor-$CURRENT_VERSION.jar\" $OUT/$DATAFORMAT_PREFIX-cbor.jar\nfor jarfile in $(find cbor/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"ion/target/$DATAFORMAT_PREFIX-ion-$CURRENT_VERSION.jar\" $OUT/$DATAFORMAT_PREFIX-ion.jar\nfor jarfile in $(find ion/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"protobuf/target/$DATAFORMAT_PREFIX-protobuf-$CURRENT_VERSION.jar\" $OUT/$DATAFORMAT_PREFIX-protobuf.jar\nfor jarfile in $(find protobuf/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"smile/target/$DATAFORMAT_PREFIX-smile-$CURRENT_VERSION.jar\" $OUT/$DATAFORMAT_PREFIX-smile.jar\nfor jarfile in $(find smile/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\n\nALL_JARS=\"$DATAFORMAT_PREFIX-cbor.jar $DATAFORMAT_PREFIX-smile.jar $DATAFORMAT_PREFIX-avro.jar $DATAFORMAT_PREFIX-ion.jar $DATAFORMAT_PREFIX-protobuf.jar\"\nALL_DEPENDENCY=$(find $OUT/dependency -name *.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"$OUT/dependency/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"\\$this_dir/dependency/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "jackson-dataformats-text": {
        "name": "jackson-dataformats-text",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-dataformats-text",
        "main_repo": "https://github.com/FasterXML/jackson-dataformats-text",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com",
            "adam@adalogics.com",
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-dataformats-text\"\nlanguage: jvm\nprimary_contact: \"tatu@fasterxml.com\"\nmain_repo: \"https://github.com/FasterXML/jackson-dataformats-text\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/*.dict $OUT\n\nMAVEN_ARGS=\"-P!java14+ -Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package dependency:copy-dependencies $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\nmkdir -p $OUT/dependency\ncp \"csv/target/jackson-dataformat-csv-$CURRENT_VERSION.jar\" $OUT/jackson-dataformat-csv.jar\nfor jarfile in $(find csv/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"yaml/target/jackson-dataformat-yaml-$CURRENT_VERSION.jar\" $OUT/jackson-dataformat-yaml.jar\nfor jarfile in $(find yaml/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"properties/target/jackson-dataformat-properties-$CURRENT_VERSION.jar\" $OUT/jackson-dataformat-properties.jar\nfor jarfile in $(find properties/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"toml/target/jackson-dataformat-toml-$CURRENT_VERSION.jar\" $OUT/jackson-dataformat-toml.jar\nfor jarfile in $(find toml/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\n\nALL_JARS=\"jackson-dataformat-csv.jar jackson-dataformat-yaml.jar jackson-dataformat-properties.jar jackson-dataformat-toml.jar\"\nALL_DEPENDENCY=$(find $OUT/dependency -name *.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"$OUT/dependency/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"\\$this_dir/dependency/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "jackson-datatype-joda": {
        "name": "jackson-datatype-joda",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-datatype-joda",
        "main_repo": "https://github.com/FasterXML/jackson-datatype-joda",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "bug-disclosure@code-intelligence.com",
            "adam@adalogics.com",
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-datatype-joda\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/FasterXML/jackson-datatype-joda\"\nsanitizers:\n  - address\nprimary_contact: \"tatu@fasterxml.com\"\nvendor_ccs:\n  - \"bug-disclosure@code-intelligence.com\"\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\n\n./mvnw package dependency:copy-dependencies -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\n\nmkdir -p $OUT/dependency\ncp \"$SRC/jackson-datatype-joda/target/jackson-datatype-joda-$CURRENT_VERSION.jar\" $OUT/joda.jar\nfor jarfile in $(find $SRC/jackson-datatype-joda/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\n\nALL_JARS=\"joda.jar\"\nALL_DEPENDENCY=$(find $OUT/dependency -name *.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"$OUT/dependency/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"\\$this_dir/dependency/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone \n"
    },
    "jackson-datatypes-collections": {
        "name": "jackson-datatypes-collections",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-datatypes-collections",
        "main_repo": "https://github.com/FasterXML/jackson-datatypes-collections",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "adam@adalogics.com",
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-datatypes-collections\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/FasterXML/jackson-datatypes-collections\"\nsanitizers:\n  - address\nprimary_contact: \"tatu@fasterxml.com\"\nvendor_ccs:\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\n\n./mvnw package dependency:copy-dependencies -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\n\nmkdir -p $OUT/dependency\ncp \"$SRC/jackson-datatypes-collections/eclipse-collections/target/jackson-datatype-eclipse-collections-$CURRENT_VERSION.jar\" $OUT/collections.jar\nfor jarfile in $(find $SRC/jackson-datatypes-collections/eclipse-collections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"$SRC/jackson-datatypes-collections/guava/target/jackson-datatype-guava-$CURRENT_VERSION.jar\" $OUT/guava.jar\nfor jarfile in $(find $SRC/jackson-datatypes-collections/guava/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"$SRC/jackson-datatypes-collections/hppc/target/jackson-datatype-hppc-$CURRENT_VERSION.jar\" $OUT/hppc.jar\nfor jarfile in $(find $SRC/jackson-datatypes-collections/hppc/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\ncp \"$SRC/jackson-datatypes-collections/pcollections/target/jackson-datatype-pcollections-$CURRENT_VERSION.jar\" $OUT/pcollections.jar\nfor jarfile in $(find $SRC/jackson-datatypes-collections/pcollections/target/dependency/ -name *.jar ! -name junit*.jar ! -name hamcrest*.jar)\ndo\n  cp $jarfile $OUT/dependency\ndone\n\nALL_JARS=\"collections.jar guava.jar hppc.jar pcollections.jar\"\nALL_DEPENDENCY=$(find $OUT/dependency -name *.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$JAZZER_API_PATH:$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\")$(echo $ALL_DEPENDENCY | xargs printf -- \"$OUT/dependency/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):$(echo $ALL_DEPENDENCY | xargs printf -- \"\\$this_dir/dependency/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone \n"
    },
    "jackson-modules-java8": {
        "name": "jackson-modules-java8",
        "language": "jvm",
        "homepage": "https://github.com/FasterXML/jackson-modules-java8",
        "main_repo": "https://github.com/FasterXML/jackson-modules-java8.git",
        "primary_contact": "tatu@fasterxml.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/FasterXML/jackson-modules-java8\"\nlanguage: jvm\nmain_repo: \"https://github.com/FasterXML/jackson-modules-java8.git\"\nprimary_contact: \"tatu@fasterxml.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/*.dict $OUT\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"datetime/target/jackson-datatype-jsr310-$CURRENT_VERSION.jar\" \"$OUT/jackson-datetime.jar\"\ncp \"datatypes/target/jackson-datatype-jdk8-$CURRENT_VERSION.jar\" \"$OUT/jackson-datatype.jar\"\n\nALL_JARS=\"jackson-datatype.jar jackson-datetime.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n  cp $SRC/$fuzzer_basename\\$Dummy.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--instrumentation_includes=com.fasterxml.jackson.datatype.** \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jakarta-mail-api": {
        "name": "jakarta-mail-api",
        "language": "jvm",
        "homepage": "https://eclipse-ee4j.github.io/mail",
        "main_repo": "https://github.com/eclipse-ee4j/mail.git",
        "primary_contact": "",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://eclipse-ee4j.github.io/mail\"\nlanguage: jvm\nprimary_contact: \"\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/eclipse-ee4j/mail.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd api\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/jakarta.mail-api-$CURRENT_VERSION.jar\" $OUT/jakarta-mail-api.jar\n\nALL_JARS=\"jakarta-mail-api.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "janet": {
        "name": "janet",
        "language": "c++",
        "homepage": "https://github.com/janet-lang/janet",
        "main_repo": "https://github.com/janet-lang/janet",
        "primary_contact": "calsrose@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/janet-lang/janet\"\nprimary_contact: \"calsrose@gmail.com\"\nlanguage: c++\nauto_ccs:\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/janet-lang/janet'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nexport CFLAGS=\"$CFLAGS -fPIC\"\ncd janet\nmake\n\n$CC -D_XOPEN_SOURCE=600 $CFLAGS -DJANET_BOOTSTRAP -Isrc/include -Isrc/conf -std=c99 -fPIC -o fuzz_dostring.o -c ./test/fuzzers/fuzz_dostring.c\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_dostring.o build/libjanet.a -o $OUT/fuzz_dostring\n"
    },
    "janino": {
        "name": "janino",
        "language": "jvm",
        "homepage": "http://janino-compiler.github.io/janino/",
        "main_repo": "https://github.com/janino-compiler/janino.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://janino-compiler.github.io/janino/\"\nlanguage: jvm\nmain_repo: \"https://github.com/janino-compiler/janino.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd janino-parent\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15 -Dmaven.javadoc.skip=true\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncd $SRC/janino\ncp \"janino/target/janino-$CURRENT_VERSION.jar\" $OUT/janino.jar\n\nALL_JARS=\"janino.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jansi": {
        "name": "jansi",
        "language": "jvm",
        "homepage": "https://github.com/fusesource/jansi",
        "main_repo": "https://github.com/fusesource/jansi",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/fusesource/jansi\nmain_repo: https://github.com/fusesource/jansi\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"target/jansi-$CURRENT_VERSION.jar\" $OUT/jansi.jar\n\nALL_JARS=\"jansi.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jansson": {
        "name": "jansson",
        "language": "c++",
        "homepage": "https://github.com/akheron/jansson",
        "main_repo": "https://github.com/akheron/jansson.git",
        "primary_contact": "git@cfware.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/akheron/jansson\"\nlanguage: c++\nprimary_contact: \"git@cfware.com\"\nauto_ccs:\n  - \"cmeister2@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/akheron/jansson.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# --default-symver does not work with lto, which fuzz introspector uses.\nif [ \"$SANITIZER\" == \"introspector\" ]; then\n  sed -i 's/--default-symver/-flto/g' ./configure.ac\nfi\n# Run the OSS-Fuzz script in the project.\n./test/ossfuzz/ossfuzz.sh\n"
    },
    "janus-gateway": {
        "name": "janus-gateway",
        "language": "c++",
        "homepage": "https://github.com/meetecho/janus-gateway",
        "main_repo": "https://github.com/meetecho/janus-gateway.git",
        "primary_contact": "toppi.ale@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/meetecho/janus-gateway\"\nlanguage: c++\nprimary_contact: \"toppi.ale@gmail.com\"\nauto_ccs:\n  - \"lminiero@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\ncoverage_extra_args: -ignore-filename-regex=.*glib.* -ignore-filename-regex=.*log.c\nmain_repo: 'https://github.com/meetecho/janus-gateway.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFUZZ_ENV=oss-fuzz $SRC/janus-gateway/fuzzers/build.sh\n"
    },
    "java-diff-utils": {
        "name": "java-diff-utils",
        "language": "jvm",
        "homepage": "https://github.com/java-diff-utils/java-diff-utils.git",
        "main_repo": "https://github.com/java-diff-utils/java-diff-utils.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/java-diff-utils/java-diff-utils.git\nmain_repo: https://github.com/java-diff-utils/java-diff-utils.git\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"./java-diff-utils/target/java-diff-utils-$CURRENT_VERSION.jar\" $OUT/java-diff-utils.jar\n\nALL_JARS='java-diff-utils.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "java-example": {
        "name": "java-example",
        "language": "jvm",
        "homepage": "https://github.com/CodeIntelligenceTesting/jazzer",
        "main_repo": "https://github.com/CodeIntelligenceTesting/jazzer",
        "primary_contact": null,
        "vendor_ccs": [
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "disabled: true\nfuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/CodeIntelligenceTesting/jazzer\nlanguage: jvm\nmain_repo: https://github.com/CodeIntelligenceTesting/jazzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- norbert.schneider@code-intelligence.com\n- hlin@code-intelligence.com\n- bug-disclosure@code-intelligence.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build native library.\nJVM_INCLUDES=\"-I$JAVA_HOME/include -I$JAVA_HOME/include/linux\"\nmkdir -p \"$OUT\"/native\n$CXX $CXXFLAGS $JVM_INCLUDES -fPIC -shared \\\n    ExampleFuzzerNative.cpp -o $OUT/native/libnative.so\n\nmkdir -p \"$OUT\"/libs\ncurl -o \"$OUT\"/libs/junit-jupiter-api-5.9.0.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-api/5.9.0/junit-jupiter-api-5.9.0.jar\ncurl -o \"$OUT\"/libs/junit-jupiter-engine-5.9.0.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-engine/5.9.0/junit-jupiter-engine-5.9.0.jar\ncurl -o \"$OUT\"/libs/junit-jupiter-params-5.9.0.jar https://repo1.maven.org/maven2/org/junit/jupiter/junit-jupiter-params/5.9.0/junit-jupiter-params-5.9.0.jar\ncurl -o \"$OUT\"/libs/junit-platform-commons-1.9.0.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-commons/1.9.0/junit-platform-commons-1.9.0.jar\ncurl -o \"$OUT\"/libs/junit-platform-engine-1.9.0.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-engine/1.9.0/junit-platform-engine-1.9.0.jar\ncurl -o \"$OUT\"/libs/junit-platform-launcher-1.9.0.jar https://repo1.maven.org/maven2/org/junit/platform/junit-platform-launcher/1.9.0/junit-platform-launcher-1.9.0.jar\ncurl -o \"$OUT\"/libs/opentest4j-1.2.0.jar https://repo1.maven.org/maven2/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar\n\nBUILD_CLASSPATH=\"$JAZZER_API_PATH:$JAZZER_JUNIT_PATH:$OUT/libs/junit-jupiter-api-5.9.0.jar\"\n\n# All class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -or -name '*FuzzerNative.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  if [[ $fuzzer_basename == *FuzzerNative ]]; then\n    driver=jazzer_driver_with_sanitizer\n  else\n    driver=jazzer_driver\n  fi\n\n  cp default.options $OUT/\"$fuzzer_basename\".options\n  # Create execution wrapper.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir/native \\\nASAN_OPTIONS=\\$ASAN_OPTIONS:symbolize=1:external_symbolizer_path=\\$this_dir/llvm-symbolizer:detect_leaks=0 \\\n\\$this_dir/$driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n\nfor fuzzer in $(find $SRC -name '*FuzzTest.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp \"$BUILD_CLASSPATH:/usr/local/bin/jazzer_agent_deploy.jar\" $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create execution wrapper.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\n\njava -cp \\$this_dir:\\$this_dir/jazzer_agent_deploy.jar:\\$this_dir/jazzer_junit.jar:\\$this_dir/libs/* \\\ncom.code_intelligence.jazzer.Jazzer \\\n--target_class=$fuzzer_basename \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n\n"
    },
    "java-jwt": {
        "name": "java-jwt",
        "language": "jvm",
        "homepage": "https://github.com/auth0/java-jwt/",
        "main_repo": "https://github.com/auth0/java-jwt/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/auth0/java-jwt/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/auth0/java-jwt/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=java-jwt\nPROJECT_GROUP_ID=com.auth0\nPROJECT_ARTIFACT_ID=java-jwt\nMAIN_REPOSITORY=https://github.com/auth0/java-jwt/\nGRADLE_ARGS=\"-x javadoc -x test\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && ./gradlew build publishToMavenLocal exportVersion)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  # set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && ./gradlew build publishToMavenLocal exportVersion $GRADLE_ARGS)\n  export JAVA_JWT_VERSION=$(cat $PROJECT/README.md | awk -F ':' '/implementation '\\''com.auth0:java-jwt:*/ {print $3}' | sed \"s/'//g\")\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi\n"
    },
    "java-uuid-generator": {
        "name": "java-uuid-generator",
        "language": "jvm",
        "homepage": "https://github.com/cowtowncoder/java-uuid-generator",
        "main_repo": "https://github.com/cowtowncoder/java-uuid-generator",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/cowtowncoder/java-uuid-generator\nmain_repo: https://github.com/cowtowncoder/java-uuid-generator\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\nfind ./ -name pom.xml -exec sed -i 's/source>1.6</source>1.8</g' {} \\;\nfind ./ -name pom.xml -exec sed -i 's/target>1.6</target>1.8</g' {} \\;\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"target/java-uuid-generator-$CURRENT_VERSION.jar\" $OUT/java-uuid-generator.jar\n\nALL_JARS=\"java-uuid-generator.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n\n"
    },
    "java-xmlbuilder": {
        "name": "java-xmlbuilder",
        "language": "jvm",
        "homepage": "https://github.com/jmurty/java-xmlbuilder",
        "main_repo": "https://github.com/jmurty/java-xmlbuilder",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jmurty/java-xmlbuilder\nmain_repo: https://github.com/jmurty/java-xmlbuilder\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"target/java-xmlbuilder-$CURRENT_VERSION.jar\" $OUT/java-xmlbuilder.jar\n\nALL_JARS=\"java-xmlbuilder.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n\ncp $SRC/afl/dictionaries/xml.dict $OUT/XmlBuilderFuzzer.dict\n"
    },
    "javacpp": {
        "name": "javacpp",
        "language": "jvm",
        "homepage": "https://github.com/bytedeco/javacpp",
        "main_repo": "https://github.com/bytedeco/javacpp",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/bytedeco/javacpp\nmain_repo: https://github.com/bytedeco/javacpp\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\n\ncp \"./target/javacpp.jar\" $OUT/javacpp.jar\n\nALL_JARS=\"javacpp.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "javaparser": {
        "name": "javaparser",
        "language": "jvm",
        "homepage": "https://javaparser.org",
        "main_repo": "https://github.com/javaparser/javaparser",
        "primary_contact": "MysterAitch@users.noreply.github.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://javaparser.org\"\nlanguage: jvm\nprimary_contact: \"MysterAitch@users.noreply.github.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\n  - \"jean-pierre.lerbscher@jperf.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/javaparser/javaparser\"\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build the jar.\nCURRENT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\nmvn package -Dmaven.test.skip=true\ncp \"javaparser-core/target/javaparser-core-$CURRENT_VERSION.jar\" $OUT/javaparser.jar\n\n# The jar files containing the project (separated by spaces).\nPROJECT_JARS=javaparser.jar\n\n# Build fuzzers in $OUT.\nBUILD_CLASSPATH=$(echo $PROJECT_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All jars and class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $PROJECT_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create execution wrapper.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "javapoet": {
        "name": "javapoet",
        "language": "jvm",
        "homepage": "https://github.com/square/javapoet",
        "main_repo": "https://github.com/square/javapoet.git",
        "primary_contact": "irali@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/square/javapoet\"\nlanguage: jvm\nprimary_contact: \"irali@google.com\"\nmain_repo: \"https://github.com/square/javapoet.git\"\nauto_ccs:\n  - \"himkhurana@google.com\"\n  - \"atulag@google.com\"\n  - \"rashmivirdy@google.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport JAVA_HOME=\"$OUT/open-jdk-8\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-8-openjdk-amd64/\" \"$JAVA_HOME\"\n\nMAVEN_ARGS=\"-Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./ -name \"javapoet-$CURRENT_VERSION.jar\" -exec mv {} $OUT/javapoet.jar \\;\n\nALL_JARS=\"javapoet.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac -cp $BUILD_CLASSPATH ${SRC}/*.java\ninstall ${SRC}/*.class ${OUT}/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-8/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-8/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "javascript-example": {
        "name": "javascript-example",
        "language": "javascript",
        "homepage": "https://github.com/CodeIntelligenceTesting/jazzer.js",
        "main_repo": "https://github.com/CodeIntelligenceTesting/jazzer.js",
        "primary_contact": null,
        "vendor_ccs": [
            "yakdan@code-intelligence.com",
            "norbert.schneider@code-intelligence.com",
            "peter.samarin@code-intelligence.com",
            "christopher.krah@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/CodeIntelligenceTesting/jazzer.js\nlanguage: javascript\nmain_repo: https://github.com/CodeIntelligenceTesting/jazzer.js\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n- yakdan@code-intelligence.com\n- norbert.schneider@code-intelligence.com\n- peter.samarin@code-intelligence.com\n- christopher.krah@code-intelligence.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install dependencies.\nnpm install\n\n# Install Jazzer.js\nnpm install --save-dev @jazzer.js/core\n\n# Build Fuzzers.\ncompile_javascript_fuzzer example fuzz_promise.js\ncompile_javascript_fuzzer example fuzz_string_compare.js --sync\ncompile_javascript_fuzzer example fuzz_value_profiling.js --sync\n"
    },
    "javassist": {
        "name": "javassist",
        "language": "jvm",
        "homepage": "http://www.javassist.org/",
        "main_repo": "https://github.com/jboss-javassist/javassist",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: http://www.javassist.org/\nlanguage: jvm\nmain_repo: https://github.com/jboss-javassist/javassist\nsanitizers:\n- address\nvendor_ccs:\n- wagner@code-intelligence.com\n- wagner@code-intelligence.com\n- yakdan@code-intelligence.com\n- glendowne@code-intelligence.com\n- hlin@code-intelligence.com\n- bug-disclosure@code-intelligence.com",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit apply pom.xml.diff\nmv ./src/main ./src/java\nmkdir ./src/main\nmv ./src/java ./src/main/java\nmv ./src/test ./src/java\nmkdir ./src/test\nmv ./src/java ./src/test/java\n\n$MVN clean package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade -DskipTests\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/javassist-$CURRENT_VERSION.jar\" $OUT/javassist.jar\n\nALL_JARS=\"javassist.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "javy": {
        "name": "javy",
        "language": "rust",
        "homepage": "https://github.com/bytecodealliance/javy",
        "main_repo": "https://github.com/bytecodealliance/javy.git",
        "primary_contact": "saule.cabrera@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/bytecodealliance/javy\"\nlanguage: rust\nmain_repo: \"https://github.com/bytecodealliance/javy.git\"\nprimary_contact: \"saule.cabrera@gmail.com\"\nauto_ccs:\n  - \"jeff.charles@shopify.com\"\nsanitizers:\n  - none\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Using `--sanitizer none` because other sanitizers seem to cause out of memory errors\n# Setting `-fno-sanitize=all` since I see undefined references to `__sancov_gen_` if I don't\nCFLAGS=\"$CFLAGS -fno-sanitize=all\" RUSTFLAGS=\"-C link-arg=-fno-sanitize=all\" cargo fuzz build --sanitizer none\ncp target/x86_64-unknown-linux-gnu/release/json-differential $OUT/json-differential\n"
    },
    "jaxb": {
        "name": "jaxb",
        "language": "jvm",
        "homepage": "https://eclipse-ee4j.github.io/jaxb-ri/",
        "main_repo": "https://github.com/eclipse-ee4j/jaxb-ri.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://eclipse-ee4j.github.io/jaxb-ri/\"\nlanguage: jvm\nmain_repo: \"https://github.com/eclipse-ee4j/jaxb-ri.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\nrun_tests: False",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-Dmaven.compiler.source=15 -Dmaven.compiler.target=15 -DskipTests\"\nALL_JARS=\"\"\n\n# install the build servers' jazzer-api into the maven repository\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/jaxb-ri/jaxb-ri\"\n\t${MVN} package ${MVN_FLAGS}\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd ${SRC}\n\t${MVN} package -DjaxbVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/jaxb-fuzzer-${CURRENT_VERSION}.jar ${OUT}/jaxb-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} jaxb-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n  stripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n  # the .java was stripped by sed\n  if (echo ${stripped_path} | grep \".java$\"); then\n\tcontinue;\n  fi\n\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  fuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n  chmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "jbig2dec": {
        "name": "jbig2dec",
        "language": "c++",
        "homepage": "https://www.jbig2dec.com",
        "main_repo": "git://git.ghostscript.com/jbig2dec.git",
        "primary_contact": "sebastian.rasmussen@artifex.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.jbig2dec.com\"\nlanguage: c++\nprimary_contact: sebastian.rasmussen@artifex.com\nsanitizers:\n  - address\n  - memory\nmain_repo: 'git://git.ghostscript.com/jbig2dec.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd ${SRC}/jbig2dec\n./autogen.sh\nmake distclean\n\nmkdir -p ${WORK}/jbig2dec\ncd ${WORK}/jbig2dec\n${SRC}/jbig2dec/configure\n\nLDFLAGS=\"$CXXFLAGS\" make -C ${WORK}/jbig2dec jbig2dec -j$(nproc)\nfuzz_target=jbig2_fuzzer\n\n$CXX $CXXFLAGS -std=c++11 -I$SRC/jbig2dec -fno-inline-functions \\\n    $SRC/jbig2_fuzzer.cc -o $OUT/$fuzz_target \\\n    $LIB_FUZZING_ENGINE ${WORK}/jbig2dec/.libs/libjbig2dec.a\n\nunzip -l ${SRC}/${fuzz_target}_seed_corpus.zip\n\nmv $SRC/{*.zip,*.dict,*.options} $OUT\n\nif [ ! -f \"${OUT}/${fuzz_target}_seed_corpus.zip\" ]; then\n  echo \"missing seed corpus\"\n  exit 1\nfi\n\nif [ ! -f \"${OUT}/${fuzz_target}.dict\" ]; then\n  echo \"missing dictionary\"\n  exit 1\nfi\n\nif [ ! -f \"${OUT}/${fuzz_target}.options\" ]; then\n  echo \"missing options\"\n  exit 1\nfi\n"
    },
    "jboss-logging": {
        "name": "jboss-logging",
        "language": "jvm",
        "homepage": "https://github.com/jboss-logging/jboss-logging",
        "main_repo": "https://github.com/jboss-logging/jboss-logging",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/jboss-logging/jboss-logging\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/jboss-logging/jboss-logging\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=jboss-logging\nPROJECT_GROUP_ID=org.jboss.logging\nPROJECT_ARTIFACT_ID=jboss-logging\nMAIN_REPOSITORY=https://github.com/jboss-logging/jboss-logging\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  #PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  PROJECT_VERSION=3.5.1.Final-SNAPSHOT #workaround to make it faster\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  mvn -pl $PROJECT install -DskipTests\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install -DskipTests -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi\n"
    },
    "jc": {
        "name": "jc",
        "language": "python",
        "homepage": "https://kellyjonbrazil.github.io/jc/docs/",
        "main_repo": "https://github.com/kellyjonbrazil/jc.git",
        "primary_contact": "kellyjonbrazil@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://kellyjonbrazil.github.io/jc/docs/\"\nlanguage: python\nprimary_contact: \"kellyjonbrazil@gmail.com\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\nmain_repo: \"https://github.com/kellyjonbrazil/jc.git\"\n",
        "build_sh": null
    },
    "jdom": {
        "name": "jdom",
        "language": "jvm",
        "homepage": "http://jdom.org/",
        "main_repo": "https://github.com/hunterhacker/jdom.git",
        "primary_contact": "",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "michael.nothhard@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://jdom.org/\"\nlanguage: jvm\nprimary_contact: \"\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/hunterhacker/jdom.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"michael.nothhard@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\n$ANT -Dcompile.target=15 -Dcompile.source=15\ncp build/package/jdom-2.x-*[0-9][0-9].jar $OUT/jdom.jar\n\nALL_JARS=\"jdom.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jedi": {
        "name": "jedi",
        "language": "python",
        "homepage": "https://github.com/davidhalter/jedi",
        "main_repo": "https://github.com/davidhalter/jedi",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/davidhalter/jedi\nmain_repo: https://github.com/davidhalter/jedi\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 setup.py install\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "jedis": {
        "name": "jedis",
        "language": "jvm",
        "homepage": "https://github.com/redis/jedis",
        "main_repo": "https://github.com/redis/jedis.git",
        "primary_contact": "irali@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/redis/jedis\"\nlanguage: jvm\nprimary_contact: \"irali@google.com\"\nmain_repo: \"https://github.com/redis/jedis.git\"\nfile_github_issue: false\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport JAVA_HOME=\"$OUT/open-jdk-11\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip --exclude 'lib/security/blacklisted.certs' \"/usr/lib/jvm/java-11-openjdk-amd64/\" \"$JAVA_HOME\"\n\nMAVEN_ARGS=\"-Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true -Dpmd.skip=true \\\n  -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n  -DperformRelease=True\"\n$MVN clean package $MAVEN_ARGS org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./ -name \"jedis-$CURRENT_VERSION.jar\" -exec mv {} $OUT/jedis.jar \\;\n\nALL_JARS=\"jedis.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac -cp $BUILD_CLASSPATH ${SRC}/*.java\ninstall ${SRC}/*.class ${OUT}/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\necho \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-11/\\\" \\\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jersey": {
        "name": "jersey",
        "language": "jvm",
        "homepage": "https://github.com/eclipse-ee4j/jersey",
        "main_repo": "https://github.com/eclipse-ee4j/jersey.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/eclipse-ee4j/jersey\"\nlanguage: jvm\nmain_repo: \"https://github.com/eclipse-ee4j/jersey.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS -Pstaging\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"core-server/target/jersey-server-$CURRENT_VERSION.jar\" \"$OUT/jersey-server.jar\"\ncp \"core-common/target/jersey-common-$CURRENT_VERSION.jar\" \"$OUT/jersey-common.jar\"\ncp \"core-client/target/jersey-client-$CURRENT_VERSION.jar\" \"$OUT/jersey-client.jar\"\ncp \"bundles/jaxrs-ri/target/jaxrs-ri.jar\" \"$OUT/jaxrs-ri.jar\"\n\nALL_JARS=\"jersey-server.jar jersey-common.jar jersey-client.jar jaxrs-ri.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jettison": {
        "name": "jettison",
        "language": "jvm",
        "homepage": "https://github.com/jettison-json/jettison",
        "main_repo": "https://github.com/jettison-json/jettison.git",
        "primary_contact": null,
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/jettison-json/jettison\nlanguage: jvm\nmain_repo: https://github.com/jettison-json/jettison.git\nsanitizers:\n- address\nvendor_ccs:\n- glendowne@code-intelligence.com\n- wagner@code-intelligence.com\n- patrice.salathe@code-intelligence.com\n- yakdan@code-intelligence.com\n- hlin@code-intelligence.com\n- bug-disclosure@code-intelligence.com",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/jettison-$CURRENT_VERSION.jar\" $OUT/jettison.jar\n\nALL_JARS=\"jettison.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jetty": {
        "name": "jetty",
        "language": "jvm",
        "homepage": "www.eclipse.org/jetty",
        "main_repo": "https://github.com/eclipse/jetty.project",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"www.eclipse.org/jetty\"\nlanguage: jvm\nmain_repo: \"https://github.com/eclipse/jetty.project\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=jetty\nPROJECT_GROUP_ID=org.eclipse.jetty\nPROJECT_ARTIFACT_ID=jetty-project\nMAIN_REPOSITORY=https://github.com/eclipse/jetty.project\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=11 -Djavac.target.version=11 -Denforcer.skip=true -DskipTests\"\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  FUZZ_TARGET_DEPENDENCIES=\":jetty-http :jetty-server :jetty-util :jetty-io :jetty-runner :jetty-client .http2:http2-common .http2:http2-server\"\n  \n  for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS) \n  $MVN -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n  \n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent/fuzz-targets -name '*Fuzzer.java' ! -name WebAppDefaultServletFuzzer.java); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\n  # disable NamingContextLookup sanitizer for WebAppDefaultServletFuzzer.java\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.WebAppDefaultServletFuzzer \\\n--disabled_hooks=com.code_intelligence.jazzer.sanitizers.NamingContextLookup \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/WebAppDefaultServletFuzzer\n  chmod u+x $OUT/WebAppDefaultServletFuzzer\n\n  # add keystore to location required by SslConnectionFuzzer\n  mkdir -p /out/src/test/resources\n  cp $SRC/project-parent/jetty/jetty-io/src/test/resources/keystore.p12 /out/src/test/resources/\n\nfi"
    },
    "jflex": {
        "name": "jflex",
        "language": "jvm",
        "homepage": "https://github.com/jflex-de/jflex",
        "main_repo": "https://github.com/jflex-de/jflex",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jflex-de/jflex\nmain_repo: https://github.com/jflex-de/jflex\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"jflex/target/jflex-$CURRENT_VERSION.jar\" $OUT/jflex.jar\n\nALL_JARS=\"jflex.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jfreechart": {
        "name": "jfreechart",
        "language": "jvm",
        "homepage": "https://www.jfree.org/jfreechart/",
        "main_repo": "https://github.com/jfree/jfreechart.git",
        "primary_contact": null,
        "vendor_ccs": [
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.jfree.org/jfreechart/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/jfree/jfreechart.git\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\n\n$MVN package -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\n\ncp \"$SRC/jfreechart/target/jfreechart-$CURRENT_VERSION.jar\" $OUT/\n\nALL_JARS=$(find $OUT/ -name *.jar ! -name jazzer*.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac $SRC/jfreechart/src/main/java/ossfuzz/TestUtils.java\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jimfs": {
        "name": "jimfs",
        "language": "jvm",
        "homepage": "https://github.com/google/jimfs",
        "main_repo": "git@github.com:google/jimfs.git",
        "primary_contact": "cgdecker@google.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/jimfs\"\nlanguage: jvm\nmain_repo: \"git@github.com:google/jimfs.git\"\nprimary_contact: \"cgdecker@google.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"jimfs/target/jimfs-$CURRENT_VERSION.jar\" \"$OUT/jimfs.jar\"\n\nALL_JARS=\"jimfs.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jimp": {
        "name": "jimp",
        "language": "javascript",
        "homepage": "https://github.com/jimp-dev/jimp",
        "main_repo": "https://github.com/jimp-dev/jimp",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jimp-dev/jimp\nlanguage: javascript\nmain_repo: https://github.com/jimp-dev/jimp\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nnpm install --global yarn\nyarn install\nyarn build\nyarn add -W -D @jazzer.js/core\n\n# Build Fuzzers.\ncompile_javascript_fuzzer jimp fuzz.js -i jimp\n"
    },
    "jinja2": {
        "name": "jinja2",
        "language": "python",
        "homepage": "https://github.com/pallets/jinja",
        "main_repo": "https://github.com/pallets/jinja",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pallets/jinja\nlanguage: python\nmain_repo: https://github.com/pallets/jinja\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/jinja\npython3 -m build\npip3 install ./dist/jinja*.whl\n\n# Build jinja2 fuzzers\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "jline3": {
        "name": "jline3",
        "language": "jvm",
        "homepage": "https://github.com/jline/jline3",
        "main_repo": "https://github.com/jline/jline3",
        "primary_contact": null,
        "vendor_ccs": [
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/jline/jline3\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/jline/jline3\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\n\n$MVN package -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\n\ncp \"$SRC/jline3/jline/target/jline-$CURRENT_VERSION.jar\" $OUT/\n\nALL_JARS=$(find $OUT/ -name *.jar ! -name jazzer*.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone "
    },
    "jmespathpy": {
        "name": "jmespathpy",
        "language": "python",
        "homepage": "https://github.com/jmespath/jmespath.py",
        "main_repo": "https://github.com/jmespath/jmespath.py",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/jmespath/jmespath.py\nlanguage: python\nmain_repo: https://github.com/jmespath/jmespath.py\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "jmh": {
        "name": "jmh",
        "language": "jvm",
        "homepage": "https://openjdk.org/projects/code-tools/jmh/",
        "main_repo": "https://github.com/openjdk/jmh",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://openjdk.org/projects/code-tools/jmh/\"\nlanguage: jvm\nmain_repo: \"https://github.com/openjdk/jmh\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-Dmaven.compiler.source=15 -Dmaven.compiler.target=15 -DskipTests\"\nALL_JARS=\"\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/jmh\"\n\t${MVN} package ${MVN_FLAGS}\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd ${SRC}\n\t${MVN} package -DjmhVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/jmh-fuzzer-${CURRENT_VERSION}.jar ${OUT}/jmh-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} jmh-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\tstripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "joblib": {
        "name": "joblib",
        "language": "python",
        "homepage": "https://github.com/joblib/joblib",
        "main_repo": "https://github.com/joblib/joblib",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/joblib/joblib\nmain_repo: https://github.com/joblib/joblib\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "joda-convert": {
        "name": "joda-convert",
        "language": "jvm",
        "homepage": "https://github.com/JodaOrg/joda-convert",
        "main_repo": "https://github.com/JodaOrg/joda-convert.git",
        "primary_contact": "irali@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/JodaOrg/joda-convert\"\nlanguage: jvm\nprimary_contact: \"irali@google.com\"\nmain_repo: \"https://github.com/JodaOrg/joda-convert.git\"\nfile_github_issue: false\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport JAVA_HOME=\"$OUT/open-jdk-17\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\n# Skip ProGuard because it is only needed for tests (which are skipped as well) and\n# because it would fail since `jmods` JDK folder is removed from this Docker image\nMAVEN_ARGS=\"-Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true -Dpmd.skip=true \\\n  -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n  -DperformRelease=True -DbannedDependencies.includes.include=org.apache.maven:maven-embedder:jar:4.0.0-alpha-13-SNAPSHOT\"\n$MVN clean package $MAVEN_ARGS org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./ -name \"joda-convert-$CURRENT_VERSION.jar\" -exec mv {} $OUT/joda-convert.jar \\;\n\nALL_JARS=\"joda-convert.jar\"\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\necho \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-17/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-17/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "joda-time": {
        "name": "joda-time",
        "language": "jvm",
        "homepage": "https://github.com/JodaOrg/joda-time",
        "main_repo": "https://github.com/JodaOrg/joda-time.git",
        "primary_contact": "scolebourne@joda.org",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/JodaOrg/joda-time\"\nlanguage: jvm\nprimary_contact: \"scolebourne@joda.org\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/JodaOrg/joda-time.git\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed -i 's/1.5</1.7</g' pom.xml\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/joda-time-$CURRENT_VERSION.jar\" $OUT/joda-time.jar\n\nALL_JARS=\"joda-time.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n\n\n\n"
    },
    "jolt": {
        "name": "jolt",
        "language": "jvm",
        "homepage": "https://github.com/bazaarvoice/jolt",
        "main_repo": "https://github.com/bazaarvoice/jolt",
        "primary_contact": null,
        "vendor_ccs": [
            "arthur.chan@adalogics.com",
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/bazaarvoice/jolt\nlanguage: jvm\nmain_repo: https://github.com/bazaarvoice/jolt\nsanitizers:\n- address\nvendor_ccs:\n- arthur.chan@adalogics.com\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport TARGET_PACKAGE_PREFIX=\"com.bazaarvoice.jolt.\"\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15 --update-snapshots\"\n$MVN clean -pl \"!cli,!guice\" package $MAVEN_ARGS\n\nBUILD_CLASSPATH=\nRUNTIME_CLASSPATH=\n\nfor JARFILE in $(find ./ -name *.jar)\ndo\n  cp $JARFILE $OUT/\n  BUILD_CLASSPATH=$BUILD_CLASSPATH$OUT/$(basename $JARFILE):\n  RUNTIME_CLASSPATH=$RUNTIME_CLASSPATH\\$this_dir/$(basename $JARFILE):\ndone\n\n# Retrieve apache-common-lang3 library\n# This library provides method to translate primitive type arrays to\n# their respective class object arrays to avoid compilation error.\nwget -P $OUT/ https://repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar\nwget -P $OUT/ https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.15.2/jackson-databind-2.15.2.jar\nwget -P $OUT/ https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.15.2/jackson-core-2.15.2.jar\nwget -P $OUT/ https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.15.2/jackson-annotations-2.15.2.jar\n\nBUILD_CLASSPATH=$BUILD_CLASSPATH:$JAZZER_API_PATH:$OUT/commons-lang3-3.12.0.jar:$OUT/jackson-databind-2.15.2.jar:$OUT/jackson-core-2.15.2.jar:$OUT/jackson-annotations-2.15.2.jar\nRUNTIME_CLASSPATH=$RUNTIME_CLASSPATH:\\$this_dir/commons-lang3-3.12.0.jar:\\$this_dir/jackson-databind-2.15.2.jar:\\$this_dir/jackson-core-2.15.2.jar:\\$this_dir/jackson-annotations-2.15.2.jar:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "joni": {
        "name": "joni",
        "language": "jvm",
        "homepage": "https://github.com/jruby/joni",
        "main_repo": "https://github.com/jruby/joni",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jruby/joni\nmain_repo: https://github.com/jruby/joni\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false dependency:copy-dependencies\n\nJARFILE_LIST=\nfor JARFILE in $(find ./target  -name *.jar)\ndo\n  cp $JARFILE $OUT/\n  JARFILE_LIST=\"$JARFILE_LIST$(basename $JARFILE) \"\ndone\n\ncurr_dir=$PWD\nrm -rf $OUT/jar_temp\nmkdir $OUT/jar_temp\ncd $OUT/jar_temp\nfor JARFILE in $JARFILE_LIST\ndo\n  jar -xf $OUT/$JARFILE\ndone\ncd $curr_dir\n\nBUILD_CLASSPATH=$JAZZER_API_PATH:$OUT/jar_temp\nRUNTIME_CLASSPATH=\\$this_dir/jar_temp:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \"\\$0\")\nif [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\nthen\nmem_settings='-Xmx1900m:-Xss900k'\nelse\nmem_settings='-Xmx2048m:-Xss1024k'\nfi\n\nLD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir         \\\n  \\$this_dir/jazzer_driver                                \\\n  --agent_path=\\$this_dir/jazzer_agent_deploy.jar         \\\n  --cp=$RUNTIME_CLASSPATH                                 \\\n  --target_class=$fuzzer_basename                         \\\n  --jvm_args=\"\\$mem_settings\"                             \\\n  \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jooq": {
        "name": "jooq",
        "language": "jvm",
        "homepage": "https://github.com/jOOQ/jOOQ.git",
        "main_repo": "https://github.com/jOOQ/jOOQ.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jOOQ/jOOQ.git\nmain_repo: https://github.com/jOOQ/jOOQ.git\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\nchmod +x $SRC/protoc/bin/protoc\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True -pl jOOQ -pl jOOQ-meta -pl jOOQ-codegen \\\n    dependency:copy-dependencies\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"./jOOQ/target/jooq-$CURRENT_VERSION.jar\" $OUT/jooq.jar\ncp \"./jOOQ-meta/target/jooq-meta-$CURRENT_VERSION.jar\" $OUT/jooq-meta.jar\ncp \"./jOOQ-codegen/target/jooq-codegen-$CURRENT_VERSION.jar\" $OUT/jooq-codegen.jar\n\nJARFILE_LIST=\nfor JARFILE in $(find ./*/target/dependency  -name *.jar)\ndo\n   cp $JARFILE $OUT/\n   JARFILE_LIST=\"$JARFILE_LIST$(basename $JARFILE) \"\ndone\n\ncurr_dir=$(pwd)\nrm -rf $OUT/jar_temp\nmkdir $OUT/jar_temp\ncd $OUT/jar_temp\nfor JARFILE in $JARFILE_LIST\ndo\n  jar -xf $OUT/$JARFILE\ndone\n\ncd $curr_dir\n\nALL_JARS='jooq.jar jooq-meta.jar jooq-codegen.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH:$OUT/jar_temp\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir:\\$this_dir/jar_temp\n\ncp -r $JAVA_HOME $OUT/\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  $JAVA_HOME/bin/javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  export JAVA_HOME=\\$this_dir/$(basename $JAVA_HOME)\n  export LD_LIBRARY_PATH=\"\\$JAVA_HOME/lib/server\":\\$this_dir\n  export PATH=\\$JAVA_HOME/bin:\\$PATH\n\n  \\$this_dir/jazzer_driver                          \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jopt-simple": {
        "name": "jopt-simple",
        "language": "jvm",
        "homepage": "http://jopt-simple.github.io/jopt-simple/",
        "main_repo": "https://github.com/jopt-simple/jopt-simple.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://jopt-simple.github.io/jopt-simple/\"\nlanguage: jvm\nmain_repo: \"https://github.com/jopt-simple/jopt-simple.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-DskipTests\"\nALL_JARS=\"\"\nLIBRARY_NAME=\"jopt-simple\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}\"\n\t${MVN} package ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  \t\t-Dexpression=project.version -q -DforceStdout)\n\t${MVN} ${MVN_FLAGS} install:install-file -Dfile=${SRC}/jopt-simple/net.sf.joptsimple/target/net-sf-joptsimple-${CURRENT_VERSION}.jar \\\n\t\t-DgroupId=\"net.sf.jopt-simple\" \\\n\t\t-DartifactId=\"jopt-simple\" \\\n\t\t-Dversion=\"${CURRENT_VERSION}\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\t\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "jose4j": {
        "name": "jose4j",
        "language": "jvm",
        "homepage": "https://bitbucket.org/b_c/jose4j/wiki/Home",
        "main_repo": "https://bitbucket.org/b_c/jose4j/src/master/",
        "primary_contact": "brian.d.campbell@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://bitbucket.org/b_c/jose4j/wiki/Home\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://bitbucket.org/b_c/jose4j/src/master/\"\nsanitizers:\n  - address\nprimary_contact: \"brian.d.campbell@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=jose4j\nPROJECT_GROUP_ID=org.bitbucket.b_c\nPROJECT_ARTIFACT_ID=jose4j\nMAIN_REPOSITORY=https://bitbucket.org/b_c/jose4j/src/master/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "jpeg-js": {
        "name": "jpeg-js",
        "language": "javascript",
        "homepage": "https://github.com/jpeg-js/jpeg-js",
        "main_repo": "https://github.com/jpeg-js/jpeg-js",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jpeg-js/jpeg-js\nlanguage: javascript\nmain_repo: https://github.com/jpeg-js/jpeg-js\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nnpm install --save-dev @jazzer.js/core \nnpm i\n\n# Build Fuzzers.\ncompile_javascript_fuzzer jpeg-js fuzz_encode.js -i jpeg-js --sync\ncompile_javascript_fuzzer jpeg-js fuzz_decode.js -i jpeg-js --sync"
    },
    "jpegoptim": {
        "name": "jpegoptim",
        "language": "c",
        "homepage": "https://www.kokkonen.net/tjko/projects.html",
        "main_repo": "https://github.com/tjko/jpegoptim.git",
        "primary_contact": "tjko@iki.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://www.kokkonen.net/tjko/projects.html\"\nlanguage: c\nprimary_contact: \"tjko@iki.com\"\nauto_ccs:\n  - \"capuanobailey@gmail.com\"\nmain_repo: \"https://github.com/tjko/jpegoptim.git\"\nfuzzing_engines:\n    - libfuzzer\n    - afl\n    - honggfuzz\n",
        "build_sh": null
    },
    "jq": {
        "name": "jq",
        "language": "c",
        "homepage": "https://jqlang.github.io/jq",
        "main_repo": "https://github.com/jqlang/jq",
        "primary_contact": "cryptonector@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://jqlang.github.io/jq\"\nmain_repo: \"https://github.com/jqlang/jq\"\nlanguage: c\nprimary_contact: \"cryptonector@gmail.com\"\nauto_ccs :\n - \"torreemanuele6@gmail.com\"\n - \"pkoppstein@gmail.com\"\n - \"david@adalogics.com\"\n - \"mattias.wadman@gmail.com\"\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit submodule init\ngit submodule update\nautoreconf -fi\n./configure --with-oniguruma=builtin\nmake -j$(nproc)\n\n$CC $CFLAGS -c tests/jq_fuzz_parse.c \\\n    -I./src -o ./jq_fuzz_parse.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./jq_fuzz_parse.o \\\n    ./.libs/libjq.a ./vendor/oniguruma/src/.libs/libonig.a \\\n    -o $OUT/jq_fuzz_parse -I./src\n\n$CC $CFLAGS -c tests/jq_fuzz_compile.c \\\n    -I./src -o ./jq_fuzz_compile.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./jq_fuzz_compile.o \\\n    ./.libs/libjq.a ./vendor/oniguruma/src/.libs/libonig.a \\\n    -o $OUT/jq_fuzz_compile -I./src\n\n$CC $CFLAGS -c tests/jq_fuzz_load_file.c \\\n    -I./src -o ./jq_fuzz_load_file.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./jq_fuzz_load_file.o \\\n    ./.libs/libjq.a ./vendor/oniguruma/src/.libs/libonig.a \\\n    -o $OUT/jq_fuzz_load_file -I./src\n\n$CC $CFLAGS -c tests/jq_fuzz_parse_extended.c \\\n    -I./src -o ./jq_fuzz_parse_extended.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./jq_fuzz_parse_extended.o \\\n    ./.libs/libjq.a ./vendor/oniguruma/src/.libs/libonig.a \\\n    -o $OUT/jq_fuzz_parse_extended -I./src\n\n$CC $CFLAGS -c tests/jq_fuzz_parse_stream.c \\\n    -I./src -o ./jq_fuzz_parse_stream.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./jq_fuzz_parse_stream.o \\\n    ./.libs/libjq.a ./vendor/oniguruma/src/.libs/libonig.a \\\n    -o $OUT/jq_fuzz_parse_stream -I./src\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./tests/jq_fuzz_execute.cpp \\\n    -I./src \\\n    ./.libs/libjq.a ./vendor/oniguruma/src/.libs/libonig.a\\\n    -o $OUT/jq_fuzz_execute -I./src\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./tests/jq_fuzz_fixed.cpp \\\n    -I./src \\\n    ./.libs/libjq.a ./vendor/oniguruma/src/.libs/libonig.a \\\n    -o $OUT/jq_fuzz_fixed -I./src\n\n\n# Build corpus\nmkdir $SRC/seeds\nfind . -name \"*.jq\" -exec cp {} $SRC/seeds/ \\;\nzip -rj $OUT/jq_fuzz_execute_seed_corpus.zip $SRC/seeds/\n\n# Copy dictionary\ncp $SRC/jq.dict $OUT/jq_fuzz_execute.dict\n"
    },
    "js-yaml": {
        "name": "js-yaml",
        "language": "javascript",
        "homepage": "https://github.com/nodeca/js-yaml",
        "main_repo": "https://github.com/nodeca/js-yaml",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/nodeca/js-yaml\nlanguage: javascript\nmain_repo: https://github.com/nodeca/js-yaml\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install dependencies.\nnpm install\nnpm install --save-dev @jazzer.js/core\n\n# Build Fuzzers.\ncompile_javascript_fuzzer js-yaml fuzz.js -i js-yaml --sync\n"
    },
    "jsc": {
        "name": "jsc",
        "language": "c++",
        "homepage": "https://webkit.org/",
        "main_repo": "https://github.com/WebKit/WebKit.git",
        "primary_contact": "ddkilzer@apple.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "none"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: https://webkit.org/\nlanguage: c++\nprimary_contact: \"ddkilzer@apple.com\"\nauto_ccs:\n  - \"mark.lam@apple.com\"\n  - \"ddkilzer@apple.com\"\n  - \"jfb@chromium.org\"\n  - \"product-security@apple.com\"\n  - \"sbarati@apple.com\"\n  - \"simon.lewis@apple.com\"\n  - \"ysuzuki@apple.com\"\n  - \"dkishore@apple.com\"\n  - \"phan@apple.com\"\n  - \"lglovin@apple.com\"\n  - \"ebanniettis@apple.com\"\n  - \"jm.park@apple.com\"\n  - \"james_e_kim@apple.com\"\n  - \"rding23@apple.com\"\n  - \"albassam@apple.com\"\nfuzzing_engines:\n  - none\nsanitizers:\n  - address\nblackbox: true\nmain_repo: 'https://github.com/WebKit/WebKit.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nexport DEPS_PATH=/src/deps\nmkdir $DEPS_PATH\n\n# build ICU for linking statically.\ncd $SRC/icu/source\n./configure --disable-shared --enable-static --disable-layoutex \\\n  --disable-tests --disable-samples --with-data-packaging=static --prefix=$DEPS_PATH\nmake install -j$(nproc)\n\n# Ugly ugly hack to get static linking to work for icu.\ncd $DEPS_PATH/lib\nls *.a | xargs -n1 ar x\nrm *.a\nar r libicu.a *.{ao,o}\nln -s libicu.a libicudata.a\nln -s libicu.a libicuuc.a\nln -s libicu.a libicui18n.a\n\nexport CFLAGS=\"$CFLAGS -DU_STATIC_IMPLEMENTATION\"\nexport CXXFLAGS=\"$CXXFLAGS -DU_STATIC_IMPLEMENTATION\"\nexport ICU_ROOT=$DEPS_PATH\n\ncd $SRC/WebKit\nTools/Scripts/build-jsc \\\n  --debug \\\n  --jsc-only \\\n  --cmakeargs=\"-DENABLE_STATIC_JSC=ON -DUSE_THIN_ARCHIVES=OFF -DWEBKIT_LIBRARIES_DIR=$DEPS_PATH -DWEBKIT_LIBRARIES_INCLUDE_DIR=$DEPS_PATH/include -DWEBKIT_LIBRARIES_LINK_DIR=$DEPS_PATH/lib\" \\\n  --makeargs='-v'\n\ncp WebKitBuild/JSCOnly/Debug/bin/jsc $OUT\n"
    },
    "jsch": {
        "name": "jsch",
        "language": "jvm",
        "homepage": "https://github.com/mwiede/jsch",
        "main_repo": "https://github.com/mwiede/jsch",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/mwiede/jsch\"\nlanguage: jvm\nmain_repo: \"https://github.com/mwiede/jsch\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nSRC_SUBDIR=\"\"\nMVN_FLAGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\nALL_JARS=\"\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.14.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}/${SRC_SUBDIR}\"\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}-fuzzer\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\t\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "jsemver": {
        "name": "jsemver",
        "language": "jvm",
        "homepage": "https://github.com/zafarkhaja/jsemver",
        "main_repo": "https://github.com/zafarkhaja/jsemver",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/zafarkhaja/jsemver\nmain_repo: https://github.com/zafarkhaja/jsemver\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"target/java-semver-$CURRENT_VERSION.jar\" $OUT/jsemver.jar\n\nALL_JARS=\"jsemver.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir     \\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar     --cp=$RUNTIME_CLASSPATH     --target_class=$fuzzer_basename     --jvm_args=\"\\$mem_settings\"     \\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jsign": {
        "name": "jsign",
        "language": "jvm",
        "homepage": "https://ebourg.github.io/jsign/",
        "main_repo": "https://github.com/ebourg/jsign.git",
        "primary_contact": "ebourg@apache.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://ebourg.github.io/jsign/\"\nlanguage: jvm\nprimary_contact: \"ebourg@apache.org\"\nauto_ccs:\n  - \"emmanuel.bourg@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/ebourg/jsign.git\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$MVN package --projects jsign-crypto,jsign-core,jsign-cli,jsign-ant,jsign \\\n    -DskipTests -Dmaven.javadoc.skip -Djacoco.skip -Dproguard.skip -Djapicmp.skip -Djdeb.skip -Dmaven.antrun.skip\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n\ncp \"jsign/target/jsign-$CURRENT_VERSION.jar\" $OUT/jsign.jar\n\ncp \"jsign-core/src/test/resources/keystores/keystore.jks\" $OUT/\n\ncp $SRC/*seed_corpus.zip $OUT/\n\nPROJECT_JARS=\"jsign.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the Jazzer API.\nBUILD_CLASSPATH=$(echo $PROJECT_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $PROJECT_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings:-Djava.awt.headless=true\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "jsmin": {
        "name": "jsmin",
        "language": "python",
        "homepage": "https://github.com/tikitu/jsmin",
        "main_repo": "https://github.com/tikitu/jsmin",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/tikitu/jsmin\nlanguage: python\nmain_repo: https://github.com/tikitu/jsmin\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "json-c": {
        "name": "json-c",
        "language": "c++",
        "homepage": "https://json-c.github.io/json-c/",
        "main_repo": "https://github.com/json-c/json-c.git",
        "primary_contact": "erh+git@nimenees.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://json-c.github.io/json-c/\"\nlanguage: c++\nprimary_contact: \"erh+git@nimenees.com\"\nauto_ccs:\n  - \"chriswwolfe@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/json-c/json-c.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nmkdir json-c-build\ncd json-c-build\ncmake -DBUILD_SHARED_LIBS=OFF ..\nmake -j$(nproc)\ncd ..\n\ncp $SRC/json-c/fuzz/*.dict $OUT/\n\nfor f in $SRC/json-c/fuzz/*_fuzzer.cc; do\n    fuzzer=$(basename \"$f\" _fuzzer.cc)\n    $CXX $CXXFLAGS -std=c++11 -I$SRC/json-c -I$SRC/json-c/json-c-build\\\n         $SRC/json-c/fuzz/${fuzzer}_fuzzer.cc -o $OUT/${fuzzer}_fuzzer \\\n         $LIB_FUZZING_ENGINE $SRC/json-c/json-c-build/libjson-c.a\ndone\n"
    },
    "json-flattener": {
        "name": "json-flattener",
        "language": "jvm",
        "homepage": "https://github.com/wnameless/json-flattener/",
        "main_repo": "https://github.com/wnameless/json-flattener/",
        "primary_contact": "wnameless@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/wnameless/json-flattener/\"\nlanguage: jvm\nprimary_contact: \"wnameless@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/wnameless/json-flattener/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=json-flattener\nPROJECT_GROUP_ID=com.github.wnameless.json\nPROJECT_ARTIFACT_ID=json-flattener\nMAIN_REPOSITORY=https://github.com/wnameless/json-flattener/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests -Dgpg.skip\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "json-java": {
        "name": "json-java",
        "language": "jvm",
        "homepage": "https://github.com/stleary/JSON-java",
        "main_repo": "https://github.com/stleary/JSON-java",
        "primary_contact": "jsonjava060@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/stleary/JSON-java\"\nlanguage: jvm\nprimary_contact: \"jsonjava060@gmail.com\"\nmain_repo: \"https://github.com/stleary/JSON-java\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd src/main/java\n\njavac org/json/*.java\njar cf $OUT/json-java.jar org/json/*.class\n\nALL_JARS=\"json-java.jar\"\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\n# Let's try and build a simple fuzzer.\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n\n"
    },
    "json-patch": {
        "name": "json-patch",
        "language": "go",
        "homepage": "https://github.com/evanphx/json-patch",
        "main_repo": "https://github.com/evanphx/json-patch",
        "primary_contact": "evan@phx.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/evanphx/json-patch\"\nprimary_contact: \"evan@phx.io\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/evanphx/json-patch'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/evanphx/json-patch FuzzCreateMerge fuzz_create_merge\ncompile_go_fuzzer github.com/evanphx/json-patch FuzzDecodeApply fuzz_decode_apply\n"
    },
    "json-sanitizer": {
        "name": "json-sanitizer",
        "language": "jvm",
        "homepage": "https://github.com/OWASP/json-sanitizer",
        "main_repo": "https://github.com/OWASP/json-sanitizer",
        "primary_contact": "mikesamuel@gmail.com",
        "vendor_ccs": [
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/OWASP/json-sanitizer\"\nlanguage: jvm\nprimary_contact: \"mikesamuel@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/OWASP/json-sanitizer\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\n# Build the json-sanitizer jar.\nCURRENT_VERSION=$(mvn org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\nmvn package\ncp \"target/json-sanitizer-$CURRENT_VERSION.jar\" $OUT/json-sanitizer.jar\n\n# The jar files containing the project (separated by spaces).\nPROJECT_JARS=json-sanitizer.jar\n\n# Get the fuzzer dependencies (gson).\nmvn dependency:copy -Dartifact=com.google.code.gson:gson:2.8.6 -DoutputDirectory=$OUT/\n\n# The jar files containing further dependencies of the fuzz targets (separated\n# by spaces).\nFUZZER_JARS=gson-2.8.6.jar\n\n# Build fuzzers in $OUT.\nALL_JARS=\"$PROJECT_JARS $FUZZER_JARS\"\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All jars and class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):.:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create execution wrapper.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "json-simple": {
        "name": "json-simple",
        "language": "jvm",
        "homepage": "https://github.com/fangyidong/json-simple",
        "main_repo": "https://github.com/fangyidong/json-simple",
        "primary_contact": null,
        "vendor_ccs": [
            "michael.nothhard@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/fangyidong/json-simple\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/fangyidong/json-simple\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"michael.nothhard@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=json-simple\nPROJECT_GROUP_ID=com.googlecode.json-simple\nPROJECT_ARTIFACT_ID=json-simple\nMAIN_REPOSITORY=https://github.com/fangyidong/json-simple\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  mvn -pl $PROJECT install -DskipTests\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  $MVN -pl $PROJECT install -DskipTests -Dmaven.repo.local=$OUT/m2\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings:-Djava.awt.headless=true\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi\n"
    },
    "json-smart-v2": {
        "name": "json-smart-v2",
        "language": "jvm",
        "homepage": "https://github.com/netplex/json-smart-v2",
        "main_repo": "https://github.com/netplex/json-smart-v2.git",
        "primary_contact": "uchemouni@gmail.com",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/netplex/json-smart-v2\"\nlanguage: jvm\nprimary_contact: \"uchemouni@gmail.com\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/netplex/json-smart-v2.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15 \\\n-Dmaven.javadoc.skip=true -Dmaven.repo.local=$WORK/m2\"\n\n# first install accessors-smart in local $WORK/m2. json-smart depends on it\ncd accessors-smart\n$MVN install $MAVEN_ARGS\ncd ..\n\n# build the actual json-smart\ncd json-smart\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/json-smart-$CURRENT_VERSION.jar\" $OUT/json-smart.jar\n# do not include accessors-smart.jar in ALL_JARS as it is already included with\n# maven-shade-plugin:3.2.4:shade\nALL_JARS=\"json-smart.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "json": {
        "name": "json",
        "language": "c++",
        "homepage": "https://github.com/nlohmann/json",
        "main_repo": "https://github.com/nlohmann/json.git",
        "primary_contact": "niels.lohmann@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/nlohmann/json\"\nlanguage: c++\nprimary_contact: \"niels.lohmann@gmail.com\"\nauto_ccs:\n  - \"tanujgarg@google.com\"\nsanitizers:\n - address\n - undefined\n - memory\nmain_repo: 'https://github.com/nlohmann/json.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmake FUZZER_ENGINE=\"$LIB_FUZZING_ENGINE\" fuzzers -Ctests\n\nFUZZER_FILES=$(find tests/ -maxdepth 1 -executable -type f)\nfor F in $FUZZER_FILES; do\n    cp $F $OUT/\n    FUZZER=$(basename $F .cpp)\n    cp $SRC/fuzzer-parse.options $OUT/$FUZZER.options\ndone\ncp $SRC/parse_afl_fuzzer.dict $OUT/\n"
    },
    "json2avro": {
        "name": "json2avro",
        "language": "jvm",
        "homepage": "https://github.com/allegro/json-avro-converter",
        "main_repo": "https://github.com/allegro/json-avro-converter",
        "primary_contact": null,
        "vendor_ccs": [
            "arthur.chan@adalogics.com",
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/allegro/json-avro-converter\nlanguage: jvm\nmain_repo: https://github.com/allegro/json-avro-converter\nsanitizers:\n- address\nvendor_ccs:\n- arthur.chan@adalogics.com\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit apply $SRC/patch.diff\n\nchmod +x ./gradlew\n./gradlew clean build -x test\n\nBUILD_CLASSPATH=\nRUNTIME_CLASSPATH=\n\nfor JARFILE in $(find ./ -name *.jar)\ndo\n  cp $JARFILE $OUT/\n  BUILD_CLASSPATH=$BUILD_CLASSPATH$OUT/$(basename $JARFILE):\n  RUNTIME_CLASSPATH=$RUNTIME_CLASSPATH\\$this_dir/$(basename $JARFILE):\ndone\n\n# Retrieve apache-common-lang3 library\n# This library provides method to translate primitive type arrays to\n# their respective class object arrays to avoid compilation error.\nwget -P $OUT/ https://repo1.maven.org/maven2/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar\n\nBUILD_CLASSPATH=$BUILD_CLASSPATH:$JAZZER_API_PATH:$OUT/commons-lang3-3.12.0.jar\nRUNTIME_CLASSPATH=$RUNTIME_CLASSPATH:\\$this_dir/commons-lang3-3.12.0.jar:\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "json5format": {
        "name": "json5format",
        "language": "rust",
        "homepage": "https://crates.io/crates/json5format",
        "main_repo": "https://github.com/google/json5format",
        "primary_contact": "richkadel@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://crates.io/crates/json5format\"\nmain_repo: \"https://github.com/google/json5format\"\nprimary_contact: \"richkadel@google.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"david@adalogics.com\"\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/json5format\ncargo fuzz build -O\ncp ./fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_parse $OUT/fuzz_parse\n"
    },
    "jsoncons": {
        "name": "jsoncons",
        "language": "c++",
        "homepage": "https://github.com/danielaparker/jsoncons",
        "main_repo": "https://github.com/danielaparker/jsoncons",
        "primary_contact": "danielaparker@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/danielaparker/jsoncons\"\nprimary_contact: \"danielaparker@gmail.com\"\nlanguage: c++\nauto_ccs :\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/danielaparker/jsoncons'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd jsoncons/fuzzers\n\n# Ensure script is executable\nchmod +x ./build_fuzzers.sh\n./build_fuzzers.sh\n"
    },
    "jsoncpp": {
        "name": "jsoncpp",
        "language": "c++",
        "homepage": "https://github.com/open-source-parsers/jsoncpp/",
        "main_repo": "https://github.com/open-source-parsers/jsoncpp",
        "primary_contact": "chenguopingdota@163.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/open-source-parsers/jsoncpp/\"\nlanguage: c++\nprimary_contact: \"chenguopingdota@163.com\"\nauto_ccs:\n - \"jophba@chromium.org\"\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nmain_repo: 'https://github.com/open-source-parsers/jsoncpp'\ncoverage_extra_args: -ignore-filename-regex=.*/LPM/.*\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed -i 's/set(CMAKE_CXX_STANDARD 11)/set(CMAKE_CXX_STANDARD 17)/' CMakeLists.txt\n\nmkdir -p build\ncd build\ncmake -DCMAKE_CXX_COMPILER=$CXX -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n      -DBUILD_SHARED_LIBS=OFF -G \"Unix Makefiles\" ..\nmake\n\n# Compile fuzzer.\n$CXX $CXXFLAGS -I../include $LIB_FUZZING_ENGINE \\\n    ../src/test_lib_json/fuzz.cpp -o $OUT/jsoncpp_fuzzer \\\n    lib/libjsoncpp.a\n\n# Add dictionary.\ncp $SRC/jsoncpp/src/test_lib_json/fuzz.dict $OUT/jsoncpp_fuzzer.dict\n\nif [[ $CFLAGS != *sanitize=memory* ]]; then\n# Compile json proto.\nrm -rf genfiles && mkdir genfiles && ../LPM/external.protobuf/bin/protoc json.proto --cpp_out=genfiles --proto_path=$SRC\n\n# Compile LPM fuzzer.\n$CXX $CXXFLAGS -DNDEBUG -I genfiles -I .. -I ../libprotobuf-mutator/ -I ../LPM/external.protobuf/include -I ../include $LIB_FUZZING_ENGINE \\\n    $SRC/jsoncpp_fuzz_proto.cc genfiles/json.pb.cc $SRC/json_proto_converter.cc \\\n    ../LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n    ../LPM/src/libprotobuf-mutator.a \\\n    -Wl,--start-group ../LPM/external.protobuf/lib/lib*.a -Wl,--end-group \\\n    -o  $OUT/jsoncpp_proto_fuzzer \\\n    lib/libjsoncpp.a\nfi\n"
    },
    "jsonnet": {
        "name": "jsonnet",
        "language": "c++",
        "homepage": "https://github.com/google/jsonnet",
        "main_repo": "https://github.com/google/jsonnet.git",
        "primary_contact": "dcunnin@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/jsonnet\"\nlanguage: c++\nprimary_contact: \"dcunnin@google.com\"\nauto_ccs:\n  - \"sparkprime@gmail.com\"\n  - \"jpa.bartholomew@gmail.com\"\n  - \"jpab@google.com\"\n\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n# - memory\n  - undefined\n\nlabels:\n  convert_jsonnet_fuzzer:\n    - sundew\n\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/google/jsonnet.git'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir jsonnet/build\npushd jsonnet/build\ncmake -DCMAKE_C_COMPILER=\"$CC\" -DCMAKE_CXX_COMPILER=\"$CXX\" \\\n  -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" -DBUILD_TESTS=OFF ..\nmake -j$(nproc) libjsonnet_static\npopd\n\nINSTALL_DIR=\"$SRC/jsonnet\"\n\nfor fuzzer in convert_jsonnet_fuzzer_regular \\\n convert_jsonnet_fuzzer_stream \\\n convert_jsonnet_fuzzer_multi; do\n  $CXX $CXXFLAGS -I${INSTALL_DIR}/include $LIB_FUZZING_ENGINE \\\n    $fuzzer.cc -o $OUT/$fuzzer \\\n    ${INSTALL_DIR}/build/libjsonnet.a \\\n    ${INSTALL_DIR}/build/libmd5.a \\\n    ${INSTALL_DIR}/build/libryml.a\ndone\n"
    },
    "jsonp-api": {
        "name": "jsonp-api",
        "language": "jvm",
        "homepage": "https://github.com/jakartaee/jsonp-api",
        "main_repo": "https://github.com/jakartaee/jsonp-api",
        "primary_contact": null,
        "vendor_ccs": [
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/jakartaee/jsonp-api\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/jakartaee/jsonp-api\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\n\ncd tck\n$MVN -U -C clean package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\ncp tck-common/target/jakarta*.jar $OUT/\ncp tck-tests/target/jakarta*.jar $OUT/\ncd ..\ncd api\n$MVN -U -C clean package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade -DskipTests -Dmaven.test.skip=true -Dmaven.javadoc.skip=true\ncp target/jakarta*.jar $OUT/\ncd ..\n\n# parsson dependencies need to be downloaded manually\n$MVN dependency:get -Dartifact=org.eclipse.parsson:parsson:1.1.1\ncp ~/.m2/repository/org/eclipse/parsson/parsson/1.1.1/*.jar $OUT/\n\nALL_JARS=$(find $OUT/ -name *.jar ! -name jazzer*.jar -printf \"%f \")\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  mv $SRC/*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone "
    },
    "jsonparser": {
        "name": "jsonparser",
        "language": "go",
        "homepage": "https://github.com/buger/jsonparser",
        "main_repo": "https://github.com/buger/jsonparser",
        "primary_contact": "leonsbox@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/buger/jsonparser\"\nprimary_contact: \"leonsbox@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"leloucharcher@gmail.com\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nmain_repo: 'https://github.com/buger/jsonparser'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./oss-fuzz-build.sh\n"
    },
    "jsonpath": {
        "name": "jsonpath",
        "language": "jvm",
        "homepage": "https://goessner.net/articles/JsonPath/",
        "main_repo": "https://github.com/json-path/JsonPath.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://goessner.net/articles/JsonPath/\"\nlanguage: jvm\nmain_repo: \"https://github.com/json-path/JsonPath.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"\"\nALL_JARS=\"\"\nLIBRARY_NAME=\"jsonpath\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\n\npushd \"${SRC}/JsonPath\"\n\t./gradlew publishToMavenLocal\n\tCURRENT_VERSION=$(./gradlew properties --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\npopd\n\npushd \"${SRC}\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "jsonpickle": {
        "name": "jsonpickle",
        "language": "python",
        "homepage": "https://github.com/jsonpickle/jsonpickle",
        "main_repo": "https://github.com/jsonpickle/jsonpickle",
        "primary_contact": "davvid@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jsonpickle/jsonpickle\nmain_repo: https://github.com/jsonpickle/jsonpickle\nlanguage: python\nprimary_contact: \"davvid@gmail.com\"\nauto_ccs:\n  - \"theelgirl4@gmail.com\"\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n. \"$SRC/jsonpickle/fuzzing/oss-fuzz-scripts/build.sh\"\n"
    },
    "jsonschema": {
        "name": "jsonschema",
        "language": "python",
        "homepage": "https://github.com/Julian/jsonschema",
        "main_repo": "https://github.com/Julian/jsonschema",
        "primary_contact": "Julian+Security@GrayVines.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/Julian/jsonschema\"\nlanguage: python\nprimary_contact: \"Julian+Security@GrayVines.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/Julian/jsonschema'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data $SRC/jsonschema_specifications/jsonschema_specifications/schemas:jsonschema_specifications/schemas\ndone\n"
    },
    "jsoup": {
        "name": "jsoup",
        "language": "jvm",
        "homepage": "https://github.com/jhy/jsoup/",
        "main_repo": "https://github.com/jhy/jsoup/",
        "primary_contact": "jonathan@hedley.net",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/jhy/jsoup/\"\nlanguage: jvm\nprimary_contact: \"jonathan@hedley.net\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/jhy/jsoup/\"\nsanitizers:\n  - address\nauto_ccs:\n  - \"ffrr33aakk@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/jsoup-$CURRENT_VERSION.jar\" $OUT/jsoup.jar\n\nALL_JARS=\"jsoup.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jsqlparser": {
        "name": "jsqlparser",
        "language": "jvm",
        "homepage": "https://jsqlparser.github.io/JSqlParser/index.html",
        "main_repo": "https://github.com/JSQLParser/JSqlParser/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://jsqlparser.github.io/JSqlParser/index.html\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/JSQLParser/JSqlParser/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=jsqlparser\nPROJECT_GROUP_ID=com.github.jsqlparser\nPROJECT_ARTIFACT_ID=jsqlparser\nMAIN_REPOSITORY=https://github.com/JSQLParser/JSqlParser/\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  export JAVA_HOME=\"$OUT/open-jdk-11\"\n  mkdir -p $JAVA_HOME\n  rsync -aL --exclude=*.zip --exclude 'lib/security/blacklisted.certs' \"/usr/lib/jvm/java-11-openjdk-amd64/\" \"$JAVA_HOME\"\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-11/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-17/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**:net.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "jstl-api": {
        "name": "jstl-api",
        "language": "jvm",
        "homepage": "https://github.com/eclipse-ee4j/jstl-api",
        "main_repo": "https://github.com/eclipse-ee4j/jstl-api.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/eclipse-ee4j/jstl-api\"\nlanguage: jvm\nmain_repo: \"https://github.com/eclipse-ee4j/jstl-api.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nSRC_SUBDIR=\"\"\nMVN_FLAGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\nALL_JARS=\"\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.14.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}/${SRC_SUBDIR}\"\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\npopd\n\n#this package uses multiple versions [...]\npushd \"${SRC}/${LIBRARY_NAME}/api\"\n\tCURRENT_VERSION_API=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\npopd\npushd \"${SRC}/${LIBRARY_NAME}/impl\"\n\tCURRENT_VERSION_IMPL=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}-fuzzer\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" \\\n\t\t-DapiVersion=\"${CURRENT_VERSION_API}\" \\\n\t\t-DimplVersion=\"${CURRENT_VERSION_IMPL}\" \\\n\t\t${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\t\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "jts": {
        "name": "jts",
        "language": "jvm",
        "homepage": "https://github.com/locationtech/jts",
        "main_repo": "https://github.com/locationtech/jts",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/locationtech/jts\nmain_repo: https://github.com/locationtech/jts\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\nchmod +x $SRC/protoc/bin/protoc\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"modules/core/target/jts-core-$CURRENT_VERSION.jar\" $OUT/jts-core.jar\ncp \"modules/lab/target/jts-lab-$CURRENT_VERSION.jar\" $OUT/jts-lab.jar\ncp \"modules/io/common/target/jts-io-common-$CURRENT_VERSION.jar\" $OUT/jts-io-common.jar\ncp \"modules/app/target/jts-app-$CURRENT_VERSION.jar\" $OUT/jts-app.jar\n\nALL_JARS=\"jts-core.jar:jts-lab.jar:jts-io-common.jar:jts-app.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name 'JtsFuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "juju": {
        "name": "juju",
        "language": "go",
        "homepage": "https://juju.is",
        "main_repo": "https://github.com/juju/juju",
        "primary_contact": "stickupkid@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://juju.is\"\nmain_repo: \"https://github.com/juju/juju\"\nprimary_contact: \"stickupkid@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo mod download\n# A fuzzer in this dependency is broken:\nfind /root/go/pkg/mod/github.com/aws/aws-sdk-go-v2 -name \"*fuzz.go\" -exec rm -rf {} \\;\n\n# Compile fuzzer:\nmv $SRC/devices_fuzzer.go $SRC/juju/core/devices/\ncompile_go_fuzzer github.com/juju/juju/core/devices Fuzz devices_fuzzer\n"
    },
    "jul-to-slf4j": {
        "name": "jul-to-slf4j",
        "language": "jvm",
        "homepage": "https://www.slf4j.org/",
        "main_repo": "https://github.com/qos-ch/slf4j.git",
        "primary_contact": "dev.qos.ch@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.slf4j.org/\"\nlanguage: jvm\nprimary_contact: \"dev.qos.ch@gmail.com\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/qos-ch/slf4j.git\"\nauto_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"jul-to-slf4j/target/jul-to-slf4j-$CURRENT_VERSION.jar\" $OUT/jul-to-slf4j.jar\n\nALL_JARS=\"jul-to-slf4j.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "junrar": {
        "name": "junrar",
        "language": "jvm",
        "homepage": "https://github.com/junrar/junrar",
        "main_repo": "https://github.com/junrar/junrar.git",
        "primary_contact": null,
        "vendor_ccs": [
            "all.u.ever.know@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/junrar/junrar\nlanguage: jvm\nmain_repo: https://github.com/junrar/junrar.git\nsanitizers:\n- address\nvendor_ccs:\n- all.u.ever.know@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/*.zip $OUT\n#mv $SRC/{*.zip,*.dict} $OUT\n\n./gradlew build\nCURRENT_VERSION=$(./gradlew properties --no-daemon --console=plain -q | grep \"^version:\" | awk '{printf $2}')\ncp \"build/libs/junrar-$CURRENT_VERSION-sources.jar\" $OUT/junrar.jar\n\ncurl -L https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar -o $OUT/slf4j-api.jar\ncurl -L https://repo1.maven.org/maven2/org/slf4j/slf4j-simple/1.7.36/slf4j-simple-1.7.36.jar -o $OUT/slf4j-simple.jar\n\nALL_JARS=\"junrar.jar slf4j-api.jar slf4j-simple.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "jupyter-nbconvert": {
        "name": "jupyter-nbconvert",
        "language": "python",
        "homepage": "https://github.com/jupyter/nbconvert",
        "main_repo": "https://github.com/jupyter/nbconvert",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jupyter/nbconvert\nlanguage: python\nmain_repo: https://github.com/jupyter/nbconvert\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "jupyter_server": {
        "name": "jupyter_server",
        "language": "python",
        "homepage": "https://github.com/jupyter-server/jupyter_server",
        "main_repo": "https://github.com/jupyter-server/jupyter_server",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/jupyter-server/jupyter_server\nlanguage: python\nmain_repo: https://github.com/jupyter-server/jupyter_server\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install -e \".[test]\"\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data $SRC/jupyter_events/jupyter_events/schemas/:./jupyter_events/schemas/ --hidden-import=tornado.web\ndone\n"
    },
    "jupytext": {
        "name": "jupytext",
        "language": "python",
        "homepage": "https://jupytext.readthedocs.io/en/latest/developing.html",
        "main_repo": "https://github.com/mwouts/jupytext.git",
        "primary_contact": "marc.wouts@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://jupytext.readthedocs.io/en/latest/developing.html\"\nlanguage: python\nprimary_contact: \"marc.wouts@gmail.com\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\n  - undefined\nmain_repo: \"https://github.com/mwouts/jupytext.git\"\n",
        "build_sh": null
    },
    "jwt-verify-lib": {
        "name": "jwt-verify-lib",
        "language": "c++",
        "homepage": "https://github.com/google/jwt_verify_lib",
        "main_repo": "https://github.com/google/jwt_verify_lib.git",
        "primary_contact": "qiwzhang@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/google/jwt_verify_lib\"\nlanguage: c++\nprimary_contact: \"qiwzhang@google.com\"\nauto_ccs:\n- \"nareddyt@google.com\"\n- \"yangshuo@google.com\"\n- \"taoxuy@google.com\"\nsanitizers:\n- address\n- undefined\n- memory\nmain_repo: 'https://github.com/google/jwt_verify_lib.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbazel_build_fuzz_tests\n"
    },
    "jxls": {
        "name": "jxls",
        "language": "jvm",
        "homepage": "https://github.com/jxlsteam/jxls",
        "main_repo": "https://github.com/jxlsteam/jxls",
        "primary_contact": null,
        "vendor_ccs": [
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/jxlsteam/jxls\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/jxlsteam/jxls\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nCURRENT_VERSION=$(./gradlew properties --no-daemon --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\nmv $SRC/*.dict $OUT\n\ngit apply $SRC/build.patch --whitespace=fix --reject\n\n./gradlew clean shadowJar -x :jxls:javadoc -x :jxls-poi:test\n\ncp \"../jxls/jxls/build/libs/jxls-$CURRENT_VERSION-all.jar\" $OUT/jxls.jar\ncp \"../jxls/jxls-poi/build/libs/jxls-poi-$CURRENT_VERSION-all.jar\" $OUT/jxls-poi.jar\n\nALL_JARS=$(find $OUT/ -name *.jar ! -name jazzer*.jar -printf \"%f \")\n\necho $ALL_JARS\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  #cp $SRC/$fuzzer_basename.class $OUT/\n  cp $SRC/*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone"
    },
    "kafka": {
        "name": "kafka",
        "language": "python",
        "homepage": "https://github.com/confluentinc/confluent-kafka-python",
        "main_repo": "https://github.com/confluentinc/confluent-kafka-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/confluentinc/confluent-kafka-python\nlanguage: python\nmain_repo: https://github.com/confluentinc/confluent-kafka-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "kamailio": {
        "name": "kamailio",
        "language": "c",
        "homepage": "www.kamailio.org",
        "main_repo": "https://github.com/kamailio/kamailio",
        "primary_contact": "ossfuzz@kamailio.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"www.kamailio.org\"\nmain_repo: \"https://github.com/kamailio/kamailio\"\nprimary_contact: \"ossfuzz@kamailio.org\"\nlanguage: c\nauto_ccs:\n  - \"miconda@gmail.com\"\n  - \"david@adalogics.com\"\n  - \"mail@gilawa.com\"\n  - \"qxork.droid@gmail.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/kamailio\n\nexport CC_OPT=\"${CFLAGS}\"\nexport LD_EXTRA_OPTS=\"${CFLAGS}\"\n\nsed -i 's/int main(/int main2(/g' ./src/main.c\n\nexport MEMPKG=sys\nmake Q=verbose || true\ncd src\nmkdir objects && find . -name \"*.o\" -exec cp {} ./objects/ \\;\nar -r libkamilio.a ./objects/*.o\ncd ../\n$CC $CFLAGS -c ./misc/fuzz/fuzz_uri.c \\\n    -DFAST_LOCK -D__CPU_i386 ./src/libkamilio.a \\\n    -I./src/ -I./src/core/parser -ldl -lresolv -lm\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_uri.o -o $OUT/fuzz_uri \\\n    -DFAST_LOCK -D__CPU_i386 ./src/libkamilio.a \\\n    -I./src/ -I./src/core/parser -ldl -lresolv -lm\n\n$CC $CFLAGS  ./misc/fuzz/fuzz_parse_msg.c -c \\\n    -DFAST_LOCK -D__CPU_i386 ./src/libkamilio.a \\\n    -I./src/ -I./src/core/parser -ldl -lresolv -lm\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_parse_msg.o -o $OUT/fuzz_parse_msg \\\n    -DFAST_LOCK -D__CPU_i386 ./src/libkamilio.a \\\n    -I./src/ -I./src/core/parser -ldl -lresolv -lm\n\n"
    },
    "karchive": {
        "name": "karchive",
        "language": "c++",
        "homepage": "https://cgit.kde.org/karchive.git/",
        "main_repo": "https://invent.kde.org/frameworks/karchive.git",
        "primary_contact": "tsdgeos@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: https://cgit.kde.org/karchive.git/\nlanguage: c++\nprimary_contact: tsdgeos@gmail.com\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\nmain_repo: 'https://invent.kde.org/frameworks/karchive.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build zstd\ncd $SRC\ncd zstd\ncmake -S build/cmake -DBUILD_SHARED_LIBS=OFF\nmake install -j$(nproc)\n\n# Build zlib\ncd $SRC\ncd zlib\n./configure --static\nmake install -j$(nproc)\n\n# Build libzip\ncd $SRC\ncd libzip\ncmake . -DBUILD_SHARED_LIBS=OFF\nmake install -j$(nproc)\n\n# Build bzip2\n# Inspired from ../bzip2/build\ncd $SRC\ntar xzf bzip2-*.tar.gz && rm -f bzip2-*.tar.gz\ncd bzip2-*\nSRCL=(blocksort.o huffman.o crctable.o randtable.o compress.o decompress.o bzlib.o)\n\nfor source in ${SRCL[@]}; do\n    name=$(basename $source .o)\n    $CC $CFLAGS -c ${name}.c\ndone\nrm -f libbz2.a\nar cq libbz2.a ${SRCL[@]}\ncp -f bzlib.h /usr/local/include\ncp -f libbz2.a /usr/local/lib\n\n# Build xz\nexport ORIG_CFLAGS=\"${CFLAGS}\"\nexport ORIG_CXXFLAGS=\"${CXXFLAGS}\"\nunset CFLAGS\nunset CXXFLAGS\ncd $SRC\ncd xz\n./autogen.sh --no-po4a --no-doxygen\n./configure --enable-static --disable-debug --disable-shared --disable-xz --disable-xzdec --disable-lzmainfo\nmake install -j$(nproc)\nexport CFLAGS=\"${ORIG_CFLAGS}\"\nexport CXXFLAGS=\"${ORIG_CXXFLAGS}\"\n\n# Build extra-cmake-modules\ncd $SRC\ncd extra-cmake-modules\ncmake .\nmake install -j$(nproc)\n\n# Build qtbase\ncd $SRC\ncd qtbase\n./configure -no-glib -qt-libpng -qt-pcre -opensource -confirm-license -static -no-opengl -no-icu -platform linux-clang-libc++ -debug -prefix /usr -no-feature-gui -no-feature-sql -no-feature-network  -no-feature-xml -no-feature-dbus -no-feature-printsupport\ncmake --build . --parallel $(nproc)\ncmake --install .\n\n\n# Build karchive\ncd $SRC\ncd karchive\nrm -rf poqm\ncmake . -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF\nmake install -j$(nproc)\n\n# Build karchive_fuzzer\n$CXX $CXXFLAGS -fPIC -std=c++17 $SRC/karchive_fuzzer.cc -o $OUT/karchive_fuzzer -I /usr/include/QtCore/ -I /usr/local/include/KF6/KArchive -lQt6Core -lm -lQt6BundledPcre2 -ldl -lpthread $LIB_FUZZING_ENGINE /usr/local/lib/libzip.a /usr/local/lib/libz.a -lKF6Archive /usr/local/lib/libbz2.a -llzma /usr/local/lib/libzstd.a\n\ncd $SRC\nfind . -name \"*.gz\" -o -name \"*.zip\" -o -name \"*.xz\" -o -name \"*.tar\" | zip -q $OUT/karchive_fuzzer_seed_corpus.zip -@\n"
    },
    "kcodecs": {
        "name": "kcodecs",
        "language": "c++",
        "homepage": "https://cgit.kde.org/kcodecs.git/",
        "main_repo": "https://invent.kde.org/frameworks/kcodecs.git",
        "primary_contact": "tsdgeos@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: https://cgit.kde.org/kcodecs.git/\nlanguage: c++\nprimary_contact: tsdgeos@gmail.com\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\nmain_repo: 'https://invent.kde.org/frameworks/kcodecs.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC\ntar xzf gperf*.tar.gz && rm -f gperf*.tar.gz\ncd gperf*\nFUZZ_CFLAGS=\"${CFLAGS}\"\nFUZZ_CXXFLAGS=\"${CXXFLAGS}\"\nunset CFLAGS\nunset CXXFLAGS\n# gperf is a code generator, so no need to sanitize it\n./configure --prefix=/usr CXX='clang++ -std=c++14'  # Avoid C++17 due to clang-18 error\nmake -j$(nproc) install\nexport CFLAGS=\"${FUZZ_CFLAGS}\"\nexport CXXFLAGS=\"${FUZZ_CXXFLAGS}\"\n\n\ncd $SRC\ncd extra-cmake-modules\ncmake -DBUILD_TESTING=OFF .\nmake install\n\ncd $SRC\ncd qtbase\n./configure -no-glib -qt-libpng -qt-pcre -qt-zlib -opensource -confirm-license -static -no-opengl -no-icu -platform linux-clang-libc++ -debug -prefix /usr -no-feature-gui -no-feature-sql -no-feature-network  -no-feature-xml -no-feature-dbus -no-feature-printsupport\ncmake --build . --parallel $(nproc)\ncmake --install .\n\ncd $SRC\ncd kcodecs\nrm -rf poqm\ncmake . -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Debug\nmake -j$(nproc) VERBOSE=1\n\n$CXX $CXXFLAGS -fPIC -std=c++17 $SRC/kcodecs_fuzzer.cc -o $OUT/kcodecs_fuzzer \\\n               -I /usr/include/QtCore/ -I $SRC/kcodecs/src \\\n               -I $SRC/kcodecs/src/probers -L $SRC/kcodecs/lib \\\n               -lQt6Core -lm -lQt6BundledPcre2 -lQt6BundledZLIB -ldl -lpthread $LIB_FUZZING_ENGINE -lKF6Codecs\n\nzip -qr $OUT/kcodecs_fuzzer_seed_corpus.zip $SRC/uchardet/test/ $SRC/kcodecs/autotests/data\n"
    },
    "keras": {
        "name": "keras",
        "language": "python",
        "homepage": "https://keras.io",
        "main_repo": "https://github.com/keras-team/keras",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://keras.io\"\nmain_repo: 'https://github.com/keras-team/keras'\nlanguage: python\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nexport ORIG_CFLAGS=\"$CFLAGS\"\nexport ORIG_CXXFLAGS=\"$CXXFLAGS\"\nexport CFLAGS=\"\"\nexport CXXFLAGS=\"\"\npython3 -m pip install numpy\nexport CFLAGS=$ORIG_CFLAGS\nexport CXXFLAGS=$ORIG_CXXFLAGS\npython3 -m pip install tf-nightly-cpu\n\n# Rename to avoid the following: https://github.com/tensorflow/tensorflow/issues/40182\nmv $SRC/tensorflow/tensorflow $SRC/tensorflow/tensorflow_src\n\ncompile_python_fuzzer $SRC/fuzz_serialization.py\ncompile_python_fuzzer $SRC/fuzz_model.py\n\nzip $OUT/fuzz_model_seed_corpus.zip $SRC/hdf5-files/basic-model.h5\n"
    },
    "keycloak": {
        "name": "keycloak",
        "language": "jvm",
        "homepage": "https://www.keycloak.org/",
        "main_repo": "https://github.com/keycloak/keycloak",
        "primary_contact": "abstractj@redhat.com",
        "vendor_ccs": [
            "adam@adalogics.com",
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: \"https://www.keycloak.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/keycloak/keycloak\"\nsanitizers:\n- address\nprimary_contact: \"abstractj@redhat.com\"\nauto_ccs:\n- \"keycloak-oss-fuzz@redhat.com\"\n- \"pigor.craveiro@gmail.com\"\nvendor_ccs:\n- \"adam@adalogics.com\"\n- \"david@adalogics.com\"\n- \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncp $SRC/cncf-fuzzing/projects/keycloak/*.java $SRC/\n$SRC/cncf-fuzzing/projects/keycloak/build.sh\n"
    },
    "keystone": {
        "name": "keystone",
        "language": "c++",
        "homepage": "https://www.keystone-engine.org",
        "main_repo": "https://github.com/keystone-engine/keystone.git",
        "primary_contact": "keystone.engine@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.keystone-engine.org\"\nlanguage: c++\nprimary_contact: \"keystone.engine@gmail.com\"\nauto_ccs :\n  - \"p.antoine@catenacyber.fr\"\n  - \"stalkr@stalkr.net\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\nmain_repo: 'https://github.com/keystone-engine/keystone.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#builds project\ncd keystone\nmkdir build\ncd build\ncmake ..\nmake\n\n# build fuzz target\ncd ../suite/fuzz\nls fuzz_*.c | cut -d_ -f2-4 | cut -d. -f1 | while read target\ndo\n    $CC $CFLAGS -I../../include -c fuzz_$target.c -o fuzz_$target.o\n\n    $CXX $CXXFLAGS fuzz_$target.o -o $OUT/fuzz_$target ../../build/llvm/lib/libkeystone.a $LIB_FUZZING_ENGINE\n\n    #TODO corpuses\n    cp fuzz_asm.options $OUT/fuzz_$target.options\ndone\n"
    },
    "kie-soup": {
        "name": "kie-soup",
        "language": "jvm",
        "homepage": "https://github.com/kiegroup/kie-soup",
        "main_repo": "https://github.com/kiegroup/kie-soup",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/kiegroup/kie-soup\nmain_repo: https://github.com/kiegroup/kie-soup\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"./kie-soup-commons/target/kie-soup-commons-$CURRENT_VERSION.jar\" $OUT/kie-soup.jar\n\nALL_JARS='kie-soup.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "kimageformats": {
        "name": "kimageformats",
        "language": "c++",
        "homepage": "https://cgit.kde.org/kimageformats.git/",
        "main_repo": "https://invent.kde.org/frameworks/kimageformats.git",
        "primary_contact": "tsdgeos@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: https://cgit.kde.org/kimageformats.git/\nlanguage: c++\nprimary_contact: tsdgeos@gmail.com\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n# - memory\n  - undefined\nmain_repo: 'https://invent.kde.org/frameworks/kimageformats.git'\nauto_ccs:\n  - dnovomesky@gmail.com\n  - mircomir@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build zstd\ncd $SRC\ncd zstd\ncmake -S build/cmake -DBUILD_SHARED_LIBS=OFF\nmake install -j$(nproc)\n\n# Build zlib\ncd $SRC\ncd zlib\n./configure --static\nmake install -j$(nproc)\n\n# Build libzip\ncd $SRC\ncd libzip\ncmake . -DBUILD_SHARED_LIBS=OFF\nmake install -j$(nproc)\n\n# Build bzip2\n# Inspired from ../bzip2/build\ncd $SRC\ntar xzf bzip2-*.tar.gz && rm -f bzip2-*.tar.gz\ncd bzip2-*\nSRCL=(blocksort.o huffman.o crctable.o randtable.o compress.o decompress.o bzlib.o)\n\nfor source in ${SRCL[@]}; do\n    name=$(basename $source .o)\n    $CC $CFLAGS -c ${name}.c\ndone\nrm -f libbz2.a\nar cq libbz2.a ${SRCL[@]}\ncp -f bzlib.h /usr/local/include\ncp -f libbz2.a /usr/local/lib\n\n# Build xz\nexport ORIG_CFLAGS=\"${CFLAGS}\"\nexport ORIG_CXXFLAGS=\"${CXXFLAGS}\"\nunset CFLAGS\nunset CXXFLAGS\ncd $SRC\ncd xz\n./autogen.sh --no-po4a --no-doxygen\n./configure --enable-static --disable-debug --disable-shared --disable-xz --disable-xzdec --disable-lzmainfo\nmake install -j$(nproc)\nexport CFLAGS=\"${ORIG_CFLAGS}\"\nexport CXXFLAGS=\"${ORIG_CXXFLAGS}\"\n\ncd $SRC\ncd qtbase\n./configure -no-glib -qt-libpng -qt-pcre -opensource -confirm-license -static -no-opengl -no-icu -platform linux-clang-libc++ -debug -prefix /usr -no-feature-widgets -no-feature-sql -no-feature-network  -no-feature-xml -no-feature-dbus -no-feature-printsupport\ncmake --build . --parallel $(nproc)\ncmake --install .\n\n# Build extra-cmake-modules\ncd $SRC\ncd extra-cmake-modules\ncmake . -DBUILD_TESTING=OFF\nmake install -j$(nproc)\n\ncd $SRC\ncd karchive\nrm -rf poqm\ncmake . -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/usr/local\nmake install -j$(nproc)\n\n# Build JXRlib\ncd $SRC\ncd jxrlib\nmake -j$(nproc)\n\n# Build LibRaw\ncd $SRC\ncd LibRaw\nTMP_CFLAGS=$CFLAGS\nTMP_CXXFLAGS=$CXXFLAGS\nCFLAGS=\"$CFLAGS -fno-sanitize=function,vptr\"\nCXXFLAGS=\"$CXXFLAGS -fno-sanitize=function,vptr\"\nautoreconf --install\n./configure --disable-examples\nmake -j$(nproc)\nmake install -j$(nproc)\nCFLAGS=$TMP_CFLAGS\nCXXFLAGS=$TMP_CXXFLAGS\n\n\n# Build aom\ncd $SRC\ncd aom\nmkdir build.libavif\ncd build.libavif\nextra_libaom_flags='-DAOM_MAX_ALLOCABLE_MEMORY=536870912 -DDO_RANGE_CHECK_CLAMP=1'\ncmake -DBUILD_SHARED_LIBS=0 -DENABLE_DOCS=0 -DENABLE_EXAMPLES=0 -DENABLE_TESTDATA=0 -DENABLE_TESTS=0 -DENABLE_TOOLS=0 -DCONFIG_PIC=1 -DAOM_TARGET_CPU=generic -DCONFIG_SIZE_LIMIT=1 -DDECODE_HEIGHT_LIMIT=12288 -DDECODE_WIDTH_LIMIT=12288 -DAOM_EXTRA_C_FLAGS=\"${extra_libaom_flags}\" -DAOM_EXTRA_CXX_FLAGS=\"${extra_libaom_flags}\" ..\nmake -j$(nproc)\nmake install -j$(nproc)\n\n# Build libavif\ncd $SRC\nln -s \"$SRC/aom\" \"$SRC/libavif/ext/\"\ncd libavif\nmkdir build\ncd build\nCFLAGS=\"$CFLAGS -fPIC\" cmake -DBUILD_SHARED_LIBS=OFF -DAVIF_ENABLE_WERROR=OFF -DAVIF_CODEC_AOM=LOCAL -DAVIF_LIBYUV=OFF ..\nmake -j$(nproc)\n\n# Build libde265\ncd $SRC\ncd libde265\ncmake -DBUILD_SHARED_LIBS=OFF -DDISABLE_SSE=ON .\nmake -j$(nproc)\nmake install -j$(nproc)\n\n# Build openjpeg\ncd $SRC\ncd openjpeg\nmkdir build\ncd build\ncmake -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=ON -DBUILD_CODEC=OFF ..\nmake -j$(nproc)\nmake install -j$(nproc)\n\n# build openh264\ncd $SRC\ncd openh264\nmake USE_ASM=No BUILDTYPE=Debug install-static -j$(nproc)\n\n# Build openexr\ncd $SRC\ncd openexr\nmkdir _build\ncd _build\ncmake  -DBUILD_SHARED_LIBS=OFF ..\nmake -j$(nproc)\nmake install -j$(nproc)\n\n# Build libheif\ncd $SRC\ncd libheif\n#Reduce max width and height to avoid allocating too much memory\nsed -i \"s/static const int MAX_IMAGE_WIDTH = 32768;/static const int MAX_IMAGE_WIDTH = 8192;/g\" libheif/security_limits.h\nsed -i \"s/static const int MAX_IMAGE_HEIGHT = 32768;/static const int MAX_IMAGE_HEIGHT = 8192;/g\" libheif/security_limits.h\nmkdir build\ncd build\ncmake -DBUILD_SHARED_LIBS=OFF -DENABLE_PLUGIN_LOADING=OFF -DWITH_DAV1D=OFF -DWITH_EXAMPLES=OFF -DWITH_LIBDE265=ON -DWITH_RAV1E=OFF -DWITH_RAV1E_PLUGIN=OFF -DWITH_SvtEnc=OFF -DWITH_SvtEnc_PLUGIN=OFF -DWITH_X265=OFF -DWITH_OpenJPEG_DECODER=ON -DWITH_OpenH264_DECODER=ON ..\nmake -j$(nproc)\nmake install -j$(nproc)\n\n# Build libjxl\ncd $SRC\ncd libjxl\nmkdir build\ncd build\nCXXFLAGS=\"$CXXFLAGS -DHWY_COMPILE_ONLY_SCALAR\" cmake -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTING=OFF -DJPEGXL_ENABLE_BENCHMARK=OFF -DJPEGXL_ENABLE_DOXYGEN=OFF -DJPEGXL_ENABLE_EXAMPLES=OFF -DJPEGXL_ENABLE_JNI=OFF -DJPEGXL_ENABLE_JPEGLI=OFF -DJPEGXL_ENABLE_JPEGLI_LIBJPEG=OFF -DJPEGXL_ENABLE_MANPAGES=OFF -DJPEGXL_ENABLE_OPENEXR=OFF -DJPEGXL_ENABLE_PLUGINS=OFF -DJPEGXL_ENABLE_SJPEG=OFF -DJPEGXL_ENABLE_SKCMS=ON -DJPEGXL_ENABLE_TCMALLOC=OFF -DJPEGXL_ENABLE_TOOLS=OFF -DJPEGXL_ENABLE_FUZZERS=OFF ..\nmake -j$(nproc) jxl jxl_cms jxl_threads\n\ncd $SRC\ncd kimageformats\nHANDLER_TYPES=\"ANIHandler ani\n        QAVIFHandler avif\n        QDDSHandler dds\n        EXRHandler exr\n        HDRHandler hdr\n        HEIFHandler heif\n        JP2Handler jp2\n        QJpegXLHandler jxl\n        JXRHandler jxr\n        KraHandler kra\n        OraHandler ora\n        PCXHandler pcx\n        PFMHandler pfm\n        SoftimagePICHandler pic\n        PSDHandler psd\n        PXRHandler pxr\n        QOIHandler qoi\n        RASHandler ras\n        RAWHandler raw\n        RGBHandler rgb\n        ScitexHandler sct\n        TGAHandler tga\n        XCFHandler xcf\"\n\necho \"$HANDLER_TYPES\" | while read class format; do\n(\n  fuzz_target_name=kimgio_${format}_fuzzer\n\n  /usr/libexec/moc $SRC/kimageformats/src/imageformats/$format.cpp -o $format.moc\n  header=`ls $SRC/kimageformats/src/imageformats/$format*.h`\n  /usr/libexec/moc $header -o moc_`basename $header .h`.cpp\n  $CXX $CXXFLAGS -fPIC -DHANDLER=$class -std=c++17 $SRC/kimgio_fuzzer.cc $SRC/kimageformats/src/imageformats/$format.cpp $SRC/kimageformats/src/imageformats/scanlineconverter.cpp $SRC/kimageformats/src/imageformats/microexif.cpp -o $OUT/$fuzz_target_name -DJXL_STATIC_DEFINE -DJXL_THREADS_STATIC_DEFINE -DJXL_CMS_STATIC_DEFINE -DINITGUID -I $SRC/kimageformats/src/imageformats/ -I $SRC/libavif/include/ -I $SRC/libjxl/build/lib/include/ -I $SRC/libjxl/lib/include/ -I /usr/local/include/OpenEXR/ -I /usr/local/include/KF6/KArchive/ -I /usr/local/include/openjpeg-2.5 -I /usr/local/include/Imath -I $SRC/jxrlib/common/include -I $SRC/jxrlib/jxrgluelib -I $SRC/jxrlib/image/sys -I /usr/include/QtCore/ -I /usr/include/QtGui/ -I . $SRC/libavif/build/libavif.a /usr/local/lib/libheif.a /usr/local/lib/libde265.a /usr/local/lib/libopenh264.a $SRC/aom/build.libavif/libaom.a $SRC/libjxl/build/lib/libjxl_threads.a $SRC/libjxl/build/lib/libjxl.a $SRC/libjxl/build/lib/libjxl_cms.a $SRC/libjxl/build/third_party/highway/libhwy.a $SRC/libjxl/build/third_party/brotli/libbrotlidec.a $SRC/libjxl/build/third_party/brotli/libbrotlienc.a $SRC/libjxl/build/third_party/brotli/libbrotlicommon.a -lQt6Gui -lQt6Core -lQt6BundledLibpng -lQt6BundledHarfbuzz -lm -lQt6BundledPcre2 -ldl -lpthread $LIB_FUZZING_ENGINE /usr/local/lib/libzip.a /usr/local/lib/libz.a -lKF6Archive /usr/local/lib/libz.a /usr/local/lib/libraw.a /usr/local/lib/libOpenEXR-3_3.a /usr/local/lib/libIex-3_3.a /usr/local/lib/libImath-3_1.a /usr/local/lib/libIlmThread-3_3.a /usr/local/lib/libOpenEXRCore-3_3.a /usr/local/lib/libOpenEXRUtil-3_3.a /usr/local/lib/libopenjp2.a /usr/local/lib/libzstd.a $SRC/jxrlib/build/libjxrglue.a $SRC/jxrlib/build/libjpegxr.a -llzma /usr/local/lib/libbz2.a -lclang_rt.builtins\n\n  # -lclang_rt.builtins in the previous line is a temporary workaround to avoid a linker error \"undefined reference to __truncsfhf2\". Investigate why this is needed here, but not anywhere else, and possibly remove it.\n\n  find . -name \"*.${format}\" | zip -q $OUT/${fuzz_target_name}_seed_corpus.zip -@\n)\ndone\n"
    },
    "kiwisolver": {
        "name": "kiwisolver",
        "language": "python",
        "homepage": "https://github.com/nucleic/kiwi",
        "main_repo": "https://github.com/nucleic/kiwi",
        "primary_contact": "m.dartiailh@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "auto_ccs:\n- david@adalogics.com\n- adam@adalogics.com\nfuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/nucleic/kiwi\nlanguage: python\nmain_repo: https://github.com/nucleic/kiwi\nprimary_contact: m.dartiailh@gmail.com\nsanitizers:\n- address\n- undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "knative": {
        "name": "knative",
        "language": "go",
        "homepage": "https://knative.dev/",
        "main_repo": "https://github.com/knative",
        "primary_contact": "security@knative.team",
        "vendor_ccs": [
            "adam@adalogics.com",
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://knative.dev/\"\nlanguage: go\nprimary_contact: \"security@knative.team\"\nmain_repo: \"https://github.com/knative\"\nvendor_ccs:\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\nauto_ccs:\n  - \"evana@vmware.com\"\n  - \"evan.k.anderson@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/cncf-fuzzing/projects/knative/build.sh\n"
    },
    "knot-dns": {
        "name": "knot-dns",
        "language": "c++",
        "homepage": "https://www.knot-dns.cz/",
        "main_repo": "https://gitlab.nic.cz/knot/knot-dns.git",
        "primary_contact": "knot.dns@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.knot-dns.cz/\"\nmain_repo: \"https://gitlab.nic.cz/knot/knot-dns.git\"\nlanguage: c++\nprimary_contact: \"knot.dns@gmail.com\"\nauto_ccs:\n  - \"jonathan.foote@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# Compile and install dependencies for static linking\n# Cribbed from projects/wget2, thanks rockdaboot@gmail.com\n\nexport DEPS_PATH=$SRC/knot_deps\nexport PKG_CONFIG_PATH=$DEPS_PATH/lib64/pkgconfig:$DEPS_PATH/lib/pkgconfig\nexport CPPFLAGS=\"-I$DEPS_PATH/include\"\nexport LDFLAGS=\"-L$DEPS_PATH/lib\"\nexport GNULIB_SRCDIR=$SRC/gnulib\n\ncd $SRC/libunistring\n./autogen.sh\n./configure --enable-static --disable-shared --prefix=$DEPS_PATH\nmake -j$(nproc)\nmake install\n\nGNUTLS_CONFIGURE_FLAGS=\"\"\nNETTLE_CONFIGURE_FLAGS=\"--disable-assembler\"  # Temporarily disalbe asm to work around error \"Libnettle 3.6 was not found.\"\nif [[ $CFLAGS = *sanitize=memory* ]]; then\n  GNUTLS_CONFIGURE_FLAGS=\"--disable-hardware-acceleration\"\n  NETTLE_CONFIGURE_FLAGS=\"--disable-assembler --disable-fat\"\nfi\n\ncd $SRC/nettle\nbash .bootstrap\n./configure --enable-mini-gmp --enable-static --disable-shared --disable-documentation --prefix=$DEPS_PATH $NETTLE_CONFIGURE_FLAGS\n( make -j$(nproc) || make -j$(nproc) ) && make install\n\ncd $SRC/gnutls\ntouch .submodule.stamp\n./bootstrap\nLIBS=\"-lunistring\" \\\n./configure --with-nettle-mini --disable-gcc-warnings --enable-static --disable-shared --with-included-libtasn1 \\\n    --with-included-unistring --without-p11-kit --disable-doc --disable-tests --disable-tools --disable-cxx \\\n    --disable-maintainer-mode --disable-libdane --disable-full-test-suite --prefix=$DEPS_PATH $GNUTLS_CONFIGURE_FLAGS\nmake -j$(nproc)\nmake install\n\ncd $SRC/lmdb/libraries/liblmdb\nmake -j$(nproc)\nmake install\n\n# Compile knot, install fuzzers to $OUT\n\ncd $SRC/knot-dns\nsed -i 's/-llmdb/-Wl,-Bstatic,-llmdb,-Bdynamic/' configure.ac\nautoreconf -if\n./configure --with-oss-fuzz=yes --disable-shared --enable-static --disable-daemon --disable-utilities --disable-documentation \\\n    --disable-fastparser --disable-modules\nmake -j$(nproc)\ncd $SRC/knot-dns/tests-fuzz\nmake check\n/bin/bash ../libtool   --mode=install /usr/bin/install -c fuzz_packet fuzz_zscanner fuzz_dname_to_str fuzz_dname_from_str \"$OUT\"\n\n# Set up fuzzing seeds\n\ngit submodule update --init -- ./fuzz_packet.in\ngit submodule update --init -- ./fuzz_zscanner.in\n# ./fuzz_dname_to_str.in/ and ./fuzz_dname_from_str.in/ are stored in the base repository\nfind ./fuzz_packet.in/         -type f -exec zip -u $OUT/fuzz_packet_seed_corpus.zip {} \\;\nfind ./fuzz_zscanner.in/       -type f -exec zip -u $OUT/fuzz_zscanner_seed_corpus.zip {} \\;\nfind ./fuzz_dname_to_str.in/   -type f -exec zip -u $OUT/fuzz_dname_to_str_seed_corpus.zip {} \\;\nfind ./fuzz_dname_from_str.in/ -type f -exec zip -u $OUT/fuzz_dname_from_str_seed_corpus.zip {} \\;\n"
    },
    "krb5": {
        "name": "krb5",
        "language": "c",
        "homepage": "https://web.mit.edu/kerberos/",
        "main_repo": "https://github.com/krb5/krb5",
        "primary_contact": "krbcore-security@mit.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://web.mit.edu/kerberos/\"\nlanguage: c\nprimary_contact: \"krbcore-security@mit.edu\"\nauto_ccs:\n  - \"pkillarjun@protonmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/krb5/krb5'\n",
        "build_sh": null
    },
    "kryo": {
        "name": "kryo",
        "language": "jvm",
        "homepage": "http://esotericsoftware.com/",
        "main_repo": "https://github.com/EsotericSoftware/kryo",
        "primary_contact": "thomas@umschalt.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://esotericsoftware.com/\"\nlanguage: jvm\nprimary_contact: \"thomas@umschalt.com\"\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/EsotericSoftware/kryo\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"norbert.schneider@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\ncurrent_version=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n-Dexpression=project.version -q -DforceStdout)\ncp \"target/kryo-$current_version.jar\" $OUT/kryo.jar\n\nALL_JARS=\"kryo.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac --enable-preview --release 17 -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n  cp $SRC/${fuzzer_basename}\\$SomeClass.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings:--enable-preview\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n"
    },
    "kubearmor": {
        "name": "kubearmor",
        "language": "go",
        "homepage": "https://kubearmor.io/",
        "main_repo": "https://github.com/kubearmor/KubeArmor",
        "primary_contact": "kubearmor@accuknox.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://kubearmor.io/\"\nmain_repo: \"https://github.com/kubearmor/KubeArmor\"\nprimary_contact: \"kubearmor@accuknox.com\"\nauto_ccs :\n  - \"barun.acharya@accuknox.com\"\n  - \"rudraksh@accuknox.com\"\n  - \"ramakant@accuknox.com\"\n  - \"rickprimeranjan@gmail.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nchmod +x $SRC/KubeArmor/KubeArmor/fuzz/build.sh\n$SRC/KubeArmor/KubeArmor/fuzz/build.sh\n"
    },
    "kubeedge": {
        "name": "kubeedge",
        "language": "go",
        "homepage": "https://kubeedge.io/en/",
        "main_repo": "https://github.com/kubeedge/kubeedge",
        "primary_contact": "linguohui1@huawei.com",
        "vendor_ccs": [
            "Adam@adalogics.com",
            "David@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://kubeedge.io/en/\"\nprimary_contact: \"linguohui1@huawei.com\"\nauto_ccs :\n  - \"xufei40@huawei.com\"\n  - \"wangzefeng@huawei.com\"\nvendor_ccs :\n  - \"Adam@adalogics.com\"\n  - \"David@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/kubeedge/kubeedge'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nsed 's/go 1.16/go 1.19 /g' -i $SRC/kubeedge/go.mod\ncd $SRC/kubeedge && go mod tidy\n\n$SRC/cncf-fuzzing/projects/kubeedge/build.sh\n"
    },
    "kubernetes-cluster-api": {
        "name": "kubernetes-cluster-api",
        "language": "go",
        "homepage": "https://cluster-api.sigs.k8s.io",
        "main_repo": "https://github.com/kubernetes-sigs/cluster-api",
        "primary_contact": "sishivani@vmware.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://cluster-api.sigs.k8s.io\"\nmain_repo: \"https://github.com/kubernetes-sigs/cluster-api\"\nprimary_contact: \"sishivani@vmware.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"jeewan@vmware.com\"\n  - \"naadir@randomvariable.co.uk\"\n  - \"buringerst@vmware.com\"\n  - \"swamyan@vmware.com\"\n  - \"kmuldoon@vmware.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n$SRC/cncf-fuzzing/projects/cluster-api/build.sh\n"
    },
    "kubernetes": {
        "name": "kubernetes",
        "language": "go",
        "homepage": "https://kubernetes.io",
        "main_repo": "https://github.com/kubernetes/kubernetes.git",
        "primary_contact": "security@kubernetes.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://kubernetes.io\"\nprimary_contact: \"security@kubernetes.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"aojea@google.com\"\n  - \"david@adalogics.com\"\n  - \"mikedanese@google.com\"\n  - \"tabitha.c.sable@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nlanguage: go\nmain_repo: 'https://github.com/kubernetes/kubernetes.git'\n",
        "build_sh": "#!/bin/bash\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -o nounset\nset -o pipefail\nset -o errexit\nset -x\n\n# Compile kOps fuzzers\n(\ncd kops\n./tests/fuzz/build.sh\n)\n\n# Compile Kubernetes fuzzers\ncd $SRC/kubernetes\n\nfunction compile_fuzzer {\n  local pkg=$1\n  local function=$2\n  local fuzzer=\"${pkg}_${function}\"\n\n  compile_go_fuzzer \"k8s.io/kubernetes/test/fuzz/${pkg}\" $function $fuzzer\n}\n\n# Build fuzzers from cncf-fuzzing:\n$SRC/cncf-fuzzing/projects/kubernetes/build.sh\n\n\ncompile_fuzzer \"yaml\" \"FuzzDurationStrict\"\ncompile_fuzzer \"yaml\" \"FuzzMicroTimeStrict\"\ncompile_fuzzer \"yaml\" \"FuzzSigYaml\"\ncompile_fuzzer \"yaml\" \"FuzzTimeStrict\"\ncompile_fuzzer \"yaml\" \"FuzzYamlV2\"\ncompile_fuzzer \"json\" \"FuzzStrictDecode\"\ncompile_fuzzer \"json\" \"FuzzNonStrictDecode\"\n"
    },
    "kubevirt": {
        "name": "kubevirt",
        "language": "go",
        "homepage": "https://kubevirt.io",
        "main_repo": "https://github.com/kubevirt/kubevirt",
        "primary_contact": "adam@adalogics.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://kubevirt.io\"\nprimary_contact: \"adam@adalogics.com\"\nauto_ccs :\n  - \"david@adalogics.com\"\n  - \"cncf-kubevirt-maintainers@lists.cncf.io\"\n  - \"vromanso@redhat.com\"\n  - \"rhallisey@nvidia.com\"\n  - \"bcarey@redhat.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/kubevirt/kubevirt'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd \"$SRC\"/go-118-fuzz-build\ngo build .\nmv go-118-fuzz-build /root/go/bin/\ncd \"$SRC\"/kubevirt\n\ncp $SRC/kubevirt-fuzz1/pkg/virt-operator/resource/apply/fuzz_test.go $SRC/kubevirt/pkg/virt-operator/resource/apply/\ncp $SRC/kubevirt-fuzz2/pkg/virt-controller/watch/clone/fuzz_test.go $SRC/kubevirt/pkg/virt-controller/watch/clone/\ncp $SRC/kubevirt-fuzz3/pkg/virt-controller/watch/vm/fuzz_test.go $SRC/kubevirt/pkg/virt-controller/watch/vm/\ncp $SRC/kubevirt-fuzz3/pkg/virt-controller/watch/vmi/fuzz_test.go $SRC/kubevirt/pkg/virt-controller/watch/vmi/\ncp $SRC/kubevirt-fuzz4/pkg/virt-controller/watch/node/fuzz_test.go $SRC/kubevirt/pkg/virt-controller/watch/node/\ncp $SRC/kubevirt-fuzz5/pkg/virt-controller/watch/drain/disruptionbudget/fuzz_test.go $SRC/kubevirt/pkg/virt-controller/watch/drain/disruptionbudget/\ncp $SRC/kubevirt-fuzz5/pkg/virt-controller/watch/migration/fuzz_test.go $SRC/kubevirt/pkg/virt-controller/watch/migration/\ncp $SRC/kubevirt-fuzz5/pkg/virt-controller/watch/pool/fuzz_test.go $SRC/kubevirt/pkg/virt-controller/watch/pool/\ncp $SRC/kubevirt-fuzz6/pkg/virt-operator/resource/generate/install/fuzz_test.go $SRC/kubevirt/pkg/virt-operator/resource/generate/install/\ncp $SRC/kubevirt-fuzz7/pkg/virt-api/webhooks/mutating-webhook/fuzz_test.go $SRC/kubevirt/pkg/virt-api/webhooks/mutating-webhook/\ncp $SRC/kubevirt-fuzz7/pkg/virt-api/webhooks/validating-webhook/fuzz_test.go $SRC/kubevirt/pkg/virt-api/webhooks/validating-webhook/\n\nprintf \"package webhooks\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > pkg/util/webhooks/register_fuzz_dep.go\ngo mod tidy\ngo mod vendor\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=\"$SRC\"/go-118-fuzz-build\ngo mod tidy\ngo mod vendor\n\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-api/webhooks/mutating-webhook FuzzWebhookMutators FuzzWebhookMutators\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-api/webhooks/validating-webhook FuzzWebhookAdmitters FuzzWebhookAdmitters\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-api/webhooks/fuzz FuzzAdmitter FuzzAdmitter\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-operator/resource/generate/install FuzzLoadInstallStrategyFromCache FuzzLoadInstallStrategyFromCache\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-controller/watch/node FuzzExecute FuzzNodeWatchExecute\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-controller/watch/vm FuzzExecute FuzzVMWatchExecute\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-controller/watch/vmi FuzzExecute FuzzVMIWatchExecute\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-controller/watch/clone FuzzVMCloneController FuzzVMCloneController\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-operator/resource/apply FuzzReconciler FuzzVirtOperatorResApplyReconciler\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-controller/watch/drain/disruptionbudget FuzzExecute FuzzWatchDrainDisruptionBudgetExecute\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-controller/watch/migration FuzzExecute FuzzWatchMigrationExecute\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-controller/watch/pool FuzzExecute FuzzWatchPoolExecute\n\nmv $SRC/fuzz_test.go ./pkg/certificates/triple/cert/\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/certificates/triple/cert FuzzKeyParsers FuzzKeyParsers\n\nmv $SRC/fuzz_loadInstallStrategyFromBytes_test.go ./pkg/virt-operator/resource/generate/install/\ncompile_native_go_fuzzer kubevirt.io/kubevirt/pkg/virt-operator/resource/generate/install FuzzLoadInstallStrategyFromBytes FuzzLoadInstallStrategyFromBytes\n\ncp $SRC/*.options $OUT/\n"
    },
    "kyverno": {
        "name": "kyverno",
        "language": "go",
        "homepage": "https://www.kyverno.io",
        "main_repo": "https://github.com/kyverno/kyverno",
        "primary_contact": "chipzoller@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.kyverno.io\"\nmain_repo: \"https://github.com/kyverno/kyverno\"\nprimary_contact: \"chipzoller@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/kyverno/test/fuzz/oss_fuzz_build.sh\n"
    },
    "lame": {
        "name": "lame",
        "language": "c++",
        "homepage": "https://sourceforge.net/projects/lame/",
        "main_repo": "https://svn.code.sf.net/p/lame/svn/trunk/lame",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://sourceforge.net/projects/lame/\"\nmain_repo: \"https://svn.code.sf.net/p/lame/svn/trunk/lame\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nauto_ccs:\n    - \"bouvigne@gmail.com\"\nsanitizers:\n - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\narchitectures:\n - x86_64\n - i386\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd mpg123\nif [[ \"$ARCHITECTURE\" == \"i386\" ]]; then\n\t./configure --enable-static --with-cpu=$ARCHITECTURE\nelse\n\t./configure --enable-static\nfi\nmake -j$(nproc)\nmake install\npopd\n\ncd $SRC/lame\n./configure\nmake -j$(nproc)\n\ncd $SRC/LAME-fuzzers\nif [[ $CXXFLAGS = *sanitize=memory* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\n\n$CXX -std=c++17 -Wall -Wextra -Werror $CXXFLAGS -I fuzzing-headers/include/ -I $SRC/lame/include/ fuzzer-encoder.cpp $LIB_FUZZING_ENGINE $SRC/lame/libmp3lame/.libs/libmp3lame.a /usr/local/lib/libmpg123.a -lm -o $OUT/fuzzer-encoder\ncp fuzzer-encoder_seed_corpus.zip $OUT/\ncp fuzzer-encoder.dict $OUT/\n"
    },
    "lark-parser": {
        "name": "lark-parser",
        "language": "python",
        "homepage": "https://github.com/lark-parser/lark",
        "main_repo": "https://github.com/lark-parser/lark",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/lark-parser/lark\nmain_repo: https://github.com/lark-parser/lark\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "lcms": {
        "name": "lcms",
        "language": "c++",
        "homepage": "http://www.littlecms.com/",
        "main_repo": "https://github.com/mm2/Little-CMS",
        "primary_contact": "marti.maria.s@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "main_repo: \"https://github.com/mm2/Little-CMS\"\nhomepage: \"http://www.littlecms.com/\"\nlanguage: c++\nprimary_contact: \"marti.maria.s@gmail.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\n  - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build the target.\n./configure --enable-shared=no\nmake -j$(nproc) all\n\n# build your fuzzer(s)\nFUZZERS=\"cmsIT8_load_fuzzer            \\\n        cms_transform_fuzzer           \\\n        cms_overwrite_transform_fuzzer \\\n        cms_transform_all_fuzzer       \\\n        cms_profile_fuzzer             \\\n        cms_universal_transform_fuzzer \\\n        cms_transform_extended_fuzzer  \\\n        cms_md5_fuzzer                 \\\n        cms_dict_fuzzer                \\\n        cms_postscript_fuzzer          \\\n        cms_cie_cam02_fuzzer           \\\n        cms_gdb_fuzzer                 \\\n        cms_cgats_fuzzer               \\\n        cms_virtual_profile_fuzzer     \\\n        cms_devicelink_fuzzer\" \n\n\nfor F in $FUZZERS; do\n    $CC $CFLAGS -c -Iinclude \\\n        $SRC/$F.c -o $SRC/$F.o\n    $CXX $CXXFLAGS \\\n        $SRC/$F.o -o $OUT/$F \\\n        $LIB_FUZZING_ENGINE src/.libs/liblcms2.a\ndone\n\ncp $SRC/*.dict $SRC/*.options $OUT/\ncp $SRC/icc.dict $OUT/cms_transform_all_fuzzer.dict\ncp $SRC/icc.dict $OUT/cms_transform_extended_fuzzer.dict\ncp $SRC/icc.dict $OUT/cms_universal_transform_fuzzer.dict\ncp $SRC/icc.dict $OUT/cms_profile_fuzzer.dict\ncp $SRC/icc.dict $OUT/cms_postscript_fuzzer.dict\ncp $SRC/icc.dict $OUT/cms_virtual_profile_fuzzer.dict\ncp $SRC/icc.dict $OUT/cms_md5_fuzzer.dict\ncp $SRC/seed_corpus.zip $OUT/cms_postscript_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_profile_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_universal_transform_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_transform_all_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_transform_extended_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_transform_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_virtual_profile_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cmsIT8_load_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_md5_fuzzer_seed_corpus.zip\ncp $SRC/seed_corpus.zip $OUT/cms_overwrite_transform_fuzzer_seed_corpus.zip"
    },
    "leptonica": {
        "name": "leptonica",
        "language": "c++",
        "homepage": "http://www.leptonica.com",
        "main_repo": "https://github.com/DanBloomberg/leptonica.git",
        "primary_contact": "taking@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.leptonica.com\"\nlanguage: c++\nprimary_contact: \"taking@google.com\"\nauto_ccs:\n  - \"kusano@google.com\"\n  - \"dbloomberg@google.com\"\n  - \"dan.bloomberg@gmail.com\"\n  - \"stjoweil@googlemail.com\"\n  - \"Adam@adalogics.com\"\n  - \"ballbach@google.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nlabels:\n  pix_rotate_shear_fuzzer:\n    - sundew\nmain_repo: 'https://github.com/DanBloomberg/leptonica.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/leptonica/prog/fuzzing/oss-fuzz-build.sh\n\n"
    },
    "leveldb": {
        "name": "leveldb",
        "language": "c++",
        "homepage": "https://github.com/google/leveldb",
        "main_repo": "https://github.com/google/leveldb.git",
        "primary_contact": "costan@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/leveldb\"\nlanguage: c++\nprimary_contact: \"costan@google.com\"\nauto_ccs :\n  - \"cmumford@google.com\"\n  - \"david@adalogics.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nmain_repo: 'https://github.com/google/leveldb.git'\nfile_github_issue: True\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n# Copyright 2020 Luca Boccassi <bluca@debian.org>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Avoid: clang++: error: invalid argument '-fsanitize=vptr' not allowed with '-fno-rtti'\nCFLAGS=\"$CFLAGS     -fno-sanitize=vptr\"\nCXXFLAGS=\"$CXXFLAGS -fno-sanitize=vptr\"\n\n# Pick C++17 due to use of std::filesystem\nCXXFLAGS=\"$CXXFLAGS -std=c++17\"\n\ncd $SRC/leveldb\nmkdir -p build && cd build\ncmake -DCMAKE_BUILD_TYPE=Release -DLEVELDB_BUILD_TESTS=0 \\\n    -DLEVELDB_BUILD_BENCHMARKS=0 .. && cmake --build .\n\nfor fuzzer in fuzz_db; do\n    # Compile\n    $CXX $CXXFLAGS -c ../${fuzzer}.cc -o ${fuzzer}.o \\\n        -DLEVELDB_PLATFORM_POSIX=1 -Wall \\\n        -I$SRC/leveldb/build/include -I$SRC/leveldb/ -I$SRC/leveldb/include\n\n    # Link\n    $CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${fuzzer}.o -o $OUT/${fuzzer} libleveldb.a\ndone\n\n# Copy options to out\ncp $SRC/*options $OUT/\n"
    },
    "libaom": {
        "name": "libaom",
        "language": "c++",
        "homepage": "https://aomedia.org/av1-features/get-started/",
        "main_repo": "https://aomedia.googlesource.com/aom",
        "primary_contact": "wtc@google.com",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://aomedia.org/av1-features/get-started/\"\nlanguage: c++\nprimary_contact: \"wtc@google.com\"\nsanitizers:\n- address\n- memory\n- undefined\nauto_ccs:\n- jianj@google.com\n- jingning@google.com\n- jzern@google.com\n- wtc@google.com\n- yunqingwang@google.com\nvendor_ccs:\n- twsmith@mozilla.com\nmain_repo: 'https://aomedia.googlesource.com/aom'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build libaom\nbuild_dir=$WORK/build\nmkdir -p ${build_dir}\npushd ${build_dir}\n# Remove files generated by the previous build.\nrm -rf ./*\n\n# oss-fuzz has 2 GB total memory allocation limit. So, we limit per-allocation\n# limit in libaom to 1 GB to avoid OOM errors. A smaller per-allocation is\n# needed for MemorySanitizer (see bug oss-fuzz:9497 and bug oss-fuzz:9499).\nif [[ $CFLAGS = *sanitize=memory* ]]; then\n  extra_c_flags='-DAOM_MAX_ALLOCABLE_MEMORY=536870912'\nelse\n  extra_c_flags='-DAOM_MAX_ALLOCABLE_MEMORY=1073741824'\nfi\n# Also, enable DO_RANGE_CHECK_CLAMP to suppress the noise of integer overflows\n# in the transform functions.\nextra_c_flags+=' -DDO_RANGE_CHECK_CLAMP=1'\n\nextra_cmake_flags=\n# MemorySanitizer requires that all program code is instrumented. Therefore we\n# need to replace all inline assembly code that writes to memory with pure C\n# code. Disable all assembly code for MemorySanitizer.\nif [[ $CFLAGS = *sanitize=memory* ]]; then\n  extra_cmake_flags+=\"-DAOM_TARGET_CPU=generic\"\nfi\n\ncmake $SRC/aom -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_FLAGS_RELEASE='-O3 -g' \\\n  -DCMAKE_CXX_FLAGS_RELEASE='-O3 -g' -DCONFIG_PIC=1 -DCONFIG_LOWBITDEPTH=1 \\\n  -DCONFIG_AV1_ENCODER=0 -DENABLE_EXAMPLES=0 -DENABLE_DOCS=0 -DENABLE_TESTS=0 \\\n  -DCONFIG_SIZE_LIMIT=1 -DDECODE_HEIGHT_LIMIT=12288 -DDECODE_WIDTH_LIMIT=12288 \\\n  -DAOM_EXTRA_C_FLAGS=\"${extra_c_flags}\" -DENABLE_TOOLS=0 \\\n  -DAOM_EXTRA_CXX_FLAGS=\"${extra_c_flags}\" ${extra_cmake_flags}\nmake -j$(nproc)\npopd\n\n# build fuzzers\nfuzzer_src_name=av1_dec_fuzzer\nfuzzer_name=${fuzzer_src_name}\n\n$CXX $CXXFLAGS -std=c++11 \\\n  -I$SRC/aom \\\n  -I${build_dir} \\\n  -Wl,--start-group \\\n  $LIB_FUZZING_ENGINE \\\n  $SRC/aom/examples/${fuzzer_src_name}.cc -o $OUT/${fuzzer_name} \\\n  ${build_dir}/libaom.a -Wl,--end-group\n\n# copy seed corpus.\ncp $SRC/dec_fuzzer_seed_corpus.zip $OUT/${fuzzer_name}_seed_corpus.zip\ncp $SRC/aom/examples/av1_dec_fuzzer.dict $OUT/${fuzzer_name}.dict\n\n"
    },
    "libarchive": {
        "name": "libarchive",
        "language": "c++",
        "homepage": "https://github.com/libarchive/libarchive",
        "main_repo": "https://github.com/libarchive/libarchive.git",
        "primary_contact": "joerg.sonnenberger@googlemail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/libarchive/libarchive\"\nlanguage: c++\nprimary_contact: \"joerg.sonnenberger@googlemail.com\"\nauto_ccs:\n  - \"kientzle@gmail.com\"\n  - \"martin@matuska.org\"\nsanitizers:\n  - address\n  - memory:\n     experimental: True\n  - undefined\nmain_repo: 'https://github.com/libarchive/libarchive.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# For fuzz-introspector. This is to exclude all libxml2 code from the\n# fuzz-introspector reports.\nexport FUZZ_INTROSPECTOR_CONFIG=$SRC/fuzz_introspector_exclusion.config\ncat > $FUZZ_INTROSPECTOR_CONFIG <<EOF\nFILES_TO_AVOID\nlibxml2\nEOF\n\nDEPS=/deps\n\ncd $SRC/libarchive\n\nmkdir build2\ncd build2\ncmake -DDONT_FAIL_ON_CRC_ERROR=ON -DENABLE_WERROR=OFF ../\nmake -j$(nproc)\n\n# build seed\ncp $SRC/libarchive/contrib/oss-fuzz/corpus.zip\\\n        $OUT/libarchive_fuzzer_seed_corpus.zip\n\n# build fuzzer(s)\n$CXX $CXXFLAGS -I../libarchive \\\n    $SRC/libarchive_fuzzer.cc -o $OUT/libarchive_fuzzer \\\n    $LIB_FUZZING_ENGINE ./libarchive/libarchive.a \\\n    -Wl,-Bstatic -llzo2 -Wl,-Bdynamic -lcrypto -lacl -llzma -llz4 -lbz2 -lz ${DEPS}/libxml2.a\n\n# add the uuencoded test files\ncd $SRC\nmkdir ./uudecoded\nfind $SRC/libarchive/ -type f -name \"test_extract.*.uu\" -print0 | xargs -0 -I % cp -f % ./uudecoded/\ncd ./uudecoded\nfind ./ -name \"*.uu\" -exec uudecode {} \\;\ncd ../\nrm -f ./uudecoded/*.uu\nzip -jr $OUT/libarchive_fuzzer_seed_corpus.zip ./uudecoded/*\n\n# add weird archives\ngit clone --depth=1 https://github.com/corkami/pocs\nfind ./pocs/ -type f -print0 | xargs -0 -I % zip -jr $OUT/libarchive_fuzzer_seed_corpus.zip %\n"
    },
    "libass": {
        "name": "libass",
        "language": "c++",
        "homepage": "https://github.com/libass/libass",
        "main_repo": "https://github.com/libass/libass.git",
        "primary_contact": "chortos@inbox.lv",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/libass/libass\"\nlanguage: c++\nprimary_contact: \"chortos@inbox.lv\"\nauto_ccs:\n  - \"greg@kinoho.net\"\n  - \"rcombs@rcombs.me\"\n  - \"vabnick@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/libass/libass.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eux\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/harfbuzz\n\n# setup\nbuild=$WORK/build\n\n# # cleanup\nrm -rf $build\nmkdir -p $build\n\n# disable sanitize=vptr for harfbuzz since it compiles without rtti\nCFLAGS=\"$CFLAGS -fno-sanitize=vptr\" \\\nCXXFLAGS=\"$CXXFLAGS -fno-sanitize=vptr\" \\\nmeson --default-library=static --wrap-mode=nodownload \\\n      -Dfuzzer_ldflags=\"$(echo $LIB_FUZZING_ENGINE)\" \\\n      -Dtests=disabled \\\n      --prefix=/work/ --libdir=lib $build \\\n  || (cat build/meson-logs/meson-log.txt && false)\nmeson install -C $build\n\ncd $SRC/libass\n\nexport PKG_CONFIG_PATH=/work/lib/pkgconfig\n./autogen.sh\n./configure \\\n  FUZZ_CPPFLAGS=\"-DASS_FUZZMODE=2 -DASSFUZZ_MAX_LEN=8192\" \\\n  --disable-asm --disable-shared --enable-fuzz\nmake -j \"$(nproc)\" fuzz/fuzz_ossfuzz\ncp fuzz/fuzz_ossfuzz $OUT/libass_fuzzer\ncp fuzz/ass.dict $OUT/ass.dict\n\ncp $SRC/*.options $OUT/\n"
    },
    "libavc": {
        "name": "libavc",
        "language": "c++",
        "homepage": "https://github.com/ittiam-systems/libavc",
        "main_repo": "https://github.com/ittiam-systems/libavc.git",
        "primary_contact": "harish.mahendrakar@ittiam.com",
        "vendor_ccs": [
            "adambacchus@google.com",
            "ailport@google.com",
            "bcreasey@google.com",
            "cunefare@google.com",
            "ejorgensen@google.com",
            "faerber@google.com",
            "greendonald@google.com",
            "hamzeh@google.com",
            "jaredkidd@google.com",
            "kimtony@google.com",
            "lindsaywells@google.com",
            "maverickm@google.com",
            "swansonr@google.com",
            "warrenwright@google.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ittiam-systems/libavc\"\nlanguage: c++\nprimary_contact: \"harish.mahendrakar@ittiam.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nauto_ccs:\n  - aadithya.kamath@ittiam.com\n  - harish.mahendrakar@ittiam.com\n  - mallikarjun.kamble@ittiam.com  \n  - ram.mohan@ittiam.com\n  - saurabh.agrawal@ittiam.com\n  - umang.saini@ittiam.com\n  - vaibhav.valvaiker@ittiam.com\n  - vijayakumar.gr@ittiam.com\n  - essick@google.com\n  - lajos@google.com\nvendor_ccs:\n  - adambacchus@google.com\n  - ailport@google.com\n  - bcreasey@google.com\n  - cunefare@google.com\n  - ejorgensen@google.com\n  - faerber@google.com\n  - greendonald@google.com\n  - hamzeh@google.com\n  - jaredkidd@google.com\n  - kimtony@google.com\n  - lindsaywells@google.com\n  - maverickm@google.com\n  - swansonr@google.com\n  - warrenwright@google.com\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/ittiam-systems/libavc.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project.\n$SRC/libavc/fuzzer/ossfuzz.sh\n"
    },
    "libavif": {
        "name": "libavif",
        "language": "c++",
        "homepage": "https://github.com/AOMediaCodec/libavif",
        "main_repo": "https://github.com/AOMediaCodec/libavif.git",
        "primary_contact": "wtc@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/AOMediaCodec/libavif\"\nlanguage: c++\nprimary_contact: \"wtc@google.com\"\nfuzzing_engines:\n  - libfuzzer\nauto_ccs:\n  - \"fgalligan@google.com\"\n  - \"joedrago@gmail.com\"\n  - \"jzern@google.com\"\n  - \"yguyon@google.com\"\n  - \"maryla@google.com\"\n  - \"vrabaud@google.com\"\n  - \"david@adalogics.com\"\n  - \"vigneshv@google.com\"\nmain_repo: 'https://github.com/AOMediaCodec/libavif.git'\nsanitizers:\n  - address\n  - memory\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbash tests/oss-fuzz/build.sh\n\n# show contents of $OUT/ for sanity checking\nfind $OUT/\n"
    },
    "libbpf": {
        "name": "libbpf",
        "language": "c",
        "homepage": "https://github.com/libbpf/libbpf",
        "main_repo": "https://github.com/libbpf/libbpf",
        "primary_contact": "andrii.nakryiko@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/libbpf/libbpf\"\nlanguage: c\nprimary_contact: \"andrii.nakryiko@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\n  - i386\nauto_ccs:\n  - hengqi.chen@gmail.com\n  - yulia.kartseva@gmail.com\n  - evverx@gmail.com\n  - shunghsiyu@gmail.com\n  - eddyz87@gmail.com\nmain_repo: \"https://github.com/libbpf/libbpf\"\nbuilds_per_day: 4\nview_restrictions: none\nfile_github_issue: True\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -e\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n./scripts/build-fuzzers.sh\n"
    },
    "libcacard": {
        "name": "libcacard",
        "language": "c",
        "homepage": "https://gitlab.freedesktop.org/spice/libcacard",
        "main_repo": "https://gitlab.freedesktop.org/spice/libcacard.git",
        "primary_contact": "jjelen@redhat.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://gitlab.freedesktop.org/spice/libcacard\"\nlanguage: c\nprimary_contact: \"jjelen@redhat.com\"\nauto_ccs:\n - \"jakuje@gmail.com\"\nsanitizers:\n - address\n - undefined\nmain_repo: 'https://gitlab.freedesktop.org/spice/libcacard.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Compile NSS\nmkdir $SRC/nss-nspr\nmv $SRC/nss $SRC/nss-nspr/\nmv $SRC/nspr $SRC/nss-nspr/\ncd $SRC/nss-nspr/\n# We do not need NSS to be built with address sanitizer\nCFLAGS=\"\" CXXFLAGS=\"\" nss/build.sh --static\n\n# Create a package config for NSS\ncp dist/Debug/lib/pkgconfig/{nspr,nss}.pc\nsed -i \"s/Debug//g\" dist/Debug/lib/pkgconfig/nss.pc\nsed -i \"s/\\/lib/\\/lib\\/Debug/g\" dist/Debug/lib/pkgconfig/nss.pc\nsed -i \"s/include\\/nspr/public\\/nss/g\" dist/Debug/lib/pkgconfig/nss.pc\nsed -i \"s/NSPR/NSS/g\" dist/Debug/lib/pkgconfig/nss.pc\nLIBS=\"-lssl -lsmime -lnssdev -lnss_static -lpk11wrap_static -lcryptohi\"\nLIBS=\"$LIBS -lcerthi -lcertdb -lnssb -lnssutil -lnsspki -ldl -lm -lsqlite\"\nLIBS=\"$LIBS -lsoftokn_static -lsha-x86_c_lib -lfreebl_static\"\nLIBS=\"$LIBS -lgcm-aes-x86_c_lib -lhw-acc-crypto-avx -lhw-acc-crypto-avx2\"\nsed -i \"s/Libs:.*/Libs: -L\\${libdir} $LIBS/g\" dist/Debug/lib/pkgconfig/nss.pc\necho \"Requires: nspr\" >> dist/Debug/lib/pkgconfig/nss.pc\n\nexport NSS_NSPR_PATH=$(realpath $SRC/nss-nspr/)\nexport PKG_CONFIG_PATH=$NSS_NSPR_PATH/dist/Debug/lib/pkgconfig\nexport LD_LIBRARY_PATH=$NSS_NSPR_PATH/dist/Debug/lib\n\n# compile libcacard\nBUILD=$WORK/meson\nrm -rf $BUILD\nmkdir $BUILD\n\ncd $SRC/libcacard\n# Drop the tests as they are not needed and require too much dependencies\nmeson $BUILD -Ddefault_library=static -Ddisable_tests=true\nninja -C $BUILD\n\n# We need nss db to work\ncp -r tests/db $OUT/\n\necho \"XXXXXXXX\" > $WORK/testinput\n\nfuzzers=$(find $BUILD/fuzz/ -executable -type f)\nfor f in $fuzzers; do\n\tfuzzer=$(basename $f)\n\tcp $f $OUT/\n\t# Check if it runs at least in build image\n\t$OUT/$fuzzer $WORK/testinput\n\t#zip -j $OUT/${fuzzer}_seed_corpus.zip fuzz/corpora/${fuzzer}/*\ndone\n\nrm $WORK/testinput\n"
    },
    "libcbor": {
        "name": "libcbor",
        "language": "c++",
        "homepage": "https://github.com/PJK/libcbor",
        "main_repo": "https://github.com/PJK/libcbor",
        "primary_contact": "me@pavelkalvoda.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/PJK/libcbor\"\nlanguage: c++\nprimary_contact: \"me@pavelkalvoda.com\"\nauto_ccs:\n  - alex.gaynor@gmail.com\nfuzzing_engines:\n  - afl\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/PJK/libcbor'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./oss-fuzz/build.sh\n\n"
    },
    "libcoap": {
        "name": "libcoap",
        "language": "c++",
        "homepage": "https://libcoap.net/",
        "main_repo": "https://github.com/obgm/libcoap.git",
        "primary_contact": "bergmann@tzi.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://libcoap.net/\"\nlanguage: c++\nprimary_contact: \"bergmann@tzi.org\"\nauto_ccs:\n    - \"libcoap@gmail.com\"\nmain_repo: 'https://github.com/obgm/libcoap.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" == \"introspector\" ]; then\n  export WARNING_CFLAGS=\"${CFLAGS}\"\nfi\n\n./autogen.sh && ./configure --disable-doxygen --disable-manpages \\\n                            --disable-dtls                       \\\n    && make -j$(nproc)\n\n# build all fuzzer targets\nmake -C tests/oss-fuzz -f Makefile.oss-fuzz\n"
    },
    "libconfig": {
        "name": "libconfig",
        "language": "c",
        "homepage": "https://hyperrealm.github.io/libconfig/",
        "main_repo": "https://github.com/hyperrealm/libconfig.git",
        "primary_contact": "hyperrealm@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://hyperrealm.github.io/libconfig/\"\nlanguage: c\nprimary_contact: \"hyperrealm@gmail.com\"\nauto_ccs:\n  - \"capuanobailey@gmail.com\"\nmain_repo: \"https://github.com/hyperrealm/libconfig.git\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n",
        "build_sh": null
    },
    "libcst": {
        "name": "libcst",
        "language": "python",
        "homepage": "https://github.com/instagram/libcst",
        "main_repo": "https://github.com/instagram/libcst",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/instagram/libcst\nlanguage: python\nmain_repo: https://github.com/instagram/libcst\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport RUSTFLAGS=\"\"\npython3 -m pip install -U hatch\npython3 -m pip uninstall -y libcst\npython3 -m pip install .\n\n# Change directory to force pyinstaller to load in the package we build\ncd ../\nmkdir fuzzbuild\ncd fuzzbuild\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "libcue": {
        "name": "libcue",
        "language": "c",
        "homepage": "https://github.com/lipnitsk/libcue",
        "main_repo": "https://github.com/lipnitsk/libcue.git",
        "primary_contact": "ilya.lipnitskiy@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "afl"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/lipnitsk/libcue\"\nmain_repo: \"https://github.com/lipnitsk/libcue.git\"\nlanguage: c\nprimary_contact: \"ilya.lipnitskiy@gmail.com\"\nauto_ccs:\n  - \"aleksandrosansan@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n  - afl\n  # - centipede disabled until https://github.com/lipnitsk/libcue/pull/31/\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/libcue/oss-fuzz/build.sh"
    },
    "libcups": {
        "name": "libcups",
        "language": "c++",
        "homepage": "https://github.com/OpenPrinting/libcups",
        "main_repo": "https://github.com/OpenPrinting/libcups.git",
        "primary_contact": "jiongchiyu@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/OpenPrinting/libcups\"\nmain_repo: \"https://github.com/OpenPrinting/libcups.git\"\n# help_url:\nlanguage: c++\n\nprimary_contact: \"jiongchiyu@gmail.com\"\nauto_ccs:\n  - \"till.kamppeter@gmail.com\"\n  - \"ossfuzz@iosifache.me\"\n  # - \"msweet@msweet.org\"\n  # - \"jsmeix@suse.de\"\n  # - \"debian@alteholz.de\"\n  # - \"zdohnal@redhat.com\"\n  # - \"basu.aveek@gmail.com\"\n# vendor_ccs:\n\narchitectures:\n  - x86_64\n  # - i386\n\nsanitizers:\n  - address\n  - memory\n  # - undefined\n\nfuzzing_engines:\n  - libfuzzer\n  # - honggfuzz\n  # - afl\n\n# builds_per_day: 2",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/fuzzing/projects/libcups/oss_fuzz_build.sh"
    },
    "libdwarf": {
        "name": "libdwarf",
        "language": "c",
        "homepage": "https://www.prevanders.net/dwarf.html",
        "main_repo": "https://github.com/davea42/libdwarf-code",
        "primary_contact": "davea42@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.prevanders.net/dwarf.html\"\nlanguage: c\nprimary_contact: \"davea42@gmail.com\"\nmain_repo: \"https://github.com/davea42/libdwarf-code\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n - afl\n - honggfuzz\n - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build corpus for fuzzing\nexport BINARY_SAMPLES_DIR=\"$SRC/libdwarf-binary-samples\"\nexport BINARY_SAMPLES_V1=\"$BINARY_SAMPLES_DIR/binary-samples\"\nexport BINARY_SAMPLES_V2=\"$BINARY_SAMPLES_DIR/binary-samples-v2\"\nexport FUZZER_DIR=\"$SRC/libdwarf/fuzz\"\n\nmkdir $SRC/corp\ncp $BINARY_SAMPLES_V1/elf* $SRC/corp\ncp $BINARY_SAMPLES_V1/Mach* $SRC/corp\ncp $BINARY_SAMPLES_V1/pe* $SRC/corp\ncp $BINARY_SAMPLES_V1/lib* $SRC/corp\nfor file in $BINARY_SAMPLES_V2/{linux,windows}/*_DWARF*/* $BINARY_SAMPLES_V2/macOS-arm/*/*; do \n export newfile=$(echo $file | sed 's/ /_/g')\n # e.g. cp \"...\" /out/windows_gcc11_DWARF2_cross-platform.exe\n cp \"$file\" $SRC/corp/$(echo \"$newfile\" | cut -d/ -f5,6 | sed 's/\\//_/g')_$(basename \"$newfile\")\ndone\n\nzip -r -j $OUT/fuzz_seed_corpus.zip $SRC/corp\nfor fuzzFile in $FUZZER_DIR/fuzz*.c; do\n  fuzzName=$(basename \"$fuzzFile\" '.c')\n  cp $OUT/fuzz_seed_corpus.zip $OUT/${fuzzName}_seed_corpus.zip\ndone\nrm $OUT/fuzz_seed_corpus.zip\n\n\n# Build fuzzers\nmkdir build\ncd build\ncmake ../\nmake\n\nfor fuzzFile in $FUZZER_DIR/fuzz*.c; do\n  fuzzName=$(basename \"$fuzzFile\" '.c')\n  $CC $CFLAGS $LIB_FUZZING_ENGINE -I../src/lib/libdwarf/ \\\n    \"$FUZZER_DIR/${fuzzName}.c\" -o \"$OUT/${fuzzName}\" ./src/lib/libdwarf/libdwarf.a -lz\ndone\n"
    },
    "libecc": {
        "name": "libecc",
        "language": "c++",
        "homepage": "https://github.com/ANSSI-FR/libecc",
        "main_repo": "https://github.com/ANSSI-FR/libecc.git",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/ANSSI-FR/libecc\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nmain_repo: \"https://github.com/ANSSI-FR/libecc.git\"\nauto_ccs:\n    - \"dev.libecc@gmail.com\"\nsanitizers:\n - address\n - undefined\n - memory\narchitectures:\n - x86_64\n - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NO_OPENSSL\"\nexport LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\"\n\n# Install Boost headers\ncd $SRC/\ntar jxf boost_1_84_0.tar.bz2\ncd boost_1_84_0/\nCFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\nCFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\ncp -R boost/ /usr/include/\n\n# Build libecc\ncd $SRC/libecc\npython3 scripts/expand_libecc.py --name=\"secp112r2\" --prime=0xdb7c2abf62e35e668076bead208b --order=0x36df0aafd8b8d7597ca10520d04b --a=0x6127c24c05f38a0aaaf65c0ef02c --b=0x51def1815db5ed74fcc34c85d709 --gx=0x4ba30ab5e892b4e1649dd0928643 --gy=0xadcd46f5882e3747def36e956e97 --cofactor=4\npython3 scripts/expand_libecc.py --name=\"secp128r2\" --prime=0xfffffffdffffffffffffffffffffffff --order=0x3fffffff7fffffffbe0024720613b5a3 --a=0xd6031998d1b3bbfebf59cc9bbff9aee1 --b=0x5eeefca380d02919dc2c6558bb6d8a5d --gx=0x7b6aa5d85e572983e6fb32a7cdebc140 --gy=0x27b6916a894d3aee7106fe805fc34b44 --cofactor=4\nexport CFLAGS=\"$CFLAGS -DUSE_CRYPTOFUZZ\"\nmake -j$(nproc) build/libsign.a\nexport LIBECC_PATH=$(realpath .)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBECC\"\n\n# Build Botan\ncd $SRC/botan\nif [[ $CFLAGS != *-m32* ]]\nthen\n    if [[ $CFLAGS != *sanitize=memory* ]]\n    then\n        ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator,x509 --build-targets=static --without-documentation\n    else\n        ./configure.py --disable-asm --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator,x509 --build-targets=static --without-documentation\n    fi\nelse\n    ./configure.py --cpu=x86_32 --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator,x509 --build-targets=static --without-documentation\nfi\nmake -j$(nproc)\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN -DCRYPTOFUZZ_BOTAN_IS_ORACLE\"\nexport LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\nexport BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\n\n# Compile libgmp\ncd $SRC/\ntar --lzip -xvf gmp-6.2.1.tar.lz\ncd $SRC/gmp-6.2.1/\nautoreconf -ivf\nif [[ $CFLAGS = *-m32* ]]\nthen\n    setarch i386 ./configure --enable-maintainer-mode --enable-assert\nelif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    ./configure --enable-maintainer-mode --enable-assert --disable-assembly\nelse\n    ./configure --enable-maintainer-mode --enable-assert\nfi\nmake -j$(nproc)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBGMP\"\nexport LIBGMP_INCLUDE_PATH=$(realpath .)\nexport LIBGMP_A_PATH=$(realpath .libs/libgmp.a)\n\ncd $SRC/wolfssl/\n# Checkout at commit that's known to be bug-free\ngit checkout b7b20ededda4cea208fb7745629904fda64c7524\n\n# Install support for wolfCrypt SM algorithms\ncd $SRC/wolfsm/\n./install.sh\n\n# Compile wolfSSL\ncd $SRC/wolfssl/\n# Note (to self):\n# Compiling wolfCrypt with SP math instead of normal math due to symbol collisions (specifically fp_* functions) between libecc and wolfCrypt otherwise.\nexport CFLAGS=\"$CFLAGS -DHAVE_AES_ECB -DWOLFSSL_DES_ECB -DHAVE_ECC_SECPR2 -DHAVE_ECC_SECPR3 -DHAVE_ECC_BRAINPOOL -DHAVE_ECC_KOBLITZ -DWOLFSSL_ECDSA_SET_K -DWOLFSSL_ECDSA_SET_K_ONE_LOOP -DWOLFSSL_SP_INT_NEGATIVE\"\nautoreconf -ivf\nexport WOLFCRYPT_CONFIGURE_PARAMS=\"--enable-static --enable-md2 --enable-md4 --enable-ripemd --enable-blake2 --enable-blake2s --enable-pwdbased --enable-scrypt --enable-hkdf --enable-cmac --enable-arc4 --enable-camellia --enable-aesccm --enable-aesctr --enable-xts --enable-des3 --enable-x963kdf --enable-harden --enable-aescfb --enable-aesofb --enable-aeskeywrap --enable-aessiv --enable-keygen --enable-curve25519 --enable-curve448 --enable-shake256 --disable-crypttests --disable-examples --enable-compkey --enable-ed448 --enable-ed25519 --enable-ecccustcurves --enable-xchacha --enable-cryptocb --enable-eccencrypt --enable-smallstack --enable-ed25519-stream --enable-ed448-stream --enable-sp-math-all --enable-aesgcm-stream --enable-shake128 --enable-siphash --enable-sm2 --enable-sm3\"\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export WOLFCRYPT_CONFIGURE_PARAMS=\"$WOLFCRYPT_CONFIGURE_PARAMS -disable-asm\"\nfi\n./configure $WOLFCRYPT_CONFIGURE_PARAMS\nmake -j$(nproc)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_WOLFCRYPT\"\nexport WOLFCRYPT_LIBWOLFSSL_A_PATH=`realpath src/.libs/libwolfssl.a`\nexport WOLFCRYPT_INCLUDE_PATH=`realpath .`\n\n# Build Cryptofuzz\ncd $SRC/cryptofuzz\npython gen_repository.py\nrm extra_options.h\necho -n '\"' >>extra_options.h\necho -n '--force-module=libecc ' >>extra_options.h\necho -n '--operations=Digest,HMAC,ECC_PrivateToPublic,ECC_ValidatePubkey,ECDSA_Sign,ECDSA_Verify,ECGDSA_Sign,ECGDSA_Verify,ECRDSA_Sign,ECRDSA_Verify,ECDH_Derive,ECC_Point_Add,ECC_Point_Mul,ECC_Point_Dbl,ECC_Point_Neg,BignumCalc ' >>extra_options.h\necho -n '--curves=brainpool192r1,brainpool192t1,brainpool224r1,brainpool224t1,brainpool256r1,brainpool256t1,brainpool320r1,brainpool320t1,brainpool384r1,brainpool384t1,brainpool512r1,brainpool512t1,secp112r2,secp128r2,secp192r1,secp192k1,secp224r1,secp224k1,secp256r1,secp256k1,secp384r1,secp521r1,frp256v1,secp256k1,sm2p256v1,gost_256A,gost_512A,gostr3410_2001_cryptopro_a,gostr3410_2001_cryptopro_b,gostr3410_2001_cryptopro_c,gostr3410_2001_cryptopro_xcha,gostr3410_2001_cryptopro_xchb,gostr3410_2001_test,tc26_gost_3410_12_256_a,tc26_gost_3410_12_256_b,tc26_gost_3410_12_256_c,tc26_gost_3410_12_256_d,tc26_gost_3410_12_512_a,tc26_gost_3410_12_512_b,tc26_gost_3410_12_512_c,tc26_gost_3410_12_512_test ' >>extra_options.h\necho -n '--digests=NULL,SHA224,SHA256,SHA3-224,SHA3-256,SHA3-384,SHA3-512,SHA384,SHA512,SHA512-224,SHA512-256,SM3,SHAKE256_114,STREEBOG-256,STREEBOG-512,RIPEMD160,BASH224,BASH256,BASH384,BASH512 ' >>extra_options.h\necho -n '--calcops=Add,AddMod,And,Bit,Cmp,CondAdd,CondSub,Div,ExpMod,ExtGCD_X,ExtGCD_Y,GCD,InvMod,IsOdd,IsOne,IsZero,LRot,LShift1,Mod,Mul,MulMod,NegMod,NumBits,One,Or,RRot,RShift,RandMod,Sqr,Sub,SubMod,Xor,Zero ' >>extra_options.h\necho -n '\"' >>extra_options.h\ncd modules/libecc/\nmake -B -j$(nproc)\ncd ../botan/\nmake -B -j$(nproc)\ncd ../libgmp/\nmake -B -j$(nproc)\ncd ../wolfcrypt/\nmake -B -j$(nproc)\ncd ../../\nmake -B -j$(nproc)\n\ncp cryptofuzz $OUT/cryptofuzz-libecc\n"
    },
    "libevent": {
        "name": "libevent",
        "language": "c++",
        "homepage": "https://github.com/libevent/libevent",
        "main_repo": "https://github.com/libevent/libevent.git",
        "primary_contact": "a3at.mail@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/libevent/libevent\"\nlanguage: c++\nprimary_contact: \"a3at.mail@gmail.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/libevent/libevent.git'\nauto_ccs:\n  - \"david@adalogics.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nmkdir build\ncd build\ncmake -DEVENT__DISABLE_MBEDTLS=ON \\\n      -DEVENT__DISABLE_OPENSSL=ON \\\n      -DEVENT__LIBRARY_TYPE=STATIC \\\n      -DEVENT__DISABLE_TESTS=ON \\\n      -DEVENT__DISABLE_SAMPLES=ON \\\n      ../\nmake\nmake install\n\n# build fuzzer\nfor fuzzers in $(find $SRC -name '*_fuzzer.cc'); do\n  fuzz_basename=$(basename -s .cc $fuzzers)\n  $CXX $CXXFLAGS -std=c++11 -I../ -Iinclude \\\n      $fuzzers $LIB_FUZZING_ENGINE ./lib/libevent.a ./lib/libevent_core.a  \\\n      ./lib/libevent_pthreads.a ./lib/libevent_extra.a \\\n      -o $OUT/$fuzz_basename\ndone\n\nif [[ \"$FUZZING_ENGINE\" == \"honggfuzz\" ]]\nthen\n  fuzz_basename=$(basename -s .cc $fuzzers)\n  $CC $CFLAGS $LIB_HFND \"$HFND_CFLAGS\" -Iinclude \\\n      $SRC/fuzz_request_cb.c $LIB_FUZZING_ENGINE ./lib/libevent.a ./lib/libevent_core.a  \\\n      ./lib/libevent_pthreads.a ./lib/libevent_extra.a \\\n      -o $OUT/fuzz_request\nfi\n\n# The dictionary is not compatible with AFL\nif [ \"$FUZZING_ENGINE\" != 'afl' ]; then\n  cp $SRC/fuzzing/dictionaries/http.dict $OUT/http_fuzzer.dict\nfi\n"
    },
    "libexif": {
        "name": "libexif",
        "language": "c++",
        "homepage": "https://libexif.github.io",
        "main_repo": "https://github.com/libexif/libexif",
        "primary_contact": "dan@coneharvesters.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://libexif.github.io\"\nlanguage: c++\nprimary_contact: \"dan@coneharvesters.com\"\nauto_ccs:\n  - paul.l.kehrer@gmail.com\n  - marcus@jet.franken.de\n  - marcusmeissner@googlemail.com\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\nmain_repo: 'https://github.com/libexif/libexif'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nautoreconf -fiv\n./configure --disable-docs --enable-shared=no --prefix=\"$WORK\"\nmake -j$(nproc)\nmake install\n\npushd $SRC\nmkdir -p exif_corpus\nfind exif-samples -type f -name '*.jpg' -exec mv -n {} exif_corpus/ \\; -o -name '*.tiff' -exec mv -n {} exif_corpus/ \\;\ncp libexif/test/testdata/*.jpg exif_corpus\nzip -r \"$WORK/exif_seed_corpus.zip\" exif_corpus/\npopd\n\nfor fuzzer in $(find $SRC/ -name '*_fuzzer.cc'); do\n  fuzzer_basename=$(basename -s .cc $fuzzer)\n  $CXX $CXXFLAGS \\\n      -std=c++11 \\\n      -I\"$WORK/include\" \\\n      $fuzzer \\\n      -o $OUT/$fuzzer_basename \\\n      $LIB_FUZZING_ENGINE \\\n      \"$WORK/lib/libexif.a\"\n  cp $WORK/exif_seed_corpus.zip \"${OUT}/${fuzzer_basename}_seed_corpus.zip\"\ndone\n"
    },
    "libfdk-aac": {
        "name": "libfdk-aac",
        "language": "c++",
        "homepage": "https://android.googlesource.com/platform/external/aac/",
        "main_repo": "https://android.googlesource.com/platform/external/aac/",
        "primary_contact": "audio-fdk@iis.fraunhofer.de",
        "vendor_ccs": [
            "adambacchus@google.com",
            "ailport@google.com",
            "bcreasey@google.com",
            "cunefare@google.com",
            "ejorgensen@google.com",
            "faerber@google.com",
            "greendonald@google.com",
            "hamzeh@google.com",
            "jaredkidd@google.com",
            "kimtony@google.com",
            "lindsaywells@google.com",
            "maverickm@google.com",
            "swansonr@google.com",
            "warrenwright@google.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://android.googlesource.com/platform/external/aac/\nmain_repo: 'https://android.googlesource.com/platform/external/aac/'\nlanguage: c++\nprimary_contact: audio-fdk@iis.fraunhofer.de\nauto_ccs:\n  - jmtrivi@google.com\nvendor_ccs:\n  - adambacchus@google.com\n  - ailport@google.com\n  - bcreasey@google.com\n  - cunefare@google.com\n  - ejorgensen@google.com\n  - faerber@google.com\n  - greendonald@google.com\n  - hamzeh@google.com\n  - jaredkidd@google.com\n  - kimtony@google.com\n  - lindsaywells@google.com\n  - maverickm@google.com\n  - swansonr@google.com\n  - warrenwright@google.com\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\n  - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build the lib.\nINCLUDES=$(for f in $(find aac -name include); do echo -I $f; done)\n# exclude -fno-sanitize=shift-base as there are shallow errors.\nEXTRA_FLAGS=-fno-sanitize=shift-base\nfor f in aac/*/src/*.cpp; do\n  $CXX $CXXFLAGS $INCLUDES $EXTRA_FLAGS -c $f &\ndone\nwait\n\n# Build the fuzz targets.\nfor target_cpp in *.cpp; do\n  target=$(basename $target_cpp .cpp)\n  $CXX $CXXFLAGS $EXTRA_FLAGS $target_cpp $INCLUDES *.o -lm  $LIB_FUZZING_ENGINE -o $OUT/$target\ndone\n"
    },
    "libfido2": {
        "name": "libfido2",
        "language": "c++",
        "homepage": "https://github.com/Yubico/libfido2",
        "main_repo": "https://github.com/Yubico/libfido2",
        "primary_contact": "kostas@yubico.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "afl"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: https://github.com/Yubico/libfido2\nlanguage: c++\nprimary_contact: \"kostas@yubico.com\"\nauto_ccs:\n    - \"pedro@ambientworks.net\"\n    - \"marissa.nishimoto@yubico.com\"\n    - \"pedro.ossfuzz@gmail.com\"\n    - \"ludvig.michaelsson@yubico.com\"\n    - \"alex.geana@yubico.com\"\nsanitizers:\n    - address\n    - undefined\n    - memory\nfuzzing_engines:\n    - libfuzzer\n    - honggfuzz\n    - afl\n    # - centipede disabled due to https://github.com/google/oss-fuzz/pull/10248#issuecomment-1579657163\nmain_repo: 'https://github.com/Yubico/libfido2'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build libcbor, taken from oss-fuzz/projects/libcbor/build.sh\n# Note SANITIZE=OFF since it gets taken care of by $CFLAGS set by oss-fuzz\ncd ${SRC}/libcbor\npatch -l -p0 < ${SRC}/libfido2/fuzz/README\nmkdir build && cd build\ncmake -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Debug \\\n      -DCMAKE_INSTALL_PREFIX=${WORK} -DSANITIZE=OFF ..\nmake -j$(nproc) VERBOSE=1\nmake install\n\n# Build OpenSSL, taken from oss-fuzz/projects/openssl/build.sh\ncd ${SRC}/openssl\nCONFIGURE_FLAGS=\"\"\nif [[ ${SANITIZER} = memory ]]\nthen\n  CONFIGURE_FLAGS=\"no-asm\"\nfi\n./config --debug no-tests ${CFLAGS} --prefix=${WORK} \\\n         --openssldir=${WORK}/openssl --libdir=lib ${CONFIGURE_FLAGS}\nmake -j$(nproc) LDCMD=\"${CXX} ${CXXFLAGS}\"\nmake install_sw\n\n# Build zlib, taken from oss-fuzz/projects/zlib.sh\ncd ${SRC}/zlib\n./configure --prefix=${WORK}\nmake -j$(nproc) all\nmake install\n\n# Building libfido2 with ${LIB_FUZZING_ENGINE} and chosen sanitizer\ncd ${SRC}/libfido2\nmkdir build && cd build\ncmake -DFUZZ=1 -DFUZZ_LDFLAGS=\"${LIB_FUZZING_ENGINE}\" \\\n      -DFUZZ_LINKER_LANGUAGE=CXX \\\n      -DPKG_CONFIG_USE_CMAKE_PREFIX_PATH=1 \\\n      -DCMAKE_PREFIX_PATH=${WORK} \\\n      -DCMAKE_INSTALL_PREFIX=${WORK} \\\n      -DCMAKE_BUILD_TYPE=Debug ..\nmake -j$(nproc)\nmake install\n\n# Prepare ${OUT} with instrumented libs\nmkdir -p ${OUT}/lib\nfor lib in `ls ${WORK}/lib/lib*.so*`; do\n    cp ${lib} ${OUT}/lib;\ndone\n\n# Place libpcsclite in ${OUT}; needed by fuzz_pcsc\nif [ -x fuzz/fuzz_pcsc ]; then\n    for lib in `ldd fuzz/fuzz_pcsc | awk '/libpcsclite.so.*=>/ { print $3 }'`; do\n        cp ${lib} ${OUT}/lib;\n    done\nfi\n\n# Fixup rpath in the fuzzers so they use our libs\nfor f in `ls fuzz/fuzz_*`; do\n    cp ${f} ${OUT}/\n    fuzzer=$(basename $f)\n    chrpath -r '$ORIGIN/lib' ${OUT}/${fuzzer}\ndone\n\n # Prepare seed corpora\ntar xzf ${SRC}/corpus.tgz\n(set -e ; cd fuzz_assert/corpus    ; zip -r ${OUT}/fuzz_assert_seed_corpus.zip .)\n(set -e ; cd fuzz_attobj/corpus    ; zip -r ${OUT}/fuzz_attobj_seed_corpus.zip .)\n(set -e ; cd fuzz_bio/corpus       ; zip -r ${OUT}/fuzz_bio_seed_corpus.zip .)\n(set -e ; cd fuzz_cred/corpus      ; zip -r ${OUT}/fuzz_cred_seed_corpus.zip .)\n(set -e ; cd fuzz_credman/corpus   ; zip -r ${OUT}/fuzz_credman_seed_corpus.zip .)\n(set -e ; cd fuzz_hid/corpus       ; zip -r ${OUT}/fuzz_hid_seed_corpus.zip .)\n(set -e ; cd fuzz_largeblob/corpus ; zip -r ${OUT}/fuzz_largeblob_seed_corpus.zip .)\n(set -e ; cd fuzz_mgmt/corpus      ; zip -r ${OUT}/fuzz_mgmt_seed_corpus.zip .)\n(set -e ; cd fuzz_netlink/corpus   ; zip -r ${OUT}/fuzz_netlink_seed_corpus.zip .)\n(set -e ; cd fuzz_pcsc/corpus      ; zip -r ${OUT}/fuzz_pcsc_seed_corpus.zip .)\n"
    },
    "libfuse": {
        "name": "libfuse",
        "language": "c",
        "homepage": "https://github.com/libfuse/libfuse",
        "main_repo": "https://github.com/libfuse/libfuse",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://github.com/libfuse/libfuse\"\nmain_repo: \"https://github.com/libfuse/libfuse\"\nlanguage: c\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\nmeson setup ..\nmeson configure -D default_library=static\nninja\n\n$CC $CFLAGS -c $SRC/fuzz_optparse.c -o fuzz_optparse.o \\\n  -I$SRC/libfuse/lib/ -I$SRC/libfuse/include -I./ \\\n  -I$SRC/fuzz-headers/lang/c \\\n  -Wincompatible-pointer-types-discards-qualifiers\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_optparse.o \\\n  -o $OUT/fuzz_optparse lib/libfuse3.a \n"
    },
    "libgd": {
        "name": "libgd",
        "language": "c++",
        "homepage": "https://libgd.org",
        "main_repo": "https://github.com/libgd/libgd",
        "primary_contact": "security@libgd.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://libgd.org\"\nlanguage: c++\nprimary_contact: \"security@libgd.org\"\nauto_ccs:\n  - vapier@gmail.com\n  - tim@tim-smith.us\n  - cmbecker69@gmx.de\nmain_repo: 'https://github.com/libgd/libgd'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed -i 's/-Werror//g' ./configure.ac\n./bootstrap.sh\n\n# Limit the size of buffer allocations to avoid bogus OOM issues\n# https://github.com/libgd/libgd/issues/422\nsed -i'' -e 's/INT_MAX/100000/' \"$SRC/libgd/src/gd_security.c\"\n\n./configure --prefix=\"$WORK\" --disable-shared\nmake -j$(nproc) install\n\nfor target in Bmp Gd Gd2 Gif Jpeg Png Tga Tiff WBMP Webp; do\n    lowercase=$(echo $target | tr \"[:upper:]\" \"[:lower:]\")\n    $CXX $CXXFLAGS -std=c++11 -I\"$WORK/include\" -L\"$WORK/lib\" \\\n      -DFUZZ_GD_FORMAT=$target \\\n      $SRC/parser_target.cc -o $OUT/${lowercase}_target \\\n      $LIB_FUZZING_ENGINE -lgd -Wl,-Bstatic -lz -Wl,-Bdynamic\ndone\n\nfor fuzzers in $(find $SRC -name '*_fuzzer.cc'); do\n      fuzz_basename=$(basename -s .cc $fuzzers)\n      $CXX $CXXFLAGS -std=c++11 -I\"$WORK/include\" -L\"$WORK/lib\" \\\n      $fuzzers -o $OUT/$fuzz_basename \\\n      $LIB_FUZZING_ENGINE -lgd -Wl,-Bstatic -lz -Wl,-Bdynamic\ndone\n\nmkdir afl_testcases\n(cd afl_testcases; tar xvf \"$SRC/afl_testcases.tgz\")\nfor format in bmp gif png webp; do\n    mkdir $format\n    find afl_testcases -type f -name '*.'$format -exec mv -n {} $format/ \\;\n    zip -rj $format.zip $format/\n    cp $format.zip \"$OUT/${format}_target_seed_corpus.zip\"\ndone\n"
    },
    "libgit2": {
        "name": "libgit2",
        "language": "c++",
        "homepage": "https://libgit2.github.com/",
        "main_repo": "https://github.com/libgit2/libgit2",
        "primary_contact": "ps@pks.im",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://libgit2.github.com/\"\nlanguage: c++\nprimary_contact: \"ps@pks.im\"\nauto_ccs:\n  - \"nelhage@nelhage.com\"\nmain_repo: 'https://github.com/libgit2/libgit2'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nmkdir -p build\ncd build\ncmake .. -DCMAKE_INSTALL_PREFIX=\"$WORK\" \\\n      -DBUILD_SHARED_LIBS=OFF \\\n      -DBUILD_CLAR=OFF \\\n      -DUSE_HTTPS=OFF \\\n      -DUSE_SSH=OFF \\\n      -DUSE_BUNDLED_ZLIB=ON \\\n\nmake -j$(nproc)\nmake install\nfor fuzzer in ../fuzzers/*_fuzzer.c\ndo\n    fuzzer_name=$(basename \"${fuzzer%.c}\")\n\n    $CC $CFLAGS -c \\\n        -I./src -I./src/util -I./include/ -I./include/git2 \\\n        -I../src/libgit2 -I../src/util -I../include \\\n        \"$fuzzer\" -o \"$WORK/$fuzzer_name.o\"\n\n    $CXX $CXXFLAGS -std=c++11 -o \"$OUT/$fuzzer_name\" \\\n        $LIB_FUZZING_ENGINE \"$WORK/$fuzzer_name.o\" \"$WORK/lib/libgit2.a\"\n\n    zip -j \"$OUT/${fuzzer_name}_seed_corpus.zip\" \\\n        ../fuzzers/corpora/${fuzzer_name%_fuzzer}/*\ndone\n"
    },
    "libheif": {
        "name": "libheif",
        "language": "c++",
        "homepage": "https://github.com/strukturag/libheif",
        "main_repo": "https://github.com/strukturag/libheif.git",
        "primary_contact": "dirk.farin@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/strukturag/libheif\"\nlanguage: c++\nprimary_contact: \"dirk.farin@gmail.com\"\nauto_ccs:\n  - \"mail@joachim-bauch.de\"\narchitectures:\n  - i386\n  - x86_64\nmain_repo: 'https://github.com/strukturag/libheif.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build dependencies.\nexport DEPS_PATH=$SRC/deps\nmkdir -p $DEPS_PATH\n\ncd $SRC/x265/build/linux\ncmake -G \"Unix Makefiles\" \\\n    -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX \\\n    -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n    -DCMAKE_INSTALL_PREFIX=\"$DEPS_PATH\" \\\n    -DENABLE_SHARED:bool=off \\\n    ../../source\nmake clean\nmake -j$(nproc) x265-static\nmake install\n\ncd $SRC/libde265\n./autogen.sh\n./configure \\\n    --prefix=\"$DEPS_PATH\" \\\n    --disable-shared \\\n    --enable-static \\\n    --disable-dec265 \\\n    --disable-sherlock265 \\\n    --disable-hdrcopy \\\n    --disable-enc265 \\\n    --disable-acceleration_speed\nmake clean\nmake -j$(nproc)\nmake install\n\nmkdir -p $SRC/aom/build/linux\ncd $SRC/aom/build/linux\ncmake -G \"Unix Makefiles\" \\\n  -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX \\\n  -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n  -DCMAKE_INSTALL_PREFIX=\"$DEPS_PATH\" \\\n  -DENABLE_SHARED:bool=off -DCONFIG_PIC=1 \\\n  -DENABLE_EXAMPLES=0 -DENABLE_DOCS=0 -DENABLE_TESTS=0 \\\n  -DCONFIG_SIZE_LIMIT=1 \\\n  -DDECODE_HEIGHT_LIMIT=12288 -DDECODE_WIDTH_LIMIT=12288 \\\n  -DDO_RANGE_CHECK_CLAMP=1 \\\n  -DAOM_MAX_ALLOCABLE_MEMORY=536870912 \\\n  -DAOM_TARGET_CPU=generic \\\n  ../../\nmake clean\nmake -j$(nproc)\nmake install\n\n# Remove shared libraries to avoid accidental linking against them.\nrm -f $DEPS_PATH/lib/*.so\nrm -f $DEPS_PATH/lib/*.so.*\n\ncd $SRC/libheif\nmkdir build\ncd build\ncmake .. --preset=fuzzing \\\n      -DFUZZING_COMPILE_OPTIONS=\"\" \\\n      -DFUZZING_LINKER_OPTIONS=\"$LIB_FUZZING_ENGINE\" \\\n      -DFUZZING_C_COMPILER=$CC -DFUZZING_CXX_COMPILER=$CXX \\\n      -DWITH_DEFLATE_HEADER_COMPRESSION=OFF\n\nmake -j$(nproc)\n\n#./autogen.sh\n#PKG_CONFIG=\"pkg-config --static\" PKG_CONFIG_PATH=\"$DEPS_PATH/lib/pkgconfig\" ./configure \\\n#    --disable-shared \\\n#    --enable-static \\\n#    --disable-examples \\\n#    --disable-go \\\n#    --enable-libfuzzer=\"$LIB_FUZZING_ENGINE\" \\\n#    CPPFLAGS=\"-I$DEPS_PATH/include\"\n#make clean\n#make -j$(nproc)\n\ncp fuzzing/*_fuzzer $OUT\ncp ../fuzzing/data/dictionary.txt $OUT/box-fuzzer.dict\ncp ../fuzzing/data/dictionary.txt $OUT/file-fuzzer.dict\n\nzip -r $OUT/file-fuzzer_seed_corpus.zip ../fuzzing/data/corpus/*.heic\n"
    },
    "libhevc": {
        "name": "libhevc",
        "language": "c++",
        "homepage": "https://github.com/ittiam-systems/libhevc",
        "main_repo": "https://github.com/ittiam-systems/libhevc.git",
        "primary_contact": "harish.mahendrakar@ittiam.com",
        "vendor_ccs": [
            "adambacchus@google.com",
            "ailport@google.com",
            "bcreasey@google.com",
            "cunefare@google.com",
            "ejorgensen@google.com",
            "faerber@google.com",
            "greendonald@google.com",
            "hamzeh@google.com",
            "jaredkidd@google.com",
            "kimtony@google.com",
            "lindsaywells@google.com",
            "maverickm@google.com",
            "swansonr@google.com",
            "warrenwright@google.com"
        ],
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ittiam-systems/libhevc\"\nlanguage: c++\nprimary_contact: \"harish.mahendrakar@ittiam.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nauto_ccs:\n  - aadithya.kamath@ittiam.com\n  - harish.mahendrakar@ittiam.com\n  - ram.mohan@ittiam.com\n  - umang.saini@ittiam.com\n  - essick@google.com\n  - lajos@google.com\nvendor_ccs:\n  - adambacchus@google.com\n  - ailport@google.com\n  - bcreasey@google.com\n  - cunefare@google.com\n  - ejorgensen@google.com\n  - faerber@google.com\n  - greendonald@google.com\n  - hamzeh@google.com\n  - jaredkidd@google.com\n  - kimtony@google.com\n  - lindsaywells@google.com\n  - maverickm@google.com\n  - swansonr@google.com\n  - warrenwright@google.com\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/ittiam-systems/libhevc.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project.\n$SRC/libhevc/fuzzer/ossfuzz.sh\n"
    },
    "libhtp": {
        "name": "libhtp",
        "language": "rust",
        "homepage": "https://github.com/OISF/libhtp",
        "main_repo": "https://github.com/OISF/libhtp.git",
        "primary_contact": "vjulien@openinfosecfoundation.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/OISF/libhtp\"\nlanguage: rust\nprimary_contact: \"vjulien@openinfosecfoundation.org\"\nauto_ccs :\n- \"p.antoine@catenacyber.fr\"\n- \"jish@openinfosecfoundation.org \"\n- \"todd.mortimer@gmail.com\"\n\nsanitizers:\n- address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nfuzzing_engines:\n  - libfuzzer\nmain_repo: 'https://github.com/OISF/libhtp.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\n(\ncd libhtp-rs\nexport CARGO_BUILD_TARGET=\"x86_64-unknown-linux-gnu\"\ncargo fuzz build -O\ncargo fuzz list | while read i; do\n    # debug for coverage build\n    cp fuzz/target/x86_64-unknown-linux-gnu/release/$i $OUT/ || cp fuzz/target/x86_64-unknown-linux-gnu/debug/$i $OUT/\ndone\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n    export RUSTFLAGS=\"$RUSTFLAGS -Cpasses=sancov-module -Cllvm-args=-sanitizer-coverage-level=4 -Cllvm-args=-sanitizer-coverage-trace-compares -Cllvm-args=-sanitizer-coverage-inline-8bit-counters -Cllvm-args=-sanitizer-coverage-trace-geps -Cllvm-args=-sanitizer-coverage-prune-blocks=0 -Cllvm-args=-sanitizer-coverage-pc-table -Clink-dead-code -Cllvm-args=-sanitizer-coverage-stack-depth\"\nfi\ncat $SRC/multiple.txt | while read i; do\n    git grep $i | cut -d: -f1 | uniq | xargs sed -i -e s/$i/\"$i\"_rs/;\ndone\n# build in release mode to avoid timeouts\ncargo build -r\ncp ./target/x86_64-unknown-linux-gnu/release/libhtp.a ../libhtp-rs.a\n)\n\ncd libhtp\nsh autogen.sh\n./configure\nmake -j$(nproc)\n\n$CC $CFLAGS -I. -c test/fuzz/fuzz_htp.c -o fuzz_htp.o\n$CC $CFLAGS -I. -c test/test.c -o test.o\n$CXX $CXXFLAGS fuzz_htp.o test.o -o $OUT/fuzz_htp_c ./htp/.libs/libhtp.a $LIB_FUZZING_ENGINE -lz -llzma\n\n$CC $CFLAGS -I. -c test/fuzz/fuzz_diff.c -o fuzz_diff.o\n$CXX $CXXFLAGS fuzz_diff.o test.o -o $OUT/fuzz_diff ./htp/.libs/libhtp.a ../libhtp-rs.a $LIB_FUZZING_ENGINE -lz -llzma\n\n# builds corpus\nzip -r $OUT/fuzz_htp_seed_corpus.zip test/files/*.t\nzip -r $OUT/fuzz_diff_seed_corpus.zip test/files/*.t\n"
    },
    "libical": {
        "name": "libical",
        "language": "c++",
        "homepage": "https://github.com/libical/libical",
        "main_repo": "https://github.com/libical/libical.git",
        "primary_contact": "tsdgeos@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: https://github.com/libical/libical\nlanguage: c++\nprimary_contact: tsdgeos@gmail.com\nauto_ccs:\n  - allen.d.winter@gmail.com\n  - kent.sutherland@gmail.com\n  - ksmurchison@gmail.com\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/libical/libical.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncmake . -DSTATIC_ONLY=ON -DICAL_GLIB=False -DICAL_GLIB_BUILD_DOCS=False -DGOBJECT_INTROSPECTION=False\nmake install -j$(nproc)\n\n\n$CXX $CXXFLAGS -std=c++11 $SRC/libical_fuzzer.cc $LIB_FUZZING_ENGINE /usr/local/lib/libical.a -o $OUT/libical_fuzzer\n$CXX $CXXFLAGS -std=c++11 $SRC/libical_extended_fuzzer.cc $LIB_FUZZING_ENGINE /usr/local/lib/libical.a -o $OUT/libical_extended_fuzzer\n\nfind . -name *.ics -print | zip -q $OUT/libical_fuzzer_seed_corpus.zip -@\n"
    },
    "libidn": {
        "name": "libidn",
        "language": "c++",
        "homepage": "https://www.gnu.org/software/libidn/",
        "main_repo": "https://git.savannah.gnu.org/git/libidn.git",
        "primary_contact": "rockdaboot@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.gnu.org/software/libidn/\"\nlanguage: c++\nprimary_contact: \"rockdaboot@gmail.com\"\nauto_ccs:\n  - \"tim.ruehsen@gmx.de\"\n  - \"simon@josefsson.org\"\nmain_repo: 'https://git.savannah.gnu.org/git/libidn.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# avoid iconv() memleak on Ubuntu 16.04 image (breaks test suite)\nexport ASAN_OPTIONS=detect_leaks=0\n\n./bootstrap --skip-po\n./configure --enable-static --disable-doc\nmake -j\nmake -j check\n\ncd fuzz\nmake oss-fuzz\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.options' -exec cp -v '{}' $OUT ';'\n\nfor fuzzer in *_fuzzer; do\n    cp -p \"${fuzzer}\" \"$OUT\"\n\n    if [ -f \"$SRC/${fuzzer}_seed_corpus.zip\" ]; then\n        cp \"$SRC/${fuzzer}_seed_corpus.zip\" \"$OUT/\"\n    fi\n\n    if [ -d \"${fuzzer}.in/\" ]; then\n        zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"${fuzzer}.in/\"\n    fi\ndone\n"
    },
    "libidn2": {
        "name": "libidn2",
        "language": "c++",
        "homepage": "https://gitlab.com/libidn/libidn2",
        "main_repo": "https://gitlab.com/libidn/libidn2.git",
        "primary_contact": "rockdaboot@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://gitlab.com/libidn/libidn2\"\nlanguage: c++\nprimary_contact: \"rockdaboot@gmail.com\"\nauto_ccs:\n  - \"simon@josefsson.org\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://gitlab.com/libidn/libidn2.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./bootstrap\n# switch off leak detection for ./configure run to detect iconv() correctly\nASAN_OPTIONS=detect_leaks=0 ./configure --enable-static --disable-shared --disable-doc --disable-gcc-warnings\nmake clean\nmake -j$(nproc) check VERBOSE=t\n\ncd fuzz\nmake oss-fuzz\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.options' -exec cp -v '{}' $OUT ';'\n\nfor dir in *_fuzzer.in; do\n  fuzzer=$(basename $dir .in)\n  zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"${dir}/\"\ndone\n"
    },
    "libiec61850": {
        "name": "libiec61850",
        "language": "c",
        "homepage": "https://github.com/mz-automation/libiec61850",
        "main_repo": "https://github.com/mz-automation/libiec61850",
        "primary_contact": "support@mz-automation.de",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/mz-automation/libiec61850\"\nprimary_contact: \"support@mz-automation.de\"\nauto_ccs:\n  - \"david@adalogics.com\"\nlanguage: c\nmain_repo: 'https://github.com/mz-automation/libiec61850'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd libiec61850\nmkdir build && cd build\ncmake ../\nmake\n\n$CC $CFLAGS $LIB_FUZZING_ENGINE ../fuzz/fuzz_mms_decode.c -c \\\n\t-I../src/iec61850/inc -I../src/mms/inc -I../src/common/inc \\\n\t-I../hal/inc -I../src/logging\n\n\n$CXX $CXXFLAGS -fuse-ld=lld $LIB_FUZZING_ENGINE fuzz_mms_decode.o -o $OUT/fuzz_mms_decode ./src/libiec61850.a ./hal/libhal.a\n\n# Copy over the options file\ncp $SRC/fuzz_decode.options $OUT/fuzz_decode.options\n"
    },
    "libigl": {
        "name": "libigl",
        "language": "c++",
        "homepage": "https://libigl.github.io",
        "main_repo": "https://github.com/libigl/libigl",
        "primary_contact": "alecjacobson@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://libigl.github.io\"\nlanguage: c++\nprimary_contact: \"alecjacobson@gmail.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: \"https://github.com/libigl/libigl\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build-dir && cd build-dir\ncmake -DLIBIGL_OPENGL=OFF \\\n      -DLIBIGL_GLFW=OFF \\\n      -DLIBIGL_IMGUI=OFF \\\n      -DLIBIGL_COMISO=OFF \\\n      -DLIBIGL_EMBREE=OFF \\\n      -DLIBIGL_PNG=OFF \\\n      -DLIBIGL_COPYLEFT_CORE=OFF \\\n      -DLIBIGL_COPYLEFT_CGAL=OFF \\\n      -DLIBIGL_COPYLEFT_TETGEN=OFF \\\n      -DLIBIGL_COPYLEFT_COMISO=OFF \\\n      -DLIBIGL_RESTRICTED_TRIANGLE=OFF \\\n      -DLIBIGL_PREDICATES=OFF \\\n      -DLIBIGL_XML=OFF \\\n      -DLIBIGL_RESTRICTED_MATLAB=OFF \\\n      -DLIBIGL_BUILD_TESTS=OFF \\\n      ..\nmake -j$(nproc)\n\n$CXX $CXXFLAGS -DIGL_STATIC_LIBRARY \\\n     -I/src/libigl/include \\\n     -isystem /src/libigl/cmake/../include \\\n     -isystem /src/libigl/cmake/../external/eigen \\\n     -c $SRC/igl_fuzzer.cpp -o fuzzer.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzzer.o   \\\n     -o $OUT/igl_fuzzer $SRC/libigl/build-dir/lib/libigl.a\n"
    },
    "libjpeg-turbo": {
        "name": "libjpeg-turbo",
        "language": "c",
        "homepage": "https://libjpeg-turbo.org",
        "main_repo": "https://github.com/libjpeg-turbo/libjpeg-turbo",
        "primary_contact": "drc@virtualgl.org",
        "vendor_ccs": [
            "aosmond@mozilla.com",
            "tnikkel@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://libjpeg-turbo.org\"\nlanguage: c\nprimary_contact: \"drc@virtualgl.org\"\nvendor_ccs:\n  - \"aosmond@mozilla.com\"\n  - \"tnikkel@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/libjpeg-turbo/libjpeg-turbo'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "# Copyright 2022-2023 D. R. Commander\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -e\nset -u\n\ncat fuzz/branches.txt | while read branch; do\n\tpushd libjpeg-turbo.$branch\n\tif [ \"$branch\" = \"main\" ]; then\n\t\tsh fuzz/build.sh\n\telse\n\t\tsh fuzz/build.sh _$branch\n\tfi\n\tpopd\ndone\n"
    },
    "libjxl": {
        "name": "libjxl",
        "language": "c++",
        "homepage": "https://github.com/libjxl/libjxl",
        "main_repo": "https://github.com/libjxl/libjxl.git",
        "primary_contact": "libjxl-security@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/libjxl/libjxl\"\nmain_repo: 'https://github.com/libjxl/libjxl.git'\nlanguage: c++\n\nprimary_contact: \"libjxl-security@google.com\"\nauto_ccs:\n  - \"eustas@google.com\"\n  - \"jyrki@google.com\"\n  - \"veluca@google.com\"\n\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\narchitectures:\n - x86_64\n - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbuild_args=(\n  -G Ninja\n  -DBUILD_TESTING=OFF\n  -DBUILD_SHARED_LIBS=OFF\n  -DJPEGXL_ENABLE_BENCHMARK=OFF\n  -DJPEGXL_ENABLE_DEVTOOLS=ON\n  -DJPEGXL_ENABLE_EXAMPLES=OFF\n  -DJPEGXL_ENABLE_FUZZERS=ON\n  -DJPEGXL_ENABLE_MANPAGES=OFF\n  -DJPEGXL_ENABLE_SJPEG=OFF\n  -DJPEGXL_ENABLE_VIEWERS=OFF\n  -DCMAKE_BUILD_TYPE=Release\n  -DCMAKE_BUILD_WITH_INSTALL_RPATH=ON\n)\n\n# Build and generate a fuzzer corpus in release mode without instrumentation.\n# This is done in a subshell since we change the environment.\n(\n  unset CFLAGS\n  unset CXXFLAGS\n  export AFL_NOOPT=1\n\n  rm -rf ${WORK}/libjxl-corpus\n  mkdir -p ${WORK}/libjxl-corpus\n  cd ${WORK}/libjxl-corpus\n  cmake \"${build_args[@]}\" \"${SRC}/libjxl\"\n  ninja clean\n  ninja djxl_fuzzer_corpus jpegli_dec_fuzzer_corpus\n\n  # Generate fuzzer corpora.\n  fuzzers=(\n    djxl_fuzzer\n    jpegli_dec_fuzzer\n  )\n  for fuzzer in \"${fuzzers[@]}\"; do\n    mkdir -p \"${fuzzer}_corpus\"\n    \"tools/${fuzzer}_corpus\" -q -r \"${fuzzer}_corpus\"\n  done\n\n  # Copy the libjpeg-turbo seed corpus files and add 4 random bytes to each.\n  for file in $(find \"${SRC}\"/seed-corpora/{bugs/decompress,afl-testcases/jpeg*} -type f); do\n    dst=jpegli_dec_fuzzer_corpus/$(basename \"${file}\")\n    cp \"${file}\" \"${dst}\"\n    dd if=/dev/urandom bs=1 count=4 2>/dev/null >> \"${dst}\"\n  done\n\n  for fuzzer in \"${fuzzers[@]}\"; do\n    zip -q -j \"${OUT}/${fuzzer}_seed_corpus.zip\" \"${fuzzer}_corpus\"/*\n  done\n)\n\n# Build the fuzzers in release mode but force the inclusion of JXL_DASSERT()\n# checks.\nexport CXXFLAGS=\"${CXXFLAGS} -DJXL_IS_DEBUG_BUILD=1\"\n\nif [ \"$SANITIZER\" == \"undefined\" ]; then\n  build_args[${#build_args[@]}]=\"-DCXX_NO_RTTI_SUPPORTED=OFF\"\nfi\n\nrm -rf ${WORK}/libjxl-fuzzer\nmkdir -p ${WORK}/libjxl-fuzzer\ncd ${WORK}/libjxl-fuzzer\ncmake \\\n  \"${build_args[@]}\" \\\n  -DJPEGXL_FUZZER_LINK_FLAGS=\"${LIB_FUZZING_ENGINE}\" \\\n  \"${SRC}/libjxl\"\n\nfuzzers=(\n  cjxl_fuzzer\n  color_encoding_fuzzer\n  decode_basic_info_fuzzer\n  djxl_fuzzer\n  fields_fuzzer\n  icc_codec_fuzzer\n  jpegli_dec_fuzzer\n  rans_fuzzer\n  set_from_bytes_fuzzer\n  streaming_fuzzer\n  transforms_fuzzer\n)\n\nninja clean\nninja \"${fuzzers[@]}\"\nfor fuzzer in \"${fuzzers[@]}\"; do\n  cp tools/${fuzzer} \"${OUT}/\"\ndone\n"
    },
    "libldac": {
        "name": "libldac",
        "language": "c++",
        "homepage": "https://android.googlesource.com/platform/external/libldac",
        "main_repo": "https://android.googlesource.com/platform/external/libldac",
        "primary_contact": "Chisato.Kenmochi@sony.com",
        "vendor_ccs": [
            "adambacchus@google.com",
            "ailport@google.com",
            "bcreasey@google.com",
            "cunefare@google.com",
            "ejorgensen@google.com",
            "faerber@google.com",
            "greendonald@google.com",
            "hamzeh@google.com",
            "jaredkidd@google.com",
            "kimtony@google.com",
            "lindsaywells@google.com",
            "maverickm@google.com",
            "swansonr@google.com",
            "warrenwright@google.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://android.googlesource.com/platform/external/libldac\"\nlanguage: c++\nprimary_contact: \"Chisato.Kenmochi@sony.com\"\nauto_ccs:\n  - twsmith@mozilla.com\nvendor_ccs:\n  - adambacchus@google.com\n  - ailport@google.com\n  - bcreasey@google.com\n  - cunefare@google.com\n  - ejorgensen@google.com\n  - faerber@google.com\n  - greendonald@google.com\n  - hamzeh@google.com\n  - jaredkidd@google.com\n  - kimtony@google.com\n  - lindsaywells@google.com\n  - maverickm@google.com\n  - swansonr@google.com\n  - warrenwright@google.com\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\nmain_repo: 'https://android.googlesource.com/platform/external/libldac'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$CC $CFLAGS -Iinc -c $SRC/libldac_encode_fuzzer.cc -o libldac_encode_fuzzer.o\n$CC $CFLAGS -Iinc -c src/ldaclib.c -o src/ldaclib.o\n$CC $CFLAGS -Iinc -c src/ldacBT.c -o src/ldacBT.o\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n\tlibldac_encode_fuzzer.o \\\n\tsrc/ldaclib.o \\\n\tsrc/ldacBT.o \\\n\t-o $OUT/libldac_encode_fuzzer\n\nzip -q $OUT/libldac_encode_fuzzer_seed_corpus.zip $SRC/corpora/*\n"
    },
    "liblouis": {
        "name": "liblouis",
        "language": "c",
        "homepage": "https://github.com/liblouis/liblouis",
        "main_repo": "https://github.com/liblouis/liblouis",
        "primary_contact": "christian.egli@sbs.ch",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/liblouis/liblouis\"\nmain_repo: \"https://github.com/liblouis/liblouis\"\nlanguage: c\nprimary_contact: \"christian.egli@sbs.ch\"\nauto_ccs:\n  - \"bertfrees@gmail.com\"\n  - \"david@adalogics.com\"\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/liblouis/tests/fuzzing/build.sh\n"
    },
    "libmicrohttpd": {
        "name": "libmicrohttpd",
        "language": null,
        "homepage": "https://www.gnu.org/s/libmicrohttpd/",
        "main_repo": "https://git.gnunet.org/libmicrohttpd.git",
        "primary_contact": "christian@grothoff.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://www.gnu.org/s/libmicrohttpd/\"\nmain_repo: \"https://git.gnunet.org/libmicrohttpd.git\"\nprimary_contact: \"christian@grothoff.org\"\nauto_ccs:\n         - \"k2k@narod.ru\"\n",
        "build_sh": null
    },
    "libmodbus": {
        "name": "libmodbus",
        "language": "c",
        "homepage": "https://libmodbus.org",
        "main_repo": "https://github.com/stephane/libmodbus",
        "primary_contact": "stephane.raimbault@gmail.com",
        "vendor_ccs": [
            "libmodbus@googlegroups.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://libmodbus.org\"\nlanguage: c\nprimary_contact: \"stephane.raimbault@gmail.com\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nvendor_ccs:\n  - \"libmodbus@googlegroups.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/stephane/libmodbus'\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd fuzz\nmake all\n\ncp FuzzClient $OUT/FuzzClient\ncp FuzzServer $OUT/FuzzServer\n\npushd $SRC/oss-fuzz-bloat/libmodbus/\ncp FuzzClient_seed_corpus.zip $OUT/FuzzClient_seed_corpus.zip\ncp FuzzServer_seed_corpus.zip $OUT/FuzzServer_seed_corpus.zip\npopd\n"
    },
    "libmpeg2": {
        "name": "libmpeg2",
        "language": "c++",
        "homepage": "https://github.com/ittiam-systems/libmpeg2",
        "main_repo": "https://github.com/ittiam-systems/libmpeg2.git",
        "primary_contact": "harish.mahendrakar@ittiam.com",
        "vendor_ccs": [
            "adambacchus@google.com",
            "ailport@google.com",
            "bcreasey@google.com",
            "cunefare@google.com",
            "ejorgensen@google.com",
            "faerber@google.com",
            "greendonald@google.com",
            "hamzeh@google.com",
            "jaredkidd@google.com",
            "kimtony@google.com",
            "lindsaywells@google.com",
            "maverickm@google.com",
            "swansonr@google.com",
            "warrenwright@google.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ittiam-systems/libmpeg2\"\nlanguage: c++\nprimary_contact: \"harish.mahendrakar@ittiam.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nauto_ccs:\n  - aadithya.kamath@ittiam.com\n  - harish.mahendrakar@ittiam.com\n  - ram.mohan@ittiam.com\n  - umang.saini@ittiam.com\n  - essick@google.com\n  - lajos@google.com\nvendor_ccs:\n  - adambacchus@google.com\n  - ailport@google.com\n  - bcreasey@google.com\n  - cunefare@google.com\n  - ejorgensen@google.com\n  - faerber@google.com\n  - greendonald@google.com\n  - hamzeh@google.com\n  - jaredkidd@google.com\n  - kimtony@google.com\n  - lindsaywells@google.com\n  - maverickm@google.com\n  - swansonr@google.com\n  - warrenwright@google.com\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/ittiam-systems/libmpeg2.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project.\n$SRC/libmpeg2/fuzzer/ossfuzz.sh\n"
    },
    "liboqs": {
        "name": "liboqs",
        "language": "c",
        "homepage": "https://openquantumsafe.org/",
        "main_repo": "https://github.com/open-quantum-safe/liboqs.git",
        "primary_contact": "security@openquantumsafe.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://openquantumsafe.org/\"\nlanguage: c\nprimary_contact: \"security@openquantumsafe.org\"\nauto_ccs:\n  - nathaniel.brough@gmail.com\nmain_repo: \"https://github.com/open-quantum-safe/liboqs.git\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\ncmake -GNinja ..  -DOQS_BUILD_FUZZ_TESTS=ON\nninja -j$(nproc)\ncp tests/fuzz_* $OUT/\n"
    },
    "libpcap": {
        "name": "libpcap",
        "language": "c++",
        "homepage": "https://www.tcpdump.org",
        "main_repo": "https://github.com/the-tcpdump-group/libpcap.git",
        "primary_contact": "security@tcpdump.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.tcpdump.org\"\nlanguage: c++\nprimary_contact: \"security@tcpdump.org\"\nauto_ccs :\n  - \"p.antoine@catenacyber.fr\"\n  - \"infra.station@gmail.com\"\n  - \"gharris@sonic.net\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/the-tcpdump-group/libpcap.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd libpcap\n# build project\nmkdir build\ncd build\ncmake ..\nmake\n\n\n# build fuzz targets\nfor target in pcap filter both\ndo\n    $CC $CFLAGS -I.. -c ../testprogs/fuzz/fuzz_$target.c -o fuzz_$target.o\n    $CXX $CXXFLAGS fuzz_$target.o -o $OUT/fuzz_$target libpcap.a $LIB_FUZZING_ENGINE\ndone\n\n# export other associated stuff\ncd ..\ncp testprogs/fuzz/fuzz_*.options $OUT/\n# builds corpus\ncd $SRC/tcpdump/\nzip -r fuzz_pcap_seed_corpus.zip tests/\ncp fuzz_pcap_seed_corpus.zip $OUT/\ncd $SRC/libpcap/testprogs/BPF\nmkdir corpus\nls *.txt | while read i; do tail -1 $i > corpus/$i; done\nzip -r fuzz_filter_seed_corpus.zip corpus/\ncp fuzz_filter_seed_corpus.zip $OUT/\n"
    },
    "libpg_query": {
        "name": "libpg_query",
        "language": "c",
        "homepage": "https://pganalyze.com/",
        "main_repo": "https://github.com/pganalyze/pg_query",
        "primary_contact": "team@pganalyze.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://pganalyze.com/\"\nlanguage: c\nprimary_contact: \"team@pganalyze.com\"\nmain_repo: \"https://github.com/pganalyze/pg_query\"\nauto_ccs:\n  - \"marko@pganalyze.com\"\n  - \"lukas@pganalyze.com\"\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmake build\n$CC $CFLAGS -c ./test/fuzz/fuzz_parser.c ./libpg_query.a -I./\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_parser.o ./libpg_query.a -I./ -o $OUT/fuzz_parser\n"
    },
    "libphonenumber": {
        "name": "libphonenumber",
        "language": "c++",
        "homepage": "https://github.com/google/libphonenumber/",
        "main_repo": "https://github.com/google/libphonenumber",
        "primary_contact": "penmetsaa@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/libphonenumber/\"\nprimary_contact: \"penmetsaa@google.com\"\nlanguage: c++\nauto_ccs:\n  - \"david@adalogics.com\"\nsanitizers:\n  - address\nmain_repo: 'https://github.com/google/libphonenumber'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CXXFLAGS=\"$CXXFLAGS -std=c++14\"\n\n# For coverage build we need to remove some flags when building protobuf and icu\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n    export OCX=$CXXFLAGS\n    export OC=$CFLAGS\n    CF1=${CFLAGS//-fprofile-instr-generate/}\n    export CFLAGS=${CF1//-fcoverage-mapping/}\n    CXF1=${CXXFLAGS//-fprofile-instr-generate/}\n    export CXXFLAGS=${CXF1//-fcoverage-mapping/}\nfi\n\ncd $SRC/abseil-cpp\nmkdir build && cd build\ncmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON ../  && make -j$(nproc) && make install\nldconfig\n\n# Build Protobuf\nmkdir $SRC/protobuf-install\ncd $SRC/protobuf-install\ncmake $SRC/protobuf/cmake -Dprotobuf_BUILD_TESTS=OFF -DABSL_ROOT_DIR=$SRC/abseil-cpp\nmake -j$(nproc)\nmake install\ncp $SRC/protobuf/src/google/protobuf/*.inc /usr/local/include/google/protobuf/\n\n# Build icu\nexport DEPS_PATH=/src/deps/\nmkdir $DEPS_PATH\n\n# build ICU for linking statically.\ncd $SRC/icu/source\n./configure --disable-shared --enable-static --disable-layoutex \\\n  --disable-tests --disable-samples --with-data-packaging=static --prefix=$DEPS_PATH\nmake install -j$(nproc)\n\n# Ugly ugly hack to get static linking to work for icu.\ncd $DEPS_PATH/lib\nls *.a | xargs -n1 ar x\nrm *.a\nar r libicu.a *.{ao,o}\nln -s libicu.a libicudata.a\nln -s libicu.a libicuuc.a\nln -s libicu.a libicui18n.a\n\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n    export CFLAGS=$OC\n    export CXXFLAGS=$OCX\nfi\n\n# Build libphonenumber\ncd $SRC/libphonenumber/cpp\nsed -i 's/set (BUILD_SHARED_LIB true)/set (BUILD_SHARED_LIB false)/g' CMakeLists.txt\nsed -i 's/set(CMAKE_CXX_STANDARD 11/set(CMAKE_CXX_STANDARD 14/g' CMakeLists.txt\nsed -i 's/list (APPEND CMAKE_C_FLAGS \"-pthread\")/string (APPEND CMAKE_C_FLAGS \" -pthread\")/g' CMakeLists.txt\nsed -i 's/# Safeguarding/find_package(absl REQUIRED) # Safeguarding/g' CMakeLists.txt\n\nmkdir build\ncd build\ncmake -DUSE_BOOST=OFF -DBUILD_GEOCODER=OFF \\\n      -DBUILD_STATIC_LIB=ON -DBUILD_SHARED_LIBS=OFF \\\n      -DPROTOBUF_LIB=\"/src/protobuf-install/libprotobuf.a\" \\\n      -DBUILD_TESTING=OFF \\\n      -DICU_UC_INCLUDE_DIR=$SRC/icu/source/comon \\\n      -DICU_UC_LIB=$DEPS_PATH/lib/libicuuc.a \\\n      -DICU_I18N_INCLUDE_DIR=$SRC/icu/source/i18n/ \\\n      -DICU_I18N_LIB=$DEPS_PATH/lib/libicui18n.a  \\\n      -DREGENERATE_METADATA=OFF \\\n      ../\nmake -j$(nproc)\n\n# Build our fuzzer\n$CXX -I$SRC/libphonenumber/cpp/src $CXXFLAGS -o phonefuzz.o -c ../test/phonenumbers/fuzz_phone.cc\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE phonefuzz.o -o $OUT/phonefuzz \\\n    ./libphonenumber.a \\\n    $SRC/protobuf-install/libprotobuf.a \\\n    /usr/local/lib/libabsl_cord.a \\\n    /usr/local/lib/libabsl_cordz_info.a \\\n    /usr/local/lib/libabsl_cord_internal.a \\\n    /usr/local/lib/libabsl_cordz_functions.a \\\n    /usr/local/lib/libabsl_cordz_handle.a \\\n    /usr/local/lib/libabsl_hash.a \\\n    /usr/local/lib/libabsl_city.a \\\n    /usr/local/lib/libabsl_bad_variant_access.a \\\n    /usr/local/lib/libabsl_low_level_hash.a \\\n    /usr/local/lib/libabsl_raw_hash_set.a \\\n    /usr/local/lib/libabsl_bad_optional_access.a \\\n    /usr/local/lib/libabsl_hashtablez_sampler.a \\\n    /usr/local/lib/libabsl_exponential_biased.a \\\n    /usr/local/lib/libabsl_synchronization.a \\\n    /usr/local/lib/libabsl_graphcycles_internal.a \\\n    /usr/local/lib/libabsl_stacktrace.a \\\n    /usr/local/lib/libabsl_symbolize.a \\\n    /usr/local/lib/libabsl_malloc_internal.a \\\n    /usr/local/lib/libabsl_debugging_internal.a \\\n    /usr/local/lib/libabsl_demangle_internal.a \\\n    /usr/local/lib/libabsl_time.a \\\n    /usr/local/lib/libabsl_strings.a \\\n    /usr/local/lib/libabsl_strings_internal.a \\\n    /usr/local/lib/libabsl_throw_delegate.a \\\n    /usr/local/lib/libabsl_int128.a \\\n    /usr/local/lib/libabsl_civil_time.a \\\n    /usr/local/lib/libabsl_time_zone.a \\\n    /usr/local/lib/libabsl_base.a \\\n    /usr/local/lib/libabsl_raw_logging_internal.a \\\n    /usr/local/lib/libabsl_log_severity.a \\\n    /usr/local/lib/libabsl_spinlock_wait.a \\\n    -lrt \\\n    $DEPS_PATH/lib/libicu.a -lpthread\n"
    },
    "libplist": {
        "name": "libplist",
        "language": "c++",
        "homepage": "https://github.com/libimobiledevice/libplist",
        "main_repo": "https://github.com/libimobiledevice/libplist",
        "primary_contact": "nikias.bassen@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/libimobiledevice/libplist\"\nlanguage: c++\nprimary_contact: \"nikias.bassen@gmail.com\"\nauto_ccs:\n  - \"nikias@gmx.li\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/libimobiledevice/libplist'\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh --without-cython --enable-debug --without-tests\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\nfor fuzzer in bplist_fuzzer xplist_fuzzer jplist_fuzzer oplist_fuzzer; do\n  $CXX $CXXFLAGS -std=c++11 -Iinclude/ \\\n      fuzz/$fuzzer.cc -o $OUT/$fuzzer \\\n      $LIB_FUZZING_ENGINE src/.libs/libplist-2.0.a\ndone\n\nzip -j $OUT/bplist_fuzzer_seed_corpus.zip test/data/*.bplist\nzip -j $OUT/xplist_fuzzer_seed_corpus.zip test/data/*.plist\nzip -j $OUT/jplist_fuzzer_seed_corpus.zip test/data/*.json\nzip -j $OUT/oplist_fuzzer_seed_corpus.zip test/data/*.ostep\n\ncp fuzz/*.dict fuzz/*.options $OUT/\n"
    },
    "libpng-proto": {
        "name": "libpng-proto",
        "language": "c++",
        "homepage": "http://www.libpng.org/pub/png/libpng.html",
        "main_repo": "https://git.code.sf.net/p/libpng/code libpng-code",
        "primary_contact": "kcc@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.libpng.org/pub/png/libpng.html\"\nmain_repo: \"https://git.code.sf.net/p/libpng/code libpng-code\"\nlanguage: c++\nprimary_contact: \"kcc@google.com\"\nsanitizers:\n  - undefined\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#!/bin/bash\n\n# build libpng using the upstream-provided build.sh.\n# it will also build the vanilla (non-proto) fuzz target,\n# but we discard it.\n(cd libpng/ && contrib/oss-fuzz/build.sh && rm -rf $OUT/*)\n\n# Compile png_fuzz_proto.proto; should produce two files in genfiles/:\n# png_fuzz_proto.pb.cc  png_fuzz_proto.pb.h\nrm -rf genfiles && mkdir genfiles && LPM/external.protobuf/bin/protoc png_fuzz_proto.proto --cpp_out=genfiles\n\n# compile the upstream-provided vanilla fuzz target\n# but replace LLVMFuzzerTestOneInput with FuzzPNG so that\n# png_proto_fuzzer_example.cc can call FuzzPNG from its own\n# LLVMFuzzerTestOneInput.\n$CXX $CXXFLAGS -c -DLLVMFuzzerTestOneInput=FuzzPNG libpng/contrib/oss-fuzz/libpng_read_fuzzer.cc -I libpng\n\n# compile & link the rest\n$CXX $CXXFLAGS -DNDEBUG png_proto_fuzzer_example.cc libpng_read_fuzzer.o genfiles/png_fuzz_proto.pb.cc \\\n  -I genfiles -I.  -I libprotobuf-mutator/  -I LPM/external.protobuf/include \\\n  -fuse-ld=lld -lz \\\n  LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n  LPM/src/libprotobuf-mutator.a \\\n  LPM/external.protobuf/lib/lib*.a \\\n  libpng/.libs/libpng16.a \\\n  $LIB_FUZZING_ENGINE \\\n  -o $OUT/png_proto_fuzzer_example\n\n# custom png proto mutator\n$CXX $CXXFLAGS -DNDEBUG png_proto_fuzzer_example.cc png_proto_mutator.cc libpng_read_fuzzer.o genfiles/png_fuzz_proto.pb.cc \\\n  -I genfiles -I.  -I libprotobuf-mutator/  -I LPM/external.protobuf/include \\\n  -fuse-ld=lld -lz \\\n  LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n  LPM/src/libprotobuf-mutator.a \\\n  LPM/external.protobuf/lib/lib*.a \\\n  libpng/.libs/libpng16.a \\\n  $LIB_FUZZING_ENGINE \\\n  -o $OUT/png_proto_fuzzer_example_custom_mutator\n\necho > dummy.cc\n\n# A target, w/o protos but with a specialized custom mutator.\n$CXX $CXXFLAGS -c libpng/contrib/oss-fuzz/libpng_read_fuzzer.cc -I libpng\n$CXX $CXXFLAGS dummy.cc \\\n   -include fuzzer-test-suite/libpng-1.2.56/png_mutator.h \\\n   -D PNG_MUTATOR_DEFINE_LIBFUZZER_CUSTOM_MUTATOR \\\n   libpng_read_fuzzer.o \\\n  -lz \\\n  libpng/.libs/libpng16.a \\\n  $LIB_FUZZING_ENGINE \\\n  -o $OUT/png_custom_mutator_fuzzer_example\n\n# An experimental out-of-tree target, with a specialized custom mutator.\n$CXX $CXXFLAGS libpng_transforms_fuzzer.cc \\\n   -include fuzzer-test-suite/libpng-1.2.56/png_mutator.h \\\n   -D PNG_MUTATOR_DEFINE_LIBFUZZER_CUSTOM_MUTATOR \\\n   -I libpng \\\n  -lz \\\n  libpng/.libs/libpng16.a \\\n  $LIB_FUZZING_ENGINE \\\n  -o $OUT/png_transforms_fuzzer\n"
    },
    "libpng": {
        "name": "libpng",
        "language": "c++",
        "homepage": "http://www.libpng.org/pub/png/libpng.html",
        "main_repo": "https://github.com/pnggroup/libpng.git",
        "primary_contact": "ctruta@gmail.com",
        "vendor_ccs": [
            "aosmond@mozilla.com",
            "tnikkel@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"http://www.libpng.org/pub/png/libpng.html\"\nlanguage: c++\nprimary_contact: \"ctruta@gmail.com\"\nauto_ccs:\n  - \"barbaro.alberto@gmail.com\"\n  - \"oss-fuzz@jbowler.com\"\nvendor_ccs:\n  - \"aosmond@mozilla.com\"\n  - \"tnikkel@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/pnggroup/libpng.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "libprotobuf-mutator": {
        "name": "libprotobuf-mutator",
        "language": "c++",
        "homepage": "https://github.com/google/libprotobuf-mutator",
        "main_repo": "https://github.com/google/libprotobuf-mutator.git",
        "primary_contact": "vitalybuka@chromium.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/google/libprotobuf-mutator\"\nlanguage: c++\nprimary_contact: \"vitalybuka@chromium.org\"\nmain_repo: 'https://github.com/google/libprotobuf-mutator.git'\nfile_github_issue: True\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp -f $SRC/*.dict $SRC/*.options $OUT/\n\nmkdir -p build\npushd build\nrm -rf *\ncmake .. -GNinja -DCMAKE_BUILD_TYPE=Release \\\n    -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON \\\n    -DLIB_PROTO_MUTATOR_EXAMPLES_USE_LATEST=ON \\\n    -DLIB_PROTO_MUTATOR_FUZZER_LIBRARIES=FuzzingEngine\nninja libxml2_example expat_example\ncp -f examples/libxml2/libxml2_example $OUT/\ncp -f examples/expat/expat_example $OUT/\npopd\n"
    },
    "libproxy": {
        "name": "libproxy",
        "language": "c",
        "homepage": "https://libproxy.github.io/libproxy/",
        "main_repo": "https://github.com/libproxy/libproxy",
        "primary_contact": "jan.brummer@tabos.org",
        "vendor_ccs": [],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: https://libproxy.github.io/libproxy/\nmain_repo: https://github.com/libproxy/libproxy\nlanguage: c\nvendor_ccs: []\nprimary_contact: \"jan.brummer@tabos.org\"\nauto_ccs:\n  - \"dimstar@opensuse.org\"\n  - \"herrvorragend81@gmail.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n  ",
        "build_sh": null
    },
    "libpsl": {
        "name": "libpsl",
        "language": "c++",
        "homepage": "https://github.com/rockdaboot/libpsl",
        "main_repo": "https://github.com/rockdaboot/libpsl.git",
        "primary_contact": "rockdaboot@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/rockdaboot/libpsl\"\nlanguage: c++\nprimary_contact: \"rockdaboot@gmail.com\"\nauto_ccs:\n  - \"tim.ruehsen@gmx.de\"\nmain_repo: 'https://github.com/rockdaboot/libpsl.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport DEPS_PATH=$SRC/deps\nexport PKG_CONFIG_PATH=$DEPS_PATH/lib/pkgconfig\nexport CPPFLAGS=\"-I$DEPS_PATH/include\"\nexport LDFLAGS=\"-L$DEPS_PATH/lib\"\nexport CONFIG_SITE=$SRC/config.site\nexport GNULIB_SRCDIR=$SRC/gnulib\nexport GNULIB_TOOL=$GNULIB_SRCDIR/gnulib-tool\n\n\ncd $SRC/icu/source\nUBSAN_OPTIONS=detect_leaks=0 \\\nCFLAGS=\"$CFLAGS -fno-sanitize=vptr\" \\\nCXXFLAGS=\"$CXXFLAGS -fno-sanitize=vptr\" \\\nCPPFLAGS=\"$CPPFLAGS -fno-sanitize=vptr\" \\\n./configure --disable-shared --enable-static --disable-extras --disable-icuio --disable-layoutex \\\n  --disable-tests --disable-samples --with-data-packaging=static --prefix=$DEPS_PATH\n# ugly hack to avoid build error\necho '#include <locale.h>' >>i18n/digitlst.h\n\n# Hack so that upgrade to Ubuntu 20.04 works.\nln -s /usr/include/locale.h /usr/include/xlocale.h\n\nmake -j\nmake install\n\ncd $SRC/libunistring\n./autogen.sh\nASAN_OPTIONS=detect_leaks=0 UBSAN_OPTIONS=detect_leaks=0 \\\n  ./configure --enable-static --disable-shared --prefix=$DEPS_PATH\nmake -j\nmake install\n\ncd $SRC/libidn\n./bootstrap\nASAN_OPTIONS=detect_leaks=0 UBSAN_OPTIONS=detect_leaks=0 \\\n  ./configure --enable-static --disable-shared --disable-doc --prefix=$DEPS_PATH\nmake -j\nmake install\n\ncd $SRC/libidn2\n./bootstrap\nASAN_OPTIONS=detect_leaks=0 UBSAN_OPTIONS=detect_leaks=0 \\\n  ./configure --enable-static --disable-shared --disable-doc --disable-gcc-warnings --prefix=$DEPS_PATH\nmake -j\nmake install\n\n\ncd $SRC/libpsl\n./autogen.sh\nexport CXXFLAGS=\"$CXXFLAGS -L$DEPS_PATH/lib/\"\nif test $SANITIZER = \"undefined\"; then\n  # libicu doesn't work with -fsanitizer=undefined, see projects/icu/project.yaml\n  builds=\"libidn2 libidn none\"\nelse\n  builds=\"libicu libidn2 libidn none\"\nfi\nfor build in $builds; do\n  unset LIBS\n  if test $build = \"none\"; then\n    BUILD_FLAGS=\"--disable-runtime --disable-builtin\"\n    # convert PSL to NFC\n    cp -p list/public_suffix_list.dat list/public_suffix_list.dat.org\n    LC_ALL=C.UTF-8 python3 -c $'import unicodedata\\nimport sys\\nfor line in sys.stdin:\\n  sys.stdout.write(unicodedata.normalize(\"NFC\", line))' <list/public_suffix_list.dat.org >list/public_suffix_list.dat\n  else\n    BUILD_FLAGS=\"--enable-runtime=$build --enable-builtin=$build\"\n    if test $build = \"libicu\"; then\n      export LIBS=\"-lstdc++\"\n    fi\n  fi\n  # older m4 iconv detection has memleaks, so switch leak detection off\n  ASAN_OPTIONS=detect_leaks=0 UBSAN_OPTIONS=detect_leaks=0 \\\n    ./configure --enable-fuzzing --enable-static --disable-shared --disable-gtk-doc $BUILD_FLAGS --prefix=$DEPS_PATH\n  make clean\n  make -j\n  make -j check\n  make -C fuzz oss-fuzz\n  find fuzz -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\ndone\n\ncd fuzz\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.options' -exec cp -v '{}' $OUT ';'\n\nfor dir in *_fuzzer.in; do\n    fuzzer=$(basename $dir .in)\n    zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"${dir}/\"\ndone\n"
    },
    "libra": {
        "name": "libra",
        "language": "rust",
        "homepage": "https://github.com/libra/libra",
        "main_repo": "https://github.com/libra/libra",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "disabled: true\nfuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/libra/libra\nlanguage: rust\nmain_repo: https://github.com/libra/libra\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eux\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Note: This project creates Rust fuzz targets exclusively\n\n# recipe:\n# -------\n# 1. we list all the fuzzers and save to a file fuzzer_list\n# 2. we build the corpus for each fuzzer\n# 3. we build all the fuzzers\n\n# reset flags of OSS-Fuzz\nexport CFLAGS=\"-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\"\nexport CXXFLAGS_EXTRA=\"-stdlib=libc++\"\nexport CXXFLAGS=\"$CFLAGS $CXXFLAGS_EXTRA\"\n\n# correct workdir\ncd $SRC/libra/testsuite/libra-fuzzer\n\n# fetch all dependencies (needed for patching rocksdb)\ncargo fetch\n\n# patch rocksdb to not link libc++ statically\nsed -i \"s/link_cpp(&mut build)/build.cpp_link_stdlib(None)/\" \\\n    /rust/git/checkouts/rust-rocksdb-a9a28e74c6ead8ef/72e45c3/librocksdb_sys/build.rs\n# so now we need to link libc++ at the end\nexport RUSTFLAGS=\"-C link-arg=-L/usr/local/lib -C link-arg=-lc++\"\n\n# 1. list fuzzers\ncargo run --bin libra-fuzzer list --no-desc > fuzzer_list\n\n# 2. build corpus and move to $OUT\ncat fuzzer_list | while read -r line\ndo\n    cargo run --bin libra-fuzzer generate -n 128 $line\n    zip -r $OUT/\"$line\"_seed_corpus.zip fuzz/corpus/$line\n    rm -r fuzz/corpus/$line\ndone\n\n# rust libfuzzer flags (https://github.com/rust-fuzz/libfuzzer/blob/master/build.rs#L12)\nexport CUSTOM_LIBFUZZER_PATH=\"$LIB_FUZZING_ENGINE_DEPRECATED\"\nexport CUSTOM_LIBFUZZER_STD_CXX=c++\n# export CUSTOM_LIBFUZZER_STD_CXX=none \n\n# export fuzzing flags\nRUSTFLAGS=\"$RUSTFLAGS --cfg fuzzing\"          # used to change code logic\nRUSTFLAGS=\"$RUSTFLAGS -Cdebug-assertions\"     # to get debug_assert in rust\nRUSTFLAGS=\"$RUSTFLAGS -Zsanitizer=address\"    # address sanitizer (ASAN)\n\nRUSTFLAGS=\"$RUSTFLAGS -Cdebuginfo=1\"         \nRUSTFLAGS=\"$RUSTFLAGS -Cforce-frame-pointers\"\n\nRUSTFLAGS=\"$RUSTFLAGS -Cpasses=sancov\"\nRUSTFLAGS=\"$RUSTFLAGS -Cllvm-args=-sanitizer-coverage-level=4\"\nRUSTFLAGS=\"$RUSTFLAGS -Cllvm-args=-sanitizer-coverage-trace-compares\"\nRUSTFLAGS=\"$RUSTFLAGS -Cllvm-args=-sanitizer-coverage-inline-8bit-counters\"\nRUSTFLAGS=\"$RUSTFLAGS -Cllvm-args=-sanitizer-coverage-trace-geps\"\nRUSTFLAGS=\"$RUSTFLAGS -Cllvm-args=-sanitizer-coverage-prune-blocks=0\"\nRUSTFLAGS=\"$RUSTFLAGS -Cllvm-args=-sanitizer-coverage-pc-table\"\nRUSTFLAGS=\"$RUSTFLAGS -Clink-dead-code\"\nRUSTFLAGS=\"$RUSTFLAGS -Cllvm-args=-sanitizer-coverage-stack-depth\"\nRUSTFLAGS=\"$RUSTFLAGS -Ccodegen-units=1\"\n\nexport RUSTFLAGS\n\n# 3. build all the fuzzers!\ncat fuzzer_list | while read -r line\ndo\n    # build\n    export SINGLE_FUZZ_TARGET=\"$line\"\n    cargo build --manifest-path fuzz/Cargo.toml --bin fuzzer_builder --release --target x86_64-unknown-linux-gnu\n    # move fuzzer to $OUT\n    mv $SRC/libra/target/x86_64-unknown-linux-gnu/release/fuzzer_builder $OUT/$SINGLE_FUZZ_TARGET\ndone\n"
    },
    "libraw": {
        "name": "libraw",
        "language": "c++",
        "homepage": "https://www.libraw.org/",
        "main_repo": "https://github.com/libraw/libraw",
        "primary_contact": "jesteele@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.libraw.org/\"\nlanguage: c++\nprimary_contact: \"jesteele@google.com\"\nauto_ccs:\n    - \"nchusid@google.com\"\n    - \"pinheirojamie@google.com\"\n    - \"info@libraw.org\"\nsanitizers:\n    - address\n    - memory\n    - undefined\nmain_repo: 'https://github.com/libraw/libraw'\nfile_github_issue: true\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# copy corpuses\ncp $SRC/libraw_cr2_fuzzer_seed_corpus.zip \\\n    $SRC/libraw_nef_fuzzer_seed_corpus.zip \\\n    $SRC/libraw_raf_fuzzer_seed_corpus.zip \\\n    $OUT/\n\n# build project\nautoreconf --install\n./configure --disable-examples\nmake\n\n# build fuzzers\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_fuzzer \\\n    $LIB_FUZZING_ENGINE -lz lib/.libs/libraw.a\n\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_cr2_fuzzer \\\n    $LIB_FUZZING_ENGINE -lz lib/.libs/libraw.a\n\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_nef_fuzzer \\\n    $LIB_FUZZING_ENGINE -lz lib/.libs/libraw.a\n\n$CXX $CXXFLAGS -std=c++11 -Ilibraw \\\n    $SRC/libraw_fuzzer.cc -o $OUT/libraw_raf_fuzzer \\\n    $LIB_FUZZING_ENGINE -lz lib/.libs/libraw.a\n"
    },
    "librawspeed": {
        "name": "librawspeed",
        "language": "c++",
        "homepage": "https://github.com/darktable-org/rawspeed",
        "main_repo": "https://github.com/darktable-org/rawspeed.git",
        "primary_contact": "lebedev.ri@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/darktable-org/rawspeed\"\nlanguage: c++\nprimary_contact: \"lebedev.ri@gmail.com\"\nsanitizers:\n- address\n- undefined\n- memory\nmain_repo: 'https://github.com/darktable-org/rawspeed.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CFLAGS=\"$CFLAGS -Wno-error=nan-infinity-disabled\"\nexport CXXFLAGS=\"$CXXFLAGS -Wno-error=nan-infinity-disabled\"\n$SRC/librawspeed/.ci/oss-fuzz.sh\n"
    },
    "librdkafka": {
        "name": "librdkafka",
        "language": "c++",
        "homepage": "https://github.com/edenhill/librdkafka",
        "main_repo": "https://github.com/edenhill/librdkafka",
        "primary_contact": "magnus@edenhill.se",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/edenhill/librdkafka\"\nprimary_contact: \"magnus@edenhill.se\"\nlanguage: c++\nauto_ccs:\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/edenhill/librdkafka'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd librdkafka\nmkdir build\ncd build\ncmake -DRDKAFKA_BUILD_STATIC=ON -DRDKAFKA_BUILD_EXAMPLES=OFF -DHAVE_REGEX=OFF ../\nmake\n\n$CC -g -fPIC $CFLAGS -I$SRC/librdkafka/src -Igenerated/dummy \\\n    -c $SRC/librdkafka/tests/fuzzers/fuzz_regex.c -o fuzz_regex.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -rdynamic fuzz_regex.o -o fuzzer \\\n    ./src-cpp/librdkafka++.a ./src/librdkafka.a -lm -lssl -lcrypto \\\n    -lcrypto -lz -ldl -lpthread -lrt\ncp fuzzer $OUT/fuzz_regex\n"
    },
    "libredwg": {
        "name": "libredwg",
        "language": "c",
        "homepage": "https://github.com/LibreDWG/libredwg",
        "main_repo": "https://github.com/LibreDWG/libredwg",
        "primary_contact": "reini.urban@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/LibreDWG/libredwg\"\nprimary_contact: \"reini.urban@gmail.com\"\nlanguage: c\nauto_ccs :\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\nmain_repo: 'https://github.com/LibreDWG/libredwg'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Harden build in introspector mode\nif [[ \"$SANITIZER\" == introspector ]]; then\n  export CFLAGS=\"${CFLAGS} -Wno-error\"\n  export CXXFLAGS=\"${CXXFLAGS} -Wno-error\"\nfi\n\ncd libredwg\nsh ./autogen.sh\n# enable-release to skip unstable preR13. bindings are not fuzzed.\n./configure --disable-shared --disable-bindings --enable-release\nmake\n\n$CC $CFLAGS src/.libs/libredwg.a -I./include -I./src -c examples/llvmfuzz.c\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE llvmfuzz.o src/.libs/libredwg.a \\\n  -o $OUT/llvmfuzz\n\ncp $SRC/llvmfuzz.options $OUT/llvmfuzz.options\n"
    },
    "libreoffice": {
        "name": "libreoffice",
        "language": "c++",
        "homepage": "https://www.libreoffice.org/",
        "main_repo": "https://git.libreoffice.org/core",
        "primary_contact": "caolanm@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.libreoffice.org/\"\nlanguage: c++\nprimary_contact: \"caolanm@gmail.com\"\nsanitizers:\n  - address\n  - memory:\n     experimental: True\n  - undefined\nfuzzing_engines:\n  # see https://github.com/google/oss-fuzz/issues/6233 for missing afl\n  - libfuzzer\n  - honggfuzz\nbuilds_per_day: 2\nauto_ccs:\n  - \"damjan.jov@gmail.com\"\n  - \"noelgrandin@gmail.com\"\n  - \"sbergman@redhat.com\"\nmain_repo: 'https://git.libreoffice.org/core'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/libreoffice/bin/oss-fuzz-build.sh\n"
    },
    "libressl": {
        "name": "libressl",
        "language": "c++",
        "homepage": "https://www.libressl.org/",
        "main_repo": "https://github.com/libressl/portable.git",
        "primary_contact": "busterb@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.libressl.org/\"\nlanguage: c++\nprimary_contact: \"busterb@gmail.com\"\nauto_ccs:\n - \"beck@obtuse.com\"\n - \"theorbuehler@gmail.com\"\n - \"joel.sing@gmail.com\"\n - \"kinichiro.inoguchi@gmail.com\"\n - \"ted.unangst@gmail.com\"\n - \"miwaxe@gmail.com\"\n - \"guidovranken@gmail.com\"\nsanitizers:\n - address\n - undefined\nmain_repo: 'https://github.com/libressl/portable.git'\n",
        "build_sh": "#!/bin/bash -eux\n#\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install Boost headers\ncd $SRC/\ntar jxf boost_1_84_0.tar.bz2\ncd boost_1_84_0/\nCFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\nCFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\ncp -R boost/ /usr/include/\n\nmkdir -p $WORK/libressl\ncd $WORK/libressl\n\nCMAKE_DEFINES=\"\"\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n  CMAKE_DEFINES+=\" -DOPENSSL_NO_ASM=1\"\nfi\n\ncmake -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX \\\n      -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n      $CMAKE_DEFINES $SRC/libressl/\nmake -j$(nproc)\n\nLIBRESSL_FUZZERS=$SRC/libressl.fuzzers\nfuzzerFiles=$(find $LIBRESSL_FUZZERS -name \"*.c\" | egrep -v 'driver.c|test-corpus.c')\n\nfind . -name \"*.a\"\n\n$CC -c $CFLAGS \\\n    -o $WORK/driver.o \\\n    $LIBRESSL_FUZZERS/driver.c \\\n    -I $SRC/libressl/include -I $SRC/libressl\n\nfor F in $fuzzerFiles; do\n  fuzzerName=$(basename $F .c)\n  echo \"Building fuzzer $fuzzerName\"\n  $CC -c $CFLAGS \\\n      -o $WORK/${fuzzerName}.o \\\n      $F -I $SRC/libressl/include -I $SRC/libressl\n\n  $CXX $CXXFLAGS \\\n      -o $OUT/${fuzzerName} -fsanitize-recover=address \\\n      $WORK/driver.o $WORK/${fuzzerName}.o ./ssl/libssl.a ./crypto/libcrypto.a ./tls/libtls.a $LIB_FUZZING_ENGINE\n\n  if [ -d \"$LIBRESSL_FUZZERS/corpora/${fuzzerName}/\" ]; then\n    zip -j $OUT/${fuzzerName}_seed_corpus.zip $LIBRESSL_FUZZERS/corpora/${fuzzerName}/*\n  fi\ndone\n\ncp $SRC/*.options $OUT/\ncp $LIBRESSL_FUZZERS/oids.txt $OUT/asn1.dict\ncp $LIBRESSL_FUZZERS/oids.txt $OUT/x509.dict\n\n# Cryptofuzz\ncd $SRC/cryptofuzz/\nsed -i 's/kNegativeIntegers = false/kNegativeIntegers = true/g' config.h\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\n\n# Build Botan\ncd $SRC/botan\nif [[ $CFLAGS != *-m32* ]]\nthen\n    ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator,x509 --build-targets=static --without-documentation\nelse\n    ./configure.py --cpu=x86_32 --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator,x509 --build-targets=static --without-documentation\nfi\nmake -j$(nproc)\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN -DCRYPTOFUZZ_BOTAN_IS_ORACLE\"\nexport LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\nexport BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\n\n# Compile libgmp\ncd $SRC/\ntar --lzip -xvf gmp-6.2.1.tar.lz\ncd $SRC/gmp-6.2.1/\nautoreconf -ivf\nif [[ $CFLAGS = *-m32* ]]\nthen\n    setarch i386 ./configure --enable-maintainer-mode --enable-assert\nelif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    ./configure --enable-maintainer-mode --enable-assert --disable-assembly\nelse\n    ./configure --enable-maintainer-mode --enable-assert\nfi\nmake -j$(nproc)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBGMP\"\nexport LIBGMP_INCLUDE_PATH=$(realpath .)\nexport LIBGMP_A_PATH=$(realpath .libs/libgmp.a)\n\ncd $SRC/cryptofuzz/\n# Generate lookup tables\npython3 gen_repository.py\n# Compile Cryptofuzz LibreSSL module\ncd $SRC/cryptofuzz/modules/openssl\nOPENSSL_INCLUDE_PATH=\"$SRC/libressl/include\" OPENSSL_LIBCRYPTO_A_PATH=\"$WORK/libressl/crypto/libcrypto.a\" CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBRESSL\" make\n# Compile Cryptofuzz libgmp module\ncd ../libgmp/\nmake -B -j$(nproc)\n# Compile Cryptofuzz Botan module\ncd ../botan/\nmake -B -f Makefile-oracle -j$(nproc)\n# Compile Cryptofuzz\ncd $SRC/cryptofuzz/\nLIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_LIBRESSL -I $SRC/libressl/include\" make -j$(nproc)\n# Generate dictionary\n./generate_dict\n# Copy fuzzer\ncp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz\n# Copy dictionary\ncp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz.dict\n"
    },
    "librosa": {
        "name": "librosa",
        "language": "python",
        "homepage": "https://librosa.org/doc/latest/index.html",
        "main_repo": "https://github.com/librosa/librosa.git",
        "primary_contact": "brian.mcfee@nyu.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://librosa.org/doc/latest/index.html\"\nlanguage: python\nprimary_contact: \"brian.mcfee@nyu.edu\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\n  - undefined\nmain_repo: \"https://github.com/librosa/librosa.git\"\n",
        "build_sh": null
    },
    "librsvg": {
        "name": "librsvg",
        "language": "rust",
        "homepage": "https://gitlab.gnome.org/GNOME/librsvg/",
        "main_repo": "https://gitlab.gnome.org/GNOME/librsvg.git",
        "primary_contact": "federico.mena@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://gitlab.gnome.org/GNOME/librsvg/\"\nlanguage: rust\nprimary_contact: \"federico.mena@gmail.com\"\nauto_ccs:\n  - \"correctmost@gmail.com\"\nmain_repo: \"https://gitlab.gnome.org/GNOME/librsvg.git\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\ncoverage_extra_args: >\n  -ignore-filename-regex=rust/.*\n  -ignore-filename-regex=rustc/.*\n",
        "build_sh": "#!/bin/bash\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -o errexit\nset -o pipefail\nset -o nounset\n\nPREFIX=\"/usr\"\n\n# The OSS-Fuzz 'compile' script automatically adds instrumentation flags to the CFLAGS and CXXFLAGS\n# environment variables. These flags cause build errors with some of the third-party dependencies,\n# so we save them for restoration later.\nCFLAGS_SAVE=\"$CFLAGS\"\nCXXFLAGS_SAVE=\"$CXXFLAGS\"\n\n# Set the non-instrumentation flags manually. -O1 is particularly important for avoiding spurious\n# timeouts caused by unoptimized dependencies.\nexport CFLAGS=\"-O1 -fno-omit-frame-pointer -gline-tables-only -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\"\nexport CXXFLAGS=\"$CFLAGS $CXXFLAGS_EXTRA\"\n\n# Compile and install GLib\ncd \"$SRC/glib\"\nmeson setup --prefix=\"$PREFIX\" --buildtype=plain --default-library=static builddir -Dtests=false -Dsysprof=disabled\nninja -C builddir\nninja -C builddir install\n\n# Compile and install FreeType\ncd \"$SRC/freetype\"\nmeson setup --prefix=\"$PREFIX\" --buildtype=plain --default-library=static builddir\nninja -C builddir\nninja -C builddir install\n\n# Compile and install libxml2\ncd \"$SRC/libxml2\"\nmeson setup --prefix=\"$PREFIX\" --buildtype=plain --default-library=static builddir\nninja -C builddir\nninja -C builddir install\n\n# Compile and install Fontconfig\ncd \"$SRC/fontconfig\"\nmeson setup --prefix=\"$PREFIX\" --buildtype=plain --default-library=static builddir -Dtests=disabled -Dtools=disabled\nninja -C builddir\nninja -C builddir install\n\n# Compile and install Cairo\ncd \"$SRC/cairo\"\nmeson setup --prefix=\"$PREFIX\" --buildtype=plain --default-library=static builddir -Dpixman:tests=disabled -Dtests=disabled\nninja -C builddir\nninja -C builddir install\n\n# Compile and install HarfBuzz\ncd \"$SRC/harfbuzz\"\nmeson setup --prefix=\"$PREFIX\" --buildtype=plain --default-library=static builddir -Dtests=disabled\nninja -C builddir\nninja -C builddir install\n\n# Compile and install Pango\ncd \"$SRC/pango\"\nmeson setup --prefix=\"$PREFIX\" --buildtype=plain --default-library=static builddir\nninja -C builddir\nninja -C builddir install\n\n# Restore the compiler flag environment variables\nexport CFLAGS=\"${CFLAGS_SAVE}\"\nexport CXXFLAGS=\"${CXXFLAGS_SAVE}\"\n\n# Compile and copy the fuzz target(s)\ncd \"$SRC/librsvg/fuzz\"\n\ncargo fuzz build -O\ncp target/x86_64-unknown-linux-gnu/release/render_document \"$OUT/\"\n\n# Copy options files for fuzz targets\ncp \"$SRC\"/*.options \"$OUT/\"\n\n# Create dictionary files for fuzz targets\ncat \"$SRC/fuzzing/dictionaries/\"{css,svg,xml}.dict > \"$OUT/render_document.dict\"\n\n# Build a seed corpus consisting of all the SVGs from the librsvg repo\nCORPUS_DIR=\"$WORK/corpus\"\nmkdir -p \"$CORPUS_DIR\"\n\nFILES=$(find \"$SRC/librsvg\" -type f -iname \"*.svg\")\nfor file in $FILES; do\n  cp \"$file\" \"$CORPUS_DIR/$(md5sum \"$file\" | cut -f 1 -d ' ').svg\"\ndone\n\nzip -r \"$OUT/render_document_seed_corpus.zip\" \"$CORPUS_DIR\"/*\n"
    },
    "libsass": {
        "name": "libsass",
        "language": "c++",
        "homepage": "http://libsass.org/",
        "main_repo": "https://github.com/sass/libsass.git",
        "primary_contact": "xzyfer@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://libsass.org/\"\nlanguage: c++\nprimary_contact: \"xzyfer@gmail.com\"\n\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\n\nlabels:\n  data_context_fuzzer:\n    - sundew\nmain_repo: 'https://github.com/sass/libsass.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd libsass\nexport BUILD='static'\nmake -j$(nproc)\npopd\n\nINSTALL_DIR=\"$SRC/libsass\"\n\n$CXX $CXXFLAGS -I${INSTALL_DIR}/include data_context_fuzzer.cc \\\n  $LIB_FUZZING_ENGINE -o $OUT/data_context_fuzzer ${INSTALL_DIR}/lib/libsass.a\n"
    },
    "libsndfile": {
        "name": "libsndfile",
        "language": "c",
        "homepage": "https://github.com/libsndfile/libsndfile",
        "main_repo": "https://github.com/libsndfile/libsndfile.git",
        "primary_contact": "evpobr@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/libsndfile/libsndfile\"\nprimary_contact: \"evpobr@gmail.com\"\nlanguage: c\nauto_ccs:\n  - \"cmeister2@gmail.com\"\n  - \"erikd@mega-nerd.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\ncoverage_extra_args: -ignore-filename-regex=/usr/lib/jvm/.*\nmain_repo: 'https://github.com/libsndfile/libsndfile.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run the OSS-Fuzz script in the project.\napt-get update\n./ossfuzz/ossfuzz.sh\n\n# To make CIFuzz fast, see here for details: https://github.com/libsndfile/libsndfile/pull/796\nfor fuzzer in sndfile_alt_fuzzer sndfile_fuzzer; do\n  echo \"[libfuzzer]\" > ${OUT}/${fuzzer}.options\n  echo \"close_fd_mask = 3\" >> ${OUT}/${fuzzer}.options\ndone\n"
    },
    "libsodium": {
        "name": "libsodium",
        "language": "c++",
        "homepage": "https://libsodium.org",
        "main_repo": "https://github.com/jedisct1/libsodium.git",
        "primary_contact": "ossfuzzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://libsodium.org\"\nlanguage: c++\nprimary_contact: \"ossfuzzz@gmail.com\"\nauto_ccs:\n - \"chriswwolfe@gmail.com\"\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/jedisct1/libsodium.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\n./configure --enable-static LDFLAGS=\"$CXXFLAGS\"\nmake -j$(nproc) all\n\n# build fuzzers\nfor f in $SRC/*_fuzzer.cc; do\n    fuzzer=$(basename \"$f\" _fuzzer.cc)\n    $CXX $CXXFLAGS -std=c++11 -I\"$SRC/libsodium/src/libsodium/include\" \\\n         \"$f\" -o \"$OUT/${fuzzer}_fuzzer\" \\\n         \"$SRC/libsodium/src/libsodium/.libs/libsodium.a\" $LIB_FUZZING_ENGINE\ndone\n"
    },
    "libsoup": {
        "name": "libsoup",
        "language": "c++",
        "homepage": "https://libsoup.gnome.org",
        "main_repo": "https://gitlab.gnome.org/GNOME/libsoup.git",
        "primary_contact": "tngpng@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://libsoup.gnome.org\"\nlanguage: c++\nprimary_contact: \"tngpng@gmail.com\"\nauto_ccs:\n  - \"pgriffis@igalia.com\"\n  - \"mcatanzaro@redhat.com\"\n  - \"philip.withnall@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nfuzzing_engines:\n  - libfuzzer\n  - afl\n# FIXME: honggfuzz fails and centipede hangs\nmain_repo: 'https://gitlab.gnome.org/GNOME/libsoup.git'",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMESON_SANITIZER_ARG=\n\nif [ \"$SANITIZER\" = \"address\" ] || [ \"$SANITIZER\" = \"undefined\" ]; then\n    MESON_SANITIZER_ARG=\"-Db_sanitize=$SANITIZER\"\nfi\n\nmeson setup \"$WORK\" --wipe --buildtype=debug -Db_lundef=false -Dtls_check=false -Dsysprof=disabled -Dfuzzing=enabled -Dprefer_static=true -Ddefault_library=static -Dintrospection=disabled -Ddocs=disabled -Dtests=false $MESON_SANITIZER_ARG\nmeson compile -C \"$WORK\"\n\nfind \"$WORK/fuzzing\" -perm /a+x -type f -exec cp {} \"$OUT\" \\;\nfind \"$SRC/libsoup/fuzzing\" -name '*.dict' -exec cp {} \"$OUT\" \\;\n"
    },
    "libspdm": {
        "name": "libspdm",
        "language": "c",
        "homepage": "https://github.com/DMTF/libspdm",
        "main_repo": "https://github.com/DMTF/libspdm.git",
        "primary_contact": "zhiqiang.zhao@intel.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/DMTF/libspdm\"\nlanguage: c\nprimary_contact: \"zhiqiang.zhao@intel.com\"\nauto_ccs:\n  - \"jiewen.yao@intel.com\"\n  - \"wenxing.hou@intel.com\"\n  - \"hanx.xiao@intel.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/DMTF/libspdm.git\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\ncd $SRC/libspdm\nmkdir build\ncd build\ncmake -DARCH=x64 -DTOOLCHAIN=LIBFUZZER -DTARGET=Release -DCRYPTO=mbedtls -DGCOV=ON ..\nmake copy_sample_key\nmake\ncp -r ./bin/* $OUT"
    },
    "libspectre": {
        "name": "libspectre",
        "language": "c++",
        "homepage": "https://www.freedesktop.org/wiki/Software/libspectre/",
        "main_repo": "https://gitlab.freedesktop.org/libspectre/libspectre.git",
        "primary_contact": "tsdgeos@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.freedesktop.org/wiki/Software/libspectre/\"\nlanguage: c++\nprimary_contact: \"tsdgeos@gmail.com\"\nauto_ccs:\n  - \"randy440088@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://gitlab.freedesktop.org/libspectre/libspectre.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project\n$SRC/libspectre/test/ossfuzz.sh\n"
    },
    "libspng": {
        "name": "libspng",
        "language": "c++",
        "homepage": "https://libspng.org",
        "main_repo": "https://github.com/randy408/libspng.git",
        "primary_contact": "randy408@protonmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://libspng.org\"\nlanguage: c++\nprimary_contact: \"randy408@protonmail.com\"\nauto_ccs:\n  - \"randy440088@gmail.com\"\narchitectures:\n  - x86_64\n  - i386\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/randy408/libspng.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project\n$SRC/libspng/tests/ossfuzz.sh\n"
    },
    "libsrtp": {
        "name": "libsrtp",
        "language": "c++",
        "homepage": "https://github.com/cisco/libsrtp",
        "main_repo": "https://github.com/cisco/libsrtp",
        "primary_contact": "richbarn@cisco.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/cisco/libsrtp\"\nlanguage: c++\nprimary_contact: \"richbarn@cisco.com\"\nauto_ccs:\n - \"guidovranken@gmail.com\"\nsanitizers:\n - address\n - memory\narchitectures:\n - x86_64\n - i386\nmain_repo: 'https://github.com/cisco/libsrtp'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "cd $SRC/libsrtp\nautoreconf -ivf\n./configure\nLIBFUZZER=\"$LIB_FUZZING_ENGINE\" make srtp-fuzzer\nzip -r srtp-fuzzer_seed_corpus.zip fuzzer/corpus\ncp $SRC/libsrtp/fuzzer/srtp-fuzzer $OUT\ncp srtp-fuzzer_seed_corpus.zip $OUT\n"
    },
    "libssh": {
        "name": "libssh",
        "language": "c",
        "homepage": "https://libssh.org/",
        "main_repo": "https://git.libssh.org/projects/libssh.git",
        "primary_contact": "asn@cryptomilk.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://libssh.org/\"\nlanguage: c\nprimary_contact: \"asn@cryptomilk.org\"\nauto_ccs:\n - \"cryptomilk@gmail.com\"\n - \"jakuje@gmail.com\"\n - \"anderson.sasaki@gmail.com\"\n - \"norbertpocs0@gmail.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\nmain_repo: 'https://git.libssh.org/projects/libssh.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nBUILD=$WORK/build\nmkdir -p $BUILD\npushd $BUILD\ncmake -DCMAKE_C_COMPILER=\"$CC\" -DCMAKE_CXX_COMPILER=\"$CXX\" \\\n    -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n    -DBUILD_SHARED_LIBS=OFF -DWITH_INSECURE_NONE=ON -DWITH_EXEC=OFF \\\n    $SRC/libssh\nmake \"-j$(nproc)\"\n\nfuzzers=$(find $SRC/libssh/tests/fuzz/ -name \"*_fuzzer.c\")\nfor f in $fuzzers; do\n    fuzzerName=$(basename $f .c)\n    echo \"Building fuzzer $fuzzerName\"\n    $CC $CFLAGS -I$SRC/libssh/include/ -I$SRC/libssh/src/ -I$BUILD/ -I$BUILD/include/ \\\n        -c \"$f\" -O0 -g\n\n    $CXX $CXXFLAGS $fuzzerName.o \\\n        -o \"$OUT/$fuzzerName\" -O0 -g \\\n        $LIB_FUZZING_ENGINE ./src/libssh.a -Wl,-Bstatic -lcrypto -lz -Wl,-Bdynamic\n\n    if [ -d \"$SRC/libssh/tests/fuzz/${fuzzerName}_corpus\" ]; then\n        zip -j $OUT/${fuzzerName}_seed_corpus.zip $SRC/libssh/tests/fuzz/${fuzzerName}_corpus/*\n    fi\ndone\npopd\n"
    },
    "libssh2": {
        "name": "libssh2",
        "language": "c++",
        "homepage": "https://github.com/libssh2/libssh2",
        "main_repo": "https://github.com/libssh2/libssh2.git",
        "primary_contact": "will.cosgrove@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/libssh2/libssh2\"\nlanguage: c++\nprimary_contact: \"will.cosgrove@gmail.com\"\nauto_ccs:\n  - \"cmeister2@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/libssh2/libssh2.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\napt-get update\n# Run the OSS-Fuzz script in the project.\n./tests/ossfuzz/ossfuzz.sh\n"
    },
    "libstdcpp": {
        "name": "libstdcpp",
        "language": "c++",
        "homepage": "https://gcc.gnu.org/",
        "main_repo": "git://gcc.gnu.org/git/gcc.git",
        "primary_contact": "pauldreikossfuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://gcc.gnu.org/\"\nlanguage: c++\nprimary_contact: \"pauldreikossfuzz@gmail.com\"\nauto_ccs:\n - \"jwakely.gcc@gmail.com\"\nmain_repo: \"git://gcc.gnu.org/git/gcc.git\"\nfile_github_issue: false\narchitectures:\n - x86_64\nsanitizers:\n - address\n - undefined\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n# - centipede\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nSRCDIR=$SRC/libstdcpp\nBUILDDIR=$OUT/build.d\nINSTALLDIR=$OUT/install.d\nmkdir -p $BUILDDIR $INSTALLDIR\n\n(\n    cd $BUILDDIR\n    CXX= CC= CXXFLAGS= CFLAGS= $SRCDIR/configure \\\n       --disable-bootstrap \\\n       --prefix=$INSTALLDIR \\\n       --enable-languages=c++\n    make -j$(nproc)\n    make -j$(nproc) install-target-libstdc++-v3\n)\n\nfor fuzzsrcfile in /src/*.cpp; do\n    targetfile=$(basename $fuzzsrcfile .cpp)\n    $CXX \\\n\t$CXXFLAGS \\\n\t-std=c++20 \\\n\t-nostdinc++ \\\n\t-cxx-isystem $( echo $INSTALLDIR/include/c++/*/ ) \\\n\t-cxx-isystem $( echo $INSTALLDIR/include/c++/*/x86_64-pc-linux-gnu ) \\\n\t$fuzzsrcfile \\\n\t-o $OUT/$targetfile \\\n\t$LIB_FUZZING_ENGINE \\\n\t$INSTALLDIR/lib64/libstdc++.a\ndone\n\n"
    },
    "libtasn1": {
        "name": "libtasn1",
        "language": "c++",
        "homepage": "https://gitlab.com/gnutls/libtasn1",
        "main_repo": "https://gitlab.com/gnutls/libtasn1.git",
        "primary_contact": "rockdaboot@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://gitlab.com/gnutls/libtasn1\"\nlanguage: c++\nprimary_contact: \"rockdaboot@gmail.com\"\nauto_ccs:\n  - \"dbaryshkov@gmail.com\"\n  - \"ueno@gnu.org\"\n  - \"simon@josefsson.org\"\nfuzzing_engines:\n  - afl\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://gitlab.com/gnutls/libtasn1.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./bootstrap\n# switch off leak detection for ./configure run to detect iconv() correctly\nASAN_OPTIONS=detect_leaks=0 ./configure --enable-static --disable-shared --disable-doc --disable-gcc-warnings --enable-fuzzing\nmake clean\nmake -j$(nproc) -C lib\nmake -j$(nproc) -C src\nmake -j$(nproc) -C tests check\n\ncd fuzz\nmake oss-fuzz\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.options' -exec cp -v '{}' $OUT ';'\n\nfor dir in *_fuzzer.in; do\n  fuzzer=$(basename $dir .in)\n  zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"${dir}/\"\ndone\n"
    },
    "libteken": {
        "name": "libteken",
        "language": "c++",
        "homepage": "http://svn.freebsd.org/base/head/sys/teken/",
        "main_repo": "http://svn.freebsd.org/base/head/sys/teken/",
        "primary_contact": "ed@nuxi.nl",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://svn.freebsd.org/base/head/sys/teken/\"\nlanguage: c++\nprimary_contact: \"ed@nuxi.nl\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'http://svn.freebsd.org/base/head/sys/teken/'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build the library.\npmake -C libteken teken_state.h\n\nexport CFLAGS=\"$CFLAGS -D__unused=\"\n$CC $CFLAGS -c teken.c -o teken.o -I./libteken\nar -q libteken.a ./teken.o\nranlib libteken.a\n\n$CC $CFLAGS -c $SRC/libteken_fuzzer.c -o $SRC/libteken_fuzzer.o -I.\n$CXX $CXXFLAGS $SRC/libteken_fuzzer.o \\\n    -o $OUT/libteken_fuzzer \\\n    $LIB_FUZZING_ENGINE libteken.a\n"
    },
    "libtheora": {
        "name": "libtheora",
        "language": "c++",
        "homepage": "https://www.theora.org/",
        "main_repo": "https://git.xiph.org/theora.git",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": [
            "daede003@umn.edu",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.theora.org/\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nmain_repo: \"https://git.xiph.org/theora.git\"\nauto_ccs:\n  - \"le.businessman@gmail.com\"\nvendor_ccs:\n - \"daede003@umn.edu\"\n - \"twsmith@mozilla.com\"\nsanitizers:\n - address\n - undefined\n - memory\narchitectures:\n - x86_64\n - i386\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [[ $CFLAGS = *sanitize=address* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DASAN\"\nfi\n\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\n\nmkdir $SRC/libogg-install/\ncd $SRC/ogg\n./autogen.sh\n./configure --prefix=\"$SRC/libogg-install\" --enable-static --disable-shared --disable-crc\nmake -j$(nproc)\nmake install\n\ncd $SRC/fuzzing-headers/\n./install.sh\n\ncd $SRC/libtheora/\n# patch configure since the baseimage is using an older autoconf\nsed -i 's/AC_PREREQ(\\[[^]]*\\])/AC_PREREQ([2.60])/' configure.ac\n./autogen.sh\n\nif [[ $CFLAGS = *sanitize=memory* || $CFLAGS = *-m32* ]]\nthen\n    LD_LIBRARY_PATH=\"$SRC/libogg-install/lib\" ./configure --with-ogg=\"$SRC/libogg-install\" --disable-encode --disable-examples --disable-asm --enable-static --disable-shared\nelse\n    LD_LIBRARY_PATH=\"$SRC/libogg-install/lib\" ./configure --with-ogg=\"$SRC/libogg-install\" --disable-encode --disable-examples --enable-static --disable-shared\nfi\n\nmake -j$(nproc)\n\ncd $SRC/oss-fuzz-fuzzers/libtheora/\n\n$CXX $CXXFLAGS -I $SRC/libtheora/include/ -I $SRC/libogg-install/include fuzzer.cpp $SRC/libtheora/lib/.libs/libtheora.a $LIB_FUZZING_ENGINE -o $OUT/fuzzer-decoder\n"
    },
    "libtiff": {
        "name": "libtiff",
        "language": "c++",
        "homepage": "http://www.libtiff.org",
        "main_repo": "https://gitlab.com/libtiff/libtiff",
        "primary_contact": "even.rouault@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.libtiff.org\"\nlanguage: c++\nprimary_contact: \"even.rouault@gmail.com\"\nauto_ccs:\n  - paul.l.kehrer@gmail.com\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://gitlab.com/libtiff/libtiff'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n. contrib/oss-fuzz/build.sh\n"
    },
    "libtorrent": {
        "name": "libtorrent",
        "language": "c++",
        "homepage": "https://github.com/arvidn/libtorrent.git",
        "main_repo": "https://github.com/arvidn/libtorrent.git",
        "primary_contact": "pauldreikossfuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/arvidn/libtorrent.git\"\nlanguage: c++\nprimary_contact: \"pauldreikossfuzz@gmail.com\"\nauto_ccs:\n - \"oss-fuzz-libtorrent@pauldreik.se\"\n - \"arvid.norberg@gmail.com\"\nmain_repo: 'https://github.com/arvidn/libtorrent.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\necho \"CXX=$CXX\"\necho \"CXXFLAGS=$CXXFLAGS\"\n\necho \"using clang : ossfuzz : $CXX : <compileflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"$CXXFLAGS\\\" <linkflags>\\\"${LIB_FUZZING_ENGINE}\\\" ;\" >project-config.jam\ncat project-config.jam\ncd fuzzers\n# we don't want sanitizers enabled on b2 itself\nASAN_OPTIONS=detect_leaks=0 b2 clang-ossfuzz -j$(nproc) crypto=openssl fuzz=external sanitize=off stage-large logging=off\ncp fuzzers/* $OUT\n\nwget --no-verbose https://github.com/arvidn/libtorrent/releases/download/2.0/corpus.zip\nunzip -q corpus.zip\ncd corpus\nfor f in *; do\nzip -q -r ${OUT}/fuzzer_${f}_seed_corpus.zip ${f}\ndone\n"
    },
    "libtpms": {
        "name": "libtpms",
        "language": "c++",
        "homepage": "https://github.com/stefanberger/libtpms",
        "main_repo": "https://github.com/stefanberger/libtpms",
        "primary_contact": "stefanb@us.ibm.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/stefanberger/libtpms\"\nlanguage: c++\nprimary_contact: \"stefanb@us.ibm.com\"\nauto_ccs:\n  - \"mlureau@redhat.com\"\nmain_repo: 'https://github.com/stefanberger/libtpms'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ntests/oss-fuzz.sh\n"
    },
    "libtsm": {
        "name": "libtsm",
        "language": "c++",
        "homepage": "https://www.freedesktop.org/wiki/Software/kmscon/libtsm/",
        "main_repo": "git://people.freedesktop.org/~dvdhrm/libtsm",
        "primary_contact": "dh.herrmann@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.freedesktop.org/wiki/Software/kmscon/libtsm/\"\nlanguage: c++\nprimary_contact: \"dh.herrmann@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'git://people.freedesktop.org/~dvdhrm/libtsm'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build the library.\n./autogen.sh\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\n# build your fuzzer(s)\n$CC $CFLAGS -c $SRC/libtsm_fuzzer.c -Isrc/tsm -o $SRC/libtsm_fuzzer.o\n$CXX $CXXFLAGS \\\n    -o $OUT/libtsm_fuzzer \\\n    $SRC/libtsm_fuzzer.o \\\n    .libs/libtsm.a \\\n    $LIB_FUZZING_ENGINE\n"
    },
    "libucl": {
        "name": "libucl",
        "language": "c",
        "homepage": "https://github.com/vstakhov/libucl",
        "main_repo": "https://github.com/vstakhov/libucl",
        "primary_contact": "vsevolod@highsecure.ru",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/vstakhov/libucl\"\nprimary_contact: \"vsevolod@highsecure.ru\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nlanguage: c\nmain_repo: 'https://github.com/vstakhov/libucl'\n",
        "build_sh": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/ucl_add_string_fuzzer.options $OUT/\n\ncd libucl\n./autogen.sh && ./configure\nmake\n\n$CC $CFLAGS -c tests/fuzzers/ucl_add_string_fuzzer.c \\\n  -DHAVE_CONFIG_H -I./src -I./include src/.libs/libucl.a -I./ \\\n  -o $OUT/ucl_add_string_fuzzer.o\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $OUT/ucl_add_string_fuzzer.o -DHAVE_CONFIG_H -I./src -I./include src/.libs/libucl.a -I. -o $OUT/ucl_add_string_fuzzer\n"
    },
    "libultrahdr": {
        "name": "libultrahdr",
        "language": "c++",
        "homepage": "https://github.com/google/libultrahdr",
        "main_repo": "https://github.com/google/libultrahdr.git",
        "primary_contact": "dichenzhang@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/libultrahdr\"\nlanguage: c++\nprimary_contact: \"dichenzhang@google.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined:\n     experimental: True\nauto_ccs:\n  - arifdikici@google.com\n  - dichenzhang@google.com\n  - harish.mahendrakar@ittiam.com\n  - ram.mohan@ittiam.com\n  - umang.saini@ittiam.com\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/google/libultrahdr.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project.\n$SRC/libultrahdr/fuzzer/ossfuzz.sh\n"
    },
    "libunwind": {
        "name": "libunwind",
        "language": "c",
        "homepage": "https://www.nongnu.org/libunwind/",
        "main_repo": "https://github.com/libunwind/libunwind",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.nongnu.org/libunwind/\"\nlanguage: c\nmain_repo: \"https://github.com/libunwind/libunwind\"\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nautoreconf -i\n./configure --enable-shared=no --enable-static=yes\nmake\n$CC $CFLAGS $LIB_FUZZING_ENGINE -I./include -c $SRC/fuzz_libunwind.c \\\n    -o fuzz_libunwind.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_libunwind.o \\\n    ./src/.libs/libunwind-x86_64.a ./src/.libs/libunwind.a \\\n    -o $OUT/fuzz_libunwind\n"
    },
    "libusb": {
        "name": "libusb",
        "language": "c++",
        "homepage": "http://libusb.info/",
        "main_repo": "https://github.com/libusb/libusb",
        "primary_contact": "christopher.a.dickens@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://libusb.info/\"\nlanguage: c++\nprimary_contact: \"christopher.a.dickens@gmail.com\"\nauto_ccs:\n  - \"hjelmn@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/libusb/libusb'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\n./autogen.sh\n./configure\nmake -j$(nproc) all\n\n# build fuzzer\nfor fuzzer in $(find $SRC -name '*_fuzzer.cc'); do\n    fuzzer_basename=$(basename -s .cc $fuzzer)\n    $CXX $CXXFLAGS -std=c++11 -I. \\\n    $fuzzer $LIB_FUZZING_ENGINE ./libusb/.libs/libusb-1.0.a \\\n    -lpthread -ludev \\\n    -o $OUT/$fuzzer_basename\ndone\n"
    },
    "libvips": {
        "name": "libvips",
        "language": "c++",
        "homepage": "https://github.com/libvips/libvips",
        "main_repo": "https://github.com/libvips/libvips",
        "primary_contact": "jcupitt@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/libvips/libvips\"\nlanguage: c++\nprimary_contact: \"jcupitt@gmail.com\"\nauto_ccs:\n  - \"kleisauke@gmail.com\"\n  - \"lovell.fuller@gmail.com\"\nmain_repo: 'https://github.com/libvips/libvips'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\ncoverage_extra_args: -sources src/libvips\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./fuzz/oss_fuzz_build.sh\n"
    },
    "libvnc": {
        "name": "libvnc",
        "language": "c++",
        "homepage": "https://libvnc.github.io/",
        "main_repo": "https://github.com/LibVNC/libvncserver.git",
        "primary_contact": "dontmind@sdf.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://libvnc.github.io/\"\nlanguage: c++\nprimary_contact: \"dontmind@sdf.org\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\n  - \"info@christianbeier.net\"\n  - \"christian.cb.beier@gmail.com\"\nmain_repo: 'https://github.com/LibVNC/libvncserver.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\nmkdir build\ncd build\ncmake -DWITH_TESTS=ON -DBUILD_SHARED_LIBS=OFF ..\ncmake --build .\ncp fuzz* $OUT/\n\n# Adds simple corpus and dictionary\necho \"RFB 003.008\" > rfb_corpus\nzip -r $OUT/fuzz_server_seed_corpus.zip rfb_corpus\necho \"\\\"RFB \\\"\" > $OUT/fuzz_server.dict\n"
    },
    "libvpx": {
        "name": "libvpx",
        "language": "c++",
        "homepage": "https://www.webmproject.org",
        "main_repo": "https://chromium.googlesource.com/webm/libvpx",
        "primary_contact": "jzern@google.com",
        "vendor_ccs": [
            "twsmith@mozilla.com",
            "product-security@apple.com",
            "dkishore@apple.com",
            "phan@apple.com",
            "ebanniettis@apple.com",
            "jm.park@apple.com",
            "james_e_kim@apple.com",
            "rding23@apple.com",
            "albassam@apple.com",
            "youenn@apple.com",
            "ddkilzer@apple.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.webmproject.org\"\nlanguage: c++\nprimary_contact: \"jzern@google.com\"\nsanitizers:\n- address\n- memory\n- undefined\nauto_ccs:\n- jianj@google.com\n- jingning@google.com\n- jzern@google.com\n- wtc@google.com\nvendor_ccs:\n- twsmith@mozilla.com\n- \"product-security@apple.com\"\n- \"dkishore@apple.com\"\n- \"phan@apple.com\"\n- \"ebanniettis@apple.com\"\n- \"jm.park@apple.com\"\n- \"james_e_kim@apple.com\"\n- \"rding23@apple.com\"\n- \"albassam@apple.com\"\n- \"youenn@apple.com\"\n- \"ddkilzer@apple.com\"\nmain_repo: 'https://chromium.googlesource.com/webm/libvpx'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build libvpx\nbuild_dir=$WORK/build\nrm -rf ${build_dir}\nmkdir -p ${build_dir}\npushd ${build_dir}\n\n# oss-fuzz has 2 GB total memory allocation limit. So, we limit per-allocation\n# limit in libvpx to 1 GB to avoid OOM errors. A smaller per-allocation is\n# needed for MemorySanitizer (see bug oss-fuzz:9497 and bug oss-fuzz:9499).\nif [[ $CFLAGS = *sanitize=memory* ]]; then\n  extra_c_flags='-DVPX_MAX_ALLOCABLE_MEMORY=536870912'\nelse\n  extra_c_flags='-DVPX_MAX_ALLOCABLE_MEMORY=1073741824'\nfi\n\nLDFLAGS=\"$CXXFLAGS\" LD=$CXX $SRC/libvpx/configure \\\n    --enable-vp9-highbitdepth \\\n    --disable-unit-tests \\\n    --disable-examples \\\n    --size-limit=12288x12288 \\\n    --extra-cflags=\"${extra_c_flags}\" \\\n    --disable-webm-io \\\n    --enable-debug \\\n    --disable-vp8-encoder \\\n    --disable-vp9-encoder\nmake -j$(nproc) all\npopd\n\n# build fuzzers\nfuzzer_src_name=vpx_dec_fuzzer\nfuzzer_decoders=( 'vp9' 'vp8' )\nfor decoder in \"${fuzzer_decoders[@]}\"; do\n  fuzzer_name=${fuzzer_src_name}\"_\"${decoder}\n\n  $CXX $CXXFLAGS -std=c++11 \\\n    -DDECODER=${decoder} \\\n    -I$SRC/libvpx \\\n    -I${build_dir} \\\n    -Wl,--start-group \\\n    $LIB_FUZZING_ENGINE \\\n    $SRC/libvpx/examples/${fuzzer_src_name}.cc -o $OUT/${fuzzer_name} \\\n    ${build_dir}/libvpx.a \\\n    -Wl,--end-group\n  cp $SRC/vpx_fuzzer_seed_corpus.zip $OUT/${fuzzer_name}_seed_corpus.zip\n  cp $SRC/vpx_dec_fuzzer.dict $OUT/${fuzzer_name}.dict\ndone\n"
    },
    "libwebp": {
        "name": "libwebp",
        "language": "c++",
        "homepage": "https://developers.google.com/speed/webp/",
        "main_repo": "https://chromium.googlesource.com/webm/libwebp",
        "primary_contact": "jzern@google.com",
        "vendor_ccs": [
            "aosmond@mozilla.com",
            "tnikkel@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://developers.google.com/speed/webp/\"\nlanguage: c++\nprimary_contact: \"jzern@google.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n  - memory\nauto_ccs:\n  - pascal.massimino@gmail.com\n  - vrabaud@google.com\n  - yguyon@google.com\nvendor_ccs:\n  - aosmond@mozilla.com\n  - tnikkel@mozilla.com\n  - twsmith@mozilla.com\nmain_repo: 'https://chromium.googlesource.com/webm/libwebp'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbash tests/fuzzer/oss-fuzz/build.sh\n\n# show content of $OUT/ for sanity checking\nfind $OUT/\n"
    },
    "libwebsockets": {
        "name": "libwebsockets",
        "language": "c",
        "homepage": "https://libwebsockets.org",
        "main_repo": "https://libwebsockets.org/repo/libwebsockets",
        "primary_contact": "andy.warmcat.com@googlemail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://libwebsockets.org\"\nlanguage: c\nprimary_contact: \"andy.warmcat.com@googlemail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n- libfuzzer\nmain_repo: 'https://libwebsockets.org/repo/libwebsockets'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nDIR=$SRC/libwebsockets/\n\ncd $DIR\nsed -i 's/-Werror//g' ./CMakeLists.txt\nmkdir build && cd build\ncmake -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n      -DCMAKE_EXE_LINKER_FLAGS=\"$CFLAGS\" -DCMAKE_SHARED_LINKER_FLAGS=\"$CFLAGS\" ..\nmake -j8\n\ncd $DIR\n$CXX $CFLAGS $LIB_FUZZING_ENGINE -I$DIR/build/include \\\n\t-o $OUT/lws_upng_inflate_fuzzer lws_upng_inflate_fuzzer.cpp \\\n\t-L$DIR/build/lib -l:libwebsockets.a \\\n\t-L/usr/lib/x86_64-linux-gnu/ -l:libssl.so -l:libcrypto.so\n"
    },
    "libxaac": {
        "name": "libxaac",
        "language": "c++",
        "homepage": "https://github.com/ittiam-systems/libxaac",
        "main_repo": "https://github.com/ittiam-systems/libxaac.git",
        "primary_contact": "harish.mahendrakar@ittiam.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ittiam-systems/libxaac\"\nlanguage: c++\nprimary_contact: \"harish.mahendrakar@ittiam.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nauto_ccs:\n  - akshay.ragir@ittiam.com\n  - divya.bm@ittiam.com\n  - harish.mahendrakar@ittiam.com\n  - reshma.rai@ittiam.com\n  - saketh.sathuvalli@ittiam.com\n  - sandesh.venkatesh@ittiam.com\n  - shashank.pathmudi@ittiam.com\n  - shreyas.talwekar@ittiam.com\n  - tripti.tiwari@ittiam.com\n  - yash.patil@ittiam.com\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/ittiam-systems/libxaac.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project.\n$SRC/libxaac/fuzzer/ossfuzz.sh\n"
    },
    "libxls": {
        "name": "libxls",
        "language": "c++",
        "homepage": "https://github.com/libxls/libxls",
        "main_repo": "https://github.com/libxls/libxls",
        "primary_contact": "emmiller@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/libxls/libxls\"\nlanguage: c++\nprimary_contact: \"emmiller@gmail.com\"\nmain_repo: 'https://github.com/libxls/libxls'\n",
        "build_sh": "# Copyright 2019 Evan Miller\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n#!/bin/bash -eu\n\nif [ -f ./autogen.sh ]; then\n  ./autogen.sh\nelse\n  ./bootstrap\nfi\n./configure --enable-static\nmake clean\n\nmake\n\nzip $OUT/fuzz_xls_seed_corpus.zip test/files/*.xls fuzz/corpus/*.xls\n\nmake fuzz_xls\ncp fuzz_xls $OUT/fuzz_xls\n"
    },
    "libxlsxwriter": {
        "name": "libxlsxwriter",
        "language": "c",
        "homepage": "http://libxlsxwriter.github.io",
        "main_repo": "https://github.com/jmcnamara/libxlsxwriter.git",
        "primary_contact": "jmcnamara@cpan.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"http://libxlsxwriter.github.io\"\nlanguage: c\nprimary_contact: \"jmcnamara@cpan.org\"\nauto_ccs:\n  - \"capuanobailey@gmail.com\"\nmain_repo: \"https://github.com/jmcnamara/libxlsxwriter.git\"\n",
        "build_sh": null
    },
    "libxml2": {
        "name": "libxml2",
        "language": "c++",
        "homepage": "https://gitlab.gnome.org/GNOME/libxml2",
        "main_repo": "https://gitlab.gnome.org/GNOME/libxml2.git",
        "primary_contact": "wellnhofer@aevum.de",
        "vendor_ccs": [
            "ddkilzer@apple.com",
            "benl@google.com",
            "product-security@apple.com",
            "dkishore@apple.com",
            "phan@apple.com",
            "lglovin@apple.com",
            "ebanniettis@apple.com",
            "jm.park@apple.com",
            "james_e_kim@apple.com",
            "rding23@apple.com",
            "albassam@apple.com",
            "zakr@apple.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "afl"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://gitlab.gnome.org/GNOME/libxml2\"\nlanguage: c++\nprimary_contact: \"wellnhofer@aevum.de\"\nvendor_ccs:\n  - \"ddkilzer@apple.com\"\n  - \"benl@google.com\"\n  - \"product-security@apple.com\"\n  - \"dkishore@apple.com\"\n  - \"phan@apple.com\"\n  - \"lglovin@apple.com\"\n  - \"ebanniettis@apple.com\"\n  - \"jm.park@apple.com\"\n  - \"james_e_kim@apple.com\"\n  - \"rding23@apple.com\"\n  - \"albassam@apple.com\"\n  - \"zakr@apple.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n  - afl\nmain_repo: 'https://gitlab.gnome.org/GNOME/libxml2.git'\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfuzz/oss-fuzz-build.sh\n"
    },
    "libxslt": {
        "name": "libxslt",
        "language": "c++",
        "homepage": "http://www.xmlsoft.org/libxslt/",
        "main_repo": "https://gitlab.gnome.org/GNOME/libxslt.git",
        "primary_contact": null,
        "vendor_ccs": [
            "ddkilzer@apple.com",
            "product-security@apple.com",
            "schenney@chromium.org",
            "dkishore@apple.com",
            "phan@apple.com",
            "lglovin@apple.com",
            "ebanniettis@apple.com",
            "jm.park@apple.com",
            "james_e_kim@apple.com",
            "rding23@apple.com",
            "albassam@apple.com",
            "zakr@apple.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.xmlsoft.org/libxslt/\"\nlanguage: c++\nvendor_ccs:\n  - \"ddkilzer@apple.com\"\n  - \"product-security@apple.com\"\n  - \"schenney@chromium.org\"\n  - \"dkishore@apple.com\"\n  - \"phan@apple.com\"\n  - \"lglovin@apple.com\"\n  - \"ebanniettis@apple.com\"\n  - \"jm.park@apple.com\"\n  - \"james_e_kim@apple.com\"\n  - \"rding23@apple.com\"\n  - \"albassam@apple.com\"\n  - \"zakr@apple.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://gitlab.gnome.org/GNOME/libxslt.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" = undefined ]; then\n    export CFLAGS=\"$CFLAGS -fsanitize=integer -fno-sanitize-recover=integer\"\n    export CXXFLAGS=\"$CXXFLAGS -fsanitize=integer -fno-sanitize-recover=integer\"\nfi\n\nif [ \"$SANITIZER\" = memory ]; then\n    # This would require an instrumented libgcrypt build.\n    CRYPTO_CONF=--without-crypto\n    CRYPTO_LIBS=\nelse\n    CRYPTO_CONF=--with-crypto\n    CRYPTO_LIBS=-lgcrypt\nfi\n\ncd ../libxml2\n./autogen.sh \\\n    --disable-shared \\\n    --without-c14n \\\n    --without-push \\\n    --without-python \\\n    --without-reader \\\n    --without-regexps \\\n    --without-sax1 \\\n    --without-schemas \\\n    --without-schematron \\\n    --without-valid \\\n    --without-writer \\\n    --without-zlib \\\n    --without-lzma\nmake -j$(nproc) V=1\n\ncd ../libxslt\n./autogen.sh \\\n    --with-libxml-src=../libxml2 \\\n    --disable-shared \\\n    --without-python \\\n    $CRYPTO_CONF \\\n    --without-debug \\\n    --without-debugger \\\n    --without-profiler\nmake -j$(nproc) V=1\n\ncd tests/fuzz\nrm -rf seed\nmake fuzz.o\n\nfor fuzzer in xpath xslt; do\n    make $fuzzer.o\n    # Link with $CXX\n    $CXX $CXXFLAGS \\\n        $fuzzer.o fuzz.o \\\n        -o $OUT/$fuzzer \\\n        $LIB_FUZZING_ENGINE \\\n        ../../libexslt/.libs/libexslt.a ../../libxslt/.libs/libxslt.a \\\n        ../../../libxml2/.libs/libxml2.a \\\n        $CRYPTO_LIBS\n\n    [ -e seed/$fuzzer ] || make seed/$fuzzer.stamp\n    zip -j $OUT/${fuzzer}_seed_corpus.zip seed/$fuzzer/*\ndone\n\ncp *.dict $OUT/\n"
    },
    "libyal": {
        "name": "libyal",
        "language": "c",
        "homepage": "https://github.com/libyal",
        "main_repo": "https://github.com/libyal/libfplist.git",
        "primary_contact": "joachim.metz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/libyal\"\nlanguage: c\nprimary_contact: \"joachim.metz@gmail.com\"\nsanitizers:\n- address\n- memory\n- undefined\narchitectures:\n- x86_64\n- i386\nmain_repo: 'https://github.com/libyal/libfplist.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfor PROJECT in ${SRC}/*;\ndo\n  PROJECT=$(basename ${PROJECT})\n\n  # A libyal project should have an ossfuzz directory and a synclibs.sh script.\n  if ! test -d ${SRC}/${PROJECT}/ossfuzz || ! test -x ${SRC}/${PROJECT}/synclibs.sh;\n  then\n    continue\n  fi\n  cd ${SRC}/${PROJECT}\n\n  # OSSFuzz base-image currently uses Ubuntu 20.04 which ships older versions\n  # of autoconf and gettext. The libyal projects are compatible with these\n  # older versions, but should not ship with them. The following edits will\n  # allow ./autogen.sh to generate the correct version for OSSFuzz.\n  sed 's/^AC_PREREQ.*$/AC_PREREQ([2.69])/' -i configure.ac\n  sed 's/^AM_GNU_GETTEXT_VERSION.*$/AM_GNU_GETTEXT_VERSION([0.19])/' -i configure.ac\n\n  # Prepare the project source for build.\n  ./synclibs.sh\n  ./autogen.sh\n  # OSSFuzz cross-compiles certain architectures which can lead to a partial\n  # installed dependencies.\n  ./configure --enable-shared=no --with-openssl=no --with-zlib=no\n\n  # Build the project and fuzzer binaries.\n  make -j$(nproc) LIB_FUZZING_ENGINE=${LIB_FUZZING_ENGINE}\n\n  # Download the test data if supported.\n  if test -x ./synctestdata.sh;\n  then\n    ./synctestdata.sh\n  fi\n\n  # Copy the fuzzer binaries and test data to the output directory.\n  for FUZZ_TARGET in $(cd ossfuzz && find . -executable -type f);\n  do\n    FUZZ_TARGET=$(basename ${FUZZ_TARGET})\n\n    # Prefix the fuzzer binaries with the project name.\n    cp ossfuzz/${FUZZ_TARGET} ${OUT}/${PROJECT}_${FUZZ_TARGET}\n\n    # Download the test data if supported.\n    LIBYAL_TYPE_NAME=${FUZZ_TARGET/_fuzzer/};\n\n    if test -f tests/data/${LIBYAL_TYPE_NAME/}.1;\n    then\n      (cd tests/data && zip ${OUT}/${PROJECT}_${FUZZ_TARGET}_seed_corpus.zip ${LIBYAL_TYPE_NAME}.*)\n\n    elif test -d tests/input/public;\n    then\n      (cd tests/input/public && zip ${OUT}/${PROJECT}_${FUZZ_TARGET}_seed_corpus.zip *)\n\n    else\n      echo \"Missing test data for seed corpus.\"\n      exit 1\n    fi\n  done\ndone\n"
    },
    "libyaml": {
        "name": "libyaml",
        "language": "c++",
        "homepage": "https://github.com/yaml/libyaml",
        "main_repo": "https://github.com/yaml/libyaml",
        "primary_contact": "ingy@ingy.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://github.com/yaml/libyaml\nlanguage: c++\nprimary_contact: ingy@ingy.net\nauto_ccs:\n- perlpunks@googlemail.com\nfuzzing_engines:\n- libfuzzer\n- afl\n- honggfuzz\nsanitizers:\n- address\n- memory\n- undefined\narchitectures:\n- x86_64\n- i386\nmain_repo: https://github.com/yaml/libyaml\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n./bootstrap\n./configure\nmake \"-j$(nproc)\"\n\nfor fuzzer in $SRC/*_fuzzer.c; do\n  fuzzer_basename=$(basename -s .c $fuzzer)\n\n  $CC $CFLAGS \\\n      -I $SRC -Iinclude \\\n      -c $fuzzer -o $fuzzer_basename.o\n\n  $CXX $CXXFLAGS \\\n      -std=c++11 \\\n      $fuzzer_basename.o \\\n      -o $OUT/$fuzzer_basename \\\n      $LIB_FUZZING_ENGINE \\\n      src/.libs/libyaml.a\n\n  cp $SRC/libyaml_seed_corpus.zip \"${OUT}/${fuzzer_basename}_seed_corpus.zip\"\n  cp $SRC/libyaml_fuzzer.options \"${OUT}/${fuzzer_basename}.options\"\ndone\n\ncp $SRC/yaml.dict $OUT/\n"
    },
    "libyang": {
        "name": "libyang",
        "language": "c",
        "homepage": "https://github.com/CESNET/libyang",
        "main_repo": "https://github.com/CESNET/libyang",
        "primary_contact": "mvasko@cesnet.cz",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/CESNET/libyang\"\nmain_repo: 'https://github.com/CESNET/libyang'\nprimary_contact: \"mvasko@cesnet.cz\"\nlanguage: c\nauto_ccs:\n  - \"mv6606@gmail.com\"\n  - \"david@adalogics.com\"\n  - \"warband.times@gmail.com\"\n  - \"juraj.vijtiuk@sartura.hr\"\nsanitizers:\n  - address\n  - memory\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd libyang\ngit checkout devel\n\nmkdir build && cd build\ncmake -DBUILD_SHARED_LIBS=OFF -DENABLE_TOOLS=OFF ..\nmake\n\nstatic_pcre=($(find /src/pcre2 -name \"libpcre2-8.a\"))\n\nfor fuzzer in lyd_parse_mem_json lyd_parse_mem_xml lys_parse_mem; do\n  $CC $CFLAGS -c ../tests/fuzz/${fuzzer}.c -I./libyang -I./compat\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE ${fuzzer}.o -o $OUT/${fuzzer} \\\n    ./libyang.a ${static_pcre}\ndone\n"
    },
    "libyuv": {
        "name": "libyuv",
        "language": "c++",
        "homepage": "https://chromium.googlesource.com/libyuv/libyuv/",
        "main_repo": "https://chromium.googlesource.com/libyuv/libyuv",
        "primary_contact": "mikhal@webrtc.org",
        "vendor_ccs": [
            "ansgoel@microsoft.com",
            "jonorman@microsoft.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://chromium.googlesource.com/libyuv/libyuv/\"\nmain_repo: \"https://chromium.googlesource.com/libyuv/libyuv\"\nlanguage: c++\nprimary_contact: \"mikhal@webrtc.org\"\nauto_ccs:\n    - \"fbarchard@google.com\"\n    - \"frkoenig@google.com\"\nvendor_ccs:\n    - \"ansgoel@microsoft.com\"\n    - \"jonorman@microsoft.com\"\nfuzzing_engines:\n    - libfuzzer\n    - afl\nsanitizers:\n    - address\n    - memory\n    - undefined\n",
        "build_sh": null
    },
    "libzip": {
        "name": "libzip",
        "language": "c++",
        "homepage": "https://libzip.org/",
        "main_repo": "https://github.com/nih-at/libzip.git",
        "primary_contact": "libzip@nih.at",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://libzip.org/\"\nlanguage: c++\nprimary_contact: \"libzip@nih.at\"\nauto_ccs:\n  - \"randy440088@gmail.com\"\n  - \"tk@giga.or.at\"\nsanitizers:\n  - address\n  - undefined\n# Disable MSAN because it does not support using other libraries (openssl, zlib) correctly\n#  - memory\nmain_repo: 'https://github.com/nih-at/libzip.git'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Run the OSS-Fuzz script in the project\n$SRC/libzip/ossfuzz/ossfuzz.sh\n"
    },
    "libzmq": {
        "name": "libzmq",
        "language": "c++",
        "homepage": "https://github.com/zeromq/libzmq",
        "main_repo": "https://github.com/zeromq/libzmq.git",
        "primary_contact": "bluca@debian.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/zeromq/libzmq\"\nlanguage: c++\nprimary_contact: \"bluca@debian.org\"\nauto_ccs:\n  - \"luca.boccassi@gmail.com\"\n  - \"somdoron@gmail.com\"\n  - \"simon.giesecke@gmail.com\"\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/zeromq/libzmq.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n# Copyright 2020 Luca Boccassi <bluca@debian.org>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n${SRC}/libzmq/builds/fuzz/ci_build.sh\n"
    },
    "lighttpd": {
        "name": "lighttpd",
        "language": "c",
        "homepage": "https://www.lighttpd.net/",
        "main_repo": "https://github.com/lighttpd/lighttpd1.4",
        "primary_contact": "lighttpd.fuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.lighttpd.net/\"\nprimary_contact: \"lighttpd.fuzz@gmail.com\"\nlanguage: c\nauto_ccs :\n  - \"david@adalogics.com\"\nmain_repo: \"https://github.com/lighttpd/lighttpd1.4\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh\n./configure --without-pcre --enable-static\nmake\ncd src\n$CC $CFLAGS -c $SRC/fuzz_burl.c -I. -I../include\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_burl.o lighttpd-burl.o lighttpd-buffer.o lighttpd-base64.o lighttpd-ck.o -o $OUT/fuzz_burl\n"
    },
    "lima": {
        "name": "lima",
        "language": "go",
        "homepage": "https://lima-vm.io/",
        "main_repo": "https://github.com/lima-vm/lima",
        "primary_contact": "jdubois@suse.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://lima-vm.io/\"\nlanguage: go\nprimary_contact: \"jdubois@suse.com\"\nmain_repo: \"https://github.com/lima-vm/lima\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./hack/oss-fuzz-build.sh\n"
    },
    "linkerd2-proxy": {
        "name": "linkerd2-proxy",
        "language": "rust",
        "homepage": "https://linkerd.io/",
        "main_repo": "https://github.com/linkerd/linkerd2-proxy",
        "primary_contact": "ver@buoyant.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://linkerd.io/\"\nmain_repo: \"https://github.com/linkerd/linkerd2-proxy\"\nprimary_contact: \"ver@buoyant.io\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"eliza@buoyant.io\"\n  - \"kevinl@buoyant.io\"\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n  export RUSTFLAGS=\"$RUSTFLAGS -C debug-assertions=no\"\n  chmod +x $SRC/rustc.py\n  export RUSTC=\"$SRC/rustc.py\"\n  export CFLAGS=\"\"\nfi\n\nBUILD_FUZZER=\"cargo fuzz build \"\nTARGET_PATH=\"./fuzz/target/x86_64-unknown-linux-gnu/release\"\nBASE=\"$SRC/linkerd2-proxy/linkerd\"\n\ncd ${BASE}/app/inbound\n${BUILD_FUZZER}\ncp ${TARGET_PATH}/fuzz_target_1 $OUT/fuzz_inbound\n\ncd ${BASE}/addr/\n${BUILD_FUZZER}\ncp ${TARGET_PATH}/fuzz_target_1 $OUT/fuzz_addr\n\ncd ${BASE}/dns\n${BUILD_FUZZER}\ncp ${TARGET_PATH}/fuzz_target_1 $OUT/fuzz_dns\n\ncd ${BASE}/proxy/http\n${BUILD_FUZZER}\ncp ${TARGET_PATH}/fuzz_target_1 $OUT/fuzz_http\n\ncd ${BASE}/tls\n${BUILD_FUZZER}\ncp ${TARGET_PATH}/fuzz_target_1 $OUT/fuzz_tls\n\ncd ${BASE}/transport-header\n${BUILD_FUZZER}\ncp ${TARGET_PATH}/fuzz_target_raw $OUT/fuzz_transport_raw\ncp ${TARGET_PATH}/fuzz_target_structured $OUT/fuzz_transport_structured\n\necho \"[libfuzzer]\" > $OUT/fuzz_transport_raw.options\necho \"detect_leaks=0\" >> $OUT/fuzz_transport_raw.options\n"
    },
    "linkerd2": {
        "name": "linkerd2",
        "language": "go",
        "homepage": "https://linkerd.io/",
        "main_repo": "https://github.com/linkerd/linkerd2",
        "primary_contact": "ver@buoyant.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://linkerd.io/\"\nmain_repo: \"https://github.com/linkerd/linkerd2\"\nprimary_contact: \"ver@buoyant.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\n  - \"eliza@buoyant.io\"\n  - \"kevinl@buoyant.io\"\n  - \"david@buoyant.io\"\n  - \"alex@buoyant.io\"\n  - \"matei@buoyant.io\"\n  - \"alpeb@buoyant.io\"\n  - \"zahari@buoyant.io\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport FUZZER_DIR=$SRC/linkerd2/test/fuzzing\n\ncompile_go_fuzzer github.com/linkerd/linkerd2/pkg/profiles FuzzProfilesValidate FuzzProfilesValidate\ncompile_go_fuzzer github.com/linkerd/linkerd2/pkg/profiles FuzzRenderProto FuzzRenderProto\ncompile_go_fuzzer github.com/linkerd/linkerd2/controller/api/destination FuzzAdd FuzzAdd\ncompile_go_fuzzer github.com/linkerd/linkerd2/controller/api/destination FuzzGet FuzzGet\ncompile_go_fuzzer github.com/linkerd/linkerd2/controller/api/destination FuzzGetProfile FuzzGetProfile\ncompile_go_fuzzer github.com/linkerd/linkerd2/controller/api/destination FuzzProfileTranslatorUpdate FuzzProfileTranslatorUpdate\ncompile_go_fuzzer github.com/linkerd/linkerd2/pkg/healthcheck FuzzFetchCurrentConfiguration FuzzFetchCurrentConfiguration\ncompile_go_fuzzer github.com/linkerd/linkerd2/pkg/inject FuzzInject FuzzInject\ncompile_go_fuzzer github.com/linkerd/linkerd2/pkg/identity FuzzServiceCertify FuzzServiceCertify\ncompile_go_fuzzer github.com/linkerd/linkerd2/test/fuzzing FuzzParseContainerOpaquePorts FuzzParseContainerOpaquePorts\ncompile_go_fuzzer github.com/linkerd/linkerd2/test/fuzzing FuzzParsePorts FuzzParsePorts\ncompile_go_fuzzer github.com/linkerd/linkerd2/test/fuzzing FuzzHealthCheck FuzzHealthCheck\n"
    },
    "lit": {
        "name": "lit",
        "language": "javascript",
        "homepage": "https://lit.dev/",
        "main_repo": "https://github.com/lit/lit",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://lit.dev/\nlanguage: javascript\nmain_repo: https://github.com/lit/lit\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfunction change_type_to_commonjs() {\n\t# Find all package.json files inside the node_modules directory\n\tfind \"$1\" -name \"package.json\" -type f | while read -r package_file; do\n\t\t# Check if the file contains the \"type\" field\n\t\tif grep -q '\"type\": \"module\"' \"$package_file\"; then\n\t\t\t# Replace \"type\": \"module\" with \"type\": \"commonjs\"\n\t\t\tsed -i 's/\"type\": \"module\"/\"type\": \"commonjs\"/' \"$package_file\"\n\t\t\techo \"Updated $package_file\"\n\t\tfi\n\tdone\n}\n\n# Install dependencies.\nnpm install -g @babel/cli\nnpm install --save-dev @babel/core \\\n\t@babel/plugin-transform-modules-commonjs \\\n\t@babel/preset-typescript \\\n\t@jazzer.js/core\n\n# Build Lit\nnpm install\nnpm run build\n\nchange_type_to_commonjs \"$SRC/lit\"\n\n# Build Fuzzers\n# The last bits are necessary to make the fuzzer run in the OSS-Fuzz execution\n# environment.\ncompile_javascript_fuzzer lit fuzz.js -i lit --sync &&\n\tpushd \"$OUT\" &&\n\tcp -r lit/babel.config.json lit/node_modules \"$(pwd)\" &&\n\tpopd\n"
    },
    "litmuschaos": {
        "name": "litmuschaos",
        "language": "go",
        "homepage": "https://litmuschaos.io/",
        "main_repo": "https://github.com/litmuschaos/litmus.git",
        "primary_contact": "saranya.jena@harness.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://litmuschaos.io/\"\nmain_repo: \"https://github.com/litmuschaos/litmus.git\"\nprimary_contact: \"saranya.jena@harness.io\"\nauto_ccs :\n  - \"karthik.s@harness.io\"\n  - \"rajbabu.das@harness.io\"\n  - \"vedant.shrotria@harness.io\"\n  - \"sarthak.jain@harness.io\"\n  - \"shubham.chaudhary@harness.io\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/litmus/chaoscenter/fuzz_build.sh"
    },
    "llamacpp": {
        "name": "llamacpp",
        "language": "c++",
        "homepage": "https://github.com/ggerganov/llama.cpp",
        "main_repo": "https://github.com/ggerganov/llama.cpp",
        "primary_contact": "ggerganov@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/ggerganov/llama.cpp\"\nlanguage: c++\nprimary_contact: \"ggerganov@gmail.com\"\nauto_ccs:\n  - \"slarengh@gmail.com\"\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/ggerganov/llama.cpp'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport GGML_NO_OPENMP=1\nsed -i 's/:= c++/:= ${CXX}/g' ./Makefile\nsed -i 's/:= cc/:= ${CC}/g' ./Makefile\n# Avoid function that forks + starts instance of gdb.\nsed -i 's/ggml_print_backtrace();//g' ./ggml/src/ggml.c\n\n# Remove statefulness during fuzzing.\nsed -i 's/static bool is_first_call/bool is_first_call/g' ./ggml/src/ggml.c\n\n# Patch callocs to avoid allocating large chunks.\nsed -i 's/ggml_calloc(size_t num, size_t size) {/ggml_calloc(size_t num, size_t size) {\\nif ((num * size) > 9000000) {GGML_ABORT(\"calloc err\");}\\n/g' -i ./ggml/src/ggml.c\n\n# Patch a potentially unbounded loop that causes timeouts\nsed -i 's/ok = ok \\&\\& (info->n_dims <= GGML_MAX_DIMS);/ok = ok \\&\\& (info->n_dims <= GGML_MAX_DIMS);\\nif (!ok) {fclose(file); gguf_free(ctx); return NULL;}/g' ./ggml/src/ggml.c\n\nUNAME_M=amd642 UNAME_p=amd642 LLAMA_NO_METAL=1 make -j$(nproc) llama-gguf llama-server\n\n# Convert models into header files so we can use them for fuzzing.\nxxd -i models/ggml-vocab-bert-bge.gguf > model_header_bge.h\nxxd -i models/ggml-vocab-llama-bpe.gguf > model_header_bpe.h\nxxd -i models/ggml-vocab-llama-spm.gguf > model_header_spm.h\nxxd -i models/ggml-vocab-qwen2.gguf > model_header_qwen2.h\nxxd -i models/ggml-vocab-command-r.gguf > model_header_command_r.h\nxxd -i models/ggml-vocab-aquila.gguf > model_header_aquila.h\nxxd -i models/ggml-vocab-gpt-2.gguf > model_header_gpt_2.h\nxxd -i models/ggml-vocab-baichuan.gguf > model_header_baichuan.h\nxxd -i models/ggml-vocab-deepseek-coder.gguf > model_header_deepseek_coder.h\nxxd -i models/ggml-vocab-falcon.gguf > model_header_falcon.h\n\n\nmkdir myos\nfind ./ggml/ -name *.o -exec cp {} myos/ \\;\nfind ./src/ -name *.o -exec cp {} myos/ \\;\nfind ./common/ -name *.o -exec cp {} myos/ \\;\nOBJ_FILES=\"myos/*.o\"\nFLAGS=\"-std=c++11 -Iggml/include -Iggml/src -Iinclude -Isrc -Icommon -I./ -DNDEBUG -DGGML_USE_LLAMAFILE\"\n\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} fuzzers/fuzz_json_to_grammar.cpp -o $OUT/fuzz_json_to_grammar\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} fuzzers/fuzz_apply_template.cpp -o $OUT/fuzz_apply_template\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} fuzzers/fuzz_grammar.cpp -o $OUT/fuzz_grammar\n\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} \\\n    -Wl,--wrap,abort fuzzers/fuzz_load_model.cpp -o $OUT/fuzz_load_model\n\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} \\\n    -Wl,--wrap,abort fuzzers/fuzz_inference.cpp -o $OUT/fuzz_inference\n\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} \\\n    -Wl,--wrap,abort fuzzers/fuzz_structured.cpp -o $OUT/fuzz_structured\n\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} \\\n    -Wl,--wrap,abort fuzzers/fuzz_structurally_created.cpp -o $OUT/fuzz_structurally_created\n\n# Prepare some dicts and seeds\n./llama-gguf dummy.gguf w\nmkdir $SRC/load-model-corpus\nmv dummy.gguf $SRC/load-model-corpus/\nzip -j $OUT/fuzz_load_model_seed_corpus.zip $SRC/load-model-corpus/*\ncp $OUT/fuzz_load_model_seed_corpus.zip $OUT/fuzz_inference_seed_corpus.zip\n\necho \"[libfuzzer]\" > $OUT/fuzz_load_model.options\necho \"detect_leaks=0\" >> $OUT/fuzz_load_model.options\n\ncp $OUT/fuzz_load_model.options $OUT/fuzz_inference.options\ncp $OUT/fuzz_load_model.options $OUT/fuzz_structured.options\ncp $OUT/fuzz_load_model.options $OUT/fuzz_structurally_created.options\ncp fuzzers/llama.dict $OUT/fuzz_load_model.dict\ncp fuzzers/llama.dict $OUT/fuzz_inference.dict\ncp fuzzers/llama.dict $OUT/fuzz_grammar.dict\ncp fuzzers/llama.dict $OUT/fuzz_structured.dict\ncp fuzzers/llama.dict $OUT/fuzz_json_to_grammar.dict\n\nif [ \"$FUZZING_ENGINE\" != \"afl\" ]\nthen\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_BGE fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_bge\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_BPE  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_bpe\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_SPM  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_spm\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_COMMAND_R  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_command_r\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_AQUILA  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_aquila\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_QWEN2  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_qwen2\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_GPT_2  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_gpt_2\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_BAICHUAN  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_baichuan\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_DEEPSEEK_CODER  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_deepseek_coder\n    $CXX -Wl,--wrap,abort $LIB_FUZZING_ENGINE $CXXFLAGS ${FLAGS} ${OBJ_FILES} -DFUZZ_FALCON  fuzzers/fuzz_tokenizer.cpp -o $OUT/fuzz_tokenizer_falcon\nfi\n"
    },
    "lldb-eval": {
        "name": "lldb-eval",
        "language": "c++",
        "homepage": "https://github.com/google/lldb-eval",
        "main_repo": "https://github.com/google/lldb-eval",
        "primary_contact": "werat@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/google/lldb-eval\"\nmain_repo: \"https://github.com/google/lldb-eval\"\nlanguage: c++\nprimary_contact: \"werat@google.com\"\nauto_ccs:\n  - \"tsabolcec@google.com\"\nsanitizers:\n  - address\n  - undefined\nfile_github_issue: True\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n(\ncd $SRC/\nGITHUB_RELEASE=\"https://github.com/google/lldb-eval/releases/download/oss-fuzz-ubuntu-20.04\"\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  LLVM_ARCHIVE=\"llvm-12.0.1-x86_64-linux-release-address.tar.gz\"\nelif [ \"$SANITIZER\" = \"memory\" ]\nthen\n  LLVM_ARCHIVE=\"llvm-12.0.1-x86_64-linux-release-memory.tar.gz\"\nelif [ \"$SANITIZER\" = \"undefined\" ]\nthen\n  LLVM_ARCHIVE=\"llvm-12.0.1-x86_64-linux-release.tar.gz\"\nelif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n  # For coverage we also need the original source code.\n  wget --quiet $GITHUB_RELEASE/llvm-12.0.1-source.tar.gz\n  tar -xzf llvm-12.0.1-source.tar.gz\n  wget --quiet $GITHUB_RELEASE/llvm-12.0.1-x86_64-linux-release-genfiles.tar.gz\n  tar -xzf llvm-12.0.1-x86_64-linux-release-genfiles.tar.gz\n\n  LLVM_ARCHIVE=\"llvm-12.0.1-x86_64-linux-release.tar.gz\"\nelse\n  echo \"Unknown sanitizer: $SANITIZER\"\n  exit 1\nfi\n\nwget --quiet $GITHUB_RELEASE/$LLVM_ARCHIVE\nmkdir -p llvm && tar -xzf $LLVM_ARCHIVE --strip-components 1 -C llvm\n)\nexport LLVM_INSTALL_PATH=$SRC/llvm\n\nif [ \"$SANITIZER\" = \"undefined\" ]\nthen\n  # Disable vptr because it's not allowed with '-fno-rtti'\n  CFLAGS=\"$CFLAGS -fno-sanitize=function,vptr\"\n  CXXFLAGS=\"$CXXFLAGS -fno-sanitize=function,vptr\"\nfi\n\n# Undefine NDEBUG to enable asserts.\nexport BAZEL_EXTRA_BUILD_FLAGS=\"--copt=-UNDEBUG\"\n\n# Run the build!\nbazel_build_fuzz_tests\n\n# OSS-Fuzz rule doesn't build data dependencies\nbazel build //testdata:fuzzer_binary_gen\n\n# OSS-Fuzz rule doesn't handle dynamic dependencies\n# Copy liblldb.so\nmkdir -p $OUT/lib\ncp $SRC/llvm/lib/liblldb.so* $OUT/lib\n\n# List of targets to fuzz.\nTARGETS=(\n  lldb_eval_libfuzzer_test\n  lldb_vs_lldb_eval_libfuzzer_test\n)\n\n# Preparation of each target.\nfor target in ${TARGETS[@]}; do\n  # OSS-Fuzz rule doesn't package runfiles yet:\n  # https://github.com/bazelbuild/rules_fuzzing/issues/100\n  mkdir -p $OUT/$target.runfiles\n  # fuzzer_binary\n  mkdir -p $OUT/$target.runfiles/lldb_eval/testdata\n  cp $SRC/lldb-eval/bazel-bin/testdata/fuzzer_binary $OUT/$target.runfiles/lldb_eval/testdata/\n  cp $SRC/lldb-eval/testdata/fuzzer_binary.cc $OUT/$target.runfiles/lldb_eval/testdata/\n  # lldb-server\n  mkdir -p $OUT/$target.runfiles/llvm_project/bin\n  cp $SRC/llvm/bin/lldb-server $OUT/$target.runfiles/llvm_project/bin/lldb-server\n  # Patch RPATH of the fuzz target\n  patchelf --set-rpath '$ORIGIN/lib' $OUT/$target\ndone\n\ncp $SRC/lldb_vs_lldb_eval_libfuzzer_test.options $OUT/\n"
    },
    "lldpd": {
        "name": "lldpd",
        "language": "c",
        "homepage": "https://lldpd.github.io",
        "main_repo": "https://github.com/lldpd/lldpd",
        "primary_contact": "vincent@bernat.ch",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://lldpd.github.io\"\nlanguage: c\nprimary_contact: \"vincent@bernat.ch\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/lldpd/lldpd'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n./autogen.sh\n./configure --disable-shared --enable-pie --enable-fuzzer=$LIB_FUZZING_ENGINE\nmake\n\ncp tests/fuzz_cdp $OUT/\ncp tests/fuzz_edp $OUT/\ncp tests/fuzz_lldp $OUT/\ncp tests/fuzz_sonmp $OUT/\n\nzip -r $OUT/fuzz_cdp_seed_corpus.zip    tests/fuzzing_seed_corpus/fuzz_cdp_seed_corpus\nzip -r $OUT/fuzz_edp_seed_corpus.zip    tests/fuzzing_seed_corpus/fuzz_edp_seed_corpus\nzip -r $OUT/fuzz_lldp_seed_corpus.zip   tests/fuzzing_seed_corpus/fuzz_lldp_seed_corpus\nzip -r $OUT/fuzz_sonmp_seed_corpus.zip  tests/fuzzing_seed_corpus/fuzz_sonmp_seed_corpus\n"
    },
    "llhttp": {
        "name": "llhttp",
        "language": "c",
        "homepage": "https://llhttp.org/",
        "main_repo": "https://github.com/nodejs/llhttp",
        "primary_contact": "fedor@indutny.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://llhttp.org/\"\nmain_repo: \"https://github.com/nodejs/llhttp\"\nlanguage: c\nprimary_contact: \"fedor@indutny.com\"\nauto_ccs:\n - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -euo\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nrm -rf \"${WORK:?}/\"*\nmake clean\n\nnpm ci\nyes | make build/libllhttp.a\n\n$CC $CFLAGS -c ./test/fuzzers/fuzz_parser.c -I./build/ ./build/libllhttp.a -o $WORK/fuzz_parser.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -fuse-ld=lld -I./build/ ./build/libllhttp.a $WORK/fuzz_parser.o -o $OUT/fuzz_parser\n"
    },
    "llvm": {
        "name": "llvm",
        "language": "c++",
        "homepage": "http://llvm.org/",
        "main_repo": "https://github.com/llvm/llvm-project.git",
        "primary_contact": "rnk@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"http://llvm.org/\"\nlanguage: c++\nprimary_contact: \"rnk@google.com\"\nauto_ccs:\n  - \"jonas@devlieghere.com\"\n  - \"vsk@apple.com\"\n  - \"akilsrin@apple.com\"\n  - \"igmyrj@gmail.com\"\n  - \"xpl0re@gmail.com\"\n  - \"jfb@chromium.org\"\n  - \"eneyman@google.com\"\n  - \"bigcheesegs@gmail.com\"\n  - \"davg@google.com\"\n  - \"sammccall@google.com\"\n  - \"david@adalogics.com\"\n\nsanitizers:\n  - address\n  - memory\n\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n\n# Bug reports are public by default:\nview_restrictions: none\nmain_repo: 'https://github.com/llvm/llvm-project.git'\n",
        "build_sh": "#!/bin/bash -eux\n#\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n  readonly FUZZERS=(\\\n    llvm-dwarfdump-fuzzer \\\n  )\nelse\n  # For coverage we skip \"clangd-fuzzer\" because it eats too much memory\n  # and the process gets killed.\n  if [[ \"$SANITIZER\" = coverage ]]; then\n    readonly FUZZERS=( \\\n      llvm-microsoft-demangle-fuzzer \\\n      llvm-dwarfdump-fuzzer \\\n      llvm-itanium-demangle-fuzzer \\\n      llvm-yaml-numeric-parser-fuzzer \\\n      llvm-yaml-parser-fuzzer \\\n      llvm-dlang-demangle-fuzzer \\\n      vfabi-demangler-fuzzer \\\n      llvm-rust-demangle-fuzzer \\\n      llvm-dis-fuzzer \\\n      llvm-opt-fuzzer \\\n      llvm-isel-fuzzer \\\n      llvm-special-case-list-fuzzer \\\n      clang-objc-fuzzer \\\n      clang-format-fuzzer \\\n      clang-fuzzer \\\n      llvm-parse-assembly-fuzzer \\\n      llvm-symbol-reader-fuzzer \\\n      llvm-object-yaml-fuzzer \\\n    )\n  else\n    readonly FUZZERS=( \\\n      llvm-microsoft-demangle-fuzzer \\\n      llvm-dwarfdump-fuzzer \\\n      llvm-itanium-demangle-fuzzer \\\n      llvm-yaml-numeric-parser-fuzzer \\\n      llvm-yaml-parser-fuzzer \\\n      llvm-dlang-demangle-fuzzer \\\n      vfabi-demangler-fuzzer \\\n      llvm-rust-demangle-fuzzer \\\n      llvm-dis-fuzzer \\\n      llvm-opt-fuzzer \\\n      llvm-isel-fuzzer \\\n      llvm-special-case-list-fuzzer \\\n      clang-objc-fuzzer \\\n      clang-format-fuzzer \\\n      clang-fuzzer \\\n      clangd-fuzzer \\\n      llvm-parse-assembly-fuzzer \\\n      llvm-symbol-reader-fuzzer \\\n      llvm-object-yaml-fuzzer \\\n    )\n  fi\nfi\n# Fuzzers whose inputs are C-family source can use clang-fuzzer-dictionary.\nreadonly CLANG_DICT_FUZZERS=( \\\n  clang-fuzzer \\\n  clang-format-fuzzer \\\n  clang-objc-fuzzer \\\n)\n\ncase $SANITIZER in\n  address) LLVM_SANITIZER=\"Address\" ;;\n  undefined) LLVM_SANITIZER=\"Undefined\" ;;\n  memory) LLVM_SANITIZER=\"MemoryWithOrigins\" ;;\n  *) LLVM_SANITIZER=\"\" ;;\nesac\ncase \"${LIB_FUZZING_ENGINE}\" in\n  -fsanitize=fuzzer) CMAKE_FUZZING_CONFIG=\"-DLLVM_USE_SANITIZE_COVERAGE=ON\" ;;\n  *) CMAKE_FUZZING_CONFIG=\"-DLLVM_LIB_FUZZING_ENGINE=${LIB_FUZZING_ENGINE}\" ;;\nesac\n\nLLVM=llvm-project/llvm\n\nmkdir build\ncd build\n\ncmake -GNinja -DCMAKE_BUILD_TYPE=Release ../$LLVM \\\n    -DLLVM_ENABLE_PROJECTS=\"clang;lld;clang-tools-extra\" \\\n    -DLLVM_ENABLE_RUNTIMES=\"libcxx;libcxxabi;compiler-rt\" \\\n    -DLLVM_ENABLE_ASSERTIONS=ON \\\n    -DLLVM_USE_LINKER=lld \\\n    -DCMAKE_C_COMPILER=\"${CC}\" \\\n    -DCMAKE_CXX_COMPILER=\"${CXX}\" \\\n    -DCMAKE_C_FLAGS=\"${CFLAGS}\" \\\n    -DCMAKE_CXX_FLAGS=\"${CXXFLAGS}\" \\\n    \"${CMAKE_FUZZING_CONFIG}\" \\\n    -DLLVM_NO_DEAD_STRIP=ON \\\n    -DLLVM_USE_SANITIZER=\"${LLVM_SANITIZER}\" \\\n    -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly \\\n    -DCOMPILER_RT_INCLUDE_TESTS=OFF\n\n# Patch certain build rules in code coverage mode, as otherwise the process is killed.\n# Verify we can build some of the troublesome rules by building them.\nif [[ \"$SANITIZER\" = coverage ]]; then\n  mv build.ninja ../\n  python3 $SRC/coverage_patcher.py ../build.ninja build.ninja\n  ninja lib/Target/AMDGPU/Utils/CMakeFiles/LLVMAMDGPUUtils.dir/AMDGPUBaseInfo.cpp.o -j $(( $(nproc) / 2))\n  ninja lib/Target/AMDGPU/MCTargetDesc/CMakeFiles/LLVMAMDGPUDesc.dir/AMDGPUMCCodeEmitter.cpp.o -j $(( $(nproc) / 2))\nfi\n\nfor fuzzer in \"${FUZZERS[@]}\"; do\n  # Limit workload in CI\n  if [ -n \"${OSS_FUZZ_CI-}\" ]; then\n    ninja $fuzzer -j 3\n  else\n    # Do not exhaust memory limitations on the cloud machine, coverage\n    # takes more resources which causes processes to crash.\n    if [[ \"$SANITIZER\" = coverage ]]; then\n      ninja $fuzzer -j $(( $(nproc) / 4)) || ninja $fuzzer -j 2 || ninja $fuzzer -j 1\n    else\n      ninja $fuzzer -j $(( $(nproc) / 4))\n    fi\n  fi\n  cp bin/$fuzzer $OUT\ndone\n\n\n# Exit early in the CI as the llvm-isel-fuzzer and opt fuzzer won't be there.\nif [ -n \"${OSS_FUZZ_CI-}\" ]; then\n  exit 0\nfi\n\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--hexagon-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--riscv64-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--mips64-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--arm-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--ppc64-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--aarch64-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--x86_64-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--wasm32-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--nvptx-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--ve-O2\ncp $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--bpf-O2\nmv $OUT/llvm-isel-fuzzer $OUT/llvm-isel-fuzzer--aarch64-gisel\n\n# Same for llvm-opt-fuzzer\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-earlycse\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-simplifycfg\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-gvn\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-sccp\n\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-loop_predication\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-guard_widening\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-loop_vectorize\n\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-loop_unswitch\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-licm\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-indvars\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-strength_reduce\n\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-irce\n\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-dse\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-loop_idiom\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-reassociate\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-lower_matrix_intrinsics\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-memcpyopt\ncp $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-sroa\n\nmv $OUT/llvm-opt-fuzzer $OUT/llvm-opt-fuzzer--x86_64-instcombine\n\n\nninja clang-fuzzer-dictionary\nfor fuzzer in \"${CLANG_DICT_FUZZERS[@]}\"; do\n  bin/clang-fuzzer-dictionary > $OUT/$fuzzer.dict\ndone\n\nzip -j \"${OUT}/clang-objc-fuzzer_seed_corpus.zip\"  $SRC/$LLVM/../clang/tools/clang-fuzzer/corpus_examples/objc/*\nzip -j \"${OUT}/clangd-fuzzer_seed_corpus.zip\"  $SRC/$LLVM/../clang-tools-extra/clangd/test/*\nzip -j \"${OUT}/clang-fuzzer_seed_corpus.zip\" $SRC/llvm-project/clang/test/Parser/*.cpp\n"
    },
    "llvm_libcxx": {
        "name": "llvm_libcxx",
        "language": "c++",
        "homepage": "https://libcxx.llvm.org/",
        "main_repo": "https://github.com/llvm/llvm-project.git",
        "primary_contact": "mclow.lists@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://libcxx.llvm.org/\"\nlanguage: c++\nprimary_contact: \"mclow.lists@gmail.com\"\nmain_repo: https://github.com/llvm/llvm-project.git\nauto_ccs:\n  - \"timshen91@gmail.com\"\n  - \"jfb@chromium.org\"\n  - \"bigcheesegs@gmail.com\"\n  - \"eric@efcs.ca\"\n  - \"ldionne.2@gmail.com\"\n  - \"koraq@xs4all.nl\"\n  - \"nikolasklauser@berlin.de\"\n  \nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run the oss-fuzz script in the repository\n./libcxx/utils/ci/oss-fuzz.sh\n"
    },
    "llvm_libcxxabi": {
        "name": "llvm_libcxxabi",
        "language": "c++",
        "homepage": "https://libcxxabi.llvm.org/",
        "main_repo": "https://github.com/llvm/llvm-project",
        "primary_contact": "kcc@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://libcxxabi.llvm.org/\"\nlanguage: c++\nprimary_contact: \"kcc@google.com\"\nmain_repo: https://github.com/llvm/llvm-project\nauto_ccs:\n  - \"Erik.Pilkington@gmail.com\"\n  - \"akilsrin@apple.com\"\n  - \"bigcheesegs@gmail.com\"\n  - \"eric@efcs.ca\"\n  - \"nikolasklauser@berlin.de\"\n  - \"koraq@xs4all.nl\"\nsanitizers:\n  - address\n  - memory\n  - undefined\n",
        "build_sh": "#!/bin/bash -eux\n#\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n$CXX $CXXFLAGS -std=c++11 -g src/cxa_demangle.cpp src/abort_message.cpp \\\n  -Iinclude fuzz/cxa_demangle_fuzzer.cpp -o $OUT/cxa_demangle_fuzzer \\\n  $LIB_FUZZING_ENGINE\n"
    },
    "lodash": {
        "name": "lodash",
        "language": "javascript",
        "homepage": "https://lodash.com/",
        "main_repo": "https://github.com/lodash/lodash",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://lodash.com/\nlanguage: javascript\nmain_repo: https://github.com/lodash/lodash\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install dependencies.\nnpm install\nnpm install --save-dev @jazzer.js/core\n\n# Build Fuzzers.\ncompile_javascript_fuzzer lodash fuzz.js -i lodash\n"
    },
    "lodepng": {
        "name": "lodepng",
        "language": "c++",
        "homepage": "https://github.com/lvandeve/lodepng",
        "main_repo": "https://github.com/lvandeve/lodepng.git",
        "primary_contact": "lvandeve@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/lvandeve/lodepng\"\nlanguage: c++\nprimary_contact: \"lvandeve@gmail.com\"\nauto_ccs:\n  - \"singharshdeep@google.com\"\nsanitizers:\n- address\n- undefined\nmain_repo: 'https://github.com/lvandeve/lodepng.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# LODEPNG_MAX_ALLOC flag lets the decoder gracefully return error when trying to\n# allocate more than 100MB memory, which prevents OOM with the 2GB limit.\n$CXX $CXXFLAGS -DLODEPNG_MAX_ALLOC=100000000 lodepng.cpp lodepng_fuzzer.cpp -o\\\n $OUT/lodepng_fuzzer $LIB_FUZZING_ENGINE\n\n# copy seed corpus\ncp $SRC/lodepng_fuzzer_seed_corpus.zip $OUT/\n\n# copy dictionary file\ncp $SRC/*.dict $OUT/\n"
    },
    "log4j2": {
        "name": "log4j2",
        "language": "jvm",
        "homepage": "https://logging.apache.org/log4j/2.x",
        "main_repo": "https://github.com/apache/logging-log4j2",
        "primary_contact": "volkan@yazi.ci",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://logging.apache.org/log4j/2.x\"\nmain_repo: \"https://github.com/apache/logging-log4j2\"\nlanguage: jvm\n\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n\n# Apache Logging Services PMC members[1] that contribute the fuzz tests.\n# We cannot share `security@logging.apache.org` here, since it must be associated with a Google account[2].\n#\n# [1] https://logging.apache.org/team-list.html\n# [2] https://google.github.io/oss-fuzz/getting-started/new-project-guide/#primary\nprimary_contact: volkan@yazi.ci\nauto_ccs:\n  - piotr.karwasz@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit clone --depth 1 --branch 2.x --single-branch https://github.com/apache/logging-log4j2\n./logging-log4j2/oss-fuzz-build.sh \"$OUT\"\n"
    },
    "logback": {
        "name": "logback",
        "language": "jvm",
        "homepage": "https://github.com/qos-ch/logback",
        "main_repo": "https://github.com/qos-ch/logback.git",
        "primary_contact": "dev.qos.ch@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/qos-ch/logback\"\nlanguage: jvm\nprimary_contact: \"dev.qos.ch@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/qos-ch/logback.git\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"logback-core/target/logback-core-$CURRENT_VERSION.jar\" \"$OUT/logback-core.jar\"\ncp \"logback-classic/target/logback-classic-$CURRENT_VERSION.jar\" \"$OUT/logback-classic.jar\"\n\ncd slf4j\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"slf4j-api/target/slf4j-api-$CURRENT_VERSION.jar\" \"$OUT/slf4j.jar\"\ncd $SRC\n\nALL_JARS=\"logback-core.jar logback-classic.jar slf4j.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "loki": {
        "name": "loki",
        "language": "go",
        "homepage": "https://github.com/grafana/loki",
        "main_repo": "https://github.com/grafana/loki",
        "primary_contact": "cyril.tovena@grafana.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/grafana/loki\"\nprimary_contact: \"cyril.tovena@grafana.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"edward.welch@grafana.com\"\n  - \"michel.hollands@grafana.com\"\n  - \"loki@grafana.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/grafana/loki'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/grafana/loki/v3/pkg/logql/syntax FuzzParseExpr fuzz_parse_expr\n"
    },
    "looker-sdk": {
        "name": "looker-sdk",
        "language": "python",
        "homepage": "https://github.com/looker-open-source/sdk-codegen",
        "main_repo": "https://github.com/looker-open-source/sdk-codegen",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/looker-open-source/sdk-codegen\nlanguage: python\nmain_repo: https://github.com/looker-open-source/sdk-codegen\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd python\npip3 install .\n\n# Build fuzzers and put them in $OUT/\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "lotus": {
        "name": "lotus",
        "language": "go",
        "homepage": "https://github.com/filecoin-project/lotus",
        "main_repo": "https://github.com/filecoin-project/lotus",
        "primary_contact": "security@filecoin.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/filecoin-project/lotus\"\nmain_repo: \"https://github.com/filecoin-project/lotus\"\nprimary_contact: \"security@filecoin.org\"\nauto_ccs :\n  - \"Adam@adalogics.com\"\n  - \"kubuxu@protocol.ai\"\n  - \"yolan@protocol.ai\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit submodule init\ngit submodule update\ncompile_go_fuzzer github.com/filecoin-project/lotus/chain/types FuzzMessage fuzz_message gofuzz\n\n# Fuzzers from fuzzing-lotus\ncd ../fuzzing-lotus/fuzz\nrm -Rf libfuzzer\ngo mod init github.com/filecoin-project/fuzzing-lotus/fuzz\ngo mod tidy\n\ncompile_go_fuzzer github.com/filecoin-project/fuzzing-lotus/fuzz FuzzBlockMsg fuzz_block_msg\ncompile_go_fuzzer github.com/filecoin-project/fuzzing-lotus/fuzz FuzzBlockMsgStructural fuzz_block_msg_structural\ncompile_go_fuzzer github.com/filecoin-project/fuzzing-lotus/fuzz FuzzBlockHeader fuzz_block_header\ncompile_go_fuzzer github.com/filecoin-project/fuzzing-lotus/fuzz FuzzNodesForHeight fuzz_nodes_for_height\n"
    },
    "lua": {
        "name": "lua",
        "language": "c",
        "homepage": "https://www.lua.org/",
        "main_repo": "https://github.com/lua/lua",
        "primary_contact": "roberto@inf.puc-rio.br",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.lua.org/\"\nlanguage: c\nprimary_contact: \"roberto@inf.puc-rio.br\"\nauto_ccs:\n  - \"fuzz@lua.org\"\n  - \"david@adalogics.com\"\n  - \"estetus@gmail.com\"\nmain_repo: 'https://github.com/lua/lua'\narchitectures:\n  - i386\n  - x86_64\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# For some reason the linker will complain if address sanitizer is not used\n# in introspector builds.\nif [ \"$SANITIZER\" == \"introspector\" ]; then\n  export CFLAGS=\"${CFLAGS} -fsanitize=address\"\n  export CXXFLAGS=\"${CXXFLAGS} -fsanitize=address\"\nfi\n\nPACKAGES=\"build-essential ninja-build cmake make\"\nif [ \"$ARCHITECTURE\" = \"i386\" ]; then\n    PACKAGES=\"$PACKAGES zlib1g-dev:i386 libreadline-dev:i386 libunwind-dev:i386\"\nelif [ \"$ARCHITECTURE\" = \"aarch64\" ]; then\n    PACKAGES=\"$PACKAGES zlib1g-dev:arm64 libreadline-dev:arm64 libunwind-dev:arm64\"\nelse\n    PACKAGES=\"$PACKAGES zlib1g-dev libreadline-dev libunwind-dev\"\nfi\napt-get update\napt-get install -y $PACKAGES\n\n# For fuzz-introspector, exclude all functions in the tests directory,\n# libprotobuf-mutator and protobuf source code.\n# See https://github.com/ossf/fuzz-introspector/blob/main/doc/Config.md#code-exclusion-from-the-report\nexport FUZZ_INTROSPECTOR_CONFIG=$SRC/fuzz_introspector_exclusion.config\ncat > $FUZZ_INTROSPECTOR_CONFIG <<EOF\nFILES_TO_AVOID\ntestdir/build/tests/capi/external.protobuf_mutator\ntestdir/build/tests/capi/luaL_loadbuffer_proto/\nEOF\n\ncd $SRC/testdir\n\n# Avoid compilation issue due to some undefined references. They are defined in\n# libc++ and used by Centipede so -lc++ needs to come after centipede's lib.\nif [[ $FUZZING_ENGINE == centipede ]]\nthen\n    sed -i \\\n        '/$ENV{LIB_FUZZING_ENGINE}/a \\ \\ \\ \\ \\ \\ \\ \\ -lc++' \\\n        tests/capi/CMakeLists.txt\nfi\n\n# Clean up potentially persistent build directory.\n[[ -e $SRC/testdir/build ]] && rm -rf $SRC/testdir/build\n\ncase $SANITIZER in\n  address) SANITIZERS_ARGS=\"-DENABLE_ASAN=ON\" ;;\n  undefined) SANITIZERS_ARGS=\"-DENABLE_UBSAN=ON\" ;;\n  *) SANITIZERS_ARGS=\"\" ;;\nesac\n\nexport LSAN_OPTIONS=\"verbosity=1:log_threads=1\"\n\n# Workaround for a LeakSanitizer crashes,\n# see https://github.com/google/oss-fuzz/issues/11798.\nif [ \"$ARCHITECTURE\" = \"aarch64\" ]; then\n    export ASAN_OPTIONS=detect_leaks=0\nfi\n\n: ${LD:=\"${CXX}\"}\n: ${LDFLAGS:=\"${CXXFLAGS}\"}  # to make sure we link with sanitizer runtime\n\ncmake_args=(\n    -DUSE_LUA=ON\n    -DOSS_FUZZ=ON\n    $SANITIZERS_ARGS\n\n    # C compiler\n    -DCMAKE_C_COMPILER=\"${CC}\"\n    -DCMAKE_C_FLAGS=\"${CFLAGS}\"\n\n    # C++ compiler\n    -DCMAKE_CXX_COMPILER=\"${CXX}\"\n    -DCMAKE_CXX_FLAGS=\"${CXXFLAGS}\"\n\n    # Linker\n    -DCMAKE_LINKER=\"${LD}\"\n    -DCMAKE_EXE_LINKER_FLAGS=\"${LDFLAGS}\"\n    -DCMAKE_MODULE_LINKER_FLAGS=\"${LDFLAGS}\"\n    -DCMAKE_SHARED_LINKER_FLAGS=\"${LDFLAGS}\"\n)\n\n# To deal with a host filesystem from inside of container.\ngit config --global --add safe.directory '*'\n\n# Build the project and fuzzers.\n[[ -e build ]] && rm -rf build\ncmake \"${cmake_args[@]}\" -S . -B build -G Ninja\ncmake --build build --parallel --verbose\n\nLUALIB_PATH=\"$SRC/testdir/build/lua-master/source/\"\n$CC $CFLAGS -I$LUALIB_PATH -c $SRC/fuzz_lua.c -o fuzz_lua.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_lua.o -o $OUT/fuzz_lua $LUALIB_PATH/liblua.a\n\n# If the dict filename is the same as your target binary name\n# (i.e. `%fuzz_target%.dict`), it will be automatically used.\n# If the name is different (e.g. because it is shared by several\n# targets), specify this in .options file.\ncp corpus_dir/*.dict corpus_dir/*.options $OUT/\n\n# Archive and copy to $OUT seed corpus if the build succeeded.\nfor f in $(find build/tests/ -name '*_test' -type f);\ndo\n  name=$(basename $f);\n  module=$(echo $name | sed 's/_test//')\n  corpus_dir=\"corpus_dir/$module\"\n  echo \"Copying for $module\";\n  cp $f $OUT/\n  [[ -e $corpus_dir ]] && find \"$corpus_dir\" -mindepth 1 -maxdepth 1 | zip -@ -j $OUT/\"$name\"_seed_corpus.zip\ndone\n"
    },
    "lucene": {
        "name": "lucene",
        "language": "jvm",
        "homepage": "https://lucene.apache.org/",
        "main_repo": "https://github.com/apache/lucene",
        "primary_contact": "david.w.smiley@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://lucene.apache.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/lucene\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nprimary_contact: \"david.w.smiley@gmail.com\"\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport JAVA_HOME=\"$OUT/open-jdk-17\"\nmkdir -p $JAVA_HOME\nrsync -aL --exclude=*.zip \"/usr/lib/jvm/java-17-openjdk-amd64/\" \"$JAVA_HOME\"\n\nGRADLE_ARGS=\"-x test -x javadoc\"\npatch build.gradle build.patch\n./gradlew shadowJar $GRADLE_ARGS\nLUCENE_VERSION=$(./gradlew properties --no-daemon --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\n\ncp $SRC/lucene/lucene/analysis/common/build/libs/lucene-analysis-common-$LUCENE_VERSION-all.jar $OUT/lucene-analysis-common.jar\ncp $SRC/lucene/lucene/core/build/libs/lucene-core-$LUCENE_VERSION-all.jar $OUT/lucene-core.jar\ncp $SRC/lucene/lucene/queryparser/build/libs/lucene-queryparser-$LUCENE_VERSION-all.jar $OUT/lucene-queryparser.jar\n\nALL_JARS=\"lucene-analysis-common.jar lucene-core.jar lucene-queryparser.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer --release 17\n  cp $SRC/[$fuzzer_basename]*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-17/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-17/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone"
    },
    "lwan": {
        "name": "lwan",
        "language": "c++",
        "homepage": "https://github.com/lpereira/lwan",
        "main_repo": "https://github.com/lpereira/lwan.git",
        "primary_contact": "leandro.pereira@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/lpereira/lwan\"\nlanguage: c++\nprimary_contact: \"leandro.pereira@gmail.com\"\nsanitizers:\n  - address\nmain_repo: 'https://github.com/lpereira/lwan.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -euv\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\nmkdir -p $WORK/lwan\ncd $WORK/lwan\n\ncmake -GNinja \\\n\t-DCMAKE_BUILD_TYPE=Debug \\\n\t-DCMAKE_C_COMPILER=\"${CC}\" \\\n\t-DCMAKE_C_FLAGS=\"${CFLAGS}\" \\\n\t$SRC/lwan/\n\nninja -v liblwan.a\n\ncp $SRC/lwan/fuzz/*.dict $OUT/\n\nfor fuzzer in $SRC/lwan/src/bin/fuzz/*_fuzzer.cc; do\n\texecutable=$(basename $fuzzer .cc)\n\tcorpus_base=$(basename $fuzzer _fuzzer.cc)\n\n\tzip -jr $OUT/${executable}_seed_corpus.zip $SRC/lwan/fuzz/corpus/corpus-${corpus_base}-*\n\t\n\t$CXX $CXXFLAGS -std=c++11 \\\n\t\t-Wl,-whole-archive $WORK/lwan/src/lib/liblwan.a -Wl,-no-whole-archive \\\n\t\t-I$SRC/lwan/src/lib $fuzzer \\\n\t\t$LIB_FUZZING_ENGINE -lpthread -lz \\\n\t\t-o $OUT/$executable\ndone\n"
    },
    "lxc": {
        "name": "lxc",
        "language": "c",
        "homepage": "https://github.com/lxc/lxc",
        "main_repo": "https://github.com/lxc/lxc",
        "primary_contact": "christian@brauner.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/lxc/lxc\"\nlanguage: c\nprimary_contact: \"christian@brauner.io\"\nbuilds_per_day: 4\nsanitizers:\n  - address\n  - undefined\n  - memory\nauto_ccs:\n  - stgraber@stgraber.org\n  - evverx@gmail.com\nmain_repo: \"https://github.com/lxc/lxc\"\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n  # - centipede\n  # Don't use centipede because it can't handle fuzz targets with \"config\" in\n  # the name.\n",
        "build_sh": "#!/bin/bash -e\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nsrc/tests/oss-fuzz.sh\n"
    },
    "lxml": {
        "name": "lxml",
        "language": "python",
        "homepage": "https://lxml.de/",
        "main_repo": "https://github.com/lxml/lxml/",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://lxml.de/\nlanguage: python\nmain_repo: https://github.com/lxml/lxml/\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Flags to link sanitizers at runtime.\n# Anything not forwarded is required by lxml.\nexport CFLAGS=\"$CFLAGS -fPIC\"\nexport CXXFLAGS=\"$CXXFLAGS -fPIC\"\n## Use LD values if already set, (Fuzz Introspector may set them) otherwise use the OSS-Fuzz suggested linker and flags.\n: \"${LD:=${CXX}}\"\n: \"${LDFLAGS:=${CXXFLAGS}}\"\n\nif [[ \"$SANITIZER\" = 'undefined' ]]; then\n  # libiconv-1.17 (a dependency of libxml2) triggers several UBSAN errors similar to:\n  # `utf32le.h:30:59: runtime error: left shift of 225 by 24 places cannot be represented in type 'int'`\n  # Disabling the UBSAN shift check, while not ideal, appears to be the simplest way to avoid hindering the fuzzer\n  # with false positives for now and libxml2 is already being fuzzed independently so there is little value in\n  # checking it here as well.\n  export CFLAGS+=\" -fno-sanitize=shift\"\n  export CXXFLAGS+=\" -fno-sanitize=shift\"\nfi\n# lxml build Settings\nif [[ $SANITIZER = *coverage* ]] || [[ $SANITIZER = 'introspector' ]]; then\n  export COVERAGE=1\n  export OPTION_WITH_COVERAGE=1\nfi\nexport STATICBUILD=1\n\nmake require-cython\nmake clean\nmake SETUPFLAGS='--with-clines --with-unicode-strings' build PYTHON_WITH_CYTHON='--with-cython' -j\"$(nproc)\"\npython3 -m pip install .\n\n# Directory to look in for dictionaries, options files, and seed corpa:\nSEED_DATA_DIR=\"$SRC/seed_data\"\n\nfind $SEED_DATA_DIR \\( -name '*_seed_corpus.zip' -o -name '*.options' -o -name '*.dict' \\) \\\n  ! \\( -name '__base.*' \\) -exec printf 'Copying: %s\\n' {} \\; \\\n  -exec chmod a-x {} \\; \\\n  -exec cp {} \"$OUT\" \\;\n\nfind \"$SRC\" -maxdepth 1 -name 'fuzz_*.py' -print0 | while IFS= read -r -d $'\\0' fuzz_harness; do\n  LD_PRELOAD=$OUT/sanitizer_with_fuzzer.so ASAN_OPTIONS=detect_leaks=0 compile_python_fuzzer \"$fuzz_harness\" \\\n    --collect-all=\"lxml\"\n\n  common_base_dictionary_filename=\"$SEED_DATA_DIR/__base.dict\"\n  if [[ -r \"$common_base_dictionary_filename\" ]]; then\n    # Strip the `.py` extension from the filename and replace it with `.dict`.\n    fuzz_harness_dictionary_filename=\"$(basename \"$fuzz_harness\" .py).dict\"\n    output_file=\"$OUT/$fuzz_harness_dictionary_filename\"\n\n    printf 'Appending %s to %s\\n' \"$common_base_dictionary_filename\" \"$output_file\"\n    # Ensure a newline is added at the end of the file before appending,\n    # but only if the file already exists and is not empty.\n    if [[ -s \"$output_file\" ]]; then\n      echo >> \"$output_file\"\n    fi\n    cat \"$common_base_dictionary_filename\" >> \"$output_file\"\n  fi\ndone\n"
    },
    "lz4": {
        "name": "lz4",
        "language": "c++",
        "homepage": "https://github.com/lz4/lz4",
        "main_repo": "https://github.com/lz4/lz4.git",
        "primary_contact": "Yann.collet.73@gmail.com",
        "vendor_ccs": [
            "oss-fuzz@fb.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/lz4/lz4\"\nlanguage: c++\nprimary_contact: \"Yann.collet.73@gmail.com\"\nauto_ccs:\n  - \"NickRTerrell@gmail.com\"\n  - \"cyan@fb.com\"\n  - \"terrelln@fb.com\"\n  - \"felixh@fb.com\"\n  - \"hmf@fb.com\"\n  - \"yaohway@fb.com\"\n  - \"axxu@fb.com\"\n  - \"embg@fb.com\"\n  - \"yoniko@fb.com\"\n  - \"sangelov@fb.com\"\nvendor_ccs:\n  - \"oss-fuzz@fb.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/lz4/lz4.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run the OSS-Fuzz script in the project.\n./ossfuzz/ossfuzz.sh\n"
    },
    "lz4_flex": {
        "name": "lz4_flex",
        "language": "rust",
        "homepage": "https://github.com/PSeitz/lz4_flex",
        "main_repo": "https://github.com/PSeitz/lz4_flex.git",
        "primary_contact": "pascal.seitz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/PSeitz/lz4_flex\"\nmain_repo: \"https://github.com/PSeitz/lz4_flex.git\"\nlanguage: rust\nprimary_contact: \"pascal.seitz@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Note: This project creates Rust fuzz targets exclusively\ncd $SRC/lz4_flex\ncargo fuzz build -O\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_decomp_corrupt_block $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_decomp_corrupt_frame $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_roundtrip $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_roundtrip_cpp_compress $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_roundtrip_cpp_decompress $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_roundtrip_frame $OUT/\n"
    },
    "lzma": {
        "name": "lzma",
        "language": "c++",
        "homepage": "https://www.7-zip.org/sdk.html",
        "main_repo": "https://github.com/fancycode/lzma-fuzz.git",
        "primary_contact": "ipavlov@users.sourceforge.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.7-zip.org/sdk.html\"\nmain_repo: 'https://github.com/fancycode/lzma-fuzz.git'\nlanguage: c++\nprimary_contact: \"ipavlov@users.sourceforge.net\"\nauto_ccs:\n  - \"mail@joachim-bauch.de\"\nsanitizers:\n  - address\n  - memory\n  - undefined\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build and install fuzzers\nmake clean\nmake -j$(nproc)\nmake install DEST=$OUT\n"
    },
    "lzo": {
        "name": "lzo",
        "language": "c++",
        "homepage": "http://www.oberhumer.com",
        "main_repo": null,
        "primary_contact": "info@oberhumer.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.oberhumer.com\"\nlanguage: c++\nprimary_contact: \"info@oberhumer.com\"\nauto_ccs:\n  - \"bshas3@gmail.com\"\nsanitizers:\n  - address\n  - memory\narchitectures:\n  - x86_64\n  - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\ncd $SRC\ntar xzf lzo.tar.gz\ncd lzo-*\n./configure && make -j$(nproc)\n\n# build fuzzers\nfor file in $SRC/*.c;\ndo\n    name=$(basename $file .c)\n    $CC $CFLAGS -c -I include -I minilzo -I include/lzo ${file} -o ${name}.o\n    $CXX $CXXFLAGS -std=c++11 -I include -I minilzo -I include/lzo ${name}.o \\\n        -o $OUT/${name} $LIB_FUZZING_ENGINE src/.libs/liblzo2.a\ndone\n\n$CXX $CXXFLAGS -std=c++11 -I include -I minilzo -I include/lzo \\\n    $SRC/all_lzo_compress.cc \\\n    -o $OUT/all_lzo_compress $LIB_FUZZING_ENGINE src/.libs/liblzo2.a\n\n# copy fuzzer options\ncp $SRC/*.options $OUT/\nzip -j $OUT/lzo_decompress_target_seed_corpus.zip $SRC/lzo_decompress_target_seeds/*\n"
    },
    "magic-enum": {
        "name": "magic-enum",
        "language": "c++",
        "homepage": "https://github.com/Neargye/magic_enum",
        "main_repo": "https://github.com/Neargye/magic_enum.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/Neargye/magic_enum\"\nlanguage: c++\nmain_repo: \"https://github.com/Neargye/magic_enum.git\"\nvendor_ccs:\n- david@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$CXX $CXXFLAGS -std=c++17 -I$SRC/magic_enum/include     \\\n    $SRC/magic_enum_fuzzer.cc -o $OUT/magic_enum_fuzzer \\\n    $LIB_FUZZING_ENGINE -lpthread\n"
    },
    "magic-modules": {
        "name": "magic-modules",
        "language": "go",
        "homepage": "https://github.com/GoogleCloudPlatform/magic-modules",
        "main_repo": "https://github.com/GoogleCloudPlatform/magic-modules",
        "primary_contact": "stephenrlewis@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: https://github.com/GoogleCloudPlatform/magic-modules\nmain_repo: https://github.com/GoogleCloudPlatform/magic-modules\nlanguage: go\nprimary_contact: \"stephenrlewis@google.com\"\n",
        "build_sh": null
    },
    "mako": {
        "name": "mako",
        "language": "python",
        "homepage": "https://github.com/sqlalchemy/mako",
        "main_repo": "https://github.com/sqlalchemy/mako",
        "primary_contact": "mike_mp@zzzcomputing.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/sqlalchemy/mako\nlanguage: python\nmain_repo: https://github.com/sqlalchemy/mako\nprimary_contact: mike_mp@zzzcomputing.com\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "mandelbulber": {
        "name": "mandelbulber",
        "language": null,
        "homepage": "https://github.com/buddhi1980/mandelbulber2/",
        "main_repo": "https://github.com/buddhi1980/mandelbulber2/",
        "primary_contact": "robertpancoast77@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/buddhi1980/mandelbulber2/\"\nmain_repo: \"https://github.com/buddhi1980/mandelbulber2/\"\nprimary_contact: \"robertpancoast77@gmail.com\"\nauto_ccs:\n - \"buddhi1980@gmail.com\"\n - \"sebastian.jennen@gmx.de\"\nsanitizers:\n- address\n- undefined\n- memory\n",
        "build_sh": null
    },
    "mapserver": {
        "name": "mapserver",
        "language": "c++",
        "homepage": "https://mapserver.org",
        "main_repo": "https://github.com/MapServer/MapServer",
        "primary_contact": "mapserver-security@osgeo.org",
        "vendor_ccs": [
            "geographika@gmail.com",
            "jmckenna@gatewaygeomatics.com",
            "even.rouault@gmail.com",
            "sdlime@gmail.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://mapserver.org\"\nlanguage: c++\nprimary_contact: \"mapserver-security@osgeo.org\"\nvendor_ccs:\n  - \"geographika@gmail.com\"\n  - \"jmckenna@gatewaygeomatics.com\"\n  - \"even.rouault@gmail.com\"\n  - \"sdlime@gmail.com\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nmain_repo: 'https://github.com/MapServer/MapServer'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "mariadb-connector-j": {
        "name": "mariadb-connector-j",
        "language": "jvm",
        "homepage": "https://github.com/mariadb-corporation/mariadb-connector-j",
        "main_repo": "https://github.com/mariadb-corporation/mariadb-connector-j",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/mariadb-corporation/mariadb-connector-j\nmain_repo: https://github.com/mariadb-corporation/mariadb-connector-j\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"./target/mariadb-java-client-$CURRENT_VERSION.jar\" $OUT/mariadb.jar\n\nALL_JARS='mariadb.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "mariadb": {
        "name": "mariadb",
        "language": "c++",
        "homepage": "https://mariadb.org/",
        "main_repo": "https://github.com/MariaDB/server",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://mariadb.org/\"\nmain_repo: 'https://github.com/MariaDB/server'\nlanguage: c++\nvendor_ccs:\n- \"david@adalogics.com\"\nsanitizers:\n- address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nmkdir build\ncd build\ncmake ../ -DDISABLE_SHARED=ON -LH\nmake clean\n\n# Ensure we do static linking\nsed -i 's/libmariadb SHARED/libmariadb STATIC/g' ../libmariadb/libmariadb/CMakeLists.txt\nmake\nrm CMakeCache.txt\n\n# Build fuzzers\nINCLUDE_DIRS=\"-I/src/server/wsrep-lib/include -I/src/server/wsrep-lib/wsrep-API/v26 -I/src/server/build/include -I/src/server/include/providers -I/src/server/include -I/src/server/sql -I/src/server/regex -I/src/server/unittest/mytap\"\n$CC $CFLAGS $INCLUDE_DIRS -c $SRC/fuzz_json.c -o ./fuzz_json.o\n\n# Link with CXX to support centipede\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_json.o -o $OUT/fuzz_json \\\n\t-Wl,--start-group ./unittest/mytap/libmytap.a ./strings/libstrings.a \\\n\t./dbug/libdbug.a ./mysys/libmysys.a -Wl,--end-group -lz -ldl -lpthread\n"
    },
    "markdown-it-py": {
        "name": "markdown-it-py",
        "language": "python",
        "homepage": "https://github.com/executablebooks/markdown-it-py",
        "main_repo": "https://github.com/executablebooks/markdown-it-py",
        "primary_contact": "sewelljohnchris@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/executablebooks/markdown-it-py\nmain_repo: https://github.com/executablebooks/markdown-it-py\nprimary_contact: \"sewelljohnchris@gmail.com\"\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nauto_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython3 -m pip install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "markupsafe": {
        "name": "markupsafe",
        "language": "python",
        "homepage": "https://github.com/pallets/markupsafe",
        "main_repo": "https://github.com/pallets/markupsafe",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pallets/markupsafe\nlanguage: python\nmain_repo: https://github.com/pallets/markupsafe\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "matio": {
        "name": "matio",
        "language": "c++",
        "homepage": "https://github.com/tbeu/matio",
        "main_repo": "https://github.com/tbeu/matio",
        "primary_contact": "t-beu@users.sourceforge.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/tbeu/matio\"\nlanguage: c++\nprimary_contact: \"t-beu@users.sourceforge.net\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/tbeu/matio'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./ossfuzz/build.sh\n"
    },
    "matplotlib": {
        "name": "matplotlib",
        "language": "python",
        "homepage": "https://github.com/matplotlib/matplotlib",
        "main_repo": "https://github.com/matplotlib/matplotlib",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/matplotlib/matplotlib\nlanguage: python\nmain_repo: https://github.com/matplotlib/matplotlib\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build without lto\nexport CFLAGS=\"${CFLAGS} -fno-lto\"\nexport CXXFLAGS=\"${CXXFLAGS} -fno-lto\"\nexport CPPFLAGS=\"${CXXFLAGS} -fno-lto\"\npython3 -m pip install -e .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  LD_PRELOAD=$OUT/sanitizer_with_fuzzer.so ASAN_OPTIONS=detect_leaks=0  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "maven-model": {
        "name": "maven-model",
        "language": "jvm",
        "homepage": "https://github.com/apache/maven",
        "main_repo": "https://github.com/apache/maven.git",
        "primary_contact": "irali@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/apache/maven\"\nlanguage: jvm\nprimary_contact: \"irali@google.com\"\nmain_repo: \"https://github.com/apache/maven.git\"\nfile_github_issue: false\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMAVEN_ARGS=\"-Denforcer.skip=true -Dpropguard.skip -DskipTests -Dmaven.javadoc.skip=true -Dpmd.skip=true \\\n  -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n  -DperformRelease=True -DbannedDependencies.includes.include=org.apache.maven:maven-embedder:jar:4.0.0-alpha-13-SNAPSHOT\"\n$MVN clean package $MAVEN_ARGS org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\n\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\nfind ./maven-model -name \"maven-model-$CURRENT_VERSION.jar\" -exec mv {} $OUT/maven-model.jar \\;\n\nALL_JARS=\"maven-model.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\njavac -cp $BUILD_CLASSPATH ${SRC}/*.java\ninstall ${SRC}/*.class ${OUT}/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java' -maxdepth 1); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n# Create an execution wrapper that executes Jazzer with the correct arguments.\necho \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "maven": {
        "name": "maven",
        "language": "jvm",
        "homepage": "https://maven.apache.org/",
        "main_repo": "https://github.com/apache/maven.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://maven.apache.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/apache/maven.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-DskipTests -Drat.ignoreErrors=true\"\nALL_JARS=\"\"\n\n# install the build servers' jazzer-api into the maven repository\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/maven\"\n\t${MVN} package ${MVN_FLAGS}\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd ${SRC}\n\t${MVN} package -DmavenVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/maven-fuzzer-${CURRENT_VERSION}.jar ${OUT}/maven-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} maven-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n  stripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n  # the .java was stripped by sed\n  if (echo ${stripped_path} | grep \".java$\"); then\n\tcontinue;\n  fi\n\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  fuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n  chmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "mbedtls": {
        "name": "mbedtls",
        "language": "c++",
        "homepage": "https://developer.trustedfirmware.org/w/mbed-tls/",
        "main_repo": "https://github.com/Mbed-TLS/mbedtls.git",
        "primary_contact": "mbed-tls-security@lists.trustedfirmware.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://developer.trustedfirmware.org/w/mbed-tls/\"\nlanguage: c++\nprimary_contact: \"mbed-tls-security@lists.trustedfirmware.org\"\nauto_ccs :\n  - \"p.antoine@catenacyber.fr\"\nmain_repo: 'https://github.com/Mbed-TLS/mbedtls.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project (default configuration + experimental features)\nscripts/config.py full\n# Allow repeatability of time-based calculations.\nscripts/config.py set MBEDTLS_PLATFORM_TIME_ALT\n# MBEDTLS_USE_PSA_CRYPTO significantly changes how X.509 and TLS work.\n# In this build, use the default setting.\nscripts/config.py unset MBEDTLS_USE_PSA_CRYPTO\nmkdir build\ncd build\ncmake -DENABLE_TESTING=OFF ..\n# build including fuzzers\nmake -j$(nproc) all\ncp programs/fuzz/fuzz_* $OUT/\ncd ..\n\n# build corpuses\ncd programs\ncp -r ../../openssl/fuzz/corpora/crl fuzz/corpuses/\ncp -r ../../openssl/fuzz/corpora/x509 fuzz/corpuses/\ncp -r ../../boringssl/fuzz/privkey_corpus fuzz/corpuses/\ncp ../../boringssl/fuzz/cert_corpus/* fuzz/corpuses/x509/\nzip -r fuzz/fuzz_x509crl_seed_corpus.zip ../framework/data_files/crl* fuzz/corpuses/crl\nzip -r fuzz/fuzz_x509crt_seed_corpus.zip ../framework/data_files/*.crt ../framework/data_files/dir*/*.crt  fuzz/corpuses/x509/\nzip -r fuzz/fuzz_x509csr_seed_corpus.zip ../framework/data_files/*.csr ../framework/data_files/*.req.*\nzip -r fuzz/fuzz_privkey_seed_corpus.zip ../framework/data_files/*.key ../framework/data_files/*.pem fuzz/corpuses/privkey_corpus\nzip -r fuzz/fuzz_pubkey_seed_corpus.zip ../framework/data_files/*.pub ../framework/data_files/*.pubkey\nzip -r fuzz/fuzz_dtlsclient_seed_corpus.zip fuzz/corpuses/dtlsclient\nzip -r fuzz/fuzz_dtlsserver_seed_corpus.zip fuzz/corpuses/dtlsserver\nzip -r fuzz/fuzz_client_seed_corpus.zip fuzz/corpuses/client\nzip -r fuzz/fuzz_server_seed_corpus.zip fuzz/corpuses/server\ncd fuzz\n# export other associated stuff\ncp *.options $OUT/\ncp fuzz_*_seed_corpus.zip $OUT/\ncd ../..\n\n# build project (some non-default compile-time settings)\nscripts/config.py full\n# Allow repeatability of time-based calculations.\nscripts/config.py set MBEDTLS_PLATFORM_TIME_ALT\n# Toggle some options that affect how some parts of the library work.\nscripts/config.py set MBEDTLS_USE_PSA_CRYPTO\nscripts/config.py set MBEDTLS_ECDH_VARIANT_EVEREST_ENABLED\nscripts/config.py set MBEDTLS_RSA_NO_CRT\nmkdir build-usepsa\ncd build-usepsa\ncmake -DENABLE_TESTING=OFF ..\n# just build the fuzzers\nmake -j$(nproc) -C programs/fuzz\ncd programs/fuzz\nfor x in fuzz_*; do\n  cp $x $OUT/usepsa-$x\n  # use the same ancilliary data as the default-build executables\n  if [ -e $OUT/${x}_seed_corpus.zip ]; then\n    ln -s ${x}_seed_corpus.zip $OUT/usepsa-${x}_seed_corpus.zip\n  fi\n  if [ -e $OUT/${x}.options ]; then\n    ln -s ${x}.options $OUT/usepsa-${x}.options\n  fi\ndone\ncd ../..\ncd ..\n"
    },
    "mccabe": {
        "name": "mccabe",
        "language": "python",
        "homepage": "https://github.com/pycqa/mccabe",
        "main_repo": "https://github.com/pycqa/mccabe",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/pycqa/mccabe\nmain_repo: https://github.com/pycqa/mccabe\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "md4c": {
        "name": "md4c",
        "language": "c",
        "homepage": "https://github.com/mity/md4c",
        "main_repo": "https://github.com/mity/md4c",
        "primary_contact": "mity.ossfuzz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/mity/md4c\"\nmain_repo: \"https://github.com/mity/md4c\"\nprimary_contact: \"mity.ossfuzz@gmail.com\"\nlanguage: c\nfile_github_issue: true\nauto_ccs:\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Move seed corpus and dictionary.\nmv $SRC/{*.zip,*.dict} $OUT\n\nmkdir build && cd build\ncmake ../ -DBUILD_SHARED_LIBS=OFF\nmake\n$CC $CFLAGS -c ../test/fuzzers/fuzz-mdhtml.c -I../src\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz-mdhtml.o -o $OUT/fuzz-mdhtml \\\n    ./src/libmd4c-html.a ./src/libmd4c.a\n"
    },
    "mdbook-i18n-helpers": {
        "name": "mdbook-i18n-helpers",
        "language": "rust",
        "homepage": "https://github.com/google/mdbook-i18n-helpers",
        "main_repo": "https://github.com/google/mdbook-i18n-helpers.git",
        "primary_contact": "mgeisler@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/mdbook-i18n-helpers\"\nmain_repo: \"https://github.com/google/mdbook-i18n-helpers.git\"\nlanguage: rust\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nprimary_contact: \"mgeisler@google.com\"\nauto_ccs:\n  - \"comprehensive-rust@google.com\"\n  - \"darkhanu@gmail.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/mdbook-i18n-helpers\n\nfuzzer_list=$(cargo fuzz list)\n\n# Validate fuzzers exist in the project\nif [[ -z \"$fuzzer_list\" ]]; then\n    echo \"No fuzzers found\"\n    exit 1\nfi\n\n# Build fuzzers\ncargo fuzz build -O --debug-assertions\n\nFUZZ_TARGET_OUTPUT_DIR=target/x86_64-unknown-linux-gnu/release\nwhile IFS= read -r fuzzer; do\n  cp \"$FUZZ_TARGET_OUTPUT_DIR/$fuzzer\" $OUT/\ndone <<< \"$fuzzer_list\"\n"
    },
    "mdbtools": {
        "name": "mdbtools",
        "language": "c",
        "homepage": "https://github.com/mdbtools/mdbtools",
        "main_repo": "https://github.com/mdbtools/mdbtools",
        "primary_contact": "emmiller@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/mdbtools/mdbtools\"\nlanguage: c\nprimary_contact: \"emmiller@gmail.com\"\nmain_repo: \"https://github.com/mdbtools/mdbtools\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nautoreconf -f -i\n./configure --enable-static --disable-man --disable-glib --disable-silent-rules\nmake clean\n\nmake\n\nzip -j $OUT/fuzz_mdb_seed_corpus.zip ../mdbtestdata/data/*.mdb ../mdbtestdata/data/*.accdb\n\ncd src/fuzz\nmake fuzz_mdb\ncp fuzz_mdb $OUT/fuzz_mdb\n"
    },
    "mdit-py-plugins": {
        "name": "mdit-py-plugins",
        "language": "python",
        "homepage": "https://github.com/executablebooks/mdit-py-plugins",
        "main_repo": "https://github.com/executablebooks/mdit-py-plugins",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/executablebooks/mdit-py-plugins\nmain_repo: https://github.com/executablebooks/mdit-py-plugins\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "mdurl": {
        "name": "mdurl",
        "language": "python",
        "homepage": "https://github.com/executablebooks/mdurl",
        "main_repo": "https://github.com/executablebooks/mdurl",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/executablebooks/mdurl\nmain_repo: https://github.com/executablebooks/mdurl\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "memcached": {
        "name": "memcached",
        "language": "c",
        "homepage": "https://www.memcached.org/",
        "main_repo": "https://github.com/memcached/memcached",
        "primary_contact": "alan@cacheforge.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.memcached.org/\"\nlanguage: c\nmain_repo: \"https://github.com/memcached/memcached\"\nprimary_contact: \"alan@cacheforge.com\"\nauto_ccs:\n  - \"bxa@stripe.com\"\n  - \"shodivine@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd vendor && ./fetch.sh && cd ../\ngit apply $SRC/patch.diff\n./autogen.sh\n./configure --enable-proxy\nmake\n\nmv $SRC/fuzzer_proxy.c $SRC/memcached/\ncd $SRC/memcached\n\n$CC $CFLAGS $LIB_FUZZING_ENGINE -Ivendor/liburing/src/include \\\n    -Ivendor/lua/src \\\n    -L /usr/local/lib \\\n    -DHAVE_CONFIG_H -L ./vendor/lua/src \\\n    -g -O2 -pthread -levent -lm -ldl fuzzer_proxy.c \\\n    memcached-memcached.o memcached-hash.o memcached-jenkins_hash.o \\\n    memcached-murmur3_hash.o memcached-slabs.o memcached-items.o \\\n    memcached-assoc.o memcached-thread.o memcached-daemon.o memcached-stats_prefix.o \\\n    memcached-util.o memcached-cache.o memcached-bipbuffer.o memcached-base64.o \\\n    memcached-logger.o memcached-crawler.o memcached-itoa_ljust.o memcached-slab_automove.o \\\n    memcached-authfile.o memcached-restart.o memcached-proto_text.o memcached-proto_bin.o \\\n    memcached-proto_proxy.o memcached-proxy_xxhash.o memcached-proxy_await.o \\\n    memcached-proxy_ustats.o memcached-proxy_jump_hash.o memcached-proxy_request.o \\\n    memcached-proxy_network.o memcached-proxy_lua.o memcached-proxy_config.o \\\n    memcached-proxy_ring_hash.o memcached-proxy_internal.o memcached-md5.o \\\n    memcached-extstore.o memcached-crc32c.o memcached-storage.o memcached-slab_automove_extstore.o \\\n    memcached-proxy_ratelim.o \\\n    vendor/lua/src/liblua.a /usr/local/lib/libevent.a vendor/mcmc/mcmc.o -o fuzzer_proxy\n\npython3 $SRC/generate_corpus.py\n\ncp $SRC/memcached/fuzzer_proxy $OUT/\ncp $SRC/*.options $OUT/\ncp *seed_corpus.zip $OUT/\n"
    },
    "mercurial": {
        "name": "mercurial",
        "language": "c++",
        "homepage": "https://www.mercurial-scm.org/",
        "main_repo": "https://www.mercurial-scm.org/repo/hg",
        "primary_contact": "durin42@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.mercurial-scm.org/\"\nlanguage: c++\nprimary_contact: \"durin42@gmail.com\"\nauto_ccs:\n  - \"gregory.szorc@gmail.com\"\n  - \"kbullock@ringworld.org\"\n  - \"security@mercurial-scm.org\"\n  - \"martinvonz@google.com\"\n  - \"raphael.gomes@octobus.net\"\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\ncoverage_extra_args: -ignore-filename-regex=.*/sanpy/.*\nmain_repo: \"https://www.mercurial-scm.org/repo/hg\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Ignore memory leaks from python scripts invoked in the build\nexport ASAN_OPTIONS=\"detect_leaks=0\"\nexport MSAN_OPTIONS=\"halt_on_error=0:exitcode=0:report_umrs=0\"\n\n# Remove -pthread from CFLAGS, this trips up ./configure\n# which thinks pthreads are available without any CLI flags\nCFLAGS=${CFLAGS//\"-pthread\"/}\n\nFLAGS=()\ncase $SANITIZER in\n  address)\n    FLAGS+=(\"--with-address-sanitizer\")\n    ;;\n  memory)\n    FLAGS+=(\"--with-memory-sanitizer\")\n    # installing ensurepip takes a while with MSAN instrumentation, so\n    # we disable it here\n    FLAGS+=(\"--without-ensurepip\")\n    ;;\n  undefined)\n    FLAGS+=(\"--with-undefined-behavior-sanitizer\")\n    ;;\nesac\n\npushd $SRC/Python-3.8.3/\nif [ -e $OUT/sanpy/cflags -a \"$(cat $OUT/sanpy/cflags)\" = \"${CFLAGS}\" ] ; then\n    echo 'Python cflags unchanged, no need to rebuild'\nelse\n    rm -rf $OUT/sanpy\n    ./configure \"${FLAGS[@]:-}\" \\\n                --prefix=$OUT/sanpy CFLAGS=\"${CFLAGS}\" LINKCC=\"${CXX}\" \\\n                LDFLAGS=\"${CXXFLAGS}\"\n    grep -v HAVE_GETC_UNLOCKED < pyconfig.h > tmp && mv tmp pyconfig.h\n    make && make install\n    echo \"${CFLAGS}\" > $OUT/sanpy/cflags\nfi\npopd\n\ncd contrib/fuzz\nmake clean oss-fuzz PYTHON_CONFIG=$OUT/sanpy/bin/python3.8-config PYTHON_CONFIG_FLAGS=\"--ldflags --embed\"\n"
    },
    "meshoptimizer": {
        "name": "meshoptimizer",
        "language": "c++",
        "homepage": "https://github.com/zeux/meshoptimizer",
        "main_repo": "https://github.com/zeux/meshoptimizer",
        "primary_contact": "arseny.kapoulkine@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/zeux/meshoptimizer\"\nmain_repo: \"https://github.com/zeux/meshoptimizer\"\nlanguage: c++\nprimary_contact: \"arseny.kapoulkine@gmail.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build && cd build\ncmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..\nmake -j$(nproc)\n\ncd ..\nfind . -name \"*.o\" -exec ar rcs fuzz_lib.a {} \\;\n$CXX $CXXFLAGS tools/codecfuzz.cpp -o $OUT/codecfuzzer $LIB_FUZZING_ENGINE fuzz_lib.a\n"
    },
    "metadata-extractor": {
        "name": "metadata-extractor",
        "language": "jvm",
        "homepage": "https://github.com/drewnoakes/metadata-extractor",
        "main_repo": "https://github.com/drewnoakes/metadata-extractor.git",
        "primary_contact": "",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "jacek.trossen@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/drewnoakes/metadata-extractor\"\nlanguage: jvm\nprimary_contact: \"\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/drewnoakes/metadata-extractor.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"jacek.trossen@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/*.zip $OUT/\n\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15 -Dmaven.javadoc.skip=true -Dmaven.repo.local=$WORK/.m2\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"Output/maven/metadata-extractor-$CURRENT_VERSION.jar\" $OUT/metadata-extractor.jar\n\nALL_JARS=\"metadata-extractor.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "metallb": {
        "name": "metallb",
        "language": "go",
        "homepage": "https://metallb.universe.tf",
        "main_repo": "https://github.com/metallb/metallb.git",
        "primary_contact": "fpaoline@redhat.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://metallb.universe.tf\"\nlanguage: go\nprimary_contact: \"fpaoline@redhat.com\"\nauto_ccs:\n  - \"obraunsh@redhat.com\"\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/metallb/metallb.git\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\n\ncompile_native_go_fuzzer    $(pwd)/internal/bgp/community   FuzzNew                 fuzz_New\ncompile_native_go_fuzzer    $(pwd)/internal/bgp/native      FuzzReadOpen            fuzz_ReadOpen\ncompile_native_go_fuzzer    $(pwd)/internal/config          FuzzParseCIDR           fuzz_ParseCIDR\n"
    },
    "mfcmapi": {
        "name": "mfcmapi",
        "language": "c++",
        "homepage": "https://github.com/microsoft/mfcmapi",
        "main_repo": "https://github.com/microsoft/mfcmapi.git",
        "primary_contact": "mfcmapi@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/microsoft/mfcmapi\"\nlanguage: c++\nprimary_contact: \"mfcmapi@gmail.com\"\nauto_ccs:\n  - \"sgriffin@microsoft.com\"\nmain_repo: 'https://github.com/microsoft/mfcmapi.git'\n",
        "build_sh": null
    },
    "micronaut": {
        "name": "micronaut",
        "language": "jvm",
        "homepage": "https://micronaut.io/",
        "main_repo": "https://github.com/micronaut-projects/micronaut-core",
        "primary_contact": "jonas.konrad@oracle.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://micronaut.io/\"\nmain_repo: \"https://github.com/micronaut-projects/micronaut-core\"\nlanguage: jvm\nprimary_contact: \"jonas.konrad@oracle.com\"\nauto_ccs:\n  - \"me@yawk.at\"\n  - \"sergiodelamocaballero@gmail.com\"\n  - \"graeme.rocher@oracle.com\"\n  - \"denis.s.stepanov@oracle.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": null
    },
    "migtd": {
        "name": "migtd",
        "language": "rust",
        "homepage": "https://github.com/intel/MigTD",
        "main_repo": "https://github.com/intel/MigTD.git",
        "primary_contact": "wei3.liu@intel.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/intel/MigTD\"\nlanguage: rust\nprimary_contact: \"wei3.liu@intel.com\"\nauto_ccs:\n  - \"jiewen.yao@intel.com\"\n  - \"jiaqi.gao@intel.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nmain_repo: 'https://github.com/intel/MigTD.git'",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nset -eox pipefail\ncd $SRC/MigTD\n\nFUZZ_CRATE_DIRS=$(find . -type d -name fuzz -exec dirname $(readlink -f {}) \\;)\n\ngit submodule update --init --recursive\nbash sh_script/preparation.sh\n\nfor CRATE_DIR in ${FUZZ_CRATE_DIRS[@]};\ndo\n  if [[ $CRATE_DIR =~ \"deps\" ]]; then\n    continue\n  else    \n    echo \"Building crate: $CRATE_DIR\"\n    cd $CRATE_DIR\n    cargo fuzz build -O\n    FUZZ_TARGET_OUTPUT_DIR=fuzz/target/x86_64-unknown-linux-gnu/release\n    fuzz_tcs=$(cargo fuzz list)\n    for tcs in ${fuzz_tcs[@]}; do\n      if [[ $tcs =~ \"afl\" ]]; then\n        continue\n      else\n        FUZZ_TARGET_NAME=$tcs\n        CRATE_NAME=$(basename $CRATE_DIR)\n       cp $FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT/$CRATE_NAME-$FUZZ_TARGET_NAME\n      fi\n    done\n  fi\ndone"
    },
    "minify": {
        "name": "minify",
        "language": "go",
        "homepage": "https://github.com/tdewolff/minify",
        "main_repo": "https://github.com/tdewolff/minify",
        "primary_contact": "tacodewolff@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/tdewolff/minify\"\nprimary_contact: \"tacodewolff@gmail.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/tdewolff/minify'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n./minify/tests/oss-fuzz-build.sh\n"
    },
    "miniz": {
        "name": "miniz",
        "language": "c",
        "homepage": "https://github.com/richgel999/miniz",
        "main_repo": "https://github.com/richgel999/miniz.git",
        "primary_contact": "martin@urbackup.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/richgel999/miniz\"\nlanguage: c\nprimary_contact: \"martin@urbackup.org\"\nauto_ccs:\n  - \"randy440088@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/richgel999/miniz.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run the OSS-Fuzz script in the project\n$SRC/miniz/tests/ossfuzz.sh\n\n"
    },
    "miniz_oxide": {
        "name": "miniz_oxide",
        "language": "rust",
        "homepage": "https://github.com/Frommi/miniz_oxide",
        "main_repo": "https://github.com/Frommi/miniz_oxide",
        "primary_contact": null,
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/Frommi/miniz_oxide\"\nlanguage: rust\nmain_repo: \"https://github.com/Frommi/miniz_oxide\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nvendor_ccs:\n  - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./build_orig_miniz.sh\nRUSTFLAGS=\"$RUSTFLAGS -L./bin/\" cargo fuzz build -O\nfuzz_release=fuzz/target/x86_64-unknown-linux-gnu/release\ncp $fuzz_release/inflate_nonwrapping $OUT/\n"
    },
    "minizip": {
        "name": "minizip",
        "language": "c++",
        "homepage": "https://github.com/zlib-ng/minizip-ng",
        "main_repo": "https://github.com/zlib-ng/minizip-ng",
        "primary_contact": "nathan.moinvaziri@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/zlib-ng/minizip-ng\"\nlanguage: c++\nprimary_contact: \"nathan.moinvaziri@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/zlib-ng/minizip-ng'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Force static linking in i386 by removing dynamically linked libraries.\nif [ \"$ARCHITECTURE\" = 'i386' ]; then\n  rm /usr/lib/i386-linux-gnu/libssl.so*\n  rm /usr/lib/i386-linux-gnu/libcrypto.so*\n  rm /usr/lib/i386-linux-gnu/libz.so*\n  rm /usr/lib/i386-linux-gnu/libbz2.so*\n  rm /usr/lib/i386-linux-gnu/liblzma.so*\nfi\n\n# Build project\ncmake . -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" -DMZ_BUILD_FUZZ_TESTS=ON\nmake clean\nmake -j$(nproc)\n\n# Package seed corpus\nzip -j $OUT/unzip_fuzzer_seed_corpus.zip test/fuzz/unzip_fuzzer_seed_corpus/*\n\n# Copy the fuzzer executables, zip-ed corpora, and dictionary files to $OUT\nfind . -name '*_fuzzer' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer.dict' -exec cp -v '{}' $OUT ';'\nfind . -name '*_fuzzer_seed_corpus.zip' -exec cp -v '{}' $OUT ';'\n"
    },
    "moby": {
        "name": "moby",
        "language": "go",
        "homepage": "https://github.com/moby/moby",
        "main_repo": "https://github.com/moby/moby",
        "primary_contact": "",
        "vendor_ccs": [
            "adam@adalogics.com",
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/moby/moby\"\nlanguage: go\nprimary_contact: \"\"\nmain_repo: \"https://github.com/moby/moby\"\nvendor_ccs:\n  - \"adam@adalogics.com\"\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Temporarily disable coverage build in OSS-Fuzz's CI\nif [ -n \"${OSS_FUZZ_CI-}\" ]\nthen\n\tif [ \"${SANITIZER}\" = 'coverage' ]\n\tthen\n\t\texit 0\n\tfi\n\t\nfi\n\ncd $SRC/moby\nprintf \"package libnetwork\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > $SRC/moby/registerfuzzdependency.go\n\nmv $SRC/moby/vendor.mod $SRC/moby/go.mod\n\ncp $SRC/jsonmessage_fuzzer.go $SRC/moby/pkg/jsonmessage/\ncp $SRC/backend_build_fuzzer.go $SRC/moby/api/server/backend/build/\ncp $SRC/remotecontext_fuzzer.go $SRC/moby/builder/remotecontext/\ncp $SRC/containerstream_fuzzer.go $SRC/moby/container/stream/\ncp $SRC/daemon_fuzzer.go $SRC/moby/daemon/\n\nrm $SRC/moby/pkg/archive/example_changes.go\nrm $SRC/moby/daemon/logger/plugin_unsupported.go\n\ncd $SRC/moby\ngo mod tidy && go mod vendor\n\nmv $SRC/moby/volume/mounts/parser_test.go $SRC/moby/volume/mounts/parser_test_fuzz.go\nmv $SRC/moby/volume/mounts/validate_unix_test.go $SRC/moby/volume/mounts/validate_unix_test_fuzz.go\n\n\nif [ \"$SANITIZER\" != \"coverage\" ] ; then\n\tgo-fuzz -func FuzzDaemonSimple -o FuzzDaemonSimple.a github.com/docker/docker/daemon\n\n\t$CXX $CXXFLAGS $LIB_FUZZING_ENGINE FuzzDaemonSimple.a \\\n        /src/LVM2.2.03.15/libdm/ioctl/libdevmapper.a \\\n        -o $OUT/FuzzDaemonSimple\nfi\n\ncompile_native_go_fuzzer github.com/docker/docker/volume/mounts FuzzParseLinux FuzzParseLinux\ncompile_go_fuzzer github.com/docker/docker/pkg/jsonmessage FuzzDisplayJSONMessagesStream FuzzDisplayJSONMessagesStream\ncompile_go_fuzzer github.com/docker/docker/api/server/backend/build FuzzsanitizeRepoAndTags FuzzsanitizeRepoAndTags\ncompile_go_fuzzer github.com/docker/docker/builder/remotecontext FuzzreadAndParseDockerfile FuzzreadAndParseDockerfile\ncompile_go_fuzzer github.com/docker/docker/container/stream FuzzcopyEscapable FuzzcopyEscapable\ncompile_native_go_fuzzer github.com/docker/docker/pkg/archive FuzzUntar FuzzUntar\ncompile_native_go_fuzzer github.com/docker/docker/pkg/archive FuzzDecompressStream FuzzDecompressStream\ncompile_native_go_fuzzer github.com/docker/docker/pkg/archive FuzzApplyLayer FuzzApplyLayer\ncompile_native_go_fuzzer github.com/docker/docker/pkg/tailfile FuzzTailfile FuzzTailfile\ncompile_native_go_fuzzer github.com/docker/docker/daemon/logger/jsonfilelog FuzzLoggerDecode FuzzLoggerDecode\ncompile_native_go_fuzzer github.com/docker/docker/libnetwork/etchosts FuzzAdd FuzzAdd\ncompile_native_go_fuzzer github.com/docker/docker/oci FuzzAppendDevicePermissionsFromCgroupRules FuzzAppendDevicePermissionsFromCgroupRules\ncompile_native_go_fuzzer github.com/docker/docker/daemon/logger/jsonfilelog/jsonlog FuzzJSONLogsMarshalJSONBuf FuzzJSONLogsMarshalJSONBuf\n\ncp $SRC/*.options $OUT/\n"
    },
    "monero": {
        "name": "monero",
        "language": "c++",
        "homepage": "https://getmonero.org/",
        "main_repo": "https://github.com/monero-project/monero.git",
        "primary_contact": "binaryfate01@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://getmonero.org/\"\nlanguage: c++\nprimary_contact: \"binaryfate01@gmail.com\"\nauto_ccs:\n  - luigi1111w@gmail.com\n  - ric@ts.org\n  - moneromooo@protonmail.com\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/monero-project/monero.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 The Monero Project\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport BOOST_ROOT=/src/monero/boost_1_70_0\nexport OPENSSL_ROOT_DIR=/src/monero/openssl-1.1.1g\n\ncd monero\nsed -i -e 's/include(FindCcache)/# include(FindCcache)/' CMakeLists.txt\ngit submodule init\ngit submodule update\nmkdir -p build\ncd build\nexport CXXFLAGS=\"$CXXFLAGS -fPIC\"\ncmake -D OSSFUZZ=ON -D STATIC=ON -D BUILD_TESTS=ON -D USE_LTO=OFF -D ARCH=\"default\" ..\n\nTESTS=\"\\\n  base58_fuzz_tests \\\n  block_fuzz_tests \\\n  transaction_fuzz_tests \\\n  load-from-binary_fuzz_tests \\\n  load-from-json_fuzz_tests \\\n  parse-url_fuzz_tests \\\n  http-client_fuzz_tests \\\n  levin_fuzz_tests \\\n  bulletproof_fuzz_tests \\\n  tx-extra_fuzz_tests \\\n\"\n\n# only libfuzzer can run the slow to start ones\nif test \"x$FUZZING_ENGINE\" == 'xlibfuzzer'\nthen\n  TESTS=\"$TESTS \\\n    signature_fuzz_tests \\\n    cold-outputs_fuzz_tests \\\n    cold-transaction_fuzz_tests \\\n  \"\nfi\n\nmake -C tests/fuzz $TESTS\n\ncd /src/monero/monero/build/tests/fuzz\nfor fuzzer in *_fuzz_tests\ndo\n  cp \"$fuzzer\" \"$OUT\"\n  base=$(echo $fuzzer | sed -e s/_fuzz_tests//)\n  cd \"/src/monero/monero/tests/data/fuzz/$base\"\n  rm -f \"${OUT}/${fuzzer}_seed_corpus.zip\"\n  for f in *\n  do\n    h=$(sha1sum \"$f\" | awk '{print $1}')\n    cp \"$f\" \"$h\"\n    zip \"${OUT}/${fuzzer}_seed_corpus.zip\" \"$h\"\n    rm -f \"$h\"\n  done\n  cd -\ndone\n"
    },
    "mongo-go-driver": {
        "name": "mongo-go-driver",
        "language": "go",
        "homepage": "https://github.com/mongodb/mongo-go-driver",
        "main_repo": "https://github.com/mongodb/mongo-go-driver",
        "primary_contact": "dbx-go@mongodb.com",
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/mongodb/mongo-go-driver\"\nlanguage: go\nmain_repo: \"https://github.com/mongodb/mongo-go-driver\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nprimary_contact: \"dbx-go@mongodb.com\"\nauto_ccs:\n  - qingyang.hu@mongodb.com\n  - matt.dale@mongodb.com\n  - preston.vasquez@mongodb.com\n  - steve.silvester@mongodb.com\nvendor_ccs:\n  - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ngo run internal/cmd/build-oss-fuzz-corpus/main.go $OUT/fuzz_decode_seed_corpus.zip\n\nmv bson/fuzz_test.go bson/fuzz.go\nmv bson/bson_corpus_spec_test.go bson/bson_corpus_spec.go\n\nsed -i '/seedBSONCorpus/d' bson/fuzz.go\n\ncompile_native_go_fuzzer go.mongodb.org/mongo-driver/v2/bson FuzzDecode fuzz_decode\n"
    },
    "mongoose": {
        "name": "mongoose",
        "language": "c++",
        "homepage": "https://github.com/cesanta/mongoose",
        "main_repo": "https://github.com/cesanta/mongoose",
        "primary_contact": "info@cesanta.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/cesanta/mongoose\"\nlanguage: c++\nprimary_contact: \"info@cesanta.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/cesanta/mongoose'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\ncd $SRC/mongoose\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -I. test/fuzz.c -o $OUT/fuzz\n\n# Fuzzer using honggfuzz netdriver.\nif [[ \"$FUZZING_ENGINE\" == \"honggfuzz\" ]]\nthen\n $CC $LIB_FUZZING_ENGINE $CFLAGS -DMG_ENABLE_LINES=1 \\\n   -DMG_DISABLE_DAV_AUTH -DMG_ENABLE_FAKE_DAVLOCK \\\n   $LIB_HFND \"$HFND_CFLAGS\" \\\n   fuzz_netdriver_http.c mongoose.c -I. -o $OUT/fuzz_netdriver_http  \\\n   -pthread\nfi\n"
    },
    "more-itertools": {
        "name": "more-itertools",
        "language": "python",
        "homepage": "https://github.com/more-itertools/more-itertools",
        "main_repo": "https://github.com/more-itertools/more-itertools",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/more-itertools/more-itertools\nlanguage: python\nmain_repo: https://github.com/more-itertools/more-itertools\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "mosh": {
        "name": "mosh",
        "language": "c++",
        "homepage": "https://mosh.org",
        "main_repo": "https://github.com/mobile-shell/mosh.git",
        "primary_contact": "keithw@cs.stanford.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://mosh.org\"\nprimary_contact: \"keithw@cs.stanford.edu\"\nauto_ccs:\n  - \"cgull@glup.org\"\n  - \"andersk@mit.edu\"\n  - \"alex@achernya.com\"\n  - \"bbarenblat@gmail.com\"\n  - \"mosh-security@mit.edu\"\nlanguage: c++\nmain_repo: \"https://github.com/mobile-shell/mosh.git\"\nfile_github_issue: true\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/sh\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nset -eu\n\n./autogen.sh\n\n# Sniff $CXXFLAGS to figure out what to pass to ./configure.\nconfigure_flags=\ncase $CXXFLAGS in\n  *-fsanitize=address*)\n    configure_flags=\"$configure_flags --enable-asan\"\n    ;;\nesac\ncase $CXXFLAGS in\n  *-fcoverage*)\n    configure_flags=\"$configure_flags --enable-code-coverage\"\n    ;;\nesac\n\n# Use libstdc++, not libc++, since the base image's prebuild libraries require\n# libstdc++.\nexport CXXFLAGS=\"$CXXFLAGS -stdlib=libstdc++\"\n\n# Clear CFLAGS and CXXFLAGS during configure tests so configure won't try to\n# link with -fsanitize=fuzz.\nCFLAGS= CXXFLAGS= ./configure --disable-silent-rules --enable-fuzzing --enable-static-libraries $configure_flags\n\nn=$(nproc)\nmake -j$n CFLAGS+=\"$CFLAGS\" CXXFLAGS+=\"$CXXFLAGS\"\n\ncd src/fuzz\n\nmake -j$n CFLAGS+=\"$CFLAGS\" CXXFLAGS+=\"$CXXFLAGS\"\n\nfor fuzzer in *_fuzzer; do\n  cp $fuzzer $OUT\n\n  corpus=${fuzzer%_fuzzer}_corpus\n  if [ -d $corpus ]; then\n    zip -j $OUT/${fuzzer}_seed_corpus.zip $corpus/*\n  fi\ndone\n"
    },
    "mosquitto": {
        "name": "mosquitto",
        "language": "c",
        "homepage": "https://mosquitto.org/",
        "main_repo": "https://github.com/eclipse/mosquitto",
        "primary_contact": "roger@atchoo.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://mosquitto.org/\"\nlanguage: c\nprimary_contact: \"roger@atchoo.org\"\nauto_ccs:\n - \"security@eclipse.org\"\n - \"rogerlight@gmail.com\"\nsanitizers:\n - address\n - memory:\n    experimental: True\n - undefined\nmain_repo: 'https://github.com/eclipse/mosquitto'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Run build script from the mosquitto repo\n./fuzzing/scripts/oss-fuzz-build.sh\n"
    },
    "mp4parse-rust": {
        "name": "mp4parse-rust",
        "language": "rust",
        "homepage": "https://github.com/mozilla/mp4parse-rust",
        "main_repo": "https://github.com/mozilla/mp4parse-rust",
        "primary_contact": "mgregan@mozilla.com",
        "vendor_ccs": [
            "media-alerts@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/mozilla/mp4parse-rust\"\nprimary_contact: \"mgregan@mozilla.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nvendor_ccs:\n- \"media-alerts@mozilla.com\"\n- \"twsmith@mozilla.com\"\nmain_repo: 'https://github.com/mozilla/mp4parse-rust'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Note: This project creates Rust fuzz targets exclusively\nPROJECT_DIR=$SRC/mp4parse-rust\ncd $PROJECT_DIR/mp4parse_capi/fuzz && cargo fuzz build -O --debug-assertions\n\n# collect avif files\nmkdir $PROJECT_DIR/avif_corpus\nfind $PROJECT_DIR/mp4parse -type f -name '*.avif' -exec cp '{}' $PROJECT_DIR/avif_corpus \\;\n\n# collect mp4 files\nmkdir $PROJECT_DIR/mp4_corpus\nfind $PROJECT_DIR/mp4parse/tests -type f -name '*.mp4' -exec cp '{}' $PROJECT_DIR/mp4_corpus \\;\nfind $PROJECT_DIR/mp4parse_capi/tests/ -type f -name '*.mp4' -exec cp '{}' $PROJECT_DIR/mp4_corpus \\;\n\nFUZZ_TARGET_OUTPUT_DIR=$PROJECT_DIR/mp4parse_capi/fuzz/target/x86_64-unknown-linux-gnu/release\nfor f in $SRC/mp4parse-rust/mp4parse_capi/fuzz/fuzz_targets/*.rs\ndo\n    FUZZ_TARGET_NAME=$(basename ${f%.*})\n    cp $FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT/\n    cp $PROJECT_DIR/mp4parse_capi/fuzz/mp4.dict $OUT/$FUZZ_TARGET_NAME.dict\n    cp $SRC/default.options $OUT/$FUZZ_TARGET_NAME.options\n    zip -jr $OUT/${FUZZ_TARGET_NAME}_seed_corpus.zip $PROJECT_DIR/${FUZZ_TARGET_NAME}_corpus/\ndone\n"
    },
    "mp4san": {
        "name": "mp4san",
        "language": "rust",
        "homepage": "https://github.com/signalapp/mp4san",
        "main_repo": "https://github.com/signalapp/mp4san",
        "primary_contact": "usual.beach5937@jessacake.com",
        "vendor_ccs": [
            "security@signal.org"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/signalapp/mp4san\"\nlanguage: rust\nprimary_contact: \"usual.beach5937@jessacake.com\"\nmain_repo: \"https://github.com/signalapp/mp4san\"\nauto_ccs:\n  - \"jrose@signal.org\"\n  - \"ehren@signal.org\"\nvendor_ccs:\n  - \"security@signal.org\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nPROJECT_DIR=$SRC/mp4san\n\nfor crate_dir in mp4san webpsan; do\n    FUZZ_DIR=$PROJECT_DIR/$crate_dir/fuzz\n    cd $FUZZ_DIR && cargo fuzz build -O --debug-assertions\n\n    FUZZ_INPUT_DIR=$FUZZ_DIR/input\n\n    FUZZ_TARGET_OUTPUT_DIR=$FUZZ_DIR/target/x86_64-unknown-linux-gnu/release/\n    for fuzz_target in $FUZZ_DIR/fuzz_targets/*.rs\n    do\n        FUZZ_TARGET_NAME=$(basename ${fuzz_target%.*})\n        OUT_FUZZ_TARGET_NAME=$crate_dir-$FUZZ_TARGET_NAME\n        cp $FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT/$OUT_FUZZ_TARGET_NAME\n        cat $FUZZ_DIR/*.dict > $OUT/$OUT_FUZZ_TARGET_NAME.dict\n        zip -jr $OUT/${OUT_FUZZ_TARGET_NAME}_seed_corpus.zip $FUZZ_INPUT_DIR/\n    done\ndone\n"
    },
    "mpg123": {
        "name": "mpg123",
        "language": "c++",
        "homepage": "https://www.mpg123.de",
        "main_repo": "https://github.com/dreamerc/mpg123",
        "primary_contact": "maintainer@mpg123.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.mpg123.de\"\nlanguage: c++\nprimary_contact: \"maintainer@mpg123.org\"\nmain_repo: \"https://github.com/dreamerc/mpg123\"\nsanitizers:\n  - address\n  - undefined\n  - memory\n\nlabels:\n  read_fuzzer:\n    - sundew\n  decode_fuzzer:\n    - sundew\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd mpg123\n./configure --prefix=$WORK --enable-static\nmake -j$(nproc)\nmake install\npopd\n\n$CC $CXXFLAGS read_fuzzer.c -I$WORK/include $WORK/lib/libmpg123.a \\\n  $LIB_FUZZING_ENGINE -lc++ -o $OUT/read_fuzzer\n\n$CXX $CXXFLAGS decode_fuzzer.cc -I$WORK/include $WORK/lib/libmpg123.a \\\n  $LIB_FUZZING_ENGINE -o $OUT/decode_fuzzer\n"
    },
    "mpv": {
        "name": "mpv",
        "language": "c",
        "homepage": "https://github.com/mpv-player/mpv",
        "main_repo": "https://github.com/mpv-player/mpv",
        "primary_contact": "kasper93@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/mpv-player/mpv\"\nmain_repo: \"https://github.com/mpv-player/mpv\"\nlanguage: c\nprimary_contact: \"kasper93@gmail.com\"\nauto_ccs:\n  - \"jeebjp@gmail.com\"\narchitectures:\n  - x86_64\n  - i386\nsanitizers:\n  - address\n  - memory\n  - undefined\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nselective_unpack: true\ncoverage_extra_args: >\n  -ignore-filename-regex=mpv/subprojects/.*\n  -ignore-filename-regex=mpv/build/subprojects/.*\n  -ignore-filename-regex=ffmpeg/.*\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nif [[ \"$ARCHITECTURE\" == i386 ]]; then\n  export PKG_CONFIG_PATH=/usr/local/lib/i386-linux-gnu/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig\n  LIBDIR='lib/i386-linux-gnu'\n  FFMPEG_BUILD_ARGS='--arch=\"i386\" --cpu=\"i386\" --disable-inline-asm'\n  RUST_TARGET='i686-unknown-linux-gnu'\n  rustup target add $RUST_TARGET\nelse\n  LIBDIR='lib/x86_64-linux-gnu'\n  FFMPEG_BUILD_ARGS=''\n  RUST_TARGET='x86_64-unknown-linux-gnu'\n  rustup target add $RUST_TARGET\nfi\n\nexport RUSTC=\"rustc --target=$RUST_TARGET\"\n\nexport FUZZ_INTROSPECTOR_CONFIG=$SRC/fuzz_introspector_exclusion.config\ncat > $FUZZ_INTROSPECTOR_CONFIG <<EOF\nFILES_TO_AVOID\nffmpeg\nmpv/subprojects\nmpv/build/subprojects\nEOF\n\npushd $SRC/ffmpeg\n./configure --cc=$CC --cxx=$CXX --ld=\"$CXX $CXXFLAGS\" \\\n            --enable-{gpl,nonfree} \\\n            --disable-{asm,bsfs,doc,encoders,filters,muxers,network,postproc,programs,shared} \\\n            --enable-filter={sine,yuvtestsrc} \\\n            --pkg-config-flags=\"--static\" \\\n            $FFMPEG_BUILD_ARGS\nmake -j`nproc`\nmake install\npopd\n\n# The option `-fuse-ld=gold` can't be passed via `CFLAGS` or `CXXFLAGS` because\n# Meson injects `-Werror=ignored-optimization-argument` during compile tests.\n# Remove the `-fuse-ld=` and let Meson handle it.\n# https://github.com/mesonbuild/meson/issues/6377#issuecomment-575977919\nif [[ \"$CFLAGS\" == *\"-fuse-ld=gold\"* ]]; then\n    export CFLAGS=\"${CFLAGS//-fuse-ld=gold/}\"\n    export CC_LD=gold\nfi\nif [[ \"$CXXFLAGS\" == *\"-fuse-ld=gold\"* ]]; then\n    export CXXFLAGS=\"${CXXFLAGS//-fuse-ld=gold/}\"\n    export CXX_LD=gold\nfi\n\npushd $SRC/mpv\nsed -i -e \"/^\\s*flags += \\['-fsanitize=address,undefined,fuzzer', '-fno-omit-frame-pointer'\\]/d; \\\n          s|^\\s*link_flags += \\['-fsanitize=address,undefined,fuzzer', '-fno-omit-frame-pointer'\\]| \\\n          link_flags += \\['$LIB_FUZZING_ENGINE'\\]|\" meson.build\nmkdir subprojects -p\nmeson wrap install expat\nmeson wrap install fontconfig\nmeson wrap install freetype2\nmeson wrap install fribidi\nmeson wrap install harfbuzz\nmeson wrap install lcms2\nmeson wrap install uchardet\ncat <<EOF > subprojects/libplacebo.wrap\n[wrap-git]\nurl = https://github.com/haasn/libplacebo\nrevision = master\ndepth = 1\nclone-recursive = true\nEOF\ncat <<EOF > subprojects/libass.wrap\n[wrap-git]\nurl = https://github.com/libass/libass\nrevision = master\ndepth = 1\nEOF\nmeson setup build -Dbackend_max_links=4 -Ddefault_library=static -Dprefer_static=true \\\n                  -Dfuzzers=true -Dlibmpv=true -Dcplayer=false -Dgpl=true \\\n                  -Duchardet=enabled -Dlcms2=enabled -Dtests=false \\\n                  -Dfreetype2:harfbuzz=disabled -Dfreetype2:zlib=disabled -Dfreetype2:png=disabled \\\n                  -Dharfbuzz:tests=disabled -Dharfbuzz:introspection=disabled -Dharfbuzz:docs=disabled \\\n                  -Dharfbuzz:utilities=disabled -Dfontconfig:doc=disabled -Dfontconfig:nls=disabled \\\n                  -Dfontconfig:tests=disabled -Dfontconfig:tools=disabled -Dfontconfig:cache-build=disabled \\\n                  -Dfribidi:deprecated=false -Dfribidi:docs=false -Dfribidi:bin=false -Dfribidi:tests=false \\\n                  -Dlibplacebo:lcms=enabled -Dlibplacebo:demos=false \\\n                  -Dlcms2:jpeg=disabled -Dlcms2:tiff=disabled \\\n                  -Dlibass:fontconfig=enabled -Dlibass:asm=disabled \\\n                  -Dc_link_args=\"$CXXFLAGS -lc++\" -Dcpp_link_args=\"$CXXFLAGS\" \\\n                  --libdir $LIBDIR\nmeson compile -C build fuzzers\n\nfind ./build/fuzzers -maxdepth 1 -type f -name 'fuzzer_*' -exec mv {} \"$OUT\" \\; -exec echo \"{} -> $OUT\" \\;\n\nrsync --no-compress -av rsync://samples.ffmpeg.org/samples/Matroska $SRC/matroska\nzip -0 -r $OUT/fuzzer_loadfile_mkv_seed_corpus.zip $SRC/matroska -i '*.mkv' '*.mka'\n"
    },
    "mrab-regex": {
        "name": "mrab-regex",
        "language": "python",
        "homepage": "https://github.com/mrabarnett/mrab-regex",
        "main_repo": "https://github.com/mrabarnett/mrab-regex",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/mrabarnett/mrab-regex\nlanguage: python\nmain_repo: https://github.com/mrabarnett/mrab-regex\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Compile native lib with sanitizers\npython3 setup.py install\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "mruby": {
        "name": "mruby",
        "language": "c++",
        "homepage": "https://www.mruby.org/",
        "main_repo": "https://github.com/mruby/mruby",
        "primary_contact": "yukihiro@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://www.mruby.org/\nlanguage: c++\nprimary_contact: \"yukihiro@gmail.com\"\nauto_ccs:\n  - \"bshas3@gmail.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/mruby/mruby'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Instrument mruby\n(\ncd $SRC/mruby\nexport LD=$CC\nexport LDFLAGS=\"$CFLAGS\"\nrake -m\n\n# build fuzzers\nFUZZ_TARGET=$SRC/mruby/oss-fuzz/mruby_fuzzer.c\nname=$(basename $FUZZ_TARGET .c)\n$CC -c $CFLAGS -Iinclude \\\n     ${FUZZ_TARGET} -o $OUT/${name}.o\n$CXX $CXXFLAGS $OUT/${name}.o $LIB_FUZZING_ENGINE -lm \\\n    $SRC/mruby/build/host/lib/libmruby.a -o $OUT/${name}\nrm -f $OUT/${name}.o\n)\n\n# Construct options files\ncat > $SRC/mruby/oss-fuzz/config/mruby_fuzzer.options <<EOF\n[libfuzzer]\ndict = mruby.dict\nonly_ascii = 1\nEOF\ncp $SRC/mruby/oss-fuzz/config/mruby_fuzzer.options $SRC/mruby/oss-fuzz/config/mruby_proto_fuzzer.options\n\n# Build proto fuzzer: ASan and UBSan\nif [[ $CFLAGS != *sanitize=memory* ]]; then\n    PROTO_FUZZ_TARGET=$SRC/mruby/oss-fuzz/mruby_proto_fuzzer.cpp\n    PROTO_CONVERTER=$SRC/mruby/oss-fuzz/proto_to_ruby.cpp\n    rm -rf $SRC/mruby/genfiles\n    mkdir $SRC/mruby/genfiles\n    $SRC/LPM/external.protobuf/bin/protoc --proto_path=$SRC/mruby/oss-fuzz ruby.proto --cpp_out=$SRC/mruby/genfiles\n    $CXX -c $CXXFLAGS $SRC/mruby/genfiles/ruby.pb.cc -DNDEBUG -o $SRC/mruby/genfiles/ruby.pb.o -I $SRC/LPM/external.protobuf/include\n    $CXX -I $SRC/mruby/include -I $SRC/LPM/external.protobuf/include $CXXFLAGS $PROTO_FUZZ_TARGET $SRC/mruby/genfiles/ruby.pb.o $PROTO_CONVERTER \\\n      -I $SRC/mruby/genfiles \\\n      -I $SRC/libprotobuf-mutator \\\n      -I $SRC/mruby/include -lz -lm \\\n      $SRC/LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n      $SRC/LPM/src/libprotobuf-mutator.a \\\n      -Wl,--start-group $SRC/LPM/external.protobuf/lib/lib*.a -Wl,--end-group \\\n      $SRC/mruby/build/host/lib/libmruby.a \\\n      $LIB_FUZZING_ENGINE \\\n      -o $OUT/mruby_proto_fuzzer\n\n    # Copy config\n    cp $SRC/mruby/oss-fuzz/config/mruby_proto_fuzzer.options $OUT\nfi\n\n# dict and config\ncp $SRC/mruby/oss-fuzz/config/mruby.dict $OUT\ncp $SRC/mruby/oss-fuzz/config/mruby_fuzzer.options $OUT\n\n# seeds\nzip -rq $OUT/mruby_fuzzer_seed_corpus $SRC/mruby_seeds\n"
    },
    "ms-tpm-20-ref": {
        "name": "ms-tpm-20-ref",
        "language": "c",
        "homepage": "https://github.com/microsoft/ms-tpm-20-ref",
        "main_repo": "https://github.com/microsoft/ms-tpm-20-ref",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://github.com/microsoft/ms-tpm-20-ref\nlanguage: c\nmain_repo: https://github.com/microsoft/ms-tpm-20-ref\nauto_ccs:\n  - \"tamas.k.lengyel@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\ncd ms-tpm-20-ref/TPMCmd\n./bootstrap\n./configure --enable-libfuzzer\nmake\ncp fuzzer/tpm_cmd $OUT\ncp $SRC/tpm_cmd.options $OUT\ncp $SRC/tpm2-command-corpus/tpm_cmd_seed_corpus.zip $OUT\n"
    },
    "msal": {
        "name": "msal",
        "language": "python",
        "homepage": "https://github.com/AzureAD/microsoft-authentication-library-for-python",
        "main_repo": "https://github.com/AzureAD/microsoft-authentication-library-for-python",
        "primary_contact": "rayluo@microsoft.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/AzureAD/microsoft-authentication-library-for-python\nlanguage: python\nmain_repo: https://github.com/AzureAD/microsoft-authentication-library-for-python\nprimary_contact: rayluo@microsoft.com\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install -r ./requirements.txt\npip3 install .\n\n# Build fuzzers in $OUT.\ncd $SRC\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "msgpack-c": {
        "name": "msgpack-c",
        "language": "c++",
        "homepage": "https://msgpack.org/",
        "main_repo": "https://github.com/msgpack/msgpack-c.git",
        "primary_contact": "redboltz@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://msgpack.org/\"\nlanguage: c++\nprimary_contact: \"redboltz@gmail.com\"\nauto_ccs:\n  - nobu.k.jp@gmail.com\n  - chriswwolfe@gmail.com\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/msgpack/msgpack-c.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfor f in $SRC/msgpack-c/fuzz/*_fuzzer.cpp; do\n    # NOTE(derwolfe): the naming scheme for fuzzers and seed corpora is\n    # fuzzer = something_something_fuzzer.cpp\n    # seed corpus = something_something_fuzzer_seed_corpus\n    fuzzer=$(basename \"$f\" .cpp)\n    $CXX $CXXFLAGS -std=c++11 -Iinclude -I\"$SRC/msgpack-c/include\" \\\n         \"$f\" -o \"$OUT/${fuzzer}\" \\\n         $LIB_FUZZING_ENGINE\n\n    if [ -d \"$SRC/msgpack-c/fuzz/${fuzzer}_seed_corpus\" ]; then\n        zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"$SRC/msgpack-c/fuzz/${fuzzer}_seed_corpus/\"\n    fi\ndone\n"
    },
    "msgpack-python": {
        "name": "msgpack-python",
        "language": "python",
        "homepage": "https://github.com/msgpack/msgpack-python",
        "main_repo": "https://github.com/msgpack/msgpack-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/msgpack/msgpack-python\nlanguage: python\nmain_repo: https://github.com/msgpack/msgpack-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nmake cython\npython3 -m pip install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "msquic": {
        "name": "msquic",
        "language": "c",
        "homepage": "https://github.com/microsoft/msquic",
        "main_repo": "https://github.com/microsoft/msquic.git",
        "primary_contact": "msquicinfra@microsoft.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/microsoft/msquic\"\r\nlanguage: c\r\nprimary_contact: \"msquicinfra@microsoft.com\"\r\nauto_ccs:\r\n  - \"daikiaminaka@microsoft.com\"\r\n  - \"anrossi@microsoft.com\"\r\n  - \"maolson@microsoft.com\"\r\n  - \"huanyi@microsoft.com\"\r\n  - \"nibanks@microsoft.com\"\r\nfuzzing_engines:\r\n  - libfuzzer\r\nsanitizers:\r\n  - address\r\n  - undefined\r\nmain_repo: 'https://github.com/microsoft/msquic.git'\r\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Temporary workaround for clang-18\nexport CFLAGS=\"$CFLAGS     -Wno-error=invalid-unevaluated-string\"\nexport CXXFLAGS=\"$CXXFLAGS -Wno-error=invalid-unevaluated-string\"\n\npwsh ./scripts/build.ps1 -Static -DisableTest -DisablePerf -DisableLogs -Parallel 1\n\ncd $SRC/msquic/src/fuzzing\n\n$CXX $CXXFLAGS -DCX_PLATFORM_LINUX -DQUIC_TEST_APIS \\\n    -I/src/msquic/src/test \\\n    -I/src/msquic/src/inc \\\n    -I/src/msquic/src/generated/common \\\n    -I/src/msquic/src/generated/linux \\\n    -I/src/msquic/build/linux/x64_openssl/_deps/opensslquic-build/openssl/include \\\n    -isystem /src/msquic/submodules/googletest/googletest/include \\\n    -isystem /src/msquic/submodules/googletest/googletest \\\n    -c fuzz.cc -o fuzz.o\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz.o -o $OUT/fuzz \\\n    /src/msquic/artifacts/bin/linux/x64_Debug_openssl/libmsquic.a\n\ncd $SRC\n\n$CXX $CXXFLAGS -DCX_PLATFORM_LINUX -DQUIC_TEST_APIS -DFUZZING -DQUIC_BUILD_STATIC \\\n    -I/src/msquic/src/test \\\n    -I/src/msquic/src/inc \\\n    -I/src/msquic/src/generated/common \\\n    -I/src/msquic/src/generated/linux \\\n    -I/src/msquic/build/linux/x64_openssl/_deps/opensslquic-build/openssl/include \\\n    -isystem /src/msquic/submodules/googletest/googletest/include \\\n    -isystem /src/msquic/submodules/googletest/googletest \\\n    -c ./msquic/src/tools/spin/spinquic.cpp -o spinquic.o\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE spinquic.o -o $OUT/spinquic \\\n    /src/msquic/artifacts/bin/linux/x64_Debug_openssl/libmsquic.a\n"
    },
    "mtail": {
        "name": "mtail",
        "language": "go",
        "homepage": "https://github.com/google/mtail",
        "main_repo": "https://github.com/google/mtail",
        "primary_contact": "jaq@spacepants.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://github.com/google/mtail\nprimary_contact: jaq@spacepants.org\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nlanguage: go\nmain_repo: 'https://github.com/google/mtail'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/google/mtail/internal/runtime Fuzz vm-fuzzer\n# Make the dictionary and seed corpus.\nmake --debug $OUT/vm-fuzzer.dict $OUT/vm-fuzzer_seed_corpus.zip\n"
    },
    "muduo": {
        "name": "muduo",
        "language": "c++",
        "homepage": "https://github.com/chenshuo/muduo",
        "main_repo": "https://github.com/chenshuo/muduo",
        "primary_contact": "chenshuo@chenshuo.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/chenshuo/muduo\"\nlanguage: c++\nprimary_contact: \"chenshuo@chenshuo.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: \"https://github.com/chenshuo/muduo\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed -i '34 a $ENV{CXXFLAGS}' CMakeLists.txt\nmkdir -p build-dir && cd build-dir\ncmake -DCMAKE_BUILD_TYPE=\"release\" -DMUDUO_BUILD_EXAMPLES=OFF \\\n      ..\nmake -j$(nproc)\n\n$CXX $CXXFLAGS -I/src/muduo \\\n\t-o muduo_http_fuzzer.o \\\n    -c $SRC/muduo_http_fuzzer.cpp\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE \\\n\tmuduo_http_fuzzer.o \\\n    -o $OUT/muduo_http_fuzzer \\\n\t./lib/libmuduo_http.a \\\n\t./lib/libmuduo_net.a \\\n\t./lib/libmuduo_base.a \n"
    },
    "multidict": {
        "name": "multidict",
        "language": "python",
        "homepage": "https://github.com/aio-libs/multidict",
        "main_repo": "https://github.com/aio-libs/multidict",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/aio-libs/multidict\nmain_repo: https://github.com/aio-libs/multidict\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Compile native modules using sanitizers\npython3 ./setup.py install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "multierr": {
        "name": "multierr",
        "language": "go",
        "homepage": "https://github.com/uber-go/multierr",
        "main_repo": "https://github.com/uber-go/multierr",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/uber-go/multierr\"\nlanguage: go\nmain_repo: \"https://github.com/uber-go/multierr\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package multierr\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer go.uber.org/multierr FuzzCombine FuzzCombine\n"
    },
    "muparser": {
        "name": "muparser",
        "language": "c++",
        "homepage": "https://beltoforion.de/article.php?a=muparser",
        "main_repo": "https://github.com/beltoforion/muparser.git",
        "primary_contact": "equinox.ib@googlemail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://beltoforion.de/article.php?a=muparser\"\nlanguage: c++\nprimary_contact: \"equinox.ib@googlemail.com\"\nauto_ccs:\n    - \"zhichengcai@google.com\"\nsanitizers:\n    - address\n    - undefined\nmain_repo: 'https://github.com/beltoforion/muparser.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nCFLAGS=\"${CFLAGS} -fno-sanitize=integer-divide-by-zero,float-divide-by-zero\"\nCXXFLAGS=\"${CXXFLAGS} -fno-sanitize=integer-divide-by-zero,float-divide-by-zero\"\n\n# build project\ncmake . -DBUILD_SHARED_LIBS=OFF  -DENABLE_OPENMP=OFF\nmake -j$(nproc)\n\n# install\nmake install\nldconfig\n\n# build fuzzers\nMU_CXXFLAGS=$(pkg-config muparser --cflags)\nMU_LIBS=$(pkg-config muparser --libs)\n\n$CXX -std=c++11 $CXXFLAGS -I. \\\n     $MU_CXXFLAGS $MU_LIBS \\\n     $SRC/set_eval_fuzzer.cc -o $OUT/set_eval_fuzzer \\\n     $LIB_FUZZING_ENGINE libmuparser.a\n"
    },
    "mupdf": {
        "name": "mupdf",
        "language": "c++",
        "homepage": "https://www.mupdf.com",
        "main_repo": "git://git.ghostscript.com/mupdf.git",
        "primary_contact": "tor.andersson@artifex.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "main_repo: git://git.ghostscript.com/mupdf.git\nhomepage: \"https://www.mupdf.com\"\nlanguage: c++\nprimary_contact: tor.andersson@artifex.com\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\nauto_ccs:\n  - jonathan@titanous.com\n  - sebastian.rasmussen@artifex.com\n  - julians.artifex@gmail.com\n  - ken.sharp@artifex.com\n  - robin.watts@artifex.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# supp_size is unused in harfbuzz so we will avoid it being unused.\nsed -i 's/supp_size;/supp_size;(void)(supp_size);/g' ./thirdparty/harfbuzz/src/hb-subset-cff1.cc\n\nLDFLAGS=\"$CXXFLAGS\" make -j$(nproc) HAVE_GLUT=no build=debug OUT=$WORK \\\n    $WORK/libmupdf-third.a $WORK/libmupdf.a\nfuzz_target=pdf_fuzzer\n\n$CXX $CXXFLAGS -std=c++11 -Iinclude \\\n    $SRC/pdf_fuzzer.cc -o $OUT/$fuzz_target \\\n    $LIB_FUZZING_ENGINE $WORK/libmupdf.a $WORK/libmupdf-third.a\n\nmv $SRC/{*.zip,*.dict,*.options} $OUT\n\nif [ ! -f \"${OUT}/${fuzz_target}_seed_corpus.zip\" ]; then\n  echo \"missing seed corpus\"\n  exit 1\nfi\n\nif [ ! -f \"${OUT}/${fuzz_target}.dict\" ]; then\n  echo \"missing dictionary\"\n  exit 1\nfi\n\nif [ ! -f \"${OUT}/${fuzz_target}.options\" ]; then\n  echo \"missing options\"\n  exit 1\nfi\n"
    },
    "mutagen": {
        "name": "mutagen",
        "language": "python",
        "homepage": "https://mutagen.readthedocs.io",
        "main_repo": "https://github.com/quodlibet/mutagen",
        "primary_contact": "reiter.christoph@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://mutagen.readthedocs.io\"\nmain_repo: \"https://github.com/quodlibet/mutagen\"\nlanguage: python\nprimary_contact: \"reiter.christoph@gmail.com\"\nauto_ccs:\n  - \"julien.voisin@dustri.org\"\n  - \"phw@uploadedlobster.com\"\n  - \"ph.wolfer@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\nzip -j $OUT/fuzz_parser_seed_corpus.zip tests/data/*\n"
    },
    "mvel": {
        "name": "mvel",
        "language": "jvm",
        "homepage": "https://github.com/mvel/mvel/",
        "main_repo": "https://github.com/mvel/mvel/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/mvel/mvel/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/mvel/mvel/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=mvel\nPROJECT_GROUP_ID=org.mvel\nPROJECT_ARTIFACT_ID=mvel2\nMAIN_REPOSITORY=https://github.com/mvel/mvel/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -Denforcer.skip=true -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent/fuzz-targets -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n--disabled_hooks=com.code_intelligence.jazzer.sanitizers.ExpressionLanguageInjection:com.code_intelligence.jazzer.sanitizers.RegexInjection \\\n  \\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "mxj": {
        "name": "mxj",
        "language": "go",
        "homepage": "https://github.com/clbanning/mxj",
        "main_repo": "https://github.com/clbanning/mxj",
        "primary_contact": null,
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/clbanning/mxj\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/clbanning/mxj\"\nvendor_ccs:\n  - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif ! [[ -f go.mod ]]; then\n  go mod init mxj\nfi\n\ncompile_go_fuzzer . FuzzMapXml  fuzz_map_xml gofuzz\n"
    },
    "myanmar-tools": {
        "name": "myanmar-tools",
        "language": "c++",
        "homepage": "https://github.com/googlei18n/myanmar-tools/",
        "main_repo": "https://github.com/google/myanmar-tools.git",
        "primary_contact": "sffc@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/googlei18n/myanmar-tools/\"\nlanguage: c++\nprimary_contact: \"sffc@google.com\"\nauto_ccs:\n  - \"ccornelius@google.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n# - memory\ncoverage_extra_args: -ignore-filename-regex=.*/\\.hunter/.*\nmain_repo: 'https://github.com/google/myanmar-tools.git'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/myanmar-tools/clients/cpp\nmkdir build\ncd build\ncmake -DCMAKE_C_COMPILER=\"$CC\" -DCMAKE_CXX_COMPILER=\"$CXX\" \\\n    -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\" \\\n    -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..\nmake all\n\n# Note: don't use the myanmartools_fuzz CMake target directly because we want\n# to link with LIB_FUZZING_ENGINE instead of the default fuzzer.\n$CXX $CXXFLAGS -std=c++11 -I../public -L. \\\n    ../zawgyi_detector_fuzz_target.cpp \\\n    -Wl,-Bstatic -lmyanmartools_static -lglog -lunwind -llzma -Wl,-Bdynamic \\\n    -o $OUT/zawgyi_detector_fuzz_target \\\n    $LIB_FUZZING_ENGINE\n"
    },
    "mybatis-3": {
        "name": "mybatis-3",
        "language": "jvm",
        "homepage": "https://github.com/mybatis/mybatis-3",
        "main_repo": "https://github.com/mybatis/mybatis-3",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/mybatis/mybatis-3\nmain_repo: https://github.com/mybatis/mybatis-3\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -DperformRelease=True org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"./target/mybatis-$CURRENT_VERSION.jar\" $OUT/mybatis.jar\n\nALL_JARS='mybatis.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\ncp -r $JAVA_HOME $OUT/\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  $JAVA_HOME/bin/javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  export JAVA_HOME=\\$this_dir/$(basename $JAVA_HOME)\n  export LD_LIBRARY_PATH=\"\\$JAVA_HOME/lib/server\":\\$this_dir\n  export PATH=\\$JAVA_HOME/bin:\\$PATH\n\n  \\$this_dir/jazzer_driver                          \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "mysql-connector-j": {
        "name": "mysql-connector-j",
        "language": "jvm",
        "homepage": "https://dev.mysql.com/doc/connector-j/8.0/en/",
        "main_repo": "https://github.com/mysql/mysql-connector-j",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://dev.mysql.com/doc/connector-j/8.0/en/\"\nlanguage: jvm\nmain_repo: \"https://github.com/mysql/mysql-connector-j\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\" \n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nANT_ARGS=\"-Dcom.mysql.cj.build.jdk=$(realpath $(dirname $(which javac))/..)\"\n\nALL_JARS=\"\"\n\npushd \"${SRC}/mysql-connector-j\"\n\t$ANT ${ANT_ARGS} dist\n\n\t#\n\t# build directory contains only the emited jar and the lib/ population,\n\t# all of which we depend on.\n\t#\n\tfind -name '*.jar' -exec cp {} ${OUT} \\;\n\tALL_JARS=\"${ALL_JARS} $(find . -name '*.jar' -exec basename {} \\;)\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n# copy the mysqld launcher to $OUT\ncp $SRC/entrypoint.sh $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# start mysql and setup it\n\\$(dirname \\\"\\$0\\\")/entrypoint.sh\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--disabled_hooks=\\\"com.code_intelligence.jazzer.sanitizers.SqlInjection\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "mysql-server": {
        "name": "mysql-server",
        "language": "c++",
        "homepage": "https://www.mysql.com",
        "main_repo": "https://github.com/mysql/mysql-server",
        "primary_contact": "secalert_us@oracle.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.mysql.com\"\nlanguage: c++\nprimary_contact: \"secalert_us@oracle.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\n  - \"christopher.alves@telecomnancy.net\"\n  - \"zouhair.janati-idrissi@telecomnancy.net\"\n  - \"julien.zhan@telecomnancy.net\"\n\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/mysql/mysql-server'\n",
        "build_sh": "\n#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd mysql-server\nmkdir build\ncd build\nif [[ $SANITIZER = *undefined* ]]; then\n    cmake .. -Dprotobuf_BUILD_SHARED_LIBS=OFF -DDOWNLOAD_BOOST=1 -DWITH_BOOST=. -DWITH_SSL=system -DFUZZING=1 -DCMAKE_INSTALL_PREFIX=$OUT/mysql -DWITH_UBSAN=1\nelse\n    cmake .. -Dprotobuf_BUILD_SHARED_LIBS=OFF -DDOWNLOAD_BOOST=1 -DWITH_BOOST=. -DWITH_SSL=system -DFUZZING=1 -DCMAKE_INSTALL_PREFIX=$OUT/mysql\nfi\nmake -j$(nproc) install\nmv $OUT/mysql/bin/fuzz* $OUT/\ncp ../fuzz/fuzz*.options $OUT/\ncp ../fuzz/fuzz*.dict $OUT/\ncp ../fuzz/init*.sql $OUT/\n\nrm -Rf $OUT/mysql/data\n$OUT/mysql/bin/mysqld --user=root --initialize-insecure --log-error-verbosity=5 --skip-ssl --datadir=$OUT/mysql/data --basedir=$OUT/mysql/\n"
    },
    "naga": {
        "name": "naga",
        "language": "rust",
        "homepage": "https://github.com/gfx-rs/naga",
        "main_repo": "https://github.com/gfx-rs/naga",
        "primary_contact": "jblandy@mozilla.com",
        "vendor_ccs": [
            "maxnair.dev@gmail.com",
            "jkratzer@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/gfx-rs/naga\"\nlanguage: rust\nmain_repo: \"https://github.com/gfx-rs/naga\"\nprimary_contact: \"jblandy@mozilla.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nvendor_ccs:\n  - maxnair.dev@gmail.com\n  - jkratzer@mozilla.com\n  - twsmith@mozilla.com\ncoverage_extra_args: >\n  -ignore-filename-regex=.*/rustc/.*\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncargo fuzz build -O\nfuzz_release=$SRC/wgpu/target/x86_64-unknown-linux-gnu/release\ncp $fuzz_release/spv_parser $OUT/\ncp $fuzz_release/wgsl_parser $OUT/\n"
    },
    "nanopb": {
        "name": "nanopb",
        "language": "c++",
        "homepage": "https://jpa.kapsi.fi/nanopb/",
        "main_repo": "https://github.com/nanopb/nanopb",
        "primary_contact": "jpa@npb.mail.kapsi.fi",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://jpa.kapsi.fi/nanopb/\"\nlanguage: c++\nprimary_contact: \"jpa@npb.mail.kapsi.fi\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/nanopb/nanopb'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build script is integrated to nanopb repository.\nsource $SRC/nanopb/tests/fuzztest/ossfuzz.sh\n\n"
    },
    "nats": {
        "name": "nats",
        "language": "go",
        "homepage": "https://github.com/nats-io/nats-server",
        "main_repo": "https://github.com/nats-io/nats-server",
        "primary_contact": "security@nats.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/nats-io/nats-server\"\nprimary_contact: \"security@nats.io\"\nauto_ccs :\n  - \"adam@adalogics.com\"\n  - \"wally@synadia.com\"\n  - \"derek@synadia.com\"\n  - \"tomasz@synadia.com\"\n  - \"neil@synadia.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/nats-io/nats-server'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/nats-io/nats-server/v2/conf Fuzz fuzz_conf\ncompile_go_fuzzer github.com/nats-io/nats-server/v2/server FuzzClient fuzz_client\n"
    },
    "nbclassic": {
        "name": "nbclassic",
        "language": "python",
        "homepage": "https://github.com/jupyter/nbclassic",
        "main_repo": "https://github.com/jupyter/nbclassic",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jupyter/nbclassic\nmain_repo: https://github.com/jupyter/nbclassic\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data $SRC/jsonschema_specifications/jsonschema_specifications/schemas:jsonschema_specifications/schemas --add-data /usr/local/lib/python3.10/site-packages/jupyter_events/schemas:jupyter_events/schemas\ndone\n"
    },
    "nbformat": {
        "name": "nbformat",
        "language": "python",
        "homepage": "https://github.com/jupyter/nbformat",
        "main_repo": "https://github.com/jupyter/nbformat",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jupyter/nbformat\nmain_repo: https://github.com/jupyter/nbformat\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "nccl": {
        "name": "nccl",
        "language": "c++",
        "homepage": "https://github.com/NVIDIA/nccl",
        "main_repo": "https://github.com/NVIDIA/nccl",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/NVIDIA/nccl\"\nlanguage: c++\nmain_repo: \"https://github.com/NVIDIA/nccl\"\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# CUDA does not support clang versions above 10.0. This should not affect the\n# target of the fuzzers, however, during build we still need to allow it to\n# compile with the OSS-Fuzz clang version.\nsed -i 's/-std=c++11 --expt-extended-lambda/-allow-unsupported-compiler -std=c++11 --expt-extended-lambda/g' ./makefiles/common.mk\n\nmake clean\nmake -j3 src.build\n\n$CXX $LIB_FUZZING_ENGINE $CXXFLAGS $SRC/fuzz_xml.cpp -o $OUT/fuzz_xml \\\n    -I./src/graph/ -I./src/include -I./build/include/ \\\n    -I/usr/local/cuda-11.0/targets/x86_64-linux/include/ \\\n    ./build/lib/libnccl_static.a \\\n    /usr/local/cuda-11.0/targets/x86_64-linux/lib/libcudart.so\n\ncp /usr/local/cuda-11.0/targets/x86_64-linux/lib/libcudart.so.11.0 $OUT/libcudart.so.11.0\ncp /usr/local/cuda-11.0/targets/x86_64-linux/lib/libcudart.so $OUT/libcudart.so\npatchelf --set-rpath '$ORIGIN/' $OUT/fuzz_xml\n"
    },
    "ndpi": {
        "name": "ndpi",
        "language": "c++",
        "homepage": "https://www.ntop.org/products/deep-packet-inspection/ndpi/",
        "main_repo": "https://github.com/ntop/nDPI.git",
        "primary_contact": "luca.deri@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.ntop.org/products/deep-packet-inspection/ndpi/\"\nlanguage: c++\nprimary_contact: \"luca.deri@gmail.com\"\nauto_ccs :\n  - \"p.antoine@catenacyber.fr\"\n  - \"nardi.ivan@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/ntop/nDPI.git'\n\n#Coverage report doesn't analyze custom mutator code (see https://github.com/google/oss-fuzz/issues/12143)\n# -> exclude it. Note that we keep including all the other third-parties code\ncoverage_extra_args: >\n  -ignore-filename-regex=src/lib/third_party/src/fuzz/.*\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbash -x ./ndpi/tests/ossfuzz.sh\n"
    },
    "neomutt": {
        "name": "neomutt",
        "language": "c++",
        "homepage": "https://neomutt.org",
        "main_repo": "https://github.com/neomutt/neomutt",
        "primary_contact": "joseph.bisch@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://neomutt.org\"\nlanguage: c++\nprimary_contact: \"joseph.bisch@gmail.com\"\nauto_ccs:\n  - \"richard.russon@gmail.com\"\n  - \"pietro.cerutti@gmail.com\"\nmain_repo: 'https://github.com/neomutt/neomutt'\nsanitizers:\n - address\n - undefined\nfuzzing_engines:\n - afl\n - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./configure --fuzzing --disable-doc --disable-nls --disable-idn\nmake fuzz -j$(nproc)\ncp fuzz/address-fuzz $OUT/\n\ncd $SRC/corpus-address\ncp address-fuzz.options $OUT/\ncp address-fuzz.dict $OUT/\n\ncd corpus\nzip -q -r $OUT/address-fuzz_seed_corpus.zip .\n\n"
    },
    "neqo": {
        "name": "neqo",
        "language": "rust",
        "homepage": "https://github.com/mozilla/neqo",
        "main_repo": "https://github.com/mozilla/neqo.git",
        "primary_contact": "necko@mozilla.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/mozilla/neqo\"\nlanguage: rust\nprimary_contact: \"necko@mozilla.com\"\nauto_ccs:\n  - \"leggert@mozilla.com\"\n  - \"minden@mozilla.com\"\n  - \"kershaw@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/mozilla/neqo.git'\nfile_github_issue: true\n",
        "build_sh": null
    },
    "nestegg": {
        "name": "nestegg",
        "language": "c++",
        "homepage": "https://github.com/kinetiknz/nestegg",
        "main_repo": "https://github.com/kinetiknz/nestegg.git",
        "primary_contact": "mgregan@mozilla.com",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/kinetiknz/nestegg\"\nlanguage: c++\nprimary_contact: \"mgregan@mozilla.com\"\nfuzzing_engines:\n  - afl\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nvendor_ccs:\n  - \"twsmith@mozilla.com\"\nmain_repo: 'https://github.com/kinetiknz/nestegg.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$CC $CFLAGS -c -I./include src/nestegg.c\n$CXX $CXXFLAGS -o $OUT/fuzz -I./include nestegg.o test/fuzz.cc $LIB_FUZZING_ENGINE\n\n\nmkdir corpus/\n# copy libwebm test data\ncp -R ../libwebm/testing/testdata/*.webm corpus/\n# copy nestegg test data\ncp test/media/*.webm corpus/\nzip -rj0 $OUT/fuzz_seed_corpus.zip corpus/*.webm\n"
    },
    "net-snmp": {
        "name": "net-snmp",
        "language": "c++",
        "homepage": "http://www.net-snmp.org/",
        "main_repo": "git://git.code.sf.net/p/net-snmp/code",
        "primary_contact": "hardaker@users.sourceforge.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.net-snmp.org/\"\nlanguage: c++\nprimary_contact: \"hardaker@users.sourceforge.net\"\nauto_ccs:\n   - \"rstory@freesnmp.com\"\n   - \"fenner@gmail.com\"\n   - \"bvanassche@acm.org\"\n   - \"magfr@lysator.liu.se\"\n   - \"david@adalogics.com\"\nmain_repo: 'git://git.code.sf.net/p/net-snmp/code'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Globally disable leaks to let fuzzers continue.\nexport ASAN_OPTIONS=\"detect_leaks=0\"\n\n# Configure and build Net-SNMP and the fuzzers.\nexport CC CXX CFLAGS CXXFLAGS SRC WORK OUT LIB_FUZZING_ENGINE\nci/build.sh\n\n# Create dictionary and seeds\ncp $SRC/mib.dict $OUT/snmp_mib_fuzzer.dict\nzip $OUT/snmp_mib_fuzzer_seed_corpus.zip $SRC/net-snmp/mibs/*.txt\n"
    },
    "netaddr-py": {
        "name": "netaddr-py",
        "language": "python",
        "homepage": "https://github.com/netaddr/netaddr",
        "main_repo": "https://github.com/netaddr/netaddr",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/netaddr/netaddr\nlanguage: python\nmain_repo: https://github.com/netaddr/netaddr\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "netcdf": {
        "name": "netcdf",
        "language": "c++",
        "homepage": "https://www.unidata.ucar.edu/software/netcdf/docs/index.html",
        "main_repo": "https://github.com/Unidata/netcdf-c",
        "primary_contact": "wfisher@ucar.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.unidata.ucar.edu/software/netcdf/docs/index.html\"\nlanguage: c++\nprimary_contact: \"wfisher@ucar.edu\"\nauto_ccs:\n- \"p.antoine@catenacyber.fr\"\n- \"dmh@ucar.edu\"\n\nsanitizers:\n- address\n- undefined\nmain_repo: 'https://github.com/Unidata/netcdf-c'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CFLAGS=\"$CFLAGS -fPIC\"\nexport CXXFLAGS=\"$CXXFLAGS -fPIC\"\n\n# build project\nmkdir build\ncd build\ncmake -DBUILD_SHARED_LIBS=OFF -DENABLE_HDF5=OFF -DENABLE_DAP=OFF ..\nmake -j$(nproc)\ncp fuzz/fuzz* $OUT/\n"
    },
    "netdata": {
        "name": "netdata",
        "language": null,
        "homepage": "https://my-netdata.io",
        "main_repo": "https://github.com/netdata/netdata",
        "primary_contact": "costa@tsaousis.gr",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://my-netdata.io\"\nmain_repo: \"https://github.com/netdata/netdata\"\nprimary_contact: \"costa@tsaousis.gr\"\n",
        "build_sh": null
    },
    "nettle": {
        "name": "nettle",
        "language": "c++",
        "homepage": "https://www.lysator.liu.se/~nisse/nettle/",
        "main_repo": "https://git.lysator.liu.se/nettle/nettle",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.lysator.liu.se/~nisse/nettle/\"\nlanguage: c++\nprimary_contact: guidovranken@gmail.com\nauto_ccs:\n    - \"nisse@lysator.liu.se\"\nsanitizers:\n - address\n - undefined\n - memory\narchitectures:\n - x86_64\n - i386\nmain_repo: 'https://git.lysator.liu.se/nettle/nettle'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport LINK_FLAGS=\"\"\n\n# Not using OpenSSL\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NO_OPENSSL\"\n\n# Install Boost headers\n    cd $SRC/\n    tar jxf boost_1_84_0.tar.bz2\n    cd boost_1_84_0/\n    CFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\n    CFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\n    cp -R boost/ /usr/include/\n\n\n# Generate lookup tables. This only needs to be done once.\n    cd $SRC/cryptofuzz\n    python gen_repository.py\n\nif [[ $CFLAGS != *sanitize=memory* ]]\nthen\n    # Compile libgmp\n        cd $SRC/\n        lzip -d gmp-6.2.1.tar.lz\n        tar xf gmp-6.2.1.tar\n\n        cd gmp-6.2.1/\n        autoreconf -ivf\n        if [[ $CFLAGS != *-m32* ]]\n        then\n            ./configure --enable-maintainer-mode\n        else\n            setarch i386 ./configure --enable-maintainer-mode\n        fi\n        make -j$(nproc)\n        make install\n\n    # Compile Nettle (with libgmp)\n        mkdir $SRC/nettle-with-libgmp-install/\n        cp -R $SRC/nettle $SRC/nettle-with-libgmp/\n        cd $SRC/nettle-with-libgmp/\n        bash .bootstrap\n        export NETTLE_LIBDIR=`realpath ../nettle-with-libgmp-install`/lib\n        if [[ $CFLAGS != *sanitize=memory* ]]\n        then\n            ./configure --disable-documentation --disable-openssl --prefix=`realpath ../nettle-with-libgmp-install` --libdir=\"$NETTLE_LIBDIR\"\n        else\n            ./configure --disable-documentation --disable-openssl --disable-assembler --prefix=`realpath ../nettle-with-libgmp-install` --libdir=\"$NETTLE_LIBDIR\"\n        fi\n        make -j$(nproc)\n        make install\n\n        export LIBNETTLE_A_PATH=$NETTLE_LIBDIR/libnettle.a\n        export LIBHOGWEED_A_PATH=$NETTLE_LIBDIR/libhogweed.a\n        export NETTLE_INCLUDE_PATH=`realpath ../nettle-with-libgmp-install/include`\n        export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NETTLE\"\n        export LINK_FLAGS=\"$LINK_FLAGS /usr/local/lib/libgmp.a\"\n\n        # Compile Cryptofuzz Nettle module\n        cd $SRC/cryptofuzz/modules/nettle\n        make -f Makefile-hogweed -B\n\n    ##############################################################################\n    # Compile Botan\n        cd $SRC/botan\n        if [[ $CFLAGS != *-m32* ]]\n        then\n            ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\n        else\n            ./configure.py --cpu=x86_32 --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator --build-targets=static --without-documentation\n        fi\n        make -j$(nproc)\n\n        export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN\"\n        export LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\n        export BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\n\n        # Compile Cryptofuzz Botan module\n        cd $SRC/cryptofuzz/modules/botan\n        make -B\n\n    # Compile Cryptofuzz\n        cd $SRC/cryptofuzz\n        LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make -B -j$(nproc) >/dev/null\n\n        # Generate dictionary\n        ./generate_dict\n\n        # Copy fuzzer\n        cp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-nettle-with-libgmp\n        # Copy dictionary\n        cp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-nettle-with-libgmp.dict\n        # Copy seed corpus\n        cp $SRC/cryptofuzz-corpora/libressl_latest.zip $OUT/cryptofuzz-nettle-with-libgmp_seed_corpus.zip\nfi\n\n# Compile Nettle (with mini gmp)\n    mkdir $SRC/nettle-with-mini-gmp-install/\n    cp -R $SRC/nettle $SRC/nettle-with-mini-gmp/\n    cd $SRC/nettle-with-mini-gmp/\n    bash .bootstrap\n    export NETTLE_LIBDIR=`realpath ../nettle-with-mini-gmp-install`/lib\n    if [[ $CFLAGS != *sanitize=memory* ]]\n    then\n        ./configure --enable-mini-gmp --disable-documentation --disable-openssl --prefix=`realpath ../nettle-with-mini-gmp-install` --libdir=\"$NETTLE_LIBDIR\"\n    else\n        ./configure --enable-mini-gmp --disable-documentation --disable-openssl --disable-assembler --prefix=`realpath ../nettle-with-mini-gmp-install` --libdir=\"$NETTLE_LIBDIR\"\n    fi\n    make -j$(nproc)\n    make install\n\n    export LIBNETTLE_A_PATH=$NETTLE_LIBDIR/libnettle.a\n    export LIBHOGWEED_A_PATH=$NETTLE_LIBDIR/libhogweed.a\n    export NETTLE_INCLUDE_PATH=`realpath ../nettle-with-mini-gmp-install/include`\n    export LINK_FLAGS=\"\"\n    export CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NETTLE\"\n\n    # Compile Cryptofuzz Nettle module\n    cd $SRC/cryptofuzz/modules/nettle\n    make -f Makefile-hogweed -B\n\n# Compile Cryptofuzz\n    cd $SRC/cryptofuzz\n    LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\" make -B -j$(nproc) >/dev/null\n\n    # Generate dictionary\n    ./generate_dict\n\n    # Copy fuzzer\n    cp $SRC/cryptofuzz/cryptofuzz $OUT/cryptofuzz-nettle-with-mini-gmp\n    # Copy dictionary\n    cp $SRC/cryptofuzz/cryptofuzz-dict.txt $OUT/cryptofuzz-nettle-with-mini-gmp.dict\n    # Copy seed corpus\n    cp $SRC/cryptofuzz-corpora/libressl_latest.zip $OUT/cryptofuzz-nettle-with-mini-gmp_seed_corpus.zip\n"
    },
    "netty-tcnative": {
        "name": "netty-tcnative",
        "language": "jvm",
        "homepage": "https://netty.io/wiki/forked-tomcat-native.html",
        "main_repo": "https://github.com/netty/netty-tcnative.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://netty.io/wiki/forked-tomcat-native.html\"\nmain_repo: \"https://github.com/netty/netty-tcnative.git\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"david@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit apply $SRC/netty-patch.diff\n\nCFLAGS=\nCXXFLAGS=\n\nexport CXXFLAGS=\"$CXXFLAGS -std=c++14\"\n\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15 --update-snapshots\"\n$MVN clean package $MAVEN_ARGS\n\ncp openssl-dynamic/target/native-jar-work/META-INF/native/libnetty_tcnative_linux_x86_64.so $OUT\n\nBUILD_CLASSPATH=\nRUNTIME_CLASSPATH=\n\nfor JARFILE in $(find ./ -name *.jar)\ndo\n  cp $JARFILE $OUT/\n  BUILD_CLASSPATH=$BUILD_CLASSPATH$OUT/$(basename $JARFILE):\n  RUNTIME_CLASSPATH=$RUNTIME_CLASSPATH\\$this_dir/$(basename $JARFILE):\ndone\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH:$JAZZER_API_PATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  export this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n    \\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH \\\n    --target_class=$fuzzer_basename \\\n    --jvm_args=\\\"\\$mem_settings:-Djava.library.path=\\$this_dir\\\" \\\n    \\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "netty": {
        "name": "netty",
        "language": "jvm",
        "homepage": "https://netty.io/",
        "main_repo": "https://github.com/netty/netty.git",
        "primary_contact": "mr.chrisvest@gmail.com",
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://netty.io/\"\nlanguage: jvm\nmain_repo: \"https://github.com/netty/netty.git\"\nprimary_contact: \"mr.chrisvest@gmail.com\"\nauto_ccs:\n  - \"norman_maurer@apple.com\"\n  - \"t@motd.kr\"\n  - \"me@yawk.at\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nMVN_FLAGS=\"-DskipTests\"\nALL_JARS=\"\"\nLIBRARY_NAME=\"netty\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \".\"\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n  -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd \"${SRC}\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\t\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "networkmanager": {
        "name": "networkmanager",
        "language": "c",
        "homepage": "https://networkmanager.dev/",
        "main_repo": "https://gitlab.freedesktop.org/NetworkManager/NetworkManager.git",
        "primary_contact": "jvaclav@redhat.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://networkmanager.dev/\"\nmain_repo: \"https://gitlab.freedesktop.org/NetworkManager/NetworkManager.git\"\nlanguage: c\nprimary_contact: \"jvaclav@redhat.com\"\n",
        "build_sh": null
    },
    "networkx": {
        "name": "networkx",
        "language": "python",
        "homepage": "https://github.com/networkx/networkx",
        "main_repo": "https://github.com/networkx/networkx",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/networkx/networkx\nlanguage: python\nmain_repo: https://github.com/networkx/networkx\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython3 -m pip install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\nzip -jr $OUT/fuzz_graphml_seed_corpus.zip $SRC/prefuse/data/*.xml\n"
    },
    "nfstream": {
        "name": "nfstream",
        "language": "python",
        "homepage": "https://www.nfstream.org/",
        "main_repo": "https://github.com/nfstream/nfstream",
        "primary_contact": "aouinizied@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.nfstream.org/\"\nlanguage: python\nprimary_contact: \"aouinizied@gmail.com\"\nauto_ccs:\n  - \"aouinizied@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/nfstream/nfstream'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\npython3 -m pip install -U -r dev_requirements.txt\npython3 -m pip install -U  .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name '*_fuzzer.py'); do\n  compile_python_fuzzer $fuzzer --hidden-import=_cffi_backend\ndone\n\nzip -j $OUT/pcap_fuzzer_seed_corpus.zip tests/pcaps/*\n"
    },
    "nghttp2": {
        "name": "nghttp2",
        "language": "c++",
        "homepage": "https://nghttp2.org/",
        "main_repo": "https://github.com/nghttp2/nghttp2.git",
        "primary_contact": "tatsuhiro.t@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://nghttp2.org/\"\nlanguage: c++\nprimary_contact: \"tatsuhiro.t@gmail.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/nghttp2/nghttp2.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build\ncd build\ncmake -DENABLE_LIB_ONLY=ON -DBUILD_STATIC_LIBS=ON ../\nmake\nmake check\n\n$CXX $CXXFLAGS -std=c++11 -I../lib/includes -Ilib/includes -I../lib/ -I../tests/ \\\n    ../fuzz/fuzz_frames.cc -o $OUT/nghttp2_fuzzer_frames \\\n    tests/CMakeFiles/main.dir/nghttp2_test_helper.c.o \\\n    $LIB_FUZZING_ENGINE lib/libnghttp2.a\n\n$CXX $CXXFLAGS -std=c++11 -I../lib/includes -Ilib/includes -I../lib/ \\\n    ../fuzz/fuzz_target.cc -o $OUT/nghttp2_fuzzer \\\n    $LIB_FUZZING_ENGINE lib/libnghttp2.a\n\n$CXX $CXXFLAGS -std=c++11 -I../lib/includes -Ilib/includes -I../lib/ \\\n    ../fuzz/fuzz_target_fdp.cc -o $OUT/nghttp2_fuzzer_fdp \\\n    $LIB_FUZZING_ENGINE lib/libnghttp2.a\n\ncp $SRC/*.options $OUT\n\nzip -j $OUT/nghttp2_fuzzer_seed_corpus.zip ../fuzz/corpus/*/*\n"
    },
    "nginx": {
        "name": "nginx",
        "language": "c",
        "homepage": "http://nginx.org",
        "main_repo": "https://github.com/nginx/nginx",
        "primary_contact": "xim.andrew@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://nginx.org\"\nmain_repo: \"https://github.com/nginx/nginx\"\nlanguage: c\nprimary_contact: \"xim.andrew@gmail.com\"\nauto_ccs:\n  - pluknet@gmail.com\n  - david@adalogics.com\nsanitizers:\n  - address\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nhg import $SRC/add_fuzzers.diff --no-commit\n\ncp -r $SRC/fuzz src/\ncp $SRC/make_fuzzers auto/make_fuzzers\n\ncd src/fuzz\nrm -rf genfiles && mkdir genfiles && $SRC/LPM/external.protobuf/bin/protoc http_request_proto.proto --cpp_out=genfiles\ncd ../..\n\nauto/configure \\\n    --with-ld-opt=\"-Wl,--wrap=listen -Wl,--wrap=setsockopt -Wl,--wrap=bind -Wl,--wrap=shutdown -Wl,--wrap=connect -Wl,--wrap=getpwnam -Wl,--wrap=getgrnam -Wl,--wrap=chmod -Wl,--wrap=chown\" \\\n    --with-cc-opt='-DNGX_DEBUG_PALLOC=1' \\\n    --with-http_v2_module \nmake -f objs/Makefile fuzzers\n\ncp objs/*_fuzzer $OUT/\ncp $SRC/fuzz/*.dict $OUT/\n"
    },
    "ngolo-fuzzing-x": {
        "name": "ngolo-fuzzing-x",
        "language": "go",
        "homepage": "'https://github.com/catenacyber/ngolo-fuzzing",
        "main_repo": "https://github.com/catenacyber/ngolo-fuzzing",
        "primary_contact": "p.antoine@catenacyber.fr",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"'https://github.com/catenacyber/ngolo-fuzzing\"\nprimary_contact: \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/catenacyber/ngolo-fuzzing'\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# compile latest go from git\n(\ncd $SRC/goroot/src\n./make.bash\n)\nrm -Rf /root/.go/\nexport PATH=$PATH:$SRC/goroot/bin/\ngo install golang.org/x/tools/cmd/goimports@latest\n\ncompile_package () {\n    pkg=$1\n    pkg_flat=`echo $pkg | sed 's/\\//_/g' | sed 's/\\./x'_$repo'/'`\n    args=`cat $SRC/ngolo-fuzzing/x/args.txt | grep \"^$pkg_flat \" | cut -d\" \" -f2-`\n    $SRC/ngolo-fuzzing/ngolo-fuzzing $args $pkg fuzz_ng_$pkg_flat\n    # applies special python patcher if any\n    ls $SRC/ngolo-fuzzing/x/$pkg_flat.py && (\n        python3 $SRC/ngolo-fuzzing/x/$pkg_flat.py fuzz_ng_$pkg_flat/fuzz_ng.go > fuzz_ng_$pkg_flat/fuzz_ngp.go\n        mv fuzz_ng_$pkg_flat/fuzz_ngp.go fuzz_ng_$pkg_flat/fuzz_ng.go\n    )\n    (\n        cd fuzz_ng_$pkg_flat\n        $SRC/LPM/external.protobuf/bin/protoc --go_out=./ ngolofuzz.proto\n        mkdir cpp\n        $SRC/LPM/external.protobuf/bin/protoc --cpp_out=./cpp ngolofuzz.proto\n        $CXX -DNDEBUG -stdlib=libc++ -c -I . -I $SRC/LPM/external.protobuf/include cpp/ngolofuzz.pb.cc\n        $CXX $CXXFLAGS -c -Icpp -I $SRC/libprotobuf-mutator/ -I $SRC/LPM/external.protobuf/include $SRC/ngolo-fuzzing/lpm/ngolofuzz.cc\n    )\n    if [ \"$SANITIZER\" = \"coverage\" ]\n    then\n        (\n        cd fuzz_ng_$pkg_flat\n        compile_go_fuzzer . FuzzNG_unsure fuzz_ngo_$pkg_flat\n        )\n    else\n        (\n        cd fuzz_ng_$pkg_flat\n        compile_go_fuzzer . FuzzNG_unsure fuzz_ngo_$pkg_flat\n        rm fuzz_ngo_$pkg_flat.a\n        )\n        $SRC/ngolo-fuzzing/go114-fuzz-build/go114-fuzz-build -func FuzzNG_valid -o fuzz_ng_$pkg_flat.a ./fuzz_ng_$pkg_flat\n\n        $CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_ng_$pkg_flat/ngolofuzz.pb.o fuzz_ng_$pkg_flat//ngolofuzz.o \\\n        fuzz_ng_$pkg_flat.a \\\n        $SRC/LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n        $SRC/LPM/src/libprotobuf-mutator.a \\\n        -Wl,--start-group $SRC/LPM/external.protobuf/lib/lib*.a -Wl,--end-group \\\n        -o $OUT/fuzz_ng_$pkg_flat\n        rm fuzz_ng_$pkg_flat.a\n    fi\n    (\n        # corpus\n        cp $SRC/ngolo-fuzzing/corpus/ngolo_helper.go fuzz_ng_$pkg_flat/\n        goimports -w fuzz_ng_$pkg_flat/copy/*.go\n        cp fuzz_ng_$pkg_flat/copy/*.go fuzz_ng_$pkg_flat/\n        cp $pkg/*_test.go fuzz_ng_$pkg_flat/\n        sed -i -e 's/^package .*/package 'fuzz_ng_$pkg_flat'/' fuzz_ng_$pkg_flat/*.go\n        export FUZZ_NG_CORPUS_DIR=`pwd`/fuzz_ng_$pkg_flat/corpus/\n        pushd fuzz_ng_$pkg_flat\n        go mod tidy\n        go test -mod=readonly\n        zip -r $OUT/fuzz_ngo_\"$pkg_flat\"_seed_corpus.zip corpus\n        popd\n    )\n}\n\n# in $SRC/ngolo-fuzzing\ngo build\n\n(\ncd go114-fuzz-build\ngo build\n)\n\ntouch $SRC/ko.txt\n# compile x packages\ncd $SRC/x\nls | while read repo; do\ncd $repo\nfind . -type d | while read pkg; do\n    if [[ `ls $pkg/*.go | wc -l` == '0' ]]; then\n        continue\n    fi\n    if [[ `echo $pkg | grep internal | wc -l` == '1' ]]; then\n        continue\n    fi\n    if [[ `echo $pkg | grep vendor | wc -l` == '1' ]]; then\n        continue\n    fi\n    if [[ `echo $pkg | grep testdata | wc -l` == '1' ]]; then\n        continue\n    fi\n    if compile_package $pkg $repo; then\n        echo $repo/$pkg >> $SRC/ok.txt\n    else\n        echo \"Failed for $pkg\"\n        echo $repo/$pkg >> $SRC/ko.txt\n    fi\n\ndone\ncd -\ndone\n\necho \"Failed packages:\"\ncat $SRC/ko.txt\n\necho \"Succesful packages:\"\ncat $SRC/ok.txt\n"
    },
    "ngolo-fuzzing": {
        "name": "ngolo-fuzzing",
        "language": "go",
        "homepage": "'https://github.com/catenacyber/ngolo-fuzzing",
        "main_repo": "https://github.com/catenacyber/ngolo-fuzzing",
        "primary_contact": "p.antoine@catenacyber.fr",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"'https://github.com/catenacyber/ngolo-fuzzing\"\nprimary_contact: \"p.antoine@catenacyber.fr\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/catenacyber/ngolo-fuzzing'\nselective_unpack: true\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# compile latest go from git\n(\ncd $SRC/goroot/src\n./make.bash\n)\nrm -Rf /root/.go/\nexport PATH=$PATH:$SRC/goroot/bin/\ngo install golang.org/x/tools/cmd/goimports@latest\n\ncompile_package () {\n    pkg=$1\n    pkg_flat=`echo $pkg | sed 's/\\//_/g' | sed 's/\\./x/'`\n    args=`cat $SRC/ngolo-fuzzing/std/args.txt | grep \"^$pkg_flat \" | cut -d\" \" -f2-`\n    $SRC/ngolo-fuzzing/ngolo-fuzzing $args $pkg fuzz_ng_$pkg_flat\n    # applies special python patcher if any\n    ls $SRC/ngolo-fuzzing/std/$pkg_flat.py && (\n        python3 $SRC/ngolo-fuzzing/std/$pkg_flat.py fuzz_ng_$pkg_flat/fuzz_ng.go > fuzz_ng_$pkg_flat/fuzz_ngp.go\n        mv fuzz_ng_$pkg_flat/fuzz_ngp.go fuzz_ng_$pkg_flat/fuzz_ng.go\n    )\n    (\n        cd fuzz_ng_$pkg_flat\n        $SRC/LPM/external.protobuf/bin/protoc --go_out=./ ngolofuzz.proto\n        mkdir cpp\n        $SRC/LPM/external.protobuf/bin/protoc --cpp_out=./cpp ngolofuzz.proto\n        $CXX -DNDEBUG -stdlib=libc++ -c -I . -I $SRC/LPM/external.protobuf/include cpp/ngolofuzz.pb.cc\n        $CXX $CXXFLAGS -c -Icpp -I $SRC/libprotobuf-mutator/ -I $SRC/LPM/external.protobuf/include $SRC/ngolo-fuzzing/lpm/ngolofuzz.cc\n    )\n    if [ \"$SANITIZER\" = \"coverage\" ]\n    then\n        (\n        if [[ `echo $pkg | grep runtime | wc -l` == '1' ]]; then\n            continue\n        fi\n        cd fuzz_ng_$pkg_flat\n        GO_COV_ADD_PKG=\"$pkg\" compile_go_fuzzer . FuzzNG_unsure fuzz_ngo_$pkg_flat\n        )\n    else\n        (\n        cd fuzz_ng_$pkg_flat\n        compile_go_fuzzer . FuzzNG_unsure fuzz_ngo_$pkg_flat\n        rm fuzz_ngo_$pkg_flat.a\n        )\n        $SRC/ngolo-fuzzing/go114-fuzz-build/go114-fuzz-build -func FuzzNG_valid -o fuzz_ng_$pkg_flat.a ./fuzz_ng_$pkg_flat\n\n        $CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_ng_$pkg_flat/ngolofuzz.pb.o fuzz_ng_$pkg_flat//ngolofuzz.o \\\n            fuzz_ng_$pkg_flat.a \\\n            $SRC/LPM/src/libfuzzer/libprotobuf-mutator-libfuzzer.a \\\n            $SRC/LPM/src/libprotobuf-mutator.a \\\n            -Wl,--start-group $SRC/LPM/external.protobuf/lib/lib*.a -Wl,--end-group \\\n            -o $OUT/fuzz_ng_$pkg_flat\n        rm fuzz_ng_$pkg_flat.a\n    fi\n    (\n        # corpus\n        mkdir $SRC/goroot/src/fuzz_ng_$pkg_flat\n        cp $SRC/ngolo-fuzzing/corpus/ngolo_helper.go $SRC/goroot/src/fuzz_ng_$pkg_flat/\n        goimports -w fuzz_ng_$pkg_flat/copy/*.go\n        cp fuzz_ng_$pkg_flat/copy/*.go $SRC/goroot/src/fuzz_ng_$pkg_flat/\n        cp fuzz_ng_$pkg_flat/*.go $SRC/goroot/src/fuzz_ng_$pkg_flat/\n        cp $SRC/goroot/src/$pkg/*_test.go $SRC/goroot/src/fuzz_ng_$pkg_flat/\n        cp -r $SRC/goroot/src/$pkg/testdata $SRC/goroot/src/fuzz_ng_$pkg_flat/ || true\n        sed -i -e 's/^package .*/package 'fuzz_ng_$pkg_flat'/' $SRC/goroot/src/fuzz_ng_$pkg_flat/*.go\n        export FUZZ_NG_CORPUS_DIR=`pwd`/fuzz_ng_$pkg_flat/corpus/\n        pushd $SRC/goroot/src/fuzz_ng_$pkg_flat/\n        go mod tidy\n        go test -mod=readonly\n        popd\n        rm -rf $SRC/goroot/src/fuzz_ng_$pkg_flat/\n        cd fuzz_ng_$pkg_flat\n        zip -r $OUT/fuzz_ngo_\"$pkg_flat\"_seed_corpus.zip corpus || true\n    )\n}\n\n# in $SRC/ngolo-fuzzing\ngo build\n\n(\ncd go114-fuzz-build\ngo build\n)\n\ntouch $SRC/ok.txt $SRC/ko.txt\nfind $SRC/goroot/src/ -type d | cut -d/ -f5- | while read pkg; do\n    if [[ `ls $SRC/goroot/src/$pkg/*.go | wc -l` == '0' ]]; then\n        continue\n    fi\n    if [[ `echo $pkg | grep internal | wc -l` == '1' ]]; then\n        continue\n    fi\n    if [[ `echo $pkg | grep vendor | wc -l` == '1' ]]; then\n        continue\n    fi\n    if [[ `echo $pkg | grep testdata | wc -l` == '1' ]]; then\n        continue\n    fi\n    if compile_package $pkg; then\n        echo $pkg >> $SRC/ok.txt\n    else\n        echo \"Failed for $pkg\"\n        # hard fail if the package is meant to be supported\n        grep ^$pkg$ $SRC/ngolo-fuzzing/std/supported.txt && exit 1\n        echo $pkg >> $SRC/ko.txt\n    fi\n\ndone\n\necho \"Failed packages:\"\ncat $SRC/ko.txt\n\necho \"Succesful packages:\"\ncat $SRC/ok.txt\n"
    },
    "nimbus-jwt": {
        "name": "nimbus-jwt",
        "language": "jvm",
        "homepage": "https://connect2id.com/products/nimbus-jose-jwt",
        "main_repo": "https://bitbucket.org/connect2id/nimbus-jose-jwt.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://connect2id.com/products/nimbus-jose-jwt\"\nlanguage: jvm\nmain_repo: \"https://bitbucket.org/connect2id/nimbus-jose-jwt.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nSRC_SUBDIR=\"\"\nMVN_FLAGS=\"-Djavac.src.version=15 -Djavac.target.version=15 -DskipTests -Dmaven.javadoc.skip=true\"\nALL_JARS=\"\"\n\n# Install the build servers' jazzer-api into the maven repository.\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.14.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}/${SRC_SUBDIR}\"\n\t${MVN} install ${MVN_FLAGS}\n\tCURRENT_VERSION=$(${MVN} org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\npopd\n\npushd \"${SRC}/${LIBRARY_NAME}-fuzzer\"\n\t${MVN} package -DfuzzedLibaryVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar ${OUT}/${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} ${LIBRARY_NAME}-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n\t# Find our fuzzer inside the maven structure\n\tstripped_path=$(echo ${fuzzer} | sed \\\n\t\t-e 's|^.*src/main/java/\\(.*\\).java$|\\1|' \\\n\t\t-e 's|^.*src/test/java/\\(.*\\).java$|\\1|' \\\n\t);\n\t# The .java suffix was stripped by sed.\n\tif (echo ${stripped_path} | grep \".java$\"); then\n\t\tcontinue;\n\tfi\n\t\n\tfuzzer_basename=$(basename -s .java $fuzzer)\n\tfuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\t\n\t# Create an execution wrapper that executes Jazzer with the correct arguments.\n\t\n\techo \"#!/bin/sh\n# LLVMFuzzerTestOneInput Magic String required for infra/base-images/base-runner/test_all.py. DO NOT REMOVE\n\n\nthis_dir=\\$(dirname \\\"\\$0\\\")\nLD_LIBRARY_PATH=\\\"\\$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"-Xmx2048m\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n\tchmod u+x $OUT/${fuzzer_basename}\ndone"
    },
    "ninja": {
        "name": "ninja",
        "language": "c++",
        "homepage": "https://github.com/ninja-build/ninja",
        "main_repo": "https://github.com/ninja-build/ninja",
        "primary_contact": "jhasse@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/ninja-build/ninja\"\nlanguage: c++\nprimary_contact: \"jhasse@gmail.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: \"https://github.com/ninja-build/ninja\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "njs": {
        "name": "njs",
        "language": "c++",
        "homepage": "https://nginx.org/en/docs/njs/",
        "main_repo": "https://github.com/nginx/njs.git",
        "primary_contact": "xeioexception@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://nginx.org/en/docs/njs/\"\nlanguage: c++\nprimary_contact: \"xeioexception@gmail.com\"\nauto_ccs:\n - \"devrep@nginx.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\ncoverage_extra_args: -ignore-filename-regex=.*/pcre2/.*\nmain_repo: 'https://github.com/nginx/njs.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build pcre dependency to be linked statically.\npushd $SRC/pcre2\n./autogen.sh\nif [ \"$SANITIZER\" == \"introspector\" ]; then\n  # Disable sanitizers for introspector for pcre. We only care about njs and it's blocking the build.\n  CFLAGS=\"\" CXXFLAGS=\"\" LIB_FUZZING_ENGINE=\"\" ./configure\nelse\n  CFLAGS=\"$CFLAGS -fno-use-cxa-atexit\" CXXFLAGS=\"$CXXFLAGS -fno-use-cxa-atexit\" ./configure\nfi\nmake -j$(nproc) clean\nmake -j$(nproc) all\nmake install\nsed -i \"s/\\$libS\\$libR \\(-lpcre2-8$\\)/\\$libS\\$libR -Wl,-Bstatic \\1 -Wl,-Bdynamic/\" /usr/local/bin/pcre2-config\npopd\n\n# build project\nrm -rf build\n\n./configure\nmake njs_fuzzer\n\ncp ./build/njs_process_script_fuzzer $OUT/\n\nSEED_CORPUS_PATH=$OUT/njs_process_script_fuzzer_seed_corpus\nmkdir -p $SEED_CORPUS_PATH\n\nset +x\ncat src/test/njs_unit_test.c \\\n    | egrep -o '\".*\"' | awk '{print substr($0,2,length($0)-2)}' | sort | uniq \\\n    | while IFS= read -r line; do\n      echo $line > $SEED_CORPUS_PATH/$(echo $line | sha1sum | awk '{ print $1 }');\n    done\n\nfind test/ -name *.t.js \\\n    | while IFS= read -r testname; do\n        cp $testname $SEED_CORPUS_PATH/$(echo $testname | sha1sum | awk '{ print $1 }');\n      done\nset -x\n\nzip -q $SEED_CORPUS_PATH.zip $SEED_CORPUS_PATH\nrm -rf $SEED_CORPUS_PATH\n"
    },
    "node-xml2js": {
        "name": "node-xml2js",
        "language": "javascript",
        "homepage": "https://github.com/Leonidas-from-XIV/node-xml2js",
        "main_repo": "https://github.com/Leonidas-from-XIV/node-xml2js",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/Leonidas-from-XIV/node-xml2js\nlanguage: javascript\nmain_repo: https://github.com/Leonidas-from-XIV/node-xml2js\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install dependencies.\nnpm install --save-dev @jazzer.js/core \nnpm i\n\n# Build Fuzzers.\ncompile_javascript_fuzzer node-xml2js fuzz_parseString.js -i node-xml2js"
    },
    "nodejs": {
        "name": "nodejs",
        "language": "c++",
        "homepage": "https://nodejs.org",
        "main_repo": "https://github.com/nodejs/node",
        "primary_contact": "security@nodejs.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://nodejs.org\"\nprimary_contact: \"security@nodejs.org\"\nlanguage: c++\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nauto_ccs:\n  - \"david@adalogics.com\"\n  - \"adam@adalogics.com\"\nmain_repo: 'https://github.com/nodejs/node'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd $SRC/node\n\n# Coverage build takes very long and time outs in the CI which blocks changes. Ignore Coverage build in OSS-Fuzz CI for now:\nif [[ -n \"${OSS_FUZZ_CI-}\" && \"$SANITIZER\" = coverage ]]; then\n\texit 0\nfi\n\nif [[ \"$SANITIZER\" = coverage ]]; then\n  export CFLAGS=\"${CFLAGS/\"-fcoverage-mapping\"/\" \"}\"\n  export CFLAGS=\"${CFLAGS/\"-fprofile-instr-generate\"/\" \"}\"\n  export CXXFLAGS=\"${CXXFLAGS/\"-fcoverage-mapping\"/\" \"}\"\n  export CXXFLAGS=\"${CXXFLAGS/\"-fprofile-instr-generate\"/\" \"}\"\n  echo \"CFLAGS: ${CFLAGS}\"\n  echo \"CXXFLAGS: ${CXXFLAGS}\"\nfi\n\n# Build node\nexport LDFLAGS=\"$CXXFLAGS\"\nexport LD=\"$CXX\"\n./configure --with-ossfuzz\n\n# Ensure we build with few processors if memory gets exhausted\nif [[ \"$SANITIZER\" = coverage ]]; then\n    for mrkpath in fuzz_buffer_includes.target.mk fuzz_buffer_equals.target.mk fuzz_buffer_compare.target.mk fuzz_blob.target.mk fuzz_zlib_gzip_createUnzip.target.mk fuzz_zlib_createBrotliDecompress.target.mk fuzz_zlib_brotliDecompress.target.mk fuzz_zlib_brotliCompress.target.mk fuzz_string_decoder.target.mk fuzz_querystring_parse.target.mk fuzz_ParseSrvReply.target.mk fuzz_path_join.target.mk fuzz_env.target.mk fuzz_stream1.target.mk fuzz_strings.target.mk fuzz_diffieHellmanPEM.target.mk fuzz_createPrivateKeyPEM.target.mk fuzz_createPrivateKeyDER.target.mk fuzz_ParseSoaReply.target.mk fuzz_path_extname.target.mk fuzz_ParseCaaReply.target.mk fuzz_path_normalize.target.mk fuzz_path_relative.target.mk fuzz_createPrivateKeyJWK.target.mk fuzz_ParseMxReply.target.mk fuzz_path_format.target.mk fuzz_LoadBIO.target.mk fuzz_ClientHelloParser.target.mk fuzz_diffieHellmanJWK.target.mk fuzz_path_basename.target.mk fuzz_ParseNaptrReply.target.mk fuzz_path_isAbsolute.target.mk fuzz_tls_socket_request.target.mk fuzz_ParseGeneralReply.target.mk fuzz_diffieHellmanDER.target.mk fuzz_path_toNamespacedPath.target.mk fuzz_path_parse.target.mk fuzz_httpparser1.target.mk fuzz_path_dirname.target.mk fuzz_x509.target.mk fuzz_ParseTxtReply.target.mk fuzz_fs_write_read_append.target.mk fuzz_ParsePublicKey.target.mk fuzz_sign_verify.target.mk fuzz_path_resolve.target.mk fuzz_fs_write_open_read.target.mk libnode.target.mk; do\n      sed -i 's/BUILDTYPE))/BUILDTYPE)) -fprofile-instr-generate -fcoverage-mapping/g' $SRC/node/out/${mrkpath}\n    done\n    make -j 3 || make -j1\nelse\n\tmake -j$(nproc) || make -j1\nfi\n\n# Copy all fuzzers to OUT folder \ncp out/Release/fuzz_* ${OUT}/\n\n# Create seed for fuzz_env\nmkdir fuzz_env_seed\nfind ./test -name '*.js' -exec cp {} ./fuzz_env_seed/ \\;\ncd fuzz_env_seed\n# Remove small files:\nfind -size -5k -delete\n# Remove large files:\nfind -size +30k -delete\nzip $OUT/fuzz_env_seed_corpus.zip ./*\n# Add more seeds\ncd $SRC/node/test/fuzzers/seed/fuzz_env\nzip $OUT/fuzz_env_seed_corpus.zip ./*\n\ncd $SRC/node/test/fuzzers/seed/fuzz_x509\nzip $OUT/fuzz_x509_seed_corpus.zip ./*\n\n"
    },
    "nokogiri": {
        "name": "nokogiri",
        "language": "c",
        "homepage": "nokogiri.org",
        "main_repo": "https://github.com/sparklemotion/nokogiri.git",
        "primary_contact": "mike.dalessio@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "centipede",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"nokogiri.org\"\nlanguage: c\nprimary_contact: \"mike.dalessio@gmail.com\"\nauto_ccs:\n  - \"scheckoway@gmail.com\"\n  - \"fuzzy.boiiii23a@gmail.com\"\n  - \"nokogiri-oss-fuzz@googlegroups.com\"\nmain_repo: \"https://github.com/sparklemotion/nokogiri.git\"\nsanitizers:\n  - undefined\nfuzzing_engines:\n  - afl\n  - centipede\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n###############################################################################\n\ncd nokogiri/gumbo-parser\nmake oss-fuzz CFLAGS=\"$CFLAGS\" CXXFLAGS=\"$CXXFLAGS\"\n"
    },
    "nom": {
        "name": "nom",
        "language": "rust",
        "homepage": "https://github.com/Geal/nom",
        "main_repo": "https://github.com/Geal/nom",
        "primary_contact": "geo.couprie@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/Geal/nom\"\nmain_repo: \"https://github.com/Geal/nom\"\nprimary_contact: \"geo.couprie@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/nom\ncargo fuzz build -O \ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_arithmetic $OUT/\n"
    },
    "notary": {
        "name": "notary",
        "language": "go",
        "homepage": "https://github.com/notaryproject/notary",
        "main_repo": "https://github.com/notaryproject",
        "primary_contact": "yizha1@microsoft.com",
        "vendor_ccs": [
            "Adam@adalogics.com",
            "David@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/notaryproject/notary\"\nmain_repo: \"https://github.com/notaryproject\"\nprimary_contact: \"yizha1@microsoft.com\"\nauto_ccs :\n  - \"vaninrao@amazon.com\"\n  - \"priteshbandi@gmail.com\"\n  - \"shizh@microsoft.com\"\n  - \"justin.cormack@docker.com\"\n  - \"toddysm@gmail.com\"\n  - \"notarycncf@gmail.com\"\nvendor_ccs :\n  - \"Adam@adalogics.com\"\n  - \"David@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n$SRC/cncf-fuzzing/projects/notary/build.sh\n"
    },
    "nss": {
        "name": "nss",
        "language": "c++",
        "homepage": "https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS",
        "main_repo": "https://hg.mozilla.org/projects/nss",
        "primary_contact": "bbeurdouche@mozilla.com",
        "vendor_ccs": [
            "oss-fuzz@mozilla-fuzzing.iam.gserviceaccount.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://developer.mozilla.org/en-US/docs/Mozilla/Projects/NSS\"\nlanguage: c++\nprimary_contact: \"bbeurdouche@mozilla.com\"\nauto_ccs:\n  - bbeurdouche@mozilla.com\n  - choller@mozilla.com\n  - djackson@mozilla.com\n  - dkeeler@mozilla.com\n  - jkratzer@mozilla.com\n  - jschanck@mozilla.com\n  - jschwartzentruber@mozilla.com\n  - nkulatova@mozilla.com\n  - sledru@mozilla.com\n  - twsmith@mozilla.com\n  - mdauer@mozilla.com\nvendor_ccs:\n  - oss-fuzz@mozilla-fuzzing.iam.gserviceaccount.com\nmain_repo: \"https://hg.mozilla.org/projects/nss\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# Build NSS with fuzzers.\n./automation/ossfuzz/build.sh\n"
    },
    "ntlm-auth": {
        "name": "ntlm-auth",
        "language": "python",
        "homepage": "https://github.com/jborean93/ntlm-auth",
        "main_repo": "https://github.com/jborean93/ntlm-auth",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jborean93/ntlm-auth\nmain_repo: https://github.com/jborean93/ntlm-auth\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "ntlm2": {
        "name": "ntlm2",
        "language": "python",
        "homepage": "https://github.com/dopstar/requests-ntlm2",
        "main_repo": "https://github.com/dopstar/requests-ntlm2",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/dopstar/requests-ntlm2\nlanguage: python\nmain_repo: https://github.com/dopstar/requests-ntlm2\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "ntopng": {
        "name": "ntopng",
        "language": "c++",
        "homepage": "https://github.com/ntop/ntopng/",
        "main_repo": "https://github.com/ntop/ntopng.git",
        "primary_contact": "luca.deri@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/ntop/ntopng/\"\nlanguage: c++\nprimary_contact: \"luca.deri@gmail.com\"\nauto_ccs:\n  - \"patacca.x@gmail.com\"\nmain_repo: \"https://github.com/ntop/ntopng.git\"\n\nsanitizers:\n  - address\n\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Disable code instrumentation\nCFLAGS_SAVE=\"$CFLAGS\"\nCXXFLAGS_SAVE=\"$CXXFLAGS\"\nunset CFLAGS\nunset CXXFLAGS\nexport AFL_NOOPT=1\n# This is needed because oss-fuzz always uses it\nexport CXXFLAGS=\"-stdlib=libc++\"\n\n### Dependencies that need static linking ###\n\n# libpcap\ncd $SRC/libpcap-1.9.1\n./configure --disable-shared\nmake -j$(nproc)\nmake install\n\n# zeromq\ncd $SRC/zeromq-4.3.5\n./autogen.sh\n(\nexport CXXFLAGS=\"-Wno-error=missing-braces -stdlib=libc++\"\n./configure --without-documentation --without-libsodium --enable-static --disable-shared\nmake -j$(nproc)\nmake install\n)\n\n# json-c\ncd $SRC/json-c-json-c-0.17-20230812\nmkdir build\ncd build\ncmake -DBUILD_SHARED_LIBS=OFF ..\nmake -j$(nproc)\nmake install\n\n# libmaxminddb\ncd $SRC/libmaxminddb-1.7.1\n./configure --disable-shared --enable-static\nmake -j$(nproc)\nmake install\n\n\n### ntopng dependecies ###\n\n# Build nDPI\ncd $NDPI_HOME\n./autogen.sh\nmake -j$(nproc)\n\n# Build LUA\nmake -C $NTOPNG_HOME/third-party/lua-5.4.6 generic\n\n# Build librrdtool\ncd $NTOPNG_HOME/third-party/rrdtool-1.4.8\n./configure --disable-libdbi --disable-libwrap --disable-rrdcgi --disable-libtool-lock \\\n    --disable-nls --disable-rpath --disable-perl --disable-ruby --disable-lua \\\n    --disable-tcl --disable-python --disable-dependency-tracking --disable-rrd_graph\ncd src\nmake librrd_th.la\n\n\n# Re-enable code instrumentation\nexport CFLAGS=\"${CFLAGS_SAVE}\"\nexport CXXFLAGS=\"${CXXFLAGS_SAVE}\"\nunset AFL_NOOPT\n\n### Build ntopng ###\n\ncd $NTOPNG_HOME\n\n./autogen.sh\n\n./configure --enable-fuzztargets --without-hiredis --with-zmq-static \\\n    --with-json-c-static --with-maxminddb-static\n\nmake -j$(nproc) fuzz_all\n\n# Copy fuzzers\nfind fuzz/ -regex 'fuzz/fuzz_[a-z_]*\\(\\.\\(zip\\|dict\\|options\\)\\)?' -exec cp {} $OUT/ \\;\n\n# Create the directory structure needed for fuzzing\nmkdir -p $OUT/install $OUT/data-dir $OUT/docs $OUT/scripts/callbacks\n"
    },
    "ntp": {
        "name": "ntp",
        "language": "c++",
        "homepage": "http://www.ntp.org",
        "main_repo": "https://bitbucket.nwtime.org/scm/websites/ntpwww.git",
        "primary_contact": "security@ntp.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.ntp.org\"\nlanguage: c++\nprimary_contact: \"security@ntp.org\"\nmain_repo: \"https://bitbucket.nwtime.org/scm/websites/ntpwww.git\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nfuzzing_engines:\n  - afl\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd ntp-dev\n#avoids https://bugs.llvm.org/show_bug.cgi?id=34636\ncp /usr/bin/ld.gold /usr/bin/ld\n./bootstrap\n./configure --enable-fuzztargets\nmake\ncp tests/fuzz/fuzz_ntpd_receive $OUT/\n"
    },
    "ntpsec": {
        "name": "ntpsec",
        "language": "c",
        "homepage": "https://ntpsec.org/",
        "main_repo": "https://gitlab.com/NTPsec/ntpsec",
        "primary_contact": "fallenpegasus@gmail.com",
        "vendor_ccs": [
            "security@ntpsec.org",
            "rlaager@coderich.net"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://ntpsec.org/\"\nlanguage: c\nprimary_contact: \"fallenpegasus@gmail.com\"\nvendor_ccs:\n  - \"security@ntpsec.org\"\n  - \"rlaager@coderich.net\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\n  - selsky@gmail.com\n  - \"gem@rellim.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://gitlab.com/NTPsec/ntpsec'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd fuzz\nmake all\n\ncp FuzzClient $OUT/FuzzClient\ncp FuzzExtens $OUT/FuzzExtens\ncp FuzzServer $OUT/FuzzServer\n\npushd $SRC/oss-fuzz-bloat/ntpsec/\ncp FuzzClient_seed_corpus.zip $OUT/FuzzClient_seed_corpus.zip\ncp FuzzExtens_seed_corpus.zip $OUT/FuzzExtens_seed_corpus.zip\ncp FuzzServer_seed_corpus.zip $OUT/FuzzServer_seed_corpus.zip\npopd\n"
    },
    "num-bigint": {
        "name": "num-bigint",
        "language": "c++",
        "homepage": "https://crates.io/crates/num-bigint",
        "main_repo": "https://github.com/rust-num/num-bigint.git",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://crates.io/crates/num-bigint\"\nlanguage: c++\nprimary_contact: \"guidovranken@gmail.com\"\nmain_repo: \"https://github.com/rust-num/num-bigint.git\"\nauto_ccs:\n    - \"cuviper@gmail.com\"\nsanitizers:\n - address\narchitectures:\n - x86_64\n - i386\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_NUM_BIGINT -DCRYPTOFUZZ_NO_OPENSSL\"\nexport LIBFUZZER_LINK=\"$LIB_FUZZING_ENGINE\"\n\nrm -f /usr/local/bin/cargo\n\ncurl https://sh.rustup.rs -sSf | sh -s -- -y\nsource $HOME/.cargo/env\n\n# Install Boost headers\ncd $SRC/\ntar jxf boost_1_84_0.tar.bz2\ncd boost_1_84_0/\nCFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\nCFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\ncp -R boost/ /usr/include/\n\ncd $SRC/cryptofuzz/\nsed -i 's/kNegativeIntegers = false/kNegativeIntegers = true/g' config.h\npython gen_repository.py\n\nrm extra_options.h\necho -n '\"' >>extra_options.h\necho -n '--force-module=num-bigint ' >>extra_options.h\necho -n '--operations=BignumCalc ' >>extra_options.h\necho -n '\"' >>extra_options.h\n\ncd $SRC/botan\nif [[ $CFLAGS != *-m32* ]]\nthen\n    ./configure.py --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator,x509 --build-targets=static --without-documentation\nelse\n    ./configure.py --cpu=x86_32 --cc-bin=$CXX --cc-abi-flags=\"$CXXFLAGS\" --disable-shared --disable-modules=locking_allocator,x509 --build-targets=static --without-documentation\nfi\nmake -j$(nproc)\nexport CXXFLAGS=\"$CXXFLAGS -DCRYPTOFUZZ_BOTAN -DCRYPTOFUZZ_BOTAN_IS_ORACLE\"\nexport LIBBOTAN_A_PATH=\"$SRC/botan/libbotan-3.a\"\nexport BOTAN_INCLUDE_PATH=\"$SRC/botan/build/include\"\n\ncd $SRC/cryptofuzz/modules/botan/\nmake -j$(nproc) -f Makefile-oracle\n\ncd $SRC/cryptofuzz/modules/num-bigint/\nif [[ $CFLAGS != *-m32* ]]\nthen\n    make\nelse\n    rustup target add i686-unknown-linux-gnu\n    make -f Makefile.i386\nfi\n\ncd $SRC/cryptofuzz/\nmake -j$(nproc)\n\ncp $SRC/cryptofuzz/cryptofuzz $OUT/\n"
    },
    "numactl": {
        "name": "numactl",
        "language": "c",
        "homepage": "https://github.com/numactl/numactl",
        "main_repo": "https://github.com/numactl/numactl",
        "primary_contact": "github@halobates.de",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/numactl/numactl\"\nmain_repo: \"https://github.com/numactl/numactl\"\nlanguage: c\nprimary_contact: \"github@halobates.de\"\nauto_ccs:\n- \"david@adalogics.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh\n./configure\nmake libnuma.la\n\n$CC $CFLAGS -c ./fuzz/fuzz_parse_str.c -o fuzz_parse_str.o -I./\n\n# Link with CXX as this is needed for OSS-Fuzz Centipede\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_parse_str.o ./.libs/libnuma.a -o $OUT/fuzz_parse_str\n"
    },
    "numexpr": {
        "name": "numexpr",
        "language": "python",
        "homepage": "https://github.com/pydata/numexpr",
        "main_repo": "https://github.com/pydata/numexpr",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/pydata/numexpr\nmain_repo: https://github.com/pydata/numexpr\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npython3 -m pip install -r ./requirements.txt\npython3 setup.py build install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "numpy": {
        "name": "numpy",
        "language": "python",
        "homepage": "numpy.org",
        "main_repo": "https://github.com/numpy/numpy",
        "primary_contact": "ralf.gommers@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: numpy.org\nlanguage: python\nmain_repo: https://github.com/numpy/numpy\nprimary_contact: ralf.gommers@gmail.com\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd numpy\n\nunset CFLAGS\nunset CXXFLAGS\nunset LIB_FUZZING_ENGINE\n\npython3 -m pip install .\n\ncp $SRC/*.options $OUT/\n\nmkdir -p $SRC/numpy-fuzzers\ncd $SRC/numpy-fuzzers\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "oak": {
        "name": "oak",
        "language": "rust",
        "homepage": "https://github.com/project-oak/oak",
        "main_repo": "https://github.com/project-oak/oak",
        "primary_contact": "tzn@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/project-oak/oak\"\nlanguage: rust\nprimary_contact: \"tzn@google.com\"\nauto_ccs:\n  - \"project-oak-team@google.com\"\n  - \"grobler@google.com\"\n  - \"ivanpetrov@google.com\"\n  - \"razieh@google.com\"\n  - \"mgamdou@google.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nmain_repo: 'https://github.com/project-oak/oak'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n  export RUSTFLAGS=\"$RUSTFLAGS -C debug-assertions=no\"\n  export CFLAGS=\"\"\nfi\n\ncargo-fuzz build --release --target-dir=fuzz/target\n\nFUZZ_TARGET_OUTPUT_DIR=fuzz/target/x86_64-unknown-linux-gnu/release\nfor f in fuzz/fuzz_targets/*.rs\ndo\n    FUZZ_TARGET_NAME=$(basename ${f%.*})\n    cp $FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT/\ndone\n"
    },
    "oatpp": {
        "name": "oatpp",
        "language": "c++",
        "homepage": "https://oatpp.io/",
        "main_repo": "https://github.com/oatpp/oatpp",
        "primary_contact": "bugs@oatpp.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://oatpp.io/\"\nlanguage: c++\nprimary_contact: \"bugs@oatpp.io\"\nmain_repo: \"https://github.com/oatpp/oatpp\"\nauto_ccs: \n  - \"leonid@oatpp.io\"\n  - \"david@adalogics.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build && cd build\ncmake -DOATPP_BUILD_TESTS=OFF ../\nmake -j$(nproc)\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ../fuzzers/oatpp/json/ObjectMapper.cpp -o $OUT/fuzz_mapper \\\n    ./src/liboatpp.a -I../src\n"
    },
    "oauth2": {
        "name": "oauth2",
        "language": "python",
        "homepage": "https://github.com/googleapis/oauth2client",
        "main_repo": "https://github.com/googleapis/oauth2client",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/oauth2client\nlanguage: python\nmain_repo: https://github.com/googleapis/oauth2client\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "oauthlib": {
        "name": "oauthlib",
        "language": "python",
        "homepage": "https://github.com/oauthlib/oauthlib",
        "main_repo": "https://github.com/oauthlib/oauthlib",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/oauthlib/oauthlib\nlanguage: python\nmain_repo: https://github.com/oauthlib/oauthlib\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --hidden-import=jwt --hidden-import=jwt.algorithms\ndone\n"
    },
    "ogre": {
        "name": "ogre",
        "language": "c++",
        "homepage": "https://www.ogre3d.org/",
        "main_repo": "https://github.com/OGRECave/ogre",
        "primary_contact": "rojtberg@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.ogre3d.org/\"\nlanguage: c++\nmain_repo: \"https://github.com/OGRECave/ogre\"\nprimary_contact: rojtberg@gmail.com\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir -p build\ncd build\ncmake -DOGRE_STATIC=TRUE ..\nmake -j$(nproc)\n\n# Build the fuzzers\nfor fuzzer in image_fuzz stream_fuzz; do\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE $SRC/${fuzzer}.cpp -o $OUT/${fuzzer} \\\n    -I../OgreMain/include/ -I./include/ \\\n    -pthread -I../PlugIns/STBICodec/include/ -I../Components/Bites/include/ \\\n     -Wl,--start-group \\\n\t./lib/libOgreOverlayStatic.a            \\\n\t./lib/libOgreRTShaderSystemStatic.a     \\\n\t./lib/libOgreBulletStatic.a             \\\n\t./lib/libPlugin_PCZSceneManagerStatic.a \\\n\t./lib/libOgreMainStatic.a               \\\n\t./lib/libOgreTerrainStatic.a            \\\n\t./lib/libPlugin_OctreeZoneStatic.a      \\\n\t./lib/libOgrePropertyStatic.a           \\\n\t./lib/libCodec_STBIStatic.a             \\\n\t./lib/libOgreMeshLodGeneratorStatic.a \\\n\t./lib/libOgreVolumeStatic.a \\\n\t./lib/libOgrePagingStatic.a \\\n\t./lib/libPlugin_BSPSceneManagerStatic.a \\\n\t./lib/libPlugin_OctreeSceneManagerStatic.a \\\n\t./lib/libDefaultSamples.a \\\n\t./lib/libOgreBitesStatic.a \\\n\t./lib/libPlugin_DotSceneStatic.a \\\n\t./lib/libPlugin_ParticleFXStatic.a \\\n\t./pugixml-1.14/libpugixml.a \\\n      -Wl,--end-group\ndone\n"
    },
    "ohc": {
        "name": "ohc",
        "language": "jvm",
        "homepage": "https://github.com/snazy/ohc",
        "main_repo": "https://github.com/snazy/ohc",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/snazy/ohc\nmain_repo: https://github.com/snazy/ohc\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"ohc-core/target/ohc-core-$CURRENT_VERSION.jar\" $OUT/ohc-core.jar\ncp \"ohc-jmh/target/ohc-jmh-$CURRENT_VERSION.jar\" $OUT/ohc-jmh.jar\ncp \"ohc-benchmark/target/ohc-benchmark-$CURRENT_VERSION.jar\" $OUT/ohc-benchmark.jar\n\nALL_JARS=\"ohc-core.jar ohc-jmh.jar ohc-benchmark.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "okhttp": {
        "name": "okhttp",
        "language": "jvm",
        "homepage": "https://square.github.io/okhttp/",
        "main_repo": "https://github.com/square/okhttp.git",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://square.github.io/okhttp/\"\nlanguage: jvm\nmain_repo: \"https://github.com/square/okhttp.git\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nGRADLE_FLAGS=\"-x javadoc -x test -Dfile.encoding=UTF-8\"\nMVN_FLAGS=\"-DskipTests -Drat.ignoreErrors=true\"\nALL_JARS=\"\"\n\n# install the build servers' jazzer-api into the maven repository\npushd \"/tmp\"\n\t${MVN} install:install-file -Dfile=${JAZZER_API_PATH} \\\n\t\t-DgroupId=\"com.code-intelligence\" \\\n\t\t-DartifactId=\"jazzer-api\" \\\n\t\t-Dversion=\"0.12.0\" \\\n\t\t-Dpackaging=jar\npopd\n\npushd \"${SRC}/okhttp/okhttp\"\n\t../gradlew jar\n    ../gradlew publishToMavenLocal ${GRADLE_FLAGS}\n    CURRENT_VERSION=$(../gradlew properties --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\npopd\n\npushd \"${SRC}/okhttp/okhttp-logging-interceptor\"\n\t../gradlew jar\n    ../gradlew publishToMavenLocal ${GRADLE_FLAGS}\n    CURRENT_VERSION=$(../gradlew properties --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\npopd\n\npushd \"${SRC}/okhttp/mockwebserver\"\n\t../gradlew jar\n    ../gradlew publishToMavenLocal ${GRADLE_FLAGS}\n    CURRENT_VERSION=$(../gradlew properties --console=plain | sed -nr \"s/^version:\\ (.*)/\\1/p\")\npopd\n\npushd ${SRC}\n\t${MVN} package -DokhttpVersion=\"${CURRENT_VERSION}\" ${MVN_FLAGS}\n\tinstall -v target/okhttp-fuzzer-${CURRENT_VERSION}.jar ${OUT}/okhttp-fuzzer-${CURRENT_VERSION}.jar\n\tALL_JARS=\"${ALL_JARS} okhttp-fuzzer-${CURRENT_VERSION}.jar\"\npopd\n\n\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nMVN_FUZZERS_PREFIX=\"src/main/java\"\n\nfor fuzzer in $(find ${SRC} -name '*Fuzzer.java'); do\n  stripped_path=$(echo ${fuzzer} | sed 's|^.*src/main/java/\\(.*\\).java$|\\1|');\n  # the .java was stripped by sed\n  if (echo ${stripped_path} | grep \".java$\"); then\n\tcontinue;\n  fi\n\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  fuzzer_classname=$(echo ${stripped_path} | sed 's|/|.|g');\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=${RUNTIME_CLASSPATH} \\\n--target_class=${fuzzer_classname} \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/${fuzzer_basename}\n  chmod u+x $OUT/${fuzzer_basename}\ndone\n"
    },
    "olefile": {
        "name": "olefile",
        "language": "python",
        "homepage": "http://www.decalage.info/olefile",
        "main_repo": "https://github.com/decalage2/olefile",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: http://www.decalage.info/olefile\nlanguage: python\nmain_repo: https://github.com/decalage2/olefile\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\n# Copy seeds\nzip -rj $OUT/fuzz_reader_seed_corpus.zip tests/images/\n"
    },
    "onednn": {
        "name": "onednn",
        "language": "c++",
        "homepage": "https://github.com/uxlfoundation/oneDNN",
        "main_repo": "https://github.com/uxlfoundation/oneDNN",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz",
            "centipede"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/uxlfoundation/oneDNN\"\nmain_repo: \"https://github.com/uxlfoundation/oneDNN\"\nlanguage: c++\nauto_ccs:\n  - \"ankit.v.manerikar@intel.com\"\n  - \"vadim.o.pirogov@intel.com\"\n  - \"dmitry.zarukin@intel.com\"\n  - \"mourad.gouicem@intel.com\"\n  - \"stefan.palicki@intel.com\"\n  - \"denis.samoylov@intel.com\"\nvendor_ccs:\n- david@adalogics.com\nfuzzing_engines:\n- libfuzzer\n- honggfuzz\n- centipede\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed -i 's/FATAL_ERROR/WARNING/g' ./cmake/OpenMP.cmake\nmkdir build\ncd build\ncmake -DDNNL_LIBRARY_TYPE=STATIC -DDNNL_BUILD_TESTS=OFF -DDNNL_BUILD_EXAMPLES=OFF ..\nmake -j2\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $SRC/fuzz_json.cpp \\\n\t-I/src/oneDNN/include -I/src/oneDNN/build/include \\\n\t-I/src/oneDNN/examples -I/src/oneDNN/src/../include \\\n\t-I/src/oneDNN/src/graph/utils/ \\\n\t-I/src/oneDNN/src/ \\\n\t-DDNNL_X64=1 -D__STDC_CONSTANT_MACROS -D__STDC_LIMIT_MACROS \\\n\t-o $OUT/fuzz_json \\\n\t./src/libdnnl.a\n"
    },
    "oniguruma": {
        "name": "oniguruma",
        "language": "c",
        "homepage": "https://github.com/kkos/oniguruma",
        "main_repo": "https://github.com/kkos/oniguruma.git",
        "primary_contact": "kkosako0@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/kkos/oniguruma\"\nlanguage: c\nprimary_contact: \"kkosako0@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://github.com/kkos/oniguruma.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\n./autogen.sh\n./configure\nmake clean\nmake -j$(nproc)\n\nFUZZ_SRCDIR=harnesses\nFUZZ_TARGET=fuzzer\n\n# build fuzzer\n$CC $CFLAGS -o $FUZZ_SRCDIR/fuzzer_syntax.o -I src -c -DSYNTAX_TEST $FUZZ_SRCDIR/base.c\n$CXX $CXXFLAGS -o $OUT/$FUZZ_TARGET $FUZZ_SRCDIR/fuzzer_syntax.o $LIB_FUZZING_ENGINE src/.libs/libonig.a\n\n# setup files\ncp $FUZZ_SRCDIR/$FUZZ_TARGET.options $OUT/\ncp $FUZZ_SRCDIR/ascii_compatible.dict $OUT/$FUZZ_TARGET.dict\n"
    },
    "open-json": {
        "name": "open-json",
        "language": "jvm",
        "homepage": "https://github.com/tdunning/open-json",
        "main_repo": "https://github.com/tdunning/open-json",
        "primary_contact": null,
        "vendor_ccs": [
            "arthur.chan@adalogics.com",
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/tdunning/open-json\nmain_repo: https://github.com/tdunning/open-json\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- arthur.chan@adalogics.com\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nfind ./ -name pom.xml -exec sed -i 's/source>1.6</source>1.8</g' {} \\;\nfind ./ -name pom.xml -exec sed -i 's/target>1.6</target>1.8</g' {} \\;\n\n$MVN clean package -Dmaven.javadoc.skip=true -DskipTests=true -Dpmd.skip=true \\\n    -Dencoding=UTF-8 -Dmaven.antrun.skip=true -Dcheckstyle.skip=true \\\n    -Denforcer.fail=false org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\n\ncp \"target/json-$CURRENT_VERSION.jar\" $OUT/open-json.jar\n\nALL_JARS=\"open-json.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\"$JVM_LD_LIBRARY_PATH\":\\$this_dir \\\n    \\$this_dir/jazzer_driver                        \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "open5gs": {
        "name": "open5gs",
        "language": "c",
        "homepage": "https://open5gs.org",
        "main_repo": "https://github.com/open5gs/open5gs",
        "primary_contact": "acetcom@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://open5gs.org\"\nlanguage: c\nprimary_contact: \"acetcom@gmail.com\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/open5gs/open5gs'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npushd $SRC/open5gs\n\nCFLAGS=\"$CFLAGS -Wno-compound-token-split-by-macro -Wno-format\"\nCXXFLAGS=\"$CFLAGS\"\nLDFLAGS=\"$CFLAGS\"\n\nsed -i \"s|link_args: lib_fuzzing_engine|link_args: [lib_fuzzing_engine, '-ltalloc', '-Wl,-rpath,\\$ORIGIN/lib']|\" tests/fuzzing/meson.build\n\nmeson setup builddir --default-library=static -Dfuzzing=true -Dlib_fuzzing_engine=\"$LIB_FUZZING_ENGINE\"\nninja -C builddir -k 0 || true\n\ncp builddir/tests/fuzzing/gtp_message_fuzz $OUT/gtp_message_fuzz\ncp builddir/tests/fuzzing/nas_message_fuzz $OUT/nas_message_fuzz\n\nmkdir $OUT/lib/\ncp /lib/x86_64-linux-gnu/libtalloc.so* $OUT/lib/\n\ncp tests/fuzzing/gtp_message_fuzz_seed_corpus.zip $OUT/gtp_message_fuzz_seed_corpus.zip\ncp tests/fuzzing/nas_message_fuzz_seed_corpus.zip $OUT/nas_message_fuzz_seed_corpus.zip\n\npopd\n"
    },
    "open62541": {
        "name": "open62541",
        "language": "c++",
        "homepage": "https://open62541.org/",
        "main_repo": "https://github.com/open62541/open62541.git",
        "primary_contact": "julius.pfrommer@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://open62541.org/\"\nlanguage: c++\nprimary_contact: \"julius.pfrommer@gmail.com\"\nauto_ccs:\n - \"chris_paul.iatrou@tu-dresden.de\"\nfuzzing_engines:\n - libfuzzer\n - afl\nsanitizers:\n - address\n - undefined\n - memory\nmain_repo: 'https://github.com/open62541/open62541.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir -p $WORK/open62541\ncd $WORK/open62541\n\n# LOGLEVEL:\n# <= 100 TRACE\n# <= 200 DEBUG\n# <= 300 INFO\n# <= 400 WARNING\n# <= 500 ERROR\n# <= 600 FATAL\n# > 600 No LOG output\n\ncmake -DCMAKE_BUILD_TYPE=Debug -DUA_ENABLE_AMALGAMATION=OFF \\\n      -DPYTHON_EXECUTABLE:FILEPATH=/usr/bin/python2 \\\n      -DBUILD_SHARED_LIBS=OFF -DUA_BUILD_EXAMPLES=OFF -DUA_LOGLEVEL=600 \\\n      -DUA_ENABLE_ENCRYPTION=ON \\\n      -DUA_BUILD_OSS_FUZZ=ON \\\n      $SRC/open62541/\n\n# This also builds all the fuzz targets and places them in the $OUT directory\n# Only build with one process otherwise amalgamation fails.\nmake -j1\n\n# Copy the corpus, dict and options to the $OUT dir\n$SRC/open62541/tests/fuzz/oss-fuzz-copy.sh\n\necho \"Built all fuzzer targets.\"\n"
    },
    "openapi-schema-validator": {
        "name": "openapi-schema-validator",
        "language": "python",
        "homepage": "https://github.com/p1c2u/openapi-schema-validator",
        "main_repo": "https://github.com/p1c2u/openapi-schema-validator",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/p1c2u/openapi-schema-validator\nmain_repo: https://github.com/p1c2u/openapi-schema-validator\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data $SRC/jsonschema_specifications/jsonschema_specifications/schemas:jsonschema_specifications/schemas\ndone\n"
    },
    "openbabel": {
        "name": "openbabel",
        "language": "c++",
        "homepage": "https://openbabel.org",
        "main_repo": "https://github.com/openbabel/openbabel.git",
        "primary_contact": "geoff.hutchison@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://openbabel.org\"\nlanguage: c++\nprimary_contact: \"geoff.hutchison@gmail.com\"\nauto_ccs :\n- \"p.antoine@catenacyber.fr\"\n\nsanitizers:\n- address\n- undefined\nmain_repo: 'https://github.com/openbabel/openbabel.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n# build project\nmkdir build && cd build\ncmake .. -DBUILD_SHARED=OFF -DBUILD_MIXED=ON\nmake -j $(nproc)\ncp bin/fuzz* $OUT/\n"
    },
    "opencensus-cpp": {
        "name": "opencensus-cpp",
        "language": "c++",
        "homepage": "https://opencensus.io/",
        "main_repo": "https://github.com/census-instrumentation/opencensus-cpp",
        "primary_contact": "joshuasuereth@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://opencensus.io/\"\nlanguage: c++\nprimary_contact: \"joshuasuereth@google.com\"\nauto_ccs :\n- \"p.antoine@catenacyber.fr\"\n\nsanitizers:\n- address\n- memory\nmain_repo: 'https://github.com/census-instrumentation/opencensus-cpp'\n\n# opencensus is being archived cf https://opentelemetry.io/blog/2023/sunsetting-opencensus/\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nln -sf /usr/local/bin/python3 /usr/bin/python3\nexport CXXFLAGS=\"${CXXFLAGS} -std=c++14\"\n\ngit grep cc_fuzz_target.bzl | grep BUILD | cut -d: -f1 | uniq | while read i; do sed -i -e 's=//bazel:cc_fuzz_target.bzl=@rules_fuzzing//fuzzing:cc_defs.bzl=' $i; done\n\ngit grep fuzz_target\\( | grep BUILD | cut -d: -f1 | uniq | while read i; do sed -i -e 's/fuzz_target/fuzz_test/' $i; done\n\nbazel_build_fuzz_tests\n"
    },
    "opencensus-go": {
        "name": "opencensus-go",
        "language": "go",
        "homepage": "https://github.com/census-instrumentation/opencensus-go",
        "main_repo": "https://github.com/census-instrumentation/opencensus-go",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/census-instrumentation/opencensus-go\"\nmain_repo: \"https://github.com/census-instrumentation/opencensus-go\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n\n# opencensus is being archived cf https://opentelemetry.io/blog/2023/sunsetting-opencensus/\ndisabled: true\n",
        "build_sh": "#/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./plugin/ochttp/propagation/b3/\ngo mod tidy\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ncompile_native_go_fuzzer go.opencensus.io/plugin/ochttp/propagation/b3 FuzzParseTraceID FuzzParseTraceID\n"
    },
    "opencensus-java": {
        "name": "opencensus-java",
        "language": "jvm",
        "homepage": "https://opencensus.io/",
        "main_repo": "https://github.com/census-instrumentation/opencensus-java/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://opencensus.io/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/census-instrumentation/opencensus-java/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n\n# opencensus is being archived cf https://opentelemetry.io/blog/2023/sunsetting-opencensus/\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=opencensus-java\nPROJECT_GROUP_ID=io.opencensus\nPROJECT_ARTIFACT_ID=opencensus-api\nMAIN_REPOSITORY=https://github.com/census-instrumentation/opencensus-java/\nMAVEN_ARGS=\"-Djavac.src.version=1.8 -Djavac.target.version=1.8 -Denforcer.skip=true -DskipTests\"\nGRADLE_ARGS=\"-x javadoc -x test\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\npushd $PROJECT\n  export OPENCENSUS_JAVA_VERSION=$(awk '$1 ~ /version/ {print $3}' build.gradle | sed 's/\"//g')\npopd\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  # set_project_version_in_fuzz_targets_dependency\n  \n  #install\n  # mvn -pl $PROJECT install -DskipTests\n  (cd $PROJECT && ./gradlew build $GRADLE_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  export JAVA_HOME=\"$OUT/open-jdk-8\"\n  mkdir -p $JAVA_HOME\n  rsync -aL --exclude=*.zip \"/usr/lib/jvm/java-8-openjdk-amd64/\" \"$JAVA_HOME\"\n\n  (cd $PROJECT && ./gradlew build $GRADLE_ARGS)\n  cp $SRC/project-parent/opencensus-java/api/build/libs/opencensus-api-$OPENCENSUS_JAVA_VERSION.jar $OUT/opencensus-api.jar\n  cp $SRC/project-parent/opencensus-java/impl/build/libs/opencensus-impl-$OPENCENSUS_JAVA_VERSION.jar $OUT/opencensus-impl.jar\n  cp $SRC/project-parent/opencensus-java/impl_core/build/libs/opencensus-impl-core-$OPENCENSUS_JAVA_VERSION.jar $OUT/opencensus-impl-core.jar\n  cp $SRC/project-parent/opencensus-java/exporters/trace/util/build/libs/opencensus-exporter-trace-util-$OPENCENSUS_JAVA_VERSION.jar $OUT/opencensus-exporter-trace-util.jar\n  cp $SRC/project-parent/opencensus-java/exporters/trace/ocagent/build/libs/opencensus-exporter-trace-ocagent-$OPENCENSUS_JAVA_VERSION.jar $OUT/opencensus-exporter-trace-ocagent.jar\n  cp $SRC/project-parent/opencensus-java/contrib/resource_util/build/libs/opencensus-contrib-resource-util-$OPENCENSUS_JAVA_VERSION.jar $OUT/opencensus-contrib-resource-util.jar\n  cp $SRC/project-parent/opencensus-java/exporters/trace/elasticsearch/build/libs/opencensus-exporter-trace-elasticsearch-$OPENCENSUS_JAVA_VERSION.jar $OUT/opencensus-exporter-trace-elasticsearch.jar\n  \n  ALL_JARS=\"opencensus-api.jar opencensus-impl.jar opencensus-impl-core.jar opencensus-exporter-trace-util.jar opencensus-contrib-resource-util.jar opencensus-exporter-trace-elasticsearch.jar\"\n\n  for fuzzer in $(find $SRC/project-parent/fuzz-targets -name '*Fuzzer.java' ! -name JsonConversionFuzzer.java); do\n    $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n    $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n    cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/\n    RUNTIME_CLASSPATH_ABSOLUTE=\"$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n    # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  JAVA_HOME=\\\"\\$this_dir/open-jdk-8/\\\" \\\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**:io.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\n\n  PACKAGE_NAME=\"io.opencensus.exporter.trace.elasticsearch\"\n  PACKAGE_DIR=$SRC/project-parent/fuzz-targets/src/test/java/$(echo $PACKAGE_NAME | sed 's/\\./\\//g')\n  mkdir -p $PACKAGE_DIR\n  mv $SRC/project-parent/fuzz-targets/src/test/java/com/example/JsonConversionFuzzer.java $PACKAGE_DIR\n\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes:$PACKAGE_NAME:$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\").\"\n  # replace dirname with placeholder $this_dir that will be replaced at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  JAVA_HOME=\\\"\\$this_dir/open-jdk-8/\\\" \\\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$PACKAGE_NAME.JsonConversionFuzzer \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**:io.**\\\" \\\n\\$@\" > $OUT/JsonConversionFuzzer\n  chmod u+x $OUT/JsonConversionFuzzer\n\n  rm -rf $PACKAGE_DIR\n\nfi"
    },
    "opencensus-python": {
        "name": "opencensus-python",
        "language": "python",
        "homepage": "https://opencensus.io/",
        "main_repo": "https://github.com/census-instrumentation/opencensus-python.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://opencensus.io/\"\nmain_repo: \"https://github.com/census-instrumentation/opencensus-python.git\"\nlanguage: python\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n- david@adalogics.com\n- arthur.chan@adalogics.com\n\n# opencensus is being archived cf https://opentelemetry.io/blog/2023/sunsetting-opencensus/\ndisabled: true\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n# Build and install opencensus-python library\npython3 -m pip install .\n\n# Build fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "opencsv": {
        "name": "opencsv",
        "language": "jvm",
        "homepage": "https://sourceforge.net/projects/opencsv/",
        "main_repo": "https://git.code.sf.net/p/opencsv/source/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://sourceforge.net/projects/opencsv/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://git.code.sf.net/p/opencsv/source/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=opencsv\nPROJECT_GROUP_ID=com.opencsv\nPROJECT_ARTIFACT_ID=opencsv\nMAIN_REPOSITORY=https://git.code.sf.net/p/opencsv/source/\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -Denforcer.skip=true -DskipTests -Dgpg.skip\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n  \n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "opencv": {
        "name": "opencv",
        "language": "c++",
        "homepage": "https://opencv.org/",
        "main_repo": "https://github.com/opencv/opencv.git",
        "primary_contact": "garybradski@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://opencv.org/\"\nlanguage: c++\nprimary_contact: \"garybradski@gmail.com\"\n\nauto_ccs:\n  - \"alexander.a.alekhin@gmail.com\"\n  - \"garybradski@gmail.com\"\n  - \"vrabaud@google.com\"\n  - \"kusano@google.com\"\n  - \"maksim.shabunin@gmail.com\"\n  - \"vadim.pisarevsky@gmail.com\"\n  - \"smorkalov.a.m@gmail.com\"\n  - \"shiqi.yu@gmail.com\"\n\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n\nlabels:\n  imdecode_fuzzer:\n    - sundew\n  imread_fuzzer:\n    - sundew\nmain_repo: 'https://github.com/opencv/opencv.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbuild_dir=$WORK/build-$SANITIZER\ninstall_dir=$WORK/install-$SANITIZER\n\nmkdir -p $build_dir\npushd $build_dir\ncmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=$install_dir \\\n  -DBUILD_SHARED_LIBS=OFF -DOPENCV_GENERATE_PKGCONFIG=ON \\\n  -DOPENCV_GENERATE_PKGCONFIG=ON -DOPENCV_FORCE_3RDPARTY_BUILD=ON \\\n  -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_opencv_apps=OFF \\\n  -DWITH_IMGCODEC_GIF=ON $SRC/opencv\nmake -j$(nproc)\nmake install\npopd\n\npushd $SRC\nfor fuzzer in core_fuzzer filestorage_read_file_fuzzer \\\n   filestorage_read_filename_fuzzer filestorage_read_string_fuzzer \\\n   generateusergallerycollage_fuzzer imdecode_fuzzer imencode_fuzzer \\\n   imread_fuzzer readnetfromtensorflow_fuzzer; do\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $fuzzer.cc -std=c++11 \\\n-I$install_dir/include/opencv4 -L$install_dir/lib \\\n-L$install_dir/lib/opencv4/3rdparty \\\n-lopencv_dnn -lopencv_objdetect -lopencv_photo -lopencv_ml -lopencv_gapi \\\n-lopencv_stitching -lopencv_video -lopencv_calib3d -lopencv_features2d \\\n-lopencv_highgui -lopencv_videoio -lopencv_imgcodecs -lopencv_imgproc \\\n-lopencv_flann -lopencv_core -llibjpeg-turbo -llibwebp -llibpng -llibtiff \\\n-llibopenjp2 -lIlmImf -llibprotobuf -lzlib -littnotify -lippiw \\\n-lippicv -lade -ldl -lm -lpthread -lrt \\\n-o $OUT/$fuzzer\ndone\npopd\n"
    },
    "opendal": {
        "name": "opendal",
        "language": "rust",
        "homepage": "https://opendal.apache.org/",
        "main_repo": "https://github.com/apache/incubator-opendal.git",
        "primary_contact": "xuanwo.cn@gmail.com",
        "vendor_ccs": [
            "commits@opendal.apache.org"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://opendal.apache.org/\"\nmain_repo: \"https://github.com/apache/incubator-opendal.git\"\nlanguage: rust\nprimary_contact: \"xuanwo.cn@gmail.com\"\nauto_ccs:\n    - \"dqhl76@gmail.com\"\n    - \"ouyangjun1999@gmail.com\"\n    - \"suyanhanx@gmail.com\"\n    - \"yinmingzhuo@gmail.com\"\nvendor_ccs:\n    - \"commits@opendal.apache.org\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nfile_github_issue: True\n",
        "build_sh": "# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n################################################################################\n\n# build fuzz targets\ncd $SRC/opendal/core\ncargo fuzz build -O --debug-assertions\n\n# copy fuzz targets to $OUT\ntargets=(\n  fuzz_reader\n  fuzz_writer\n)\n\ncp $SRC/.fs.env $OUT/.fs.env\ncp $SRC/opendal/core/target/x86_64-unknown-linux-gnu/release/fuzz_reader $OUT/fuzz_reader_fs\ncp $SRC/opendal/core/target/x86_64-unknown-linux-gnu/release/fuzz_reader $OUT/fuzz_writer_fs\n\ncp $SRC/.memory.env $OUT/.memory.env\ncp $SRC/opendal/core/target/x86_64-unknown-linux-gnu/release/fuzz_reader $OUT/fuzz_reader_memory\ncp $SRC/opendal/core/target/x86_64-unknown-linux-gnu/release/fuzz_reader $OUT/fuzz_writer_memory\n\n"
    },
    "opendds": {
        "name": "opendds",
        "language": "c",
        "homepage": "https://opendds.org/",
        "main_repo": "https://github.com/objectcomputing/OpenDDS.git",
        "primary_contact": "mitza@objectcomputing.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://opendds.org/\"\nlanguage: c\nauto_ccs:\n  - \"federico.maggi@gmail.com\"\nprimary_contact: \"mitza@objectcomputing.com\"\nsanitizers:\n- address\n- undefined\nmain_repo: 'https://github.com/objectcomputing/OpenDDS.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "opendnp3": {
        "name": "opendnp3",
        "language": "c++",
        "homepage": "http://www.automatak.com/opendnp3/",
        "main_repo": "https://github.com/dnp3/opendnp3.git",
        "primary_contact": "jadamcrain@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"http://www.automatak.com/opendnp3/\"\nlanguage: c++\nprimary_contact: \"jadamcrain@gmail.com\"\nauto_ccs :\n  - \"p.antoine@catenacyber.fr\"\n  - \"jadamcrain@gmail.com\"\n\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\nmain_repo: 'https://github.com/dnp3/opendnp3.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\ncmake -DDNP3_FUZZING=ON -DDNP3_STATIC_LIBS=ON .\nmake all\n\ncd cpp/tests/fuzz\n\nTARGETS=\"fuzzdecoder \\\n  fuzzoutstation \\\n  fuzzmaster\"\n\necho \"detect_leaks=0\" >> fuzzdnp3.options\nfor target in $TARGETS; do\n  # build corpus\n  zip -r ${target}_seed_corpus.zip corpus/*.dnp\n  cp ${target}_seed_corpus.zip $OUT/\n\n  # export other associated stuff\n  cp fuzzdnp3.options $OUT/${target}.options\n\n  # build fuzz target\n  $CXX $CXXFLAGS -I. -I ../../lib/include/ -I ../../tests/lib/src/ \\\n    -I ../../lib/src/ -I ../../../_deps/exe4cpp-src/src/ -I ../dnp3mocks/include/ \\\n    -I ../../../_deps/ser4cpp-src/src/ -I ../../../_deps/asio-src/asio/include \\\n    -c ${target}.cpp -o ${target}.o\n  $CXX $CXXFLAGS -std=c++14 ${target}.o -o $OUT/${target} ../dnp3mocks/libdnp3mocks.a ../../lib/libopendnp3.a $LIB_FUZZING_ENGINE\ndone\n"
    },
    "openexr": {
        "name": "openexr",
        "language": "c++",
        "homepage": "https://openexr.com",
        "main_repo": "https://github.com/AcademySoftwareFoundation/openexr",
        "primary_contact": "twodeecoda@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://openexr.com\"\nlanguage: c++\nprimary_contact: \"twodeecoda@gmail.com\"\nauto_ccs:\n  - \"cbpilm@gmail.com\"\n  - \"security@openexr.org\"\n  - \"kdt3rd@gmail.com\"\nmain_repo: 'https://github.com/AcademySoftwareFoundation/openexr'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $WORK/\n\nCMAKE_SETTINGS=(\n  \"-D BUILD_SHARED_LIBS=OFF\"         # Build static libraries only\n  \"-D BUILD_TESTING=OFF\"             # Or tests\n  \"-D OPENEXR_INSTALL_EXAMPLES=OFF\"  # Or examples\n  \"-D OPENEXR_LIB_SUFFIX=\"           # Don't append the version number to library files\n)\ncmake $SRC/openexr ${CMAKE_SETTINGS[@]}\nmake -j$(nproc)\n\nINCLUDES=(\n  \"-I $SRC\"\n  \"-I $SRC/openexr/src/lib/OpenEXRCore\"\n  \"-I $SRC/openexr/src/lib/OpenEXR\"\n  \"-I $SRC/openexr/src/lib/OpenEXRUtil\"\n  \"-I $WORK/cmake\"\n)\n\nLIBS=(\n  \"$WORK/src/lib/OpenEXRUtil/libOpenEXRUtil.a\"\n  \"$WORK/src/lib/OpenEXR/libOpenEXR.a\"\n  \"$WORK/src/lib/OpenEXRCore/libOpenEXRCore.a\"\n  \"$WORK/src/lib/IlmThread/libIlmThread.a\"\n  \"$WORK/src/lib/Iex/libIex.a\"\n  \"$WORK/_deps/imath-build/src/Imath/libImath*.a\"\n)\n\nfor fuzzer in $SRC/openexr/src/test/OpenEXRFuzzTest/oss-fuzz/*_fuzzer.cc; do\n  fuzzer_basename=$(basename -s .cc $fuzzer)\n  $CXX $CXXFLAGS -std=c++11 -pthread ${INCLUDES[@]} $fuzzer $LIB_FUZZING_ENGINE ${LIBS[@]} -lz \\\n    -o $OUT/$fuzzer_basename\ndone\n"
    },
    "openh264": {
        "name": "openh264",
        "language": "c++",
        "homepage": "https://www.openh264.org",
        "main_repo": "https://github.com/cisco/openh264.git",
        "primary_contact": "huili2@cisco.com",
        "vendor_ccs": [
            "dminor@mozilla.com",
            "jmuizelaar@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.openh264.org\"\nlanguage: c++\nprimary_contact: \"huili2@cisco.com\"\nauto_ccs:\n  - \"guangwwa@cisco.com\"\n  - \"openh264-review@cisco.com\"\n  - \"sijchen@cisco.com\"\n  - \"yanqian@cisco.com\"\n  - \"xiaotianshimail@gmail.com\"\nvendor_ccs:\n  - \"dminor@mozilla.com\"\n  - \"jmuizelaar@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n - i386\n - x86_64\nmain_repo: 'https://github.com/cisco/openh264.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build\nif [[ $CXXFLAGS = *sanitize=memory* ]]; then\n  ASM_BUILD=No\nelse\n  ASM_BUILD=Yes\nfi\nmake -j$(nproc) ARCH=$ARCHITECTURE USE_ASM=$ASM_BUILD BUILDTYPE=Debug libopenh264.a\n$CXX $CXXFLAGS -o $OUT/decoder_fuzzer -I./codec/api/wels -I./codec/console/common/inc -I./codec/common/inc -L. $LIB_FUZZING_ENGINE $SRC/decoder_fuzzer.cpp libopenh264.a\n"
    },
    "openjpeg": {
        "name": "openjpeg",
        "language": "c++",
        "homepage": "http://www.openjpeg.org/",
        "main_repo": "https://github.com/uclouvain/openjpeg",
        "primary_contact": "antonin@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"http://www.openjpeg.org/\"\nlanguage: c++\nprimary_contact: \"antonin@gmail.com\"\nauto_ccs:\n  - \"even.rouault@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\nmain_repo: 'https://github.com/uclouvain/openjpeg'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Get data. We do this here to resolve CIFuzz issues\n# CC https://github.com/uclouvain/openjpeg/pull/1386\ngit clone --depth 1 https://github.com/uclouvain/openjpeg-data data\n\nmkdir build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Release ..\nmake clean -s\nmake -j$(nproc) -s\ncd ..\n\n./tests/fuzzers/build_google_oss_fuzzers.sh\n./tests/fuzzers/build_seed_corpus.sh\n"
    },
    "opennavsurf-bag": {
        "name": "opennavsurf-bag",
        "language": "c++",
        "homepage": "https://github.com/OpenNavigationSurface/BAG",
        "main_repo": "https://github.com/OpenNavigationSurface/BAG",
        "primary_contact": "selimnairb@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/OpenNavigationSurface/BAG\"\nlanguage: c++\nprimary_contact: \"selimnairb@gmail.com\"\nauto_ccs:\n  - \"bmiles@ccom.unh.edu\"\n  - \"brc@ccom.unh.edu\"\n  - \"glen.rice@noaa.gov\"\n  - \"dongpengxu.unh@gmail.com\"\n  - \"akshitamavurapu@gmail.com\"\n  - \"giuseppemasetti@gmail.com\"\n  - \"apapetti@outlook.com\"\narchitectures:\n  - x86_64\nmain_repo: 'https://github.com/OpenNavigationSurface/BAG'\nsanitizers:\n  - address\n  - undefined\n  - memory\n",
        "build_sh": null
    },
    "openpyxl": {
        "name": "openpyxl",
        "language": "python",
        "homepage": "https://foss.heptapod.net/openpyxl/openpyxl",
        "main_repo": "https://foss.heptapod.net/openpyxl/openpyxl",
        "primary_contact": "charlie.clark@clark-consulting.eu",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://foss.heptapod.net/openpyxl/openpyxl\nlanguage: python\nmain_repo: https://foss.heptapod.net/openpyxl/openpyxl\nprimary_contact: charlie.clark@clark-consulting.eu\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "opensc": {
        "name": "opensc",
        "language": "c++",
        "homepage": "https://github.com/OpenSC/OpenSC/",
        "main_repo": "https://github.com/OpenSC/OpenSC",
        "primary_contact": "frankmorgner@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/OpenSC/OpenSC/\"\nlanguage: c++\nprimary_contact: \"frankmorgner@gmail.com\"\nauto_ccs:\n  - \"martin.paljak@gmail.com\"\n  - \"viktor.tarasov@gmail.com\"\n  - \"ludovic.rousseau@gmail.com\"\n  - \"andreas.schwier@cardcontact.de\"\n  - \"deengert@gmail.com\"\n  - \"jakuje@gmail.com\"\n  - \"xhanulik@gmail.com\"\n  - \"popovec.peter@gmail.com\"\nmain_repo: 'https://github.com/OpenSC/OpenSC'\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./bootstrap\n# FIXME FUZZING_LIBS=\"$LIB_FUZZING_ENGINE\" fails with some missing C++ library, I don't know how to fix this\n./configure --disable-optimization --disable-shared --disable-pcsc --enable-ctapi --enable-fuzzing FUZZING_LIBS=\"$LIB_FUZZING_ENGINE\"\nmake -j4\n\nfuzzerFiles=$(find $SRC/opensc/src/tests/fuzzing/ -name \"fuzz_*.c\")\n\nfor F in $fuzzerFiles; do\n    fuzzerName=$(basename $F .c)\n    cp \"$SRC/opensc/src/tests/fuzzing/$fuzzerName\" $OUT\n    if [ -d \"$SRC/opensc/src/tests/fuzzing/corpus/${fuzzerName}\" ]; then\n        zip -j $OUT/${fuzzerName}_seed_corpus.zip $SRC/opensc/src/tests/fuzzing/corpus/${fuzzerName}/*\n    fi\ndone\n"
    },
    "opensips": {
        "name": "opensips",
        "language": "c",
        "homepage": "https://opensips.org/",
        "main_repo": "https://github.com/OpenSIPS/opensips",
        "primary_contact": "liviu@opensips.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://opensips.org/\"\nmain_repo: \"https://github.com/OpenSIPS/opensips\"\nprimary_contact: \"liviu@opensips.org\"\nlanguage: c\nauto_ccs:\n  - \"david@adalogics.com\"\n  - \"liviu.chircu@gmail.com\"\n  - \"bogdan.andrei.iancu@gmail.com\"\n  - \"rvlad.patrascu@gmail.com\"\n  - \"razvan.crainea@gmail.com\"\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbash -x ./test/fuzz/oss-fuzz-build.sh\n"
    },
    "opensk": {
        "name": "opensk",
        "language": "rust",
        "homepage": "https://github.com/google/OpenSK",
        "main_repo": "https://github.com/google/OpenSK",
        "primary_contact": "opensk@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/google/OpenSK\"\nmain_repo: \"https://github.com/google/OpenSK\"\nprimary_contact: \"opensk@google.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"jmichel@google.com\"\n  - \"kaczmarczyck@google.com\"\n  - \"cretin@google.com\"\n  - \"david@adalogics.com\"\n  - \"hcyang@google.com\"\nfile_github_issue: True\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFUZZ_TARGET_OUTPUT_DIR=fuzz/target/x86_64-unknown-linux-gnu/release\n\nbuild_and_copy() {\n  pushd \"$1\"\n  cargo fuzz build --release --debug-assertions\n  for f in fuzz/fuzz_targets/*.rs\n  do\n    cp ${FUZZ_TARGET_OUTPUT_DIR}/$(basename ${f%.*}) $OUT/\n  done\n  popd\n}\n\ncd OpenSK\n\n# CTAP library fuzzing targets\nbuild_and_copy libraries/opensk\n\n# persistent storage library\nbuild_and_copy libraries/persistent_store\n\n# CBOR crate\nbuild_and_copy libraries/cbor\n\n"
    },
    "openslide": {
        "name": "openslide",
        "language": "c",
        "homepage": "https://openslide.org/",
        "main_repo": "https://github.com/openslide/openslide",
        "primary_contact": "bgilbert@andrew.cmu.edu",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: https://openslide.org/\nlanguage: c\nmain_repo: https://github.com/openslide/openslide\nprimary_contact: bgilbert@andrew.cmu.edu\n",
        "build_sh": null
    },
    "openssh": {
        "name": "openssh",
        "language": "c++",
        "homepage": "https://www.openssh.com/",
        "main_repo": "https://github.com/openssh/openssh-portable",
        "primary_contact": "djm@mindrot.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://www.openssh.com/\nlanguage: c++\nprimary_contact: \"djm@mindrot.org\"\nauto_ccs:\n        - \"dtucker@dtucker.net\"\n        - \"djm@google.com\"\nmain_repo: 'https://github.com/openssh/openssh-portable'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Enable null cipher\nsed -i 's/#define CFLAG_INTERNAL.*/#define CFLAG_INTERNAL 0/' cipher.c\n\n# Turn off agent unlock password failure delays\nsed -i 's|\\(usleep.*\\)|// \\1|' ssh-agent.c\n\n# Build project\nautoreconf\nenv\nif ! env CFLAGS=\"\" ./configure \\\n    --without-hardening \\\n    --without-zlib-version-check \\\n    --with-cflags=\"-DWITH_XMSS=1\" \\\n    --with-cflags-after=\"$CFLAGS\" \\\n    --with-ldflags-after=\"-g $CFLAGS\" ; then\n\techo \"------ config.log:\" 1>&2\n\tcat config.log 1>&2\n\techo \"ERROR: configure failed\" 1>&2\n\texit 1\nfi\nmake -j$(nproc) all\n\n# Build fuzzers\nEXTRA_CFLAGS=\"-DCIPHER_NONE_AVAIL=1\"\nSTATIC_CRYPTO=\"-Wl,-Bstatic -lcrypto -Wl,-Bdynamic\"\n\nSK_NULL=ssh-sk-null.o\nSK_DUMMY=sk-dummy.o\n\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c \\\n\tregress/misc/fuzz-harness/ssh-sk-null.cc -o ssh-sk-null.o\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c \\\n\t-DSK_DUMMY_INTEGRATE=1 regress/misc/sk-dummy/sk-dummy.c -o sk-dummy.o\n\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/pubkey_fuzz.cc -o $OUT/pubkey_fuzz \\\n\t-lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO $LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/privkey_fuzz.cc -o $OUT/privkey_fuzz \\\n\t-lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO $LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/sig_fuzz.cc -o $OUT/sig_fuzz \\\n\t-lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO $LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/authopt_fuzz.cc -o $OUT/authopt_fuzz \\\n\tauth-options.o -lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/sshsig_fuzz.cc -o $OUT/sshsig_fuzz \\\n\tsshsig.o -lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/sshsigopt_fuzz.cc -o $OUT/sshsigopt_fuzz \\\n\tsshsig.o -lssh -lopenbsd-compat $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/kex_fuzz.cc -o $OUT/kex_fuzz \\\n\t-lssh -lopenbsd-compat -lz $SK_NULL $STATIC_CRYPTO \\\n\t$LIB_FUZZING_ENGINE\n\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c \\\n\tregress/misc/fuzz-harness/agent_fuzz_helper.c -o agent_fuzz_helper.o\n$CC $CFLAGS $EXTRA_CFLAGS -I. -g -c -DENABLE_SK_INTERNAL=1 ssh-sk.c -o ssh-sk.o\n$CXX $CXXFLAGS -std=c++11 $EXTRA_CFLAGS -I. -L. -Lopenbsd-compat -g \\\n\tregress/misc/fuzz-harness/agent_fuzz.cc -o $OUT/agent_fuzz \\\n\t$SK_DUMMY agent_fuzz_helper.o ssh-sk.o -lssh -lopenbsd-compat -lz \\\n\t$STATIC_CRYPTO $LIB_FUZZING_ENGINE\n\n# Prepare seed corpora\nCASES=\"$SRC/openssh-fuzz-cases\"\n(set -e ; cd ${CASES}/key ; zip -r $OUT/pubkey_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/privkey ; zip -r $OUT/privkey_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/sig ; zip -r $OUT/sig_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/authopt ; zip -r $OUT/authopt_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/sshsig ; zip -r $OUT/sshsig_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/sshsigopt ; zip -r $OUT/sshsigopt_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/kex ; zip -r $OUT/kex_fuzz_seed_corpus.zip .)\n(set -e ; cd ${CASES}/agent ; zip -r $OUT/agent_fuzz_seed_corpus.zip .)\n"
    },
    "openssl": {
        "name": "openssl",
        "language": "c++",
        "homepage": "https://www.openssl.org/",
        "main_repo": "https://github.com/openssl/openssl.git",
        "primary_contact": "kurt@roeckx.be",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.openssl.org/\"\nlanguage: c++\nprimary_contact: \"kurt@roeckx.be\"\nauto_ccs:\n - \"openssl-security@openssl.org\"\n - \"matt@openssl.org\"\n - \"richard@levitte.org\"\n - \"tomas@openssl.org\"\n - \"paulidale@openssl.org\"\n - \"nhorman@openssl.org\"\n - \"tjh@openssl.org\"\n - \"tjh@cryptsoft.com\"\n - \"sashan@openssl.org\"\n - \"viktor@openssl.org\"\n - \"andrewd@openssl.org\"\nsanitizers:\n - address\n - memory:\n    experimental: True\n - undefined\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/openssl/openssl.git'\nfuzzing_engines:\n - afl\n - honggfuzz\n - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport FUZZ_INTROSPECTOR_CONFIG=$SRC/openssl/fuzz/fuzz_introspector_exclusion.config\n\nCONFIGURE_FLAGS=\"--debug enable-fuzz-libfuzzer -DPEDANTIC -DFUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION no-shared enable-tls1_3 enable-rc5 enable-md2 enable-ssl3 enable-ssl3-method enable-nextprotoneg enable-weak-ssl-ciphers --with-fuzzer-lib=/usr/lib/libFuzzingEngine $CFLAGS -fno-sanitize=alignment\"\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n  CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS no-asm\"\nfi\nif [[ $CFLAGS != *-m32* ]]\nthen\n  CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS enable-ec_nistp_64_gcc_128\"\nfi\nif [[ $CFLAGS = *-m32* ]]\nthen\n  # Prevent error:\n  #\n  # error while loading shared libraries:\n  # libatomic.so.1: cannot open shared object file:\n  # No such file or directory\n  CONFIGURE_FLAGS=\"$CONFIGURE_FLAGS no-threads\"\nfi\n\nfunction build_fuzzers() {\n    SUFFIX=$1\n    if [[ $CFLAGS = *-m32* ]]\n    then\n        setarch i386 ./config $CONFIGURE_FLAGS\n    else\n        ./config $CONFIGURE_FLAGS\n    fi\n\n    make -j$(nproc) LDCMD=\"$CXX $CXXFLAGS\"\n\n    fuzzers=$(find fuzz -executable -type f '!' -name \\*.py '!' -name \\*-test '!' -name \\*.pl '!' -name \\*.sh)\n    for f in $fuzzers; do\n        fuzzer=$(basename $f)\n        cp $f $OUT/${fuzzer}${SUFFIX}\n        zip -j $OUT/${fuzzer}${SUFFIX}_seed_corpus.zip fuzz/corpora/${fuzzer}/*\n    done\n\n    options=$(find $SRC/ -maxdepth 1 -name '*.options')\n    for o in $options; do\n        o_base=$(basename $o)\n        fuzzer=${o_base%\".options\"}\n        cp $o $OUT/${fuzzer}${SUFFIX}.options\n    done\n    cp fuzz/oids.txt $OUT/asn1${SUFFIX}.dict\n    cp fuzz/oids.txt $OUT/x509${SUFFIX}.dict\n    if [ \"$SANITIZER\" == coverage ]; then\n      DESTDIR=$OUT/src/openssl${SUFFIX#_}\n      SOURCES=\"include crypto ssl providers engines fuzz\"\n      mkdir -p $DESTDIR\n      if [ -f e_os.h ]; then\n        cp e_os.h $DESTDIR/\n      fi\n      find $SOURCES -type f -a \\( -name '*.[ch]' -o -name '*.inc' \\) -exec cp --parents '{}' $DESTDIR/ \\;\n    fi\n    df\n    rm -rf * .git*\n    df\n}\n\ncd $SRC/openssl/\nbuild_fuzzers \"\"\n\n# In introspector only build the master branch\nif [[ \"$SANITIZER\" == introspector ]]; then\n  exit 0\nfi\n\ncd $SRC/openssl30/\nbuild_fuzzers \"_30\"\ncd $SRC/openssl31/\nbuild_fuzzers \"_31\"\ncd $SRC/openssl32/\nbuild_fuzzers \"_32\"\n"
    },
    "opentelemetry-go-contrib": {
        "name": "opentelemetry-go-contrib",
        "language": "go",
        "homepage": "https://opentelemetry.io/",
        "main_repo": "https://github.com/open-telemetry/opentelemetry-go-contrib/",
        "primary_contact": "cncf-opentelemetry-tc@lists.cncf.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://opentelemetry.io/\"\nlanguage: go\nprimary_contact: \"cncf-opentelemetry-tc@lists.cncf.io\"\nmain_repo: \"https://github.com/open-telemetry/opentelemetry-go-contrib/\"\nauto_ccs:\n  - \"pellared@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/opentelemetry-go-contrib\n\npushd config/v0.3.0\ngo get github.com/AdamKorcz/go-118-fuzz-build/testing\ncompile_native_go_fuzzer $(go list) FuzzJSON FuzzJSON\ncompile_native_go_fuzzer $(go list) FuzzYAML FuzzYAML\npopd\n"
    },
    "opentelemetry": {
        "name": "opentelemetry",
        "language": "go",
        "homepage": "https://opentelemetry.io/",
        "main_repo": "https://github.com/open-telemetry/community",
        "primary_contact": "cncf-opentelemetry-tc@lists.cncf.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://opentelemetry.io/\"\nlanguage: go\nprimary_contact: \"cncf-opentelemetry-tc@lists.cncf.io\"\nmain_repo: \"https://github.com/open-telemetry/community\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/go-118-fuzz-build\ngo build .\nmv go-118-fuzz-build /root/go/bin/\n\ncd $SRC/opentelemetry-collector-contrib\ncd processor/groupbyattrsprocessor\nprintf \"package groupbyattrsprocessor \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzProcessTraces FuzzProcessTraces_groupbyattrsprocessor\ncompile_native_go_fuzzer $(go list) FuzzProcessLogs FuzzProcessLogs_groupbyattrsprocessor\ncompile_native_go_fuzzer $(go list) FuzzProcessMetrics FuzzProcessMetrics_groupbyattrsprocessor\n\ncd ../logdedupprocessor\nprintf \"package logdedupprocessor \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzConsumeLogs FuzzConsumeLogs_logdedupprocessor\n\ncd ../probabilisticsamplerprocessor\nprintf \"package probabilisticsamplerprocessor \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzConsumeTraces FuzzConsumeTraces_probabilisticsamplerprocessor\ncompile_native_go_fuzzer $(go list) FuzzConsumeLogs FuzzConsumeLogs__probabilisticsamplerprocessor\n\ncd ../sumologicprocessor\nprintf \"package sumologicprocessor \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzProcessTraces FuzzProcessTraces_sumologicprocessor\ncompile_native_go_fuzzer $(go list) FuzzProcessLogs FuzzProcessLogs_sumologicprocessor\ncompile_native_go_fuzzer $(go list) FuzzProcessMetrics FuzzProcessMetrics_sumologicprocessor\n\ncd ../tailsamplingprocessor\nprintf \"package tailsamplingprocessor \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzConsumeTraces FuzzConsumeTraces_tailsamplingprocessor\n\ncd ../../receiver/lokireceiver/internal\nprintf \"package internal \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzParseRequest FuzzParseRequest_loki\n\ncd ../../mongodbatlasreceiver\nprintf \"package mongodbatlasreceiver \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzHandleReq FuzzHandleReq_mongodbatlasreceiver\n\ncd ../sapmreceiver\nprintf \"package sapmreceiver \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzParseTraceV2Request FuzzParseTraceV2Request_sapmreceiver\n\ncd ../signalfxreceiver\nprintf \"package signalfxreceiver \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzHandleDatapointReq FuzzHandleDatapointReq_signalfxreceiver\n\ncd ../splunkhecreceiver\nprintf \"package splunkhecreceiver \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzHandleRawReq FuzzHandleRawReq_splunkhecreceiver\n\ncd ../cloudflarereceiver\nprintf \"package cloudflarereceiver \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzHandleReq FuzzHandleReq_cloudflarereceiver\n\ncd ../webhookeventreceiver\nprintf \"package webhookeventreceiver \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer $(go list) FuzzHandleReq FuzzHandleReq_webhookeventreceiver\n\ncd $SRC/opentelemetry-collector\ncd receiver/otlpreceiver\nprintf \"package otlpreceiver \\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./fuzz-register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer go.opentelemetry.io/collector/receiver/otlpreceiver FuzzReceiverHandlers FuzzReceiverHandlers\ncd -\n\ncd pdata\nprintf \"package ptrace\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > $SRC/opentelemetry-collector/pdata/ptrace/register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/plog FuzzUnmarshalJsonLogs FuzzUnmarshalJsonLogs_plogs\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/plog FuzzUnmarshalPBLogs FuzzUnmarshalPBLogs_plogs\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/plog/plogotlp FuzzRequestUnmarshalJSON FuzzRequestUnmarshalJSON_plogotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/plog/plogotlp FuzzResponseUnmarshalJSON FuzzResponseUnmarshalJSON_plogotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/plog/plogotlp FuzzRequestUnmarshalProto FuzzRequestUnmarshalProto_plogotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/plog/plogotlp FuzzResponseUnmarshalProto FuzzResponseUnmarshalProto_plogotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pmetric FuzzUnmarshalMetrics FuzzUnmarshalMetrics_pmetric\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pmetric/pmetricotlp FuzzRequestUnmarshalJSON FuzzRequestUnmarshalJSON_pmetricotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pmetric/pmetricotlp FuzzResponseUnmarshalJSON FuzzResponseUnmarshalJSON_pmetricotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pmetric/pmetricotlp FuzzRequestUnmarshalProto FuzzRequestUnmarshalProto_pmetricotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pmetric/pmetricotlp FuzzResponseUnmarshalProto FuzzResponseUnmarshalProto_pmetricotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/ptrace FuzzUnmarshalPBTraces FuzzUnmarshalPBTraces_ptrace\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/ptrace FuzzUnmarshalJSONTraces FuzzUnmarshalJSONTraces_ptrace\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/ptrace/ptraceotlp FuzzRequestUnmarshalJSON FuzzRequestUnmarshalJSON_ptraceotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/ptrace/ptraceotlp FuzzResponseUnmarshalJSON FuzzResponseUnmarshalJSON_ptraceotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/ptrace/ptraceotlp FuzzRequestUnmarshalProto FuzzRequestUnmarshalProto_ptraceotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/ptrace/ptraceotlp FuzzResponseUnmarshalProto FuzzResponseUnmarshalProto_ptraceotlp\n\ncd $SRC/opentelemetry-collector/pdata/pprofile\nprintf \"package pprofile\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=$SRC/go-118-fuzz-build\ngo mod tidy\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pprofile/pprofileotlp FuzzRequestUnmarshalJSON FuzzRequestUnmarshalJSON_pprofileotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pprofile/pprofileotlp FuzzResponseUnmarshalJSON FuzzResponseUnmarshalJSON_pprofileotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pprofile/pprofileotlp FuzzRequestUnmarshalProto FuzzRequestUnmarshalProto_pprofileotlp\ncompile_native_go_fuzzer go.opentelemetry.io/collector/pdata/pprofile/pprofileotlp FuzzResponseUnmarshalProto FuzzResponseUnmarshalProto_pprofileotlp\n\ncp $SRC/dict $OUT/FuzzUnmarshalJsonLogs_plogs.dict\ncp $SRC/dict $OUT/FuzzRequestUnmarshalJSON_pprofileotlp.dict\ncp $SRC/dict $OUT/FuzzResponseUnmarshalJSON_pprofileotlp.dict\ncp $SRC/dict $OUT/FuzzRequestUnmarshalJSON_plogotlp.dict\ncp $SRC/dict $OUT/FuzzResponseUnmarshalJSON_plogotlp.dict\ncp $SRC/dict $OUT/FuzzUnmarshalMetrics_pmetric.dict\ncp $SRC/dict $OUT/FuzzRequestUnmarshalJSON_pmetricotlp.dict\ncp $SRC/dict $OUT/FuzzResponseUnmarshalJSON_pmetricotlp.dict\ncp $SRC/dict $OUT/FuzzUnmarshalJSONTraces_ptrace.dict\ncp $SRC/dict $OUT/FuzzRequestUnmarshalJSON_ptraceotlp.dict\ncp $SRC/dict $OUT/FuzzResponseUnmarshalJSON_ptraceotlp.dict\n\nzip -j $OUT/FuzzUnmarshalJsonLogs_plogs_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzRequestUnmarshalJSON_pprofileotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzResponseUnmarshalJSON_pprofileotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzRequestUnmarshalJSON_plogotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzResponseUnmarshalJSON_plogotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzUnmarshalMetrics_pmetric_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzRequestUnmarshalJSON_pmetricotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzResponseUnmarshalJSON_pmetricotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzUnmarshalJSONTraces_ptrace_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzRequestUnmarshalJSON_ptraceotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\nzip -j $OUT/FuzzResponseUnmarshalJSON_ptraceotlp_seed_corpus.zip $SRC/go-fuzz-corpus/json/corpus/*\n\n"
    },
    "openthread": {
        "name": "openthread",
        "language": "c++",
        "homepage": "https://github.com/openthread/openthread",
        "main_repo": "https://github.com/openthread/openthread",
        "primary_contact": "jonhui@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/openthread/openthread\"\nlanguage: c++\nprimary_contact: \"jonhui@google.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/openthread/openthread'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nbash tests/fuzz/oss-fuzz-build\n"
    },
    "openvpn": {
        "name": "openvpn",
        "language": "c",
        "homepage": "http://community.openvpn.net",
        "main_repo": "https://github.com/OpenVPN/openvpn",
        "primary_contact": "arne@rfc2549.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://community.openvpn.net\"\nlanguage: c\nprimary_contact: \"arne@rfc2549.org\"\nmain_repo: \"https://github.com/OpenVPN/openvpn\"\nauto_ccs:\n - \"david@adalogics.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nBASE=${SRC}/openvpn/src/openvpn\n\napply_sed_changes() {\n  sed -i 's/read(/fuzz_read(/g' ${BASE}/console_systemd.c\n  sed -i 's/fgets(/fuzz_fgets(/g' ${BASE}/console_builtin.c\n  sed -i 's/fgets(/fuzz_fgets(/g' ${BASE}/misc.c\n  sed -i 's/#include \"forward.h\"/#include \"fuzz_header.h\"\\n#include \"forward.h\"/g' ${BASE}/proxy.c\n  sed -i 's/select(/fuzz_select(/g' ${BASE}/proxy.c\n  sed -i 's/send(/fuzz_send(/g' ${BASE}/proxy.c\n  sed -i 's/recv(/fuzz_recv(/g' ${BASE}/proxy.c\n  sed -i 's/isatty/fuzz_isatty/g' ${BASE}/console_builtin.c\n\n  sed -i 's/fopen/fuzz_fopen/g' ${BASE}/console_builtin.c\n  sed -i 's/fclose/fuzz_fclose/g' ${BASE}/console_builtin.c\n\n  sed -i 's/sendto/fuzz_sendto/g' ${BASE}/socket.h\n  sed -i 's/#include \"misc.h\"/#include \"misc.h\"\\nextern size_t fuzz_sendto(int sockfd, void *buf, size_t len, int flags, struct sockaddr *dest_addr, socklen_t addrlen);/g' ${BASE}/socket.h\n\n  sed -i 's/fp = (flags/fp = stdout;\\n\\/\\//g' ${BASE}/error.c\n\n  sed -i 's/crypto_msg(M_FATAL/crypto_msg(M_WARN/g' ${BASE}/crypto_openssl.c\n  sed -i 's/msg(M_FATAL, \\\"Cipher/return;msg(M_FATAL, \\\"Cipher/g' ${BASE}/crypto.c\n  sed -i 's/msg(M_FATAL/msg(M_WARN/g' ${BASE}/crypto.c\n\n  sed -i 's/= write/= fuzz_write/g' ${BASE}/packet_id.c\n}\n\n# Changes in the code so we can fuzz it.\ngit apply $SRC/crypto_patch.txt\n\necho \"\" >> ${BASE}/openvpn.c\necho \"#include \\\"fake_fuzz_header.h\\\"\" >> ${BASE}/openvpn.c\necho \"ssize_t fuzz_get_random_data(void *buf, size_t len) { return 0; }\" >> ${BASE}/fake_fuzz_header.h\necho \"int fuzz_success;\" >> ${BASE}/fake_fuzz_header.h\n\n# Apply hooking changes\napply_sed_changes\n\n# Copy corpuses out\nzip -r $OUT/fuzz_verify_cert_seed_corpus.zip $SRC/boringssl/fuzz/cert_corpus\n\n# Build openvpn\nautoreconf -ivf\n./configure --disable-lz4 --with-crypto-library=openssl OPENSSL_LIBS=\"-L/usr/local/ssl/ -lssl -lcrypto\" OPENSSL_CFLAGS=\"-I/usr/local/ssl/include/\"\nmake\n\n# Make openvpn object files into a library we can link fuzzers to\ncd src/openvpn\nrm openvpn.o\nar r libopenvpn.a *.o\n\n# Compile our fuzz helper\n$CXX $CXXFLAGS -g -c $SRC/fuzz_randomizer.cpp -o $SRC/fuzz_randomizer.o\n\n# Compile the fuzzers\nfor fuzzname in dhcp misc base64 proxy buffer route packet_id mroute list verify_cert; do\n    $CC -DHAVE_CONFIG_H -I. -I../.. -I../../include -I../../src/compat -I/usr/include/libnl3/ \\\n      -DPLUGIN_LIBDIR=\\\"/usr/local/lib/openvpn/plugins\\\" -std=c99 $CFLAGS \\\n      -c $SRC/fuzz_${fuzzname}.c -o $SRC/fuzz_${fuzzname}.o\n\n    # Link with CXX\n    $CXX ${CXXFLAGS} ${LIB_FUZZING_ENGINE} $SRC/fuzz_${fuzzname}.o -o $OUT/fuzz_${fuzzname} $SRC/fuzz_randomizer.o \\\n        libopenvpn.a ../../src/compat/.libs/libcompat.a /usr/lib/x86_64-linux-gnu/libnsl.a \\\n        /usr/lib/x86_64-linux-gnu/libresolv.a /usr/lib/x86_64-linux-gnu/liblzo2.a \\\n        -lssl -lcrypto -ldl -l:libnl-3.a -l:libnl-genl-3.a -lcap-ng\ndone\n"
    },
    "openvswitch": {
        "name": "openvswitch",
        "language": "c++",
        "homepage": "http://www.openvswitch.org",
        "main_repo": "https://github.com/openvswitch/ovs.git",
        "primary_contact": "blp@ovn.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.openvswitch.org\"\nlanguage: c++\nprimary_contact: \"blp@ovn.org\"\nauto_ccs:\n  - \"jpettit@ovn.org\"\n  - \"pfaffben@gmail.com\" \n  - \"pkusunyifeng@gmail.com\"\n  - \"bshas3@gmail.com\"\n  - \"cpp.code.lv@gmail.com\"\n  - \"u9012063@gmail.com\"\n  - \"ilya.maximets@gmail.com\"\nsanitizers:\n  - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\n  - undefined\nmain_repo: 'https://github.com/openvswitch/ovs.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./boot.sh && HAVE_UNWIND=no ./configure --enable-ndebug && make -j$(nproc) && make oss-fuzz-targets\n\ncp $SRC/openvswitch/tests/oss-fuzz/config/*.options $OUT/\ncp $SRC/openvswitch/tests/oss-fuzz/config/*.dict $OUT/\nwget -O $OUT/json.dict https://raw.githubusercontent.com/rc0r/afl-fuzz/master/dictionaries/json.dict\n\nfor file in $SRC/openvswitch/tests/oss-fuzz/*_target;\ndo\n       cp $file $OUT/\n       name=$(basename $file)\n       corp_name=$(basename $file _target)\n       corp_dir=$SRC/ovs-fuzzing-corpus/${corp_name}_seed_corpus\n       if [ -d ${corp_dir} ]; then\n           zip -rq $OUT/${name}_seed_corpus ${corp_dir}\n       fi\ndone\n"
    },
    "openweave": {
        "name": "openweave",
        "language": "c++",
        "homepage": "https://openweave.io",
        "main_repo": "https://github.com/openweave/openweave-core",
        "primary_contact": "szewczyk@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://openweave.io\"\nlanguage: c++\nprimary_contact: \"szewczyk@google.com\"\nauto_ccs:\n  - \"p.antoine@catenacyber.fr\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/openweave/openweave-core'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit apply  --ignore-space-change --ignore-whitespace $SRC/patch.diff\n\nfunction copy_lib\n    {\n    local fuzzer_path=$1\n    local lib=$2\n    cp $(ldd ${fuzzer_path} | grep \"${lib}\" | awk '{ print $3 }') ${OUT}/lib\n    }\n\nmkdir -p $OUT/lib\n\nif [ \"$SANITIZER\" = \"coverage\" ]\nthen\n    # so that we do not get openssl\n    export CXXFLAGS=\"$CXXFLAGS -fsanitize=fuzzer-no-link,address\"\n    export CFLAGS=\"$CFLAGS -fsanitize=fuzzer-no-link,address\"\nfi\n\n# build project\n./bootstrap\n# java fails with Source option 6 is no longer supported. Use 7 or later.\n./configure --disable-java --enable-fuzzing --disable-shared\n\n# patch bluez\nsed -i 's/sys\\/socket.h>/sys\\/socket.h>\\n#include <linux\\/sockios.h>/g' ./third_party/bluez/repo/tools/l2test.c\nsed -i 's/sys\\/stat.h>/sys\\/stat.h>\\n#include <linux\\/sockios.h>/g' ./third_party/bluez/repo/tools/rctest.c\n\n# OpenSSL now declares RAND_bytes so we must patch\nfind ./src/test-apps/fuzz/ -name \"FuzzP*.cpp\" -exec sed -i 's/RAND_bytes/RAND_bytes2/g' {} \\;\n\n# Don't use all cores to avoid OOM.\n# See https://github.com/google/oss-fuzz/pull/12174\nmake -j$(expr $(nproc) / 2)\n\nfind src/test-apps/fuzz/ -type f -executable -name \"Fuzz*\" | while read i; do\n    patchelf --set-rpath '$ORIGIN/lib' ${i}\n    copy_lib ${i} libglib\n    copy_lib ${i} libdbus\n    cp ${i} $OUT/\ndone\n\n# build corpus\nls $SRC/openweave-core/src/test-apps/fuzz/corpus/ | while read f; do\n    zip -j $OUT/${f}_seed_corpus.zip $SRC/openweave-core/src/test-apps/fuzz/corpus/${f}/*;\ndone\n\ncd $OUT/\nls *_seed_corpus.zip | grep PASE | while read c; do\n    cp $c Fuzz$c;\ndone\n\n"
    },
    "openyurt": {
        "name": "openyurt",
        "language": "go",
        "homepage": "https://openyurt.io/",
        "main_repo": "https://github.com/openyurtio/openyurt",
        "primary_contact": "rambohe.ch@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://openyurt.io/\"\nmain_repo: \"https://github.com/openyurtio/openyurt\"\nprimary_contact: \"rambohe.ch@gmail.com\"\nauto_ccs :\n  - \"rambohe.ch@gmail.com\"\n  - \"huiwq1990@gmail.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/cncf-fuzzing/projects/openyurt/build.sh"
    },
    "opt_einsum": {
        "name": "opt_einsum",
        "language": "python",
        "homepage": "https://github.com/dgasmith/opt_einsum",
        "main_repo": "https://github.com/dgasmith/opt_einsum",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/dgasmith/opt_einsum\nlanguage: python\nmain_repo: https://github.com/dgasmith/opt_einsum\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "opus": {
        "name": "opus",
        "language": "c++",
        "homepage": "https://opus-codec.org/",
        "main_repo": "https://gitlab.xiph.org/xiph/opus.git",
        "primary_contact": "jmvalin@jmvalin.ca",
        "vendor_ccs": [
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://opus-codec.org/\"\nlanguage: c++\nprimary_contact: \"jmvalin@jmvalin.ca\"\nauto_ccs:\n  - \"flim@google.com\"\n  - \"jeanmarcv@google.com\"\n  - \"yunho@google.com\"\n  - \"le.businessman@gmail.com\"\nvendor_ccs:\n  - \"twsmith@mozilla.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\nmain_repo: 'https://gitlab.xiph.org/xiph/opus.git'\n",
        "build_sh": "#!/bin/bash\n# Copyright 2017 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##############################################################################\nset -eu\n\nFUZZERS=\"opus_encode_fuzzer opus_multistream_decode_fuzzer opus_multistream_encode_fuzzer opus_projection_decoder_fuzzer opus_projection_encoder_fuzzer opus_repacketizer_fuzzer\"\nBUILDS=(floating fixed)\n\ntar xvf $SRC/opus_testvectors.tar.gz\n\nif [[ $CFLAGS = *sanitize=memory* ]]; then\n  CFLAGS+=\" -D_FORTIFY_SOURCE=0\"\nfi\n\n./autogen.sh\n\nfor build in \"${BUILDS[@]}\"; do\n  case \"$build\" in\n    floating)\n      extra_args=\"\"\n      ;;\n    fixed)\n      extra_args=\" --enable-fixed-point --enable-check-asm\"\n      ;;\n  esac\n\n  ./configure $extra_args --enable-static --disable-shared --disable-doc \\\n    --enable-assertions\n  make -j$(nproc)\n\n  # Build all fuzzers\n  for fuzzer in $FUZZERS; do\n    $CXX $CXXFLAGS -c -Iinclude \\\n      tests/$fuzzer.cc \\\n      -o $fuzzer.o\n\n    $CXX $CXXFLAGS \\\n      $fuzzer.o \\\n      -o $OUT/${fuzzer}_${build} \\\n      $LIB_FUZZING_ENGINE .libs/libopus.a\n\n    # Setup the .options and test corpus zip files using the corresponding\n    # fuzzer's name\n    [ -f tests/$fuzzer.options ] \\\n        && cp tests/$fuzzer.options $OUT/${fuzzer}_${build}.options\n    zip -r $OUT/${fuzzer}_${build}_seed_corpus.zip opus_testvectors/\n  done\ndone\n"
    },
    "opusfile": {
        "name": "opusfile",
        "language": "c",
        "homepage": "https://opus-codec.org/",
        "main_repo": "https://gitlab.xiph.org/xiph/opusfile.git",
        "primary_contact": "jmvalin@jmvalin.ca",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://opus-codec.org/\"\nmain_repo: \"https://gitlab.xiph.org/xiph/opusfile.git\"\nlanguage: c\nprimary_contact: \"jmvalin@jmvalin.ca\"\nauto_ccs:\n  - \"le.businessman@gmail.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh\n./configure --enable-static --disable-shared --disable-doc --enable-assertions\nmake -j$(nproc)\nldconfig\n\nfor fuzzer in $SRC/*_fuzzer.c; do\n  fuzzer_basename=$(basename -s .c $fuzzer)\n\n  $CC $CFLAGS -c \\\n      -I $SRC -I /usr/include/opus -I /usr/include/ogg \\\n      $fuzzer -o ${fuzzer_basename}.o\n\n  $CXX $CXXFLAGS \\\n      ${fuzzer_basename}.o \\\n      -o $OUT/${fuzzer_basename} $LIB_FUZZING_ENGINE \\\n      $SRC/opusfile/.libs/libopusfile.a -l:libopus.a -l:libogg.a\ndone\n"
    },
    "oracle-py-cx": {
        "name": "oracle-py-cx",
        "language": "python",
        "homepage": "https://github.com/oracle/python-cx_Oracle",
        "main_repo": "https://github.com/oracle/python-cx_Oracle",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/oracle/python-cx_Oracle\nlanguage: python\nmain_repo: https://github.com/oracle/python-cx_Oracle\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd $SRC/oracle-py-cx\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n   compile_python_fuzzer $fuzzer --add-binary /opt/oracle/instantclient_21_6:./ --add-binary /usr/lib/x86_64-linux-gnu/:./\ndone\n"
    },
    "orjson": {
        "name": "orjson",
        "language": "python",
        "homepage": "https://github.com/ijl/orjson",
        "main_repo": "https://github.com/ijl/orjson",
        "primary_contact": null,
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ijl/orjson\"\nlanguage: python\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: \"https://github.com/ijl/orjson\"\nvendor_ccs:\n - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport RUSTFLAGS=\"\"\npython3 -m pip install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py');do\n    compile_python_fuzzer $fuzzer\ndone\n"
    },
    "oscrypto": {
        "name": "oscrypto",
        "language": "python",
        "homepage": "https://github.com/wbond/oscrypto",
        "main_repo": "https://github.com/wbond/oscrypto",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/wbond/oscrypto\nlanguage: python\nmain_repo: https://github.com/wbond/oscrypto\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "osgi": {
        "name": "osgi",
        "language": "jvm",
        "homepage": "https://docs.osgi.org/",
        "main_repo": "https://github.com/osgi/osgi",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "schaich@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://docs.osgi.org/\"\nlanguage: jvm\nmain_repo: \"https://github.com/osgi/osgi\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"schaich@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nALL_JARS=\"\"\n\npushd \"${SRC}/osgi\"\n\t# use bundled gradlew deployer\n\t./gradlew -Dorg.gradle.java.home=\"$(dirname $(dirname $(which javac)))\"\n\n\tfind -name '*.jar' -exec cp {} ${OUT} \\;\n\tALL_JARS=\"${ALL_JARS} $(find . -name '*.jar' -exec basename {} \\;)\"\npopd\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\n# compile all java files and copy them to $OUT\njavac -cp $SRC:$BUILD_CLASSPATH -g $SRC/*.java\ncp $SRC/*.class $OUT/\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "osquery": {
        "name": "osquery",
        "language": "c++",
        "homepage": "https://osquery.io",
        "main_repo": "https://github.com/osquery/osquery",
        "primary_contact": "osquery@osquery.io",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://osquery.io\"\nlanguage: c++\nprimary_contact: \"osquery@osquery.io\"\nauto_ccs:\n  - \"theopolis@osquery.io\"\n  - \"seph@kolide.co\"\n  - \"seph@directionless.org\"\n  - \"alessandro.gario@gmail.com\"\n  - \"sharvil@sharvilshah.com\"\n  - \"gellerbedoya@gmail.com\"\n  - \"stefano.bonicatti@gmail.com\"\nsanitizers:\n - address\nfuzzing_engines:\n - libfuzzer\n - afl\nmain_repo: 'https://github.com/osquery/osquery'\ncoverage_extra_args: -ignore-filename-regex=.*/libraries/.* -ignore-filename-regex=.*/build/libs/.* -ignore-filename-regex=.*/build/openssl/.* -ignore-filename-regex=.*/build/installed_formulas/.*\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=osquery\n\n# Ensure xlocale.h is found.\nln -s /usr/include/locale.h /usr/include/xlocale.h\n\n# Move the project content into the current overlay.\n# CMake builtin 'rename' will attempt a hardlink.\n( cd / &&\\\n  mv \"${SRC}/${PROJECT}\" \"${SRC}/${PROJECT}-dev\" &&\\\n  mv \"${SRC}/${PROJECT}-dev\" \"${SRC}/${PROJECT}\" )\n\npushd \"${SRC}/${PROJECT}\"\n\nmkdir build && pushd build\n\ncmake \\\n  -DOSQUERY_VERSION:string=0.0.0-fuzz \\\n  -DOSQUERY_ENABLE_ADDRESS_SANITIZER:BOOL=ON \\\n  -DOSQUERY_BUILD_FUZZERS:BOOL=ON \\\n  -DOSQUERY_BUILD_AWS:BOOL=OFF \\\n  -DOSQUERY_BUILD_EXPERIMENTS:BOOL=OFF \\\n  ..\n\ncmake \\\n  \"-DCMAKE_EXE_LINKER_FLAGS=${LIB_FUZZING_ENGINE} -Wl,-rpath,'\\$ORIGIN/lib'\" \\\n  ..\n\n# Fix circular definitions\n# See: https://github.com/osquery/osquery/issues/6551\nsed -i 's/AUDIT_FILTER_EXCLUDE/AUDIT_FILTER_EXCLUDE1/g' /src/osquery/libraries/cmake/source/libaudit/src/lib/libaudit.h\n\n# Build harnesses\ncmake --build . -j$(nproc) --target osqueryfuzz-config\ncmake --build . -j$(nproc) --target osqueryfuzz-sqlquery\n\n# Cleanup\nfind . -type f -name '*.o' -delete\nrm -rf \"${SRC}/${PROJECT}/libraries/cmake/source/libudev/src/test\"\nrm -rf libs/src/patched-source/libudev/src/test\n\n# Move libunwind to output path\nmkdir -p \"${OUT}/lib\"\ncp /usr/lib/x86_64-linux-gnu/libunwind.so.8 \"${OUT}/lib\"\n\n# Move harnesses to output path\ncp osquery/main/harnesses/osqueryfuzz-config \"${OUT}/osqueryfuzz-config\"\ncp osquery/main/harnesses/osqueryfuzz-sqlquery \"${OUT}/osqueryfuzz-sqlquery\"\n\n# Build supporting files\npopd\ntools/harnesses/osqueryfuzz_config_corpus.sh \"${OUT}/osqueryfuzz-config_seed_corpus.zip\"\ntools/harnesses/osqueryfuzz_config_dict.sh \"${OUT}/osqueryfuzz-config.dict\"\ntools/harnesses/osqueryfuzz_sqlquery_corpus.sh \"${OUT}/osqueryfuzz-sqlquery_seed_corpus.zip\"\ncp tools/harnesses/osqueryfuzz_sqlquery.dict \"${OUT}/osqueryfuzz-sqlquery.dict\"\n"
    },
    "oss-fuzz-example": {
        "name": "oss-fuzz-example",
        "language": "c",
        "homepage": "https://github.com/AdaLogics/oss-fuzz-example",
        "main_repo": "https://github.com/AdaLogics/oss-fuzz-example",
        "primary_contact": "david@adalogics.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/AdaLogics/oss-fuzz-example\"\nlanguage: c\nprimary_contact: \"david@adalogics.com\"\nmain_repo: \"https://github.com/AdaLogics/oss-fuzz-example\"\nfile_github_issue: true\n# Add email here for any contacts that should receive emails with bugs found.\nauto_ccs:\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build project using the OSS-Fuzz enviroonment flags.\n$CC $CFLAGS -c char_lib.c -o char_lib.o\n\n# Build the fuzzers. We must ensure we link with $CXX to support Centipede.\n# Fuzzers must be placed in $OUT/\n$CC $CFLAGS -c fuzz_char_lib.c -o fuzz_char_lib.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_char_lib.o char_lib.o -o $OUT/fuzz_char_lib\n\n$CC $CFLAGS -c fuzz_complex_parser.c -o fuzz_complex_parser.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_complex_parser.o char_lib.o -o $OUT/fuzz_complex_parser\n"
    },
    "ossf-scorecard": {
        "name": "ossf-scorecard",
        "language": "go",
        "homepage": "https://openssf.org/",
        "main_repo": "https://github.com/ossf/scorecard",
        "primary_contact": "hey@auggie.dev",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://openssf.org/\"\nmain_repo: \"https://github.com/ossf/scorecard\"\nprimary_contact: \"hey@auggie.dev\" # <-- IAM / commits: foo@auggie.dev\nauto_ccs:\n  - azeemshaikh38@gmail.com\n  - naveensrinivasan@protonmail.com\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/yaml_fuzzer.go $SRC/scorecard/policy/\ncompile_go_fuzzer github.com/ossf/scorecard/v4/policy FuzzParseFromYAML fuzz_parse_from_yaml gofuzz\n"
    },
    "ostree": {
        "name": "ostree",
        "language": "c",
        "homepage": "https://github.com/ostreedev/ostree",
        "main_repo": "https://github.com/ostreedev/ostree",
        "primary_contact": "walters@verbum.org",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/ostreedev/ostree\"\nmain_repo: 'https://github.com/ostreedev/ostree'\nlanguage: c\nprimary_contact: \"walters@verbum.org\"\nauto_ccs:\n  - \"dbn@endlessos.org\"\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build glib with sanitizer support\ncd glib\nmkdir build\ncd build\nmeson --prefix=/usr --buildtype=release -Db_lundef=false -Ddefault_library=static -Dlibmount=disabled\nninja\nninja install\n\n# Build libostree\ncd $SRC/ostree\nenv NOCONFIGURE=1 ./autogen.sh\n./configure --enable-static --without-selinux\nmake V=1\n\n# This needs to be able to fail in case some tests are breaking.\nmake check V=1 || true\n\n# Build fuzzers\ncp $SRC/fuzz*.c ./tests/\n\nFUZZ_LIBS=\"./.libs/libbsdiff.a \\\n           ./.libs/libglnx.a \\\n           ./.libs/libotutil.a \\\n           -L/usr/lib/x86_64-linux-gnu \\\n           ./.libs/libostree-1.a \\\n           ./.libs/libostreetest.a \\\n           ./.libs/libostree-1.a \\\n           -l:libgpgme.a \\\n           -l:libassuan.a \\\n           /usr/lib/x86_64-linux-gnu/libgpg-error.so \\\n           -l:liblzma.a \\\n           -l:libgio-2.0.a \\\n           -lresolv \\\n           -l:libgobject-2.0.a \\\n           -l:libffi.a \\\n           -l:libgmodule-2.0.a \\\n           -l:libglib-2.0.a \\\n           -lm \\\n           -l:libz.a \\\n           -l:libselinux.a \\\n           -pthread \\\n           -l:libpcre2-8.a\"\n\nFUZZ_INCLUDES=\"-I./src/libotutil \\\n               -I./src/libostree \\\n               -I./src/libostree \\\n               -I./src/ostree \\\n               -I./libglnx \\\n               -I/usr/include/gio-unix-2.0 \\\n               -I/usr/include/glib-2.0 \\\n               -I/usr/lib/x86_64-linux-gnu/glib-2.0/include \\\n               -DPKGLIBEXECDIR=\\\"/usr/local/libexec/libostree\\\"\"\n\nFUZZ_DEFINES=\"-DHAVE_CONFIG_H \\\n              -I. \\\n              -DDATADIR=\\\"/usr/local/share\\\" \\\n              -DLIBEXECDIR=\\\"/usr/local/libexec\\\" \\\n              -DLOCALEDIR=\\\"/usr/local/share/locale\\\" \\\n              -DSYSCONFDIR=\\\"/usr/local/etc\\\" \\\n              -DTARGET_PREFIX=\\\"/usr/local\\\" \\\n              -DOSTREE_COMPILATION \\\n              -DG_LOG_DOMAIN=\\\"OSTree\\\" \\\n              -DOSTREE_GITREV=\\\"v2022.2-41-gf21944da1cf24cc2bbf1d4dfbd3aaa698d4f0a70\\\" \\\n              -DGLIB_VERSION_MIN_REQUIRED=GLIB_VERSION_2_66 \\\n              -DSOUP_VERSION_MIN_REQUIRED=SOUP_VERSION_2_40\"\n\nFUZZ_WERROR=\"\"\n\nfor fuzz in repo bsdiff; do\n  $CC $CFLAGS $FUZZ_DEFINES $FUZZ_INCLUDES -o tests/fuzz-$fuzz.o -c tests/fuzz-$fuzz.c\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE $FUZZ_INCLUDES -o $OUT/fuzz-$fuzz  tests/fuzz-$fuzz.o $FUZZ_LIBS\ndone\n"
    },
    "ots": {
        "name": "ots",
        "language": "c++",
        "homepage": "https://github.com/khaledhosny/ots",
        "main_repo": "https://github.com/khaledhosny/ots.git",
        "primary_contact": "dr.khaled.hosny@gmail.com",
        "vendor_ccs": [
            "jmuizelaar@mozilla.com",
            "lsalzman@mozilla.com",
            "twsmith@mozilla.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "ninja",
        "project_yaml": "homepage: \"https://github.com/khaledhosny/ots\"\nlanguage: c++\nprimary_contact: \"dr.khaled.hosny@gmail.com\"\nauto_ccs:\n  - \"kevin899@gmail.com\"\n  - \"jfkthame@gmail.com\"\nvendor_ccs:\n  - \"jmuizelaar@mozilla.com\"\n  - \"lsalzman@mozilla.com\"\n  - \"twsmith@mozilla.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\n  - memory\narchitectures:\n  - x86_64\n  - i386\nmain_repo: 'https://github.com/khaledhosny/ots.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# setup\nbuild=$WORK/build\n\n# cleanup\nrm -rf $build\nmkdir -p $build\n\n# Configure the project.\nmeson -Dfuzzer_ldflags=\"$(echo $LIB_FUZZING_ENGINE)\" \\\n      --wrap-mode=forcefallback \\\n      $build \\\n   || (cat build/meson-logs/meson-log.txt && false)\n\n# Build the fuzzer.\nninja -v -j$(nproc) -C $build ots-fuzzer\nmv $build/ots-fuzzer $OUT/\n\ncp $SRC/ots-fuzzer.options $OUT/\nzip -j -r $OUT/ots-fuzzer_seed_corpus.zip $SRC/ots/tests/fonts\n"
    },
    "ox-ruby": {
        "name": "ox-ruby",
        "language": "ruby",
        "homepage": "https://github.com/ohler55/ox",
        "main_repo": "https://github.com/ohler55/ox",
        "primary_contact": "TODO@template.test",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/ohler55/ox\"\nlanguage: ruby\nprimary_contact: \"TODO@template.test\"\nauto_ccs:\n  - \"TODO@template.test\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/ohler55/ox'\ndisabled: true\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# setup\nBUILD=$WORK/Build\n\ncd $SRC/ox-ruby\ngem build\nRUZZY_DEBUG=1 gem install --development --verbose *.gem\n\nfor fuzz_target_path in $SRC/harnesses/fuzz_*.rb; do\n\truzzy-build \"$fuzz_target_path\"\ndone\n"
    },
    "p11-kit": {
        "name": "p11-kit",
        "language": "c",
        "homepage": "https://p11-glue.github.io/p11-glue/p11-kit.html",
        "main_repo": "https://github.com/p11-glue/p11-kit",
        "primary_contact": "daiki.ueno@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: https://p11-glue.github.io/p11-glue/p11-kit.html\nmain_repo: https://github.com/p11-glue/p11-kit\nlanguage: c\nprimary_contact: \"daiki.ueno@gmail.com\"\nauto_ccs:\n  - \"zfridric@redhat.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh\nmake -j$(nproc) oss-fuzz\n\ncd fuzz\nfor dir in *.in; do\n    fuzzer=$(basename $dir .in)_fuzzer\n    zip -rj \"$OUT/${fuzzer}_seed_corpus.zip\" \"${dir}/\"\ndone\n"
    },
    "p9": {
        "name": "p9",
        "language": "go",
        "homepage": "https://github.com/hugelgupf/p9",
        "main_repo": "https://github.com/hugelgupf/p9",
        "primary_contact": "harvey@googlegroups.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/hugelgupf/p9\"\nlanguage: go\nprimary_contact: \"harvey@googlegroups.com\"\nauto_ccs:\n  - \"s@sevki.org\"\n  - \"c@chrisko.ch\"\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nmain_repo: 'https://github.com/hugelgupf/p9'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\ncompile_go_fuzzer github.com/hugelgupf/p9/p9 Fuzz p9_fuzzer\n"
    },
    "pacemaker": {
        "name": "pacemaker",
        "language": "c",
        "homepage": "https://www.clusterlabs.org/pacemaker/",
        "main_repo": "https://github.com/ClusterLabs/pacemaker",
        "primary_contact": "clumens@redhat.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.clusterlabs.org/pacemaker/\"\nlanguage: c\nprimary_contact: \"clumens@redhat.com\"\nauto_ccs:\n- \"david@adalogics.com\"\n- \"adam@adalogics.com\"\nmain_repo: \"https://github.com/ClusterLabs/pacemaker\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CFLAGS=\"$CFLAGS -Wno-deprecated-declarations\"\nexport CXXFLAGS=\"$CXXFLAGS -Wno-deprecated-declarations\"\nmake -j$(nproc) build\n\nfor FUZZER_SOURCE in lib/*/fuzzers/*.c; do\n  FUZZER=\"$(basename \"$FUZZER_SOURCE\" .c)\"\n\n  $CC $CFLAGS $LIB_FUZZING_ENGINE -c \"$FUZZER_SOURCE\"                      \\\n   -o \"${OUT}/${FUZZER}.o\"                                                 \\\n   -I./include -I/usr/local/include/libxml2 -I/usr/include/glib-2.0        \\\n   -I/usr/lib/x86_64-linux-gnu/glib-2.0/include/\n\n  # Link with CXX for Centipede\n  $CXX $CXXFLAGS $LIB_FUZZING_ENGINE                                       \\\n   \"$OUT/${FUZZER}.o\" -o \"$OUT/${FUZZER}\"                                  \\\n   ./lib/cib/.libs/libcib.a ./lib/pengine/.libs/libpe_rules.a              \\\n   ./lib/common/.libs/libcrmcommon.a -l:libqb.a                            \\\n   -l:libxslt.a -l:libxml2.a -l:libglib-2.0.a -l:libuuid.a -l:libicuuc.a   \\\n   -l:libz.a -lgnutls -lbz2 -lrt -ldl -lc\ndone\n"
    },
    "packaging": {
        "name": "packaging",
        "language": "python",
        "homepage": "https://github.com/pypa/packaging",
        "main_repo": "https://github.com/pypa/packaging",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pypa/packaging\nlanguage: python\nmain_repo: https://github.com/pypa/packaging\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pako": {
        "name": "pako",
        "language": "javascript",
        "homepage": "https://nodeca.github.io/pako/",
        "main_repo": "https://github.com/nodeca/pako",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://nodeca.github.io/pako/\nlanguage: javascript\nmain_repo: https://github.com/nodeca/pako\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Install dependencies.\nnpm install\nnpm install --save-dev @jazzer.js/core\n\n# Build Fuzzers.\ncompile_javascript_fuzzer pako fuzz.js --sync\n"
    },
    "pandas": {
        "name": "pandas",
        "language": "python",
        "homepage": "https://github.com/pandas-dev/pandas",
        "main_repo": "https://github.com/pandas-dev/pandas",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "joe.lucas.0311@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pandas-dev/pandas\nlanguage: python\nmain_repo: https://github.com/pandas-dev/pandas\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- joe.lucas.0311@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n###############################################################################\n\nif [ $SANITIZER == \"coverage\" ]; then\n    export CFLAGS=\"\"\n    export CXXFLAGS=\"\"\nfi\nif [ $SANITIZER == \"introspector\" ]; then\n    export CFLAGS=\"\"\n    export CXXFLAGS=\"\"\n    # Adjust for python3.9\n    sed -i 's/apt-get/#apt-get/g' /usr/local/bin/compile_python_fuzzer\n    sed -i 's/python3\\.9/#python3/g' /usr/local/bin/compile_python_fuzzer\n    sed -i 's/pip3/python3 -m pip/g' /usr/local/bin/compile_python_fuzzer\n    sed -i 's/\\. \\.venv/#/g' /usr/local/bin/compile_python_fuzzer\n    sed -i 's/python \\/fuzz/python3 \\/fuzz/g' /usr/local/bin/compile_python_fuzzer\n    sed -i 's/site-packages/dist-packages/g' /fuzz-introspector/frontends/python/prepare_fuzz_imports.py\nfi\n\nPYTHON_CONFIG_STR=$(python3.9-config --cflags --ldflags)\nexport LDSHARED=\"${CC} ${PYTHON_CONFIG_STR} -nostartfiles -shared\"\n\npython3 setup.py install\n\n#python3 -m pip install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  LD_PRELOAD=$OUT/sanitizer_with_fuzzer.so ASAN_OPTIONS=detect_leaks=0 compile_python_fuzzer $fuzzer --hidden-import cmath\ndone\n"
    },
    "paramiko": {
        "name": "paramiko",
        "language": "python",
        "homepage": "https://github.com/paramiko/paramiko",
        "main_repo": "https://github.com/paramiko/paramiko",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/paramiko/paramiko\nlanguage: python\nmain_repo: https://github.com/paramiko/paramiko\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\ncd tests\ncp -rf $SRC/fuzz_*.py .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\nfor fuzzer in $(find . -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data _loop.py:.\ndone\n"
    },
    "parse": {
        "name": "parse",
        "language": "python",
        "homepage": "https://github.com/r1chardj0n3s/parse",
        "main_repo": "https://github.com/r1chardj0n3s/parse",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/r1chardj0n3s/parse\nmain_repo: https://github.com/r1chardj0n3s/parse\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "parsimonious": {
        "name": "parsimonious",
        "language": "python",
        "homepage": "https://github.com/erikrose/parsimonious",
        "main_repo": "https://github.com/erikrose/parsimonious",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/erikrose/parsimonious\nmain_repo: https://github.com/erikrose/parsimonious\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "parso": {
        "name": "parso",
        "language": "python",
        "homepage": "https://github.com/davidhalter/parso",
        "main_repo": "https://github.com/davidhalter/parso",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/davidhalter/parso\nlanguage: python\nmain_repo: https://github.com/davidhalter/parso\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name '*_fuzz.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pasta": {
        "name": "pasta",
        "language": "python",
        "homepage": "https://github.com/google/pasta",
        "main_repo": "https://github.com/google/pasta",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/google/pasta\nlanguage: python\nmain_repo: https://github.com/google/pasta\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pathlib2": {
        "name": "pathlib2",
        "language": "python",
        "homepage": "https://github.com/jazzband/pathlib2",
        "main_repo": "https://github.com/jazzband/pathlib2",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/jazzband/pathlib2\nmain_repo: https://github.com/jazzband/pathlib2\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pborman-uuid": {
        "name": "pborman-uuid",
        "language": "go",
        "homepage": "https://github.com/pborman/uuid",
        "main_repo": "https://github.com/pborman/uuid",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/pborman/uuid\"\nlanguage: go\nmain_repo: \"https://github.com/pborman/uuid\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/fuzz_test.go ./\ngo mod tidy\nprintf \"package uuid\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/pborman/uuid FuzzParseBytes FuzzParseBytes\n"
    },
    "pcapplusplus": {
        "name": "pcapplusplus",
        "language": "c++",
        "homepage": "https://github.com/seladb/PcapPlusPlus",
        "main_repo": "https://github.com/seladb/PcapPlusPlus",
        "primary_contact": "pcapplusplus@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/seladb/PcapPlusPlus\"\nlanguage: c++\nprimary_contact: \"pcapplusplus@gmail.com\"\nauto_ccs:\n  - \"zlowram@gmail.com\"\n  - \"aleksandrosansan@gmail.com\"\n  - \"peron.clem@gmail.com\"\n  - \"egecetin97@gmail.com\"\nfuzzing_engines:\n  - afl\n  - libfuzzer\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/seladb/PcapPlusPlus'\ncoverage_extra_args: -ignore-filename-regex=/libpcap/ -ignore-filename-regex=/PcapPlusPlus/3rdParty/\n",
        "build_sh": "#!/bin/bash -eu\n#\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n$SRC/PcapPlusPlus/Tests/Fuzzers/ossfuzz.sh\n"
    },
    "pcl": {
        "name": "pcl",
        "language": "c++",
        "homepage": "http://pointclouds.org",
        "main_repo": "https://github.com/pointcloudlibrary/pcl",
        "primary_contact": "kunal.tyagi.3.1994@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "main_repo: \"https://github.com/pointcloudlibrary/pcl\"\nhomepage: \"http://pointclouds.org\"\nlanguage: c++\nprimary_contact: \"kunal.tyagi.3.1994@gmail.com\"\nauto_ccs:\n  - \"tyagi.kunal@live.com\"\n  - \"larshg@gmail.com\"\n  - \"markus95.vieth@gmail.com\"\n  - \"k.koide.aist@gmail.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nchmod +x $SRC/pcl/test/fuzz/build.sh\n$SRC/pcl/test/fuzz/build.sh\n"
    },
    "pcre2": {
        "name": "pcre2",
        "language": "c++",
        "homepage": "http://www.pcre.org/",
        "main_repo": "https://github.com/PCRE2Project/pcre2",
        "primary_contact": "nicholas@nickcwilson.co.uk",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.pcre.org/\"\nlanguage: c++\nprimary_contact: \"nicholas@nickcwilson.co.uk\"\nmain_repo: \"https://github.com/PCRE2Project/pcre2\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\nauto_ccs:\n  - \"me@addisoncrump.info\"\n  - \"philip.hazel@gmail.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build project\n./autogen.sh\n./configure --enable-fuzz-support \\\n    --enable-never-backslash-C --with-match-limit=1000 --with-match-limit-depth=1000 \\\n    --enable-jit \\\n    --enable-pcre2-16 --enable-pcre2-32\nmake -j$(nproc) clean\nmake -j$(nproc) all\n\n# build fuzzers\n$CXX $CXXFLAGS -o $OUT/pcre2_fuzzer \\\n    $LIB_FUZZING_ENGINE .libs/libpcre2-fuzzsupport.a .libs/libpcre2-8.a\n$CXX $CXXFLAGS -o $OUT/pcre2_fuzzer_16 \\\n    $LIB_FUZZING_ENGINE .libs/libpcre2-fuzzsupport-16.a .libs/libpcre2-16.a\n$CXX $CXXFLAGS -o $OUT/pcre2_fuzzer_32 \\\n    $LIB_FUZZING_ENGINE .libs/libpcre2-fuzzsupport-32.a .libs/libpcre2-32.a\n\n# test different link sizes\nfor i in $(seq 3 4); do\n    ./configure --enable-fuzz-support \\\n        --enable-never-backslash-C --with-match-limit=1000 --with-match-limit-depth=1000 \\\n        --enable-jit \\\n        --enable-pcre2-16 --enable-pcre2-32 --with-link-size=${i}\n    make -j$(nproc) clean\n    make -j$(nproc) all\n\n    # build fuzzers\n    $CXX $CXXFLAGS -o $OUT/pcre2_fuzzer_${i}l \\\n        $LIB_FUZZING_ENGINE .libs/libpcre2-fuzzsupport.a .libs/libpcre2-8.a\n    $CXX $CXXFLAGS -o $OUT/pcre2_fuzzer_16_${i}l \\\n        $LIB_FUZZING_ENGINE .libs/libpcre2-fuzzsupport-16.a .libs/libpcre2-16.a\n    $CXX $CXXFLAGS -o $OUT/pcre2_fuzzer_32_${i}l \\\n        $LIB_FUZZING_ENGINE .libs/libpcre2-fuzzsupport-32.a .libs/libpcre2-32.a\ndone\n\n# set up dictionary and options to use it\nfor bits in \"\" \"_16\" \"_32\"; do\n  cp \"testdata/fuzzing/pcre2_fuzzer${bits}.dict\" \"${OUT}/pcre2_fuzzer${bits}.dict\"\n  for linksize in \"\" \"_3l\" \"_4l\"; do\n    cp \"testdata/fuzzing/pcre2_fuzzer${bits}.options\" \"${OUT}/pcre2_fuzzer${bits}${linksize}.options\"\n  done\ndone\n"
    },
    "pdf-js": {
        "name": "pdf-js",
        "language": "javascript",
        "homepage": "https://github.com/mozilla/pdf.js",
        "main_repo": "https://github.com/mozilla/pdf.js",
        "primary_contact": "mcastelluccio@mozilla.com",
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/mozilla/pdf.js\"\nlanguage: javascript\nprimary_contact: \"mcastelluccio@mozilla.com\"\nmain_repo: \"https://github.com/mozilla/pdf.js\"\nvendor_ccs:\n  - maxnair.dev@gmail.com\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - none\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nnpm install --save-dev @jazzer.js/core \nnpm install -g gulp-cli\n\ngulp image_decoders\n\ncompile_javascript_fuzzer pdf-js test/fuzz/jpeg_image.fuzz --sync\ncompile_javascript_fuzzer pdf-js test/fuzz/jbig2_image.fuzz --sync\ncompile_javascript_fuzzer pdf-js test/fuzz/jpx_image.fuzz --sync\n"
    },
    "pdfbox": {
        "name": "pdfbox",
        "language": "jvm",
        "homepage": "https://pdfbox.apache.org/",
        "main_repo": "https://github.com/apache/pdfbox/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://pdfbox.apache.org/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/apache/pdfbox/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=pdfbox\nPROJECT_GROUP_ID=org.apache.pdfbox\nPROJECT_ARTIFACT_ID=pdfbox\nMAIN_REPOSITORY=https://github.com/apache/pdfbox/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/*.dict $OUT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  LD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "pdfminersix": {
        "name": "pdfminersix",
        "language": "python",
        "homepage": "https://pdfminersix.readthedocs.io/en/latest/",
        "main_repo": "https://github.com/pdfminer/pdfminer.six",
        "primary_contact": "pietermarsman@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://pdfminersix.readthedocs.io/en/latest/\"\nlanguage: python\nprimary_contact: \"pietermarsman@gmail.com\"\nauto_ccs:\n  - \"capuanobailey@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/pdfminer/pdfminer.six\"\nfile_github_issue: True\n",
        "build_sh": null
    },
    "pdfplumber": {
        "name": "pdfplumber",
        "language": "python",
        "homepage": "https://github.com/jsvine/pdfplumber",
        "main_repo": "https://github.com/jsvine/pdfplumber.git",
        "primary_contact": "jsvine@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/jsvine/pdfplumber\"\nlanguage: python\nprimary_contact: \"jsvine@gmail.com\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\n  - undefined\nmain_repo: \"https://github.com/jsvine/pdfplumber.git\"\n",
        "build_sh": null
    },
    "pdoc": {
        "name": "pdoc",
        "language": "python",
        "homepage": "https://github.com/pdoc3/pdoc",
        "main_repo": "https://github.com/pdoc3/pdoc",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/pdoc3/pdoc\nmain_repo: https://github.com/pdoc3/pdoc\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pem": {
        "name": "pem",
        "language": "python",
        "homepage": "https://github.com/hynek/pem",
        "main_repo": "https://github.com/hynek/pem",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/hynek/pem\"\nlanguage: python\nmain_repo: \"https://github.com/hynek/pem\"\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 -m pip install .\n\nmake_dictionary_for_fuzz_harness() {\n  local fuzz_harness=\"$1\"\n  local base_dictionary=\"$SRC/__base.dict\"\n  local output_dict=\"$OUT/${fuzz_harness##*/}\"\n  output_dict=\"${output_dict%.py}.dict\"\n\n  [[ -r \"$base_dictionary\" ]] && {\n    [[ -s \"$output_dict\" ]] && echo >>\"$output_dict\"\n    cat \"$base_dictionary\" >>\"$output_dict\"\n  }\n}\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\n  make_dictionary_for_fuzz_harness \"$fuzzer\"\ndone\n\nzip -rj $OUT/fuzz_pem_seed_corpus.zip $SRC/data.pem\n"
    },
    "pendulum": {
        "name": "pendulum",
        "language": "python",
        "homepage": "https://github.com/sdispater/pendulum",
        "main_repo": "https://github.com/sdispater/pendulum",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/sdispater/pendulum\nlanguage: python\nmain_repo: https://github.com/sdispater/pendulum\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --hidden-import=tzdata\ndone\n"
    },
    "perfetto": {
        "name": "perfetto",
        "language": "c++",
        "homepage": "https://perfetto.dev",
        "main_repo": "https://android.googlesource.com/platform/external/perfetto/",
        "primary_contact": "hjd@google.com",
        "vendor_ccs": [
            "adambacchus@google.com",
            "ailport@google.com",
            "bcreasey@google.com",
            "cunefare@google.com",
            "ejorgensen@google.com",
            "faerber@google.com",
            "greendonald@google.com",
            "hamzeh@google.com",
            "jaredkidd@google.com",
            "kimtony@google.com",
            "lindsaywells@google.com",
            "maverickm@google.com",
            "swansonr@google.com",
            "warrenwright@google.com"
        ],
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://perfetto.dev\"\nlanguage: c++\nprimary_contact: \"hjd@google.com\"\nauto_ccs:\n  - \"hjd@google.com\"\n  - \"lalitm@google.com\"\n  - \"octaviant@google.com\"\n  - \"perfetto-oss-fuzz@google.com\"\n  - \"primiano@google.com\"\n  - \"rsavitski@google.com\"\n  - \"eseckler@google.com\"\n  - \"altimin@google.com\"\n  - \"ddiproietto@google.com\"\nvendor_ccs:\n  - adambacchus@google.com\n  - ailport@google.com\n  - bcreasey@google.com\n  - cunefare@google.com\n  - ejorgensen@google.com\n  - faerber@google.com\n  - greendonald@google.com\n  - hamzeh@google.com\n  - jaredkidd@google.com\n  - kimtony@google.com\n  - lindsaywells@google.com\n  - maverickm@google.com\n  - swansonr@google.com\n  - warrenwright@google.com\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://android.googlesource.com/platform/external/perfetto/'\n",
        "build_sh": "#!/bin/bash\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CFLAGS=\"$CFLAGS -Wno-extra-semi-stmt\"\nexport CXXFLAGS=\"$CXXFLAGS -Wno-extra-semi-stmt\"\n\n$SRC/perfetto/infra/oss-fuzz/build_fuzzers\n"
    },
    "pest": {
        "name": "pest",
        "language": "rust",
        "homepage": "https://github.com/pest-parser/pest",
        "main_repo": "https://github.com/pest-parser/pest",
        "primary_contact": "jstnlefebvre@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/pest-parser/pest\"\nlanguage: rust\nprimary_contact: \"jstnlefebvre@gmail.com\"\nauto_ccs:\n  - \"therealcad97@gmail.com\"\n  - \"flying-sheep@web.de\"\n  - \"nbtheduke@gmail.com\"\n  - \"me@tomtau.be\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nmain_repo: 'https://github.com/pest-parser/pest'\n",
        "build_sh": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd $SRC/pest/meta\nRUSTFLAGS=\"\" cargo bootstrap\ncargo fuzz build\ncd $SRC/pest/grammars\ncargo fuzz build\ncp $SRC/pest/meta/fuzz/target/x86_64-unknown-linux-gnu/release/parser $OUT/\ncp $SRC/pest/grammars/fuzz/target/x86_64-unknown-linux-gnu/release/toml $OUT/\ncp $SRC/pest/grammars/fuzz/target/x86_64-unknown-linux-gnu/release/json $OUT/\ncp $SRC/pest/grammars/fuzz/target/x86_64-unknown-linux-gnu/release/http $OUT/\n"
    },
    "pffft": {
        "name": "pffft",
        "language": "c++",
        "homepage": "https://bitbucket.org/jpommier/pffft",
        "main_repo": "https://bitbucket.org/jpommier/pffft.git",
        "primary_contact": "pommier@modartt.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://bitbucket.org/jpommier/pffft\"\nmain_repo: \"https://bitbucket.org/jpommier/pffft.git\"\nlanguage: c++\nprimary_contact: \"pommier@modartt.com\"\nauto_ccs:\n  - \"alessiob@webrtc.org\"\n  - \"mbonadei@webrtc.org\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\narchitectures:\n  - x86_64\n  - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nSRC_DIR=$SRC/pffft\ncd $WORK\n\n# Deploy the seed corpus.\nSEED_CORPUS_ZIP_PATH=$OUT/pffft_fuzzers_seed_corpus.zip\nif [ -d seed_corpus_tmp ]; then \n  rm -fr seed_corpus_tmp\nfi\nmkdir seed_corpus_tmp\npython $SRC_DIR/generate_seed_corpus.py seed_corpus_tmp\ncd seed_corpus_tmp\nzip -q $SEED_CORPUS_ZIP_PATH ./*\ncd ..\nrm -fr seed_corpus_tmp\n\nbuild_fuzzer() {\n  # Aliases for the arguments.\n  fft_transform=$1\n\n  # Fuzzer name.\n  fuzz_target_name=pffft_${fft_transform,,}_fuzzer\n\n  # Add a symbolic link for the seed corpus (same corpus for all the\n  # generated fuzzers).\n  ls -la $OUT/*.zip\n  FUZZER_SEED_CORPUS_PATH=$OUT/${fuzz_target_name}_seed_corpus.zip\n  if [ -e $FUZZER_SEED_CORPUS_PATH ]; then\n    rm $FUZZER_SEED_CORPUS_PATH\n  fi\n  ln -s $SEED_CORPUS_ZIP_PATH $FUZZER_SEED_CORPUS_PATH\n\n  # Compile fuzzer.\n  $CXX $CXXFLAGS -std=c++11 -msse2 \\\n       -DTRANSFORM_${fft_transform} \\\n       $SRC/pffft/pffft.c $SRC/pffft/pffft_fuzzer.cc \\\n       -o $OUT/${fuzz_target_name} \\\n       $LIB_FUZZING_ENGINE\n}\n\n# Build fuzzers.\nbuild_fuzzer REAL\nbuild_fuzzer COMPLEX\n"
    },
    "phmap": {
        "name": "phmap",
        "language": "c++",
        "homepage": "https://github.com/greg7mdp/parallel-hashmap",
        "main_repo": "https://github.com/greg7mdp/parallel-hashmap",
        "primary_contact": "greg7mdp@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/greg7mdp/parallel-hashmap\"\nmain_repo: 'https://github.com/greg7mdp/parallel-hashmap'\nprimary_contact: \"greg7mdp@gmail.com\"\nlanguage: c++\nauto_ccs :\n  - \"david@adalogics.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE $SRC/phashmap_fuzz.cc -I./ -o $OUT/phashmap_fuzz\n"
    },
    "php": {
        "name": "php",
        "language": "c++",
        "homepage": "http://php.net/",
        "main_repo": "https://github.com/php/php-src.git",
        "primary_contact": "stas@php.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://php.net/\"\nlanguage: c++\nprimary_contact: \"stas@php.net\"\nauto_ccs:\n - \"smalyshev@gmail.com\"\n - \"nikita.ppv@gmail.com\"\n - \"dmitrystogov@gmail.com\"\n - \"tovilo.ilija@gmail.com\"\n - \"github@derickrethans.nl\"\nfuzzing_engines:\n  - \"afl\"\n  - \"honggfuzz\"\n  - \"libfuzzer\"\nsanitizers:\n - address\n - undefined\n - memory\narchitectures:\n - x86_64\n - i386\nview_restrictions: none\nmain_repo: 'https://github.com/php/php-src.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# PHP's zend_function union is incompatible with the object-size sanitizer\nexport CFLAGS=\"$CFLAGS -fno-sanitize=object-size\"\nexport CXXFLAGS=\"$CXXFLAGS -fno-sanitize=object-size\"\n\n# Disable JIT profitability checks.\nexport CFLAGS=\"$CFLAGS -DPROFITABILITY_CHECKS=0\"\n\n# Make sure the right assembly files are picked\nBUILD_FLAG=\"\"\nif [ \"$ARCHITECTURE\" = \"i386\" ]; then\n    BUILD_FLAG=\"--build=i686-pc-linux-gnu\"\nfi\n\n# build project\n./buildconf\n./configure $BUILD_FLAG \\\n    --disable-all \\\n    --enable-debug-assertions \\\n    --enable-option-checking=fatal \\\n    --enable-fuzzer \\\n    --enable-exif \\\n    --enable-opcache \\\n    --without-pcre-jit \\\n    --disable-phpdbg \\\n    --disable-cgi \\\n    --with-pic\nmake -j$(nproc)\n\n# Generate corpuses and dictionaries.\nsapi/cli/php sapi/fuzzer/generate_all.php\n\n# Copy dictionaries to expected locations.\ncp sapi/fuzzer/dict/unserialize $OUT/php-fuzz-unserialize.dict\ncp sapi/fuzzer/dict/parser $OUT/php-fuzz-parser.dict\ncp sapi/fuzzer/json.dict $OUT/php-fuzz-json.dict\n\nFUZZERS=\"php-fuzz-json\nphp-fuzz-exif\nphp-fuzz-unserialize\nphp-fuzz-unserializehash\nphp-fuzz-parser\nphp-fuzz-execute\"\nfor fuzzerName in $FUZZERS; do\n\tcp sapi/fuzzer/$fuzzerName $OUT/\ndone\n\n# The JIT fuzzer is fundamentally incompatible with memory sanitizer,\n# as that would require the JIT to emit msan instrumentation itself.\n# In practice it is currently also incompatible with ubsan.\nif [ \"$SANITIZER\" != \"memory\" ] && [ \"$SANITIZER\" != \"undefined\" ]; then\n    cp sapi/fuzzer/php-fuzz-function-jit $OUT/\n    cp sapi/fuzzer/php-fuzz-tracing-jit $OUT/\n\n    # Copy opcache.so extension, which does not support static linking.\n    mkdir -p $OUT/modules\n    cp modules/opcache.so $OUT/modules\nfi\n\n# copy corpora from source\nfor fuzzerName in `ls sapi/fuzzer/corpus`; do\n\tzip -j $OUT/php-fuzz-${fuzzerName}_seed_corpus.zip sapi/fuzzer/corpus/${fuzzerName}/*\ndone\n\n"
    },
    "picotls": {
        "name": "picotls",
        "language": "c++",
        "homepage": "https://github.com/h2o/picotls",
        "main_repo": "https://github.com/h2o/picotls",
        "primary_contact": "jonathan.foote@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/h2o/picotls\"\nlanguage: c++\nprimary_contact: \"jonathan.foote@gmail.com\"\nauto_ccs:\n  - \"frederik.deweerdt@gmail.com\"\n  - \"kazuhooku@gmail.com\"\n  - \"i.nagata110@gmail.com\"\n  - \"tmaesaka@gmail.com\"\n  - \"security@fastly.com\"\nmain_repo: 'https://github.com/h2o/picotls'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npushd $SRC/picotls\ncmake -DBUILD_FUZZER=ON -DOSS_FUZZ=ON .\nmake\ncp ./fuzz-client-hello $OUT/\ncp ./fuzz-server-hello $OUT/\n\nzip -jr $OUT/fuzz-client-hello_seed_corpus.zip $SRC/picotls/fuzz/fuzz-client-hello-corpus\nzip -jr $OUT/fuzz-server-hello_seed_corpus.zip $SRC/picotls/fuzz/fuzz-server-hello-corpus\npopd\n"
    },
    "pidgin": {
        "name": "pidgin",
        "language": "c",
        "homepage": "https://www.pidgin.im/",
        "main_repo": "https://sourceforge.net/projects/pidgin/files/Pidgin/2.14.4/pidgin-2.14.4.tar.bz2",
        "primary_contact": "gary.kramlich@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.pidgin.im/\"\nprimary_contact: \"gary.kramlich@gmail.com\"\nlanguage: c\nauto_ccs:\n  - \"quantum.analyst@gmail.com\"\n  - \"rekkanoryo.guifications@gmail.com\"\nmain_repo: 'https://sourceforge.net/projects/pidgin/files/Pidgin/2.14.4/pidgin-2.14.4.tar.bz2'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Place to keep dependencies for static linking\nDEPS=/deps\nmkdir ${DEPS}\n\n\n# Build libffi\ncd $SRC\ntar xvfz libffi-3.2.1.tar.gz\ncd libffi-3.2.1\n./configure --disable-shared\nmake -j$(nproc)\nexport LIBFFI_LIBS=\"-L/src/libffi-3.2.1 libraries/ -lffi\"\ncp ./x86_64-unknown-linux-gnu/.libs/libffi.a ${DEPS}/\n\n\n# Build libxml2\ncd $SRC/libxml2\n./autogen.sh \\\n    --disable-shared \\\n    --without-debug \\\n    --without-ftp \\\n    --without-http \\\n    --without-legacy \\\n    --without-python\nmake -j$(nproc)\nmake install\ncp .libs/libxml2.a ${DEPS}/\n\n\n# Build glib\ncd $SRC/glib\nGLIB_BUILD=$WORK/meson\nrm -rf $GLIB_BUILD\nmkdir $GLIB_BUILD\nmeson $GLIB_BUILD \\\n  -Db_lundef=false \\\n  -Ddefault_library=static \\\n  -Dlibmount=disabled\nninja -C $GLIB_BUILD\nninja -C $GLIB_BUILD install\n\ncp ${GLIB_BUILD}/gobject/libgobject-2.0.a ${DEPS}/\ncp ${GLIB_BUILD}/gmodule/libgmodule-2.0.a ${DEPS}/\ncp ${GLIB_BUILD}/glib/libglib-2.0.a ${DEPS}/\n\n\n# Build Pidgin\ncd $SRC \ntar -xf pidgin-2.14.10.tar.bz2\nmv pidgin-2.14.10 pidgin\ncd pidgin\n./configure --disable-consoleui \\\n            --disable-shared \\\n            --disable-screensaver \\\n            --disable-sm \\\n            --disable-gtkspell \\\n            --disable-gevolution \\\n            --enable-gnutls=no \\\n            --disable-gstreamer \\\n            --disable-vv \\\n            --disable-idn \\\n            --disable-meanwhile \\\n            --disable-avahi \\\n            --disable-dbus \\\n            --disable-perl \\\n            --disable-tcl \\\n            --disable-cyrus-sasl \\\n            --disable-gtkui \\\n            --enable-nss=no\nmake -j$(nproc)\n\n\n# Build fuzzers\nreadonly FUZZERS=( \\\n  pidgin_xml_fuzzer\n  pidgin_utils_fuzzer\n)\n\ncd libpurple\ncp $SRC/*fuzzer.c .\n\nfor fuzzer in \"${FUZZERS[@]}\"; do\n  $CC $CFLAGS -DHAVE_CONFIG_H \\\n    -I. \\\n    -I.. \\\n    -I${SRC}/glib \\\n    -I${SRC}/glib/glib \\\n    -I${SRC}/glib/gmodule \\\n    -I${GLIB_BUILD} \\\n    -I${GLIB_BUILD}/glib \\\n    -I/usr/lib/x86_64-linux-gnu/glib-2.0/include \\\n    -I/usr/local/include/libxml2  \\\n    -I/src/pidgin/libpurple/protocols/jabber \\\n    -c $fuzzer.c \\\n    -o $fuzzer.o\n\n  $CC $CXXFLAGS $LIB_FUZZING_ENGINE $fuzzer.o \\\n    -o $OUT/$fuzzer \\\n    /src/pidgin/libpurple/protocols/jabber/.libs/libjabber.a \\\n    ./.libs/libpurple.a \\\n    ${DEPS}/libgobject-2.0.a \\\n    ${DEPS}/libgmodule-2.0.a \\\n    ${DEPS}/libglib-2.0.a \\\n    ${DEPS}/libxml2.a \\\n    ${DEPS}/libffi.a \\\n    -lresolv -lz -llzma -l:libpcre2-8.a\ndone\n\nzip $OUT/pidgin_xml_fuzzer_seed_corpus.zip $SRC/go-fuzz-corpus/xml/corpus/*\ncp $SRC/fuzzing/dictionaries/xml.dict $OUT/pidgin_xml_fuzzer.dict\n"
    },
    "piex": {
        "name": "piex",
        "language": "c++",
        "homepage": "https://github.com/google/piex",
        "main_repo": "https://github.com/guidovranken/piex.git",
        "primary_contact": "nchusid@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/google/piex\"\nlanguage: c++\nprimary_contact: \"nchusid@google.com\"\nsanitizers:\n - address\n - undefined\n - memory\nmain_repo: 'https://github.com/guidovranken/piex.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit checkout fuzzers\ncd fuzzers\nmake\n\ncp fuzzer-tiff_parser $OUT/\ncp fuzzer-tiff_parser_seed_corpus.zip $OUT/\n\ncp fuzzer-piex $OUT/\ncp fuzzer-piex_seed_corpus.zip $OUT/\n"
    },
    "pigweed": {
        "name": "pigweed",
        "language": "c++",
        "homepage": "https://pigweed.dev/",
        "main_repo": "https://pigweed.googlesource.com/pigweed/pigweed",
        "primary_contact": "keir@google.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "centipede",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://pigweed.dev/\"\nlanguage: c++\nprimary_contact: \"keir@google.com\"\nauto_ccs:\n  - \"aarongreen@google.com\"\n  - \"alizhang@google.com\"\n  - \"amituttam@google.com\"\n  - \"amontanez@google.com\"\n  - \"asadmemon@google.com\"\n  - \"benlawson@google.com\"\n  - \"cachinchilla@google.com\"\n  - \"chadnorvell@google.com\"\n  - \"davidroth@google.com\"\n  - \"drees@google.com\"\n  - \"erahm@google.com\"\n  - \"ewout@google.com\"\n  - \"frolv@google.com\"\n  - \"fsareshwala@google.com\"\n  - \"hayala@google.com\"\n  - \"hepler@google.com\"\n  - \"jamuraa@google.com\"\n  - \"jgraff@google.com\"\n  - \"joshconner@google.com\"\n  - \"kayce@google.com\"\n  - \"keir@google.com\"\n  - \"konkers@google.com\"\n  - \"phosek@google.com\"\n  - \"prabhukr@google.com\"\n  - \"mohrr@google.com\"\n  - \"saeedali@google.com\"\n  - \"tonymd@google.com\"\n  - \"tpudlik@google.com\"\n  - \"vaas@google.com\"\n  - \"zyecheng@google.com\"\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://pigweed.googlesource.com/pigweed/pigweed'\nfuzzing_engines:\n  - afl\n  - centipede\n  - honggfuzz\n  - libfuzzer\n",
        "build_sh": "#!/bin/bash\n\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd $SRC/pigweed\n\necho \"Building project using Bazel wrapper.\"\n\nexport BAZEL_FUZZ_TEST_QUERY=\"\nlet all_fuzz_tests = attr(tags, \\\"fuzz-test\\\", \\\"//...\\\") in\nlet lang_fuzz_tests = attr(generator_function, \\\"pw_cc_fuzz_test\\\", \\$all_fuzz_tests) in\n\\$lang_fuzz_tests - attr(tags, \\\"no-oss-fuzz\\\", \\$lang_fuzz_tests)\n\"\n\nexport BAZEL_EXTRA_BUILD_FLAGS=\"\n--config non_hermetic\n--cxxopt=-std=c++17\n--config=googletest\n\"\n\nbazel_build_fuzz_tests\n"
    },
    "pikepdf": {
        "name": "pikepdf",
        "language": "python",
        "homepage": "https://pikepdf.readthedocs.io/en/latest/index.html",
        "main_repo": "https://github.com/pikepdf/pikepdf.git",
        "primary_contact": "james@purplerock.ca",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://pikepdf.readthedocs.io/en/latest/index.html\"\nlanguage: python\nprimary_contact: \"james@purplerock.ca\"\nauto_ccs: \n  - \"ennamarie19@gmail.com\"\nfuzzing_engines: \n  - libfuzzer\nsanitizers: \n  - address\n  - undefined\nmain_repo: \"https://github.com/pikepdf/pikepdf.git\"\n",
        "build_sh": null
    },
    "pillow": {
        "name": "pillow",
        "language": "python",
        "homepage": "https://github.com/python-pillow/Pillow",
        "main_repo": "https://github.com/python-pillow/Pillow",
        "primary_contact": "security@tidelift.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/python-pillow/Pillow\"\nlanguage: python\nprimary_contact: \"security@tidelift.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\n  - \"esoroos@gmail.com\"\n  - \"radarhere@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/python-pillow/Pillow'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./Tests/oss-fuzz/build.sh\n"
    },
    "pip": {
        "name": "pip",
        "language": "python",
        "homepage": "https://github.com/pypa/pip",
        "main_repo": "https://github.com/pypa/pip",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pypa/pip\nlanguage: python\nmain_repo: https://github.com/pypa/pip\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/pip\npip3 install .\npython3 setup.py install\n\ncd $SRC/pip/src\n\n# Build fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\n# Create seeds\nzip -r $OUT/fuzz_requirements_seed_corpus.zip $SRC/requirement_seeds/*\n"
    },
    "pistache": {
        "name": "pistache",
        "language": "c++",
        "homepage": "http://pistache.io",
        "main_repo": "https://github.com/pistacheio/pistache",
        "primary_contact": "kip@thevertigo.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"http://pistache.io\"\nlanguage: c++\nprimary_contact: \"kip@thevertigo.com\"\nmain_repo: \"https://github.com/pistacheio/pistache\"\nauto_ccs:\n - \"dennis.jenkins.75@gmail.com\"\n - \"andrea@pappacoda.it\"\n - \"hyperxor@protonmail.com\"\n - \"auquetal@gmail.com\"\n - \"david@adalogics.com\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmkdir build && cd build\ncmake -DBUILD_SHARED_LIBS=OFF -DPISTACHE_BUILD_TESTS=OFF ..\nmake pistache_static\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE -o $OUT/fuzz_parsers \\\n    -std=c++17 -I../include/ ../tests/fuzzers/fuzz_parser.cpp ./src/libpistache.a\n\nzip -q -r -j $OUT/fuzz_parsers_seed_corpus.zip ../tests/fuzzers/corpus\n"
    },
    "pjsip": {
        "name": "pjsip",
        "language": "c",
        "homepage": "www.pjsip.org",
        "main_repo": "https://github.com/pjsip/pjproject",
        "primary_contact": "security@pjsip.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"www.pjsip.org\"\nlanguage: c\nprimary_contact: \"security@pjsip.org\"\nauto_ccs:\n  - \"nanang@teluu.com\"\n  - \"ming@teluu.com\"\n  - \"riza@teluu.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/pjsip/pjproject'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nexport CFLAGS=\"$CFLAGS -DPJMEDIA_HAS_VIDEO=1\"\nexport CXXFLAGS=\"$CFLAGS\"\nexport LDFLAGS=\"$CFLAGS\"\n\n./configure \\\n--disable-ffmpeg --disable-ssl \\\n--disable-speex-aec --disable-speex-codec \\\n--disable-g7221-codec --disable-gsm-codec --disable-ilbc-codec \\\n--disable-resample --disable-libsrtp --disable-libwebrtc --disable-libyuv\n\nmake dep\nmake -j$(nproc) --ignore-errors\nmake fuzz\n\npushd tests/fuzz/\nFuzzBins=$(find . -name \"*.c\")\n\nfor File in $FuzzBins; do\n    FuzzBin=$(basename $File .c)\n    cp $FuzzBin $OUT/$FuzzBin\ndone\npopd\n\npushd tests/fuzz/seed/\nFuzzSeed=$(find . -name \"*.zip\")\n\nfor Seed in $FuzzSeed; do\n    cp $Seed $OUT/$Seed\ndone\npopd\n"
    },
    "plan9port": {
        "name": "plan9port",
        "language": "c",
        "homepage": "https://github.com/9fans/plan9port",
        "main_repo": "https://github.com/9fans/plan9port",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/9fans/plan9port\"\nlanguage: c\nmain_repo: 'https://github.com/9fans/plan9port'\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Apply fuzzing patches\ngit apply  --ignore-space-change --ignore-whitespace $SRC/fuzz_patch.diff\n\nexport CC9=$CC\nexport CC9FLAGS=\"$CFLAGS\"\nexport ASAN_OPTIONS=\"detect_leaks=0\"\n./INSTALL\n\nplan9_libs=\"-Wl,--start-group ./lib/libframe.a ./lib/libbio.a ./lib/libdisk.a ./lib/lib9.a ./lib/libcomplete.a ./lib/libString.a ./lib/libauth.a ./lib/libmemlayer.a ./lib/libventi.a ./lib/libmux.a ./lib/lib9p.a ./lib/libregexp9.a ./lib/libip.a ./lib/libgeometry.a ./lib/libhtml.a ./lib/libmp.a ./lib/libplumb.a ./lib/libsec.a ./lib/libflate.a ./lib/libhttpd.a ./lib/libndb.a ./lib/libdraw.a ./lib/libmach.a ./lib/libavl.a ./lib/libthread.a ./lib/libauthsrv.a ./lib/libdiskfs.a ./lib/lib9pclient.a ./lib/libsunrpc.a ./lib/libmemdraw.a ./lib/libacme.a ./lib/libbin.a -Wl,--end-group\"\n\n$CC $CFLAGS $LIB_FUZZING_ENGINE -c $SRC/fuzz_libsec.c \\\n    -o fuzz_libsec.o -I./include\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE fuzz_libsec.o \\\n    -o $OUT/fuzz_libsec -I./include $plan9_libs\n\ncp $SRC/fuzz_libsec.options $OUT/fuzz_libsec.options\n"
    },
    "plexus-utils": {
        "name": "plexus-utils",
        "language": "jvm",
        "homepage": "https://github.com/codehaus-plexus/plexus-utils",
        "main_repo": "https://github.com/codehaus-plexus/plexus-utils.git",
        "primary_contact": "",
        "vendor_ccs": [
            "glendowne@code-intelligence.com",
            "wagner@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/codehaus-plexus/plexus-utils\"\nlanguage: jvm\nprimary_contact: \"\"\nfuzzing_engines:\n  - \"libfuzzer\"\nsanitizers:\n  - \"address\"\nmain_repo: \"https://github.com/codehaus-plexus/plexus-utils.git\"\nvendor_ccs:\n  - \"glendowne@code-intelligence.com\"\n  - \"wagner@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nMAVEN_ARGS=\"-DskipTests -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package org.apache.maven.plugins:maven-shade-plugin:3.2.4:shade $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"target/plexus-utils-$CURRENT_VERSION.jar\" $OUT/plexus-utils.jar\n\nALL_JARS=\"plexus-utils.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "ply": {
        "name": "ply",
        "language": "python",
        "homepage": "https://github.com/dabeaz/ply",
        "main_repo": "https://github.com/dabeaz/ply",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/dabeaz/ply\nlanguage: python\nmain_repo: https://github.com/dabeaz/ply\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC/ -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pngquant": {
        "name": "pngquant",
        "language": "c",
        "homepage": "https://pngquant.org",
        "main_repo": "https://github.com/kornelski/pngquant",
        "primary_contact": "ossfuzz@pngquant.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://pngquant.org\"\nmain_repo: \"https://github.com/kornelski/pngquant\"\nlanguage: c\nprimary_contact: \"ossfuzz@pngquant.org\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\n",
        "build_sh": null
    },
    "poco": {
        "name": "poco",
        "language": "c++",
        "homepage": "https://github.com/pocoproject/poco",
        "main_repo": "https://github.com/pocoproject/poco",
        "primary_contact": "guenter@pocoproject.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/pocoproject/poco\"\nmain_repo: \"https://github.com/pocoproject/poco\"\nlanguage: c++\nprimary_contact: \"guenter@pocoproject.org\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\n  - \"alex@pocoproject.org\"\nsanitizers:\n  - address\n  - undefined\n  - memory\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "poppler": {
        "name": "poppler",
        "language": "c++",
        "homepage": "https://poppler.freedesktop.org/",
        "main_repo": "https://anongit.freedesktop.org/git/poppler/poppler.git",
        "primary_contact": "tsdgeos@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: https://poppler.freedesktop.org/\nlanguage: c++\nprimary_contact: tsdgeos@gmail.com\nsanitizers:\n  - address\n  - memory\n  - undefined\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\nauto_ccs:\n  - jonathan@titanous.com\n  - adam.reichold@t-online.de\nmain_repo: 'https://anongit.freedesktop.org/git/poppler/poppler.git'\nfuzzing_engines:\n - afl\n - honggfuzz\n - libfuzzer\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nPREFIX=$WORK/prefix\nmkdir -p $PREFIX\n\nexport PKG_CONFIG=\"`which pkg-config` --static\"\nexport PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig\nexport PATH=$PREFIX/bin:$PATH\n\nBUILD=$WORK/build\n\nrm -rf $WORK/*\nrm -rf $BUILD\nmkdir -p $BUILD\n\n# Install Boost headers\ncd $SRC/\ntar jxf boost_1_87_0.tar.bz2\ncd boost_1_87_0/\nCFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\nCFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\n./b2 --with-math install\n\npushd $SRC/zlib\nmkdir build && cd build\nCFLAGS=-fPIC ../configure --static --prefix=$PREFIX\nmake install -j$(nproc)\n\npushd $SRC\ntar zxf nss-3.99-with-nspr-4.35.tar.gz\ncd nss-3.99\nnss_flag=\"\"\nSAVE_CFLAGS=\"$CFLAGS\"\nSAVE_CXXFLAGS=\"$CXXFLAGS\"\nif [ \"$SANITIZER\" = \"memory\" ]; then\n    nss_flag=\"--msan\"\nelif [ \"$SANITIZER\" = \"address\" ]; then\n    nss_flag=\"--asan\"\nelif [ \"$SANITIZER\" = \"undefined\" ]; then\n    nss_flag=\"--ubsan\"\nelif [ \"$SANITIZER\" = \"coverage\" ]; then\n    # some parts of nss don't like -fcoverage-mapping nor -fprofile-instr-generate :/\n    CFLAGS=\"${CFLAGS/\"-fcoverage-mapping\"/\" \"}\"\n    CFLAGS=\"${CFLAGS/\"-fprofile-instr-generate\"/\" \"}\"\n    CXXFLAGS=\"${CXXFLAGS/\"-fcoverage-mapping\"/\" \"}\"\n    CXXFLAGS=\"${CXXFLAGS/\"-fprofile-instr-generate\"/\" \"}\"\nfi\n\n./nss/build.sh $nss_flag --disable-tests --static -v -Dmozilla_client=1 -Dzlib_libs=$PREFIX/lib/libz.a -Dsign_libs=0\n\nCFLAGS=\"$SAVE_CFLAGS\"\nCXXFLAGS=\"$SAVE_CXXFLAGS\"\n\n# NSS has a .pc.in file but doesn't do anything with it\ncp nss/pkg/pkg-config/nss.pc.in $PREFIX/lib/pkgconfig/nss.pc\nsed -i \"s#\\${libdir}#${SRC}/nss-3.99/dist/Debug/lib#g\" $PREFIX/lib/pkgconfig/nss.pc\nsed -i \"s#\\${includedir}#${SRC}/nss-3.99/dist/public/nss#g\" $PREFIX/lib/pkgconfig/nss.pc\nsed -i \"s#%NSS_VERSION%#3.99#g\" $PREFIX/lib/pkgconfig/nss.pc\ncp dist/Debug/lib/pkgconfig/nspr.pc $PREFIX/lib/pkgconfig/\n\npushd $SRC/freetype\n./autogen.sh\n./configure --prefix=\"$PREFIX\" --disable-shared PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\"\nmake -j$(nproc)\nmake install\n\npushd $SRC/Little-CMS\n./autogen.sh --prefix=\"$PREFIX\" --disable-shared PKG_CONFIG_PATH=\"$PKG_CONFIG_PATH\"\nmake -j$(nproc)\nmake install\n\nmkdir -p $SRC/openjpeg/build\npushd $SRC/openjpeg/build\nsed -i \"s#\\${LCMS_LIBNAME}#-L$PREFIX/lib \\${LCMS_LIBNAME}#\" ../src/bin/jp2/CMakeLists.txt\nPKG_CONFIG=`which pkg-config` cmake .. -DBUILD_SHARED_LIBS=OFF -DCMAKE_INSTALL_PREFIX=$PREFIX\nmake -j$(nproc) install\n\nif [ \"$SANITIZER\" != \"memory\" ]; then\n\n    pushd $SRC/fontconfig\n    meson \\\n        --prefix=$PREFIX \\\n        --libdir=lib \\\n        --default-library=static \\\n        _builddir\n    ninja -C _builddir\n    ninja -C _builddir install\n    popd\n\n    pushd $SRC/glib-2.80.0\n    meson \\\n        --prefix=$PREFIX \\\n        --libdir=lib \\\n        --default-library=static \\\n        -Db_lundef=false \\\n        -Doss_fuzz=enabled \\\n        -Dlibmount=disabled \\\n        _builddir\n    ninja -C _builddir\n    ninja -C _builddir install\n    popd\n\n    pushd $SRC/libpng\n    autoreconf -fi\n    CPPFLAGS=-I$PREFIX/include LDFLAGS=-L$PREFIX/lib ./configure --prefix=\"$PREFIX\" --disable-shared --disable-dependency-tracking\n    make -j$(nproc)\n    make install\n\n    pushd $SRC/cairo\n    meson \\\n        --prefix=$PREFIX \\\n        --libdir=lib \\\n        --default-library=static \\\n        _builddir\n    ninja -C _builddir\n    ninja -C _builddir install\n    popd\n\n    pushd $SRC/pango\n    CFLAGS=\"$CFLAGS -fno-sanitize=vptr\" CXXFLAGS=\"$CXXFLAGS -fno-sanitize=vptr\" meson \\\n        -Ddefault_library=static \\\n        --prefix=$PREFIX \\\n        --libdir=lib \\\n        _builddir\n    sed -i -e 's/ -Werror=implicit-fallthrough//g' _builddir/build.ninja\n    sed -i -e 's/#pragma GCC diagnostic error   \"-Wcast-function-type\"//g' subprojects/harfbuzz/src/hb.hh\n    ninja -C _builddir\n    ninja -C _builddir install\n    popd\nfi\n\npushd $SRC/qtbase\n# add the flags to Qt build too\n# Use ~ as sed delimiters instead of the usual \"/\" because C(XX)FLAGS may\n# contain paths with slashes.\nsed -i -e \"s~QMAKE_CXXFLAGS    += -stdlib=libc++~QMAKE_CXXFLAGS    += -stdlib=libc++  $CXXFLAGS\\nQMAKE_CFLAGS += $CFLAGS~g\" mkspecs/linux-clang-libc++/qmake.conf\nsed -i -e \"s~QMAKE_LFLAGS      += -stdlib=libc++~QMAKE_LFLAGS      += -stdlib=libc++ -lpthread $CXXFLAGS~g\" mkspecs/linux-clang-libc++/qmake.conf\nsed -i -e \"s~QMAKE_CXX               = \\$\\${CROSS_COMPILE}clang++~QMAKE_CXX = $CXX~g\" mkspecs/common/clang.conf\nsed -i -e \"s~QMAKE_CC                = \\$\\${CROSS_COMPILE}clang~QMAKE_CC = $CC~g\" mkspecs/common/clang.conf\n# disable sanitize=vptr for harfbuzz since it compiles without rtti\nsed -i -e \"s~TARGET = qtharfbuzz~TARGET = qtharfbuzz\\nQMAKE_CXXFLAGS += -fno-sanitize=vptr~g\" src/3rdparty/harfbuzz-ng/harfbuzz-ng.pro\n# make qmake compile faster\nsed -i -e \"s/MAKE\\\")/MAKE\\\" -j$(nproc))/g\" configure\n# Fix memory stuff in qt 5.15 unfixable since branch is closed now\nsed -i -e \"s/struct statx statxBuffer/struct statx statxBuffer = {}/g\" src/corelib/io/qfilesystemengine_unix.cpp\nsed -i -e \"s/if (m_compressAlgo == RCCResourceLibrary::CompressionAlgorithm::Zlib) {/if (false) {/g\" src/tools/rcc/rcc.cpp\n./configure --zlib=system --glib=no --libpng=qt -opensource -confirm-license -static -no-opengl -no-icu -platform linux-clang-libc++ -v -nomake tests -nomake examples -prefix $PREFIX -D QT_NO_DEPRECATED_WARNINGS -I $PREFIX/include/ -L $PREFIX/lib/\nmake -j$(nproc)\nmake install\npopd\n\n# Poppler complains when PKG_CONFIG is set to `which pkg-config --static` so\n# temporarily removing it\nexport PKG_CONFIG=\"`which pkg-config`\"\n\nif [ \"$SANITIZER\" != \"memory\" ]; then\n    POPPLER_ENABLE_GLIB=ON\n    POPPLER_FONT_CONFIGURATION=fontconfig\nelse\n    POPPLER_ENABLE_GLIB=OFF\n    POPPLER_FONT_CONFIGURATION=generic\nfi\n\nmkdir -p $SRC/poppler/build\npushd $SRC/poppler/build\ncmake .. \\\n  -DCMAKE_BUILD_TYPE=debug \\\n  -DBUILD_SHARED_LIBS=OFF \\\n  -DENABLE_FUZZER=OFF \\\n  -DFONT_CONFIGURATION=$POPPLER_FONT_CONFIGURATION \\\n  -DENABLE_DCTDECODER=none \\\n  -DENABLE_GOBJECT_INTROSPECTION=OFF \\\n  -DENABLE_LIBPNG=OFF \\\n  -DENABLE_ZLIB=OFF \\\n  -DENABLE_LIBTIFF=OFF \\\n  -DENABLE_LIBJPEG=OFF \\\n  -DENABLE_GLIB=$POPPLER_ENABLE_GLIB \\\n  -DENABLE_LIBCURL=OFF \\\n  -DENABLE_GPGME=OFF \\\n  -DENABLE_QT6=OFF \\\n  -DENABLE_QT5=ON \\\n  -DENABLE_UTILS=OFF \\\n  -DWITH_Cairo=$POPPLER_ENABLE_GLIB \\\n  -DCMAKE_INSTALL_PREFIX=$PREFIX\n\nexport PKG_CONFIG=\"`which pkg-config` --static\"\nmake -j$(nproc) poppler poppler-cpp poppler-qt5\nif [ \"$SANITIZER\" != \"memory\" ]; then\n    make -j$(nproc) poppler-glib\nfi\n\nPREDEPS_LDFLAGS=\"-Wl,-Bdynamic -ldl -lm -lc -lz -pthread -lrt -lpthread\"\nDEPS=\"freetype2 lcms2 libopenjp2\"\nif [ \"$SANITIZER\" != \"memory\" ]; then\n    DEPS=\"$DEPS fontconfig libpng\"\nfi\nBUILD_CFLAGS=\"$CFLAGS `pkg-config --static --cflags $DEPS`\"\nBUILD_LDFLAGS=\"-Wl,-static `pkg-config --static --libs $DEPS`\"\n# static linking is hard ^_^\nNSS_STATIC_LIBS=`ls $SRC/nss-3.99/dist/Debug/lib/lib*.a`\nNSS_STATIC_LIBS=\"$NSS_STATIC_LIBS $NSS_STATIC_LIBS $NSS_STATIC_LIBS\"\nBUILD_LDFLAGS=\"$BUILD_LDFLAGS $NSS_STATIC_LIBS\"\n\nfuzzers=$(find $SRC/poppler/cpp/tests/fuzzing/ -name \"*_fuzzer.cc\")\n\nfor f in $fuzzers; do\n    fuzzer_name=$(basename $f .cc)\n\n    $CXX $CXXFLAGS -std=c++11 -I$SRC/poppler/cpp -I$SRC/poppler/build/cpp \\\n        $BUILD_CFLAGS \\\n        $f -o $OUT/$fuzzer_name \\\n        $PREDEPS_LDFLAGS \\\n        $SRC/poppler/build/cpp/libpoppler-cpp.a \\\n        $SRC/poppler/build/libpoppler.a \\\n        $BUILD_LDFLAGS \\\n        $LIB_FUZZING_ENGINE \\\n        $LIB_FUZZING_ENGINE \\\n        -Wl,-Bdynamic\ndone\n\nif [ \"$SANITIZER\" != \"memory\" ]; then\n    DEPS=\"gmodule-2.0 glib-2.0 gio-2.0 gobject-2.0 freetype2 lcms2 libopenjp2 cairo cairo-gobject pango fontconfig libpng\"\n    BUILD_CFLAGS=\"$CFLAGS `pkg-config --static --cflags $DEPS`\"\n    BUILD_LDFLAGS=\"-Wl,-static `pkg-config --static --libs $DEPS`\"\n    BUILD_LDFLAGS=\"$BUILD_LDFLAGS $NSS_STATIC_LIBS\"\n\n    fuzzers=$(find $SRC/poppler/glib/tests/fuzzing/ -name \"*_fuzzer.cc\")\n    for f in $fuzzers; do\n        fuzzer_name=$(basename $f .cc)\n\n        $CXX $CXXFLAGS -std=c++11 -I$SRC/poppler/glib -I$SRC/poppler/build/glib \\\n            $BUILD_CFLAGS \\\n            $f -o $OUT/$fuzzer_name \\\n            $PREDEPS_LDFLAGS \\\n            $SRC/poppler/build/glib/libpoppler-glib.a \\\n            $SRC/poppler/build/cpp/libpoppler-cpp.a \\\n            $SRC/poppler/build/libpoppler.a \\\n            $BUILD_LDFLAGS \\\n            $LIB_FUZZING_ENGINE \\\n            -Wl,-Bdynamic\n    done\nfi\n\nPREDEPS_LDFLAGS=\"-Wl,-Bdynamic -ldl -lm -lc -lz -pthread -lrt -lpthread\"\nDEPS=\"freetype2 lcms2 libopenjp2 Qt5Core Qt5Gui Qt5Xml\"\nif [ \"$SANITIZER\" != \"memory\" ]; then\n    DEPS=\"$DEPS fontconfig libpng\"\nfi\nBUILD_CFLAGS=\"$CFLAGS `pkg-config --static --cflags $DEPS`\"\nBUILD_LDFLAGS=\"-Wl,-static `pkg-config --static --libs $DEPS`\"\nBUILD_LDFLAGS=\"$BUILD_LDFLAGS $NSS_STATIC_LIBS\"\n\nfuzzers=$(find $SRC/poppler/qt5/tests/fuzzing/ -name \"*_fuzzer.cc\")\nfor f in $fuzzers; do\n    fuzzer_name=$(basename $f .cc)\n\n    $CXX $CXXFLAGS -std=c++11 -fPIC \\\n        -I$SRC/poppler/qt5/src -I$SRC/poppler/build/qt5/src \\\n        $BUILD_CFLAGS \\\n        $f -o $OUT/$fuzzer_name \\\n        $PREDEPS_LDFLAGS \\\n        $SRC/poppler/build/qt5/src/libpoppler-qt5.a \\\n        $SRC/poppler/build/cpp/libpoppler-cpp.a \\\n        $SRC/poppler/build/libpoppler.a \\\n        $BUILD_LDFLAGS \\\n        $LIB_FUZZING_ENGINE \\\n        -Wl,-Bdynamic\ndone\n\nmv $SRC/{*.zip,*.dict} $OUT\n\nif [ ! -f \"${OUT}/poppler_seed_corpus.zip\" ]; then\n    echo \"missing seed corpus\"\n    exit 1\nfi\n\nif [ ! -f \"${OUT}/poppler.dict\" ]; then\n    echo \"missing dictionary\"\n    exit 1\nfi\n\nfuzzers=$(find $OUT -name \"*_fuzzer\")\nfor f in $fuzzers; do\n  fuzzer_name=$(basename $f)\n  ln -sf $OUT/poppler_seed_corpus.zip $OUT/${fuzzer_name}_seed_corpus.zip\n  ln -sf $OUT/poppler.dict $OUT/${fuzzer_name}.dict\ndone\n"
    },
    "postfix": {
        "name": "postfix",
        "language": "c",
        "homepage": "http://www.postfix.org/",
        "main_repo": "https://github.com/vdukhovni/postfix",
        "primary_contact": "wietse@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"http://www.postfix.org/\"\nlanguage: c\nprimary_contact: \"wietse@gmail.com\"\nmain_repo: \"https://github.com/vdukhovni/postfix\"\nauto_ccs:\n  - \"david@adalogics.com\"\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd postfix\nmake makefiles CCARGS=\"${CFLAGS}\"\nmake\nBASE=$PWD\n\n# Compile fuzzers\ncd ${BASE}/src/global\n$CC $CFLAGS -DHAS_DEV_URANDOM -DSNAPSHOT -UUSE_DYNAMIC_LIBS -DDEF_SHLIB_DIR=\\\"no\\\" \\\n               -UUSE_DYNAMIC_MAPS -I. -I../../include -DNO_EAI -DDEF_SMTPUTF8_ENABLE=\\\"no\\\" \\\n                -g -O -DLINUX4 -Wformat -Wno-comment -fno-common -c $SRC/fuzz_tok822.c\n$CC $CFLAGS -DHAS_DEV_URANDOM -DSNAPSHOT -UUSE_DYNAMIC_LIBS -DDEF_SHLIB_DIR=\\\"no\\\" \\\n               -UUSE_DYNAMIC_MAPS -I. -I../../include -DNO_EAI -DDEF_SMTPUTF8_ENABLE=\\\"no\\\" \\\n                -g -O -DLINUX4 -Wformat -Wno-comment -fno-common -c $SRC/fuzz_mime.c\n\n# Link fuzzers\ncd ${BASE}\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./src/global/fuzz_tok822.o \\\n  -o $OUT/fuzz_tok822 ./lib/libglobal.a ./lib/libutil.a\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE ./src/global/fuzz_mime.o -o $OUT/fuzz_mime \\\n  ./lib/libglobal.a ./lib/libutil.a -ldb -lnsl\n"
    },
    "postgis": {
        "name": "postgis",
        "language": "c++",
        "homepage": "http://postgis.net/",
        "main_repo": "https://git.osgeo.org/gitea/postgis/postgis.git",
        "primary_contact": "lr@pcorp.us",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"http://postgis.net/\"\nlanguage: c++\nprimary_contact: \"lr@pcorp.us\"\nauto_ccs:\n  - \"even.rouault@gmail.com\"\n  - \"pramsey@cleverelephant.ca\"\n  - \"mateusz@loskot.net\"\n  - \"komzpa@gmail.com\"\nmain_repo: 'https://git.osgeo.org/gitea/postgis/postgis.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n./autogen.sh\n./configure --enable-static --without-raster --without-protobuf --without-wagyu --enable-debug\ncd liblwgeom\nmake clean -s\nmake -j$(nproc) -s\ncd ..\n\nbash ./fuzzers/build_google_oss_fuzzers.sh\nbash ./fuzzers/build_seed_corpus.sh\n"
    },
    "postgresql": {
        "name": "postgresql",
        "language": "c",
        "homepage": "https://postgresql.org",
        "main_repo": "https://git.postgresql.org/git/postgresql",
        "primary_contact": "sfrost@snowman.net",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://postgresql.org\"\nmain_repo: \"https://git.postgresql.org/git/postgresql\"\nprimary_contact: \"sfrost@snowman.net\"\nlanguage: c\nauto_ccs:\n  - \"ouyangyunshu@google.com\"\n  - \"frost.stephen.p@gmail.com\"\n  - \"aseering@google.com\"\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncp -r $SRC/fuzzer src/backend/\ngit apply --ignore-space-change --ignore-whitespace  ../add_fuzzers.diff\n\nuseradd fuzzuser\nchown -R fuzzuser .\ncd bld\n\nCC=\"\" CXX=\"\" CFLAGS=\"\" CXXFLAGS=\"\" su fuzzuser -c ../configure\ncd src/backend/fuzzer\nsu fuzzuser -c \"make createdb\"\nchown -R root .\nmv temp/data .\ncp -r data $OUT/\ncd ../../..\ncp -r tmp_install $OUT/\nmake clean\n\n../configure\nmake\ncd src/backend/fuzzer\nmake fuzzer\n#if [ \"$FUZZING_ENGINE\" = \"afl\" ]\n#then\nrm protocol_fuzzer\n#fi\ncp *_fuzzer $OUT/\ncp $SRC/postgresql_fuzzer_seed_corpus.zip $OUT/\n\n# Temporary fix. Todo: David fix this.\n#rm $OUT/protocol_fuzzer\n"
    },
    "powerdns": {
        "name": "powerdns",
        "language": "c++",
        "homepage": "https://www.powerdns.com/",
        "main_repo": "https://github.com/PowerDNS/pdns.git",
        "primary_contact": "remi.gacogne@powerdns.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.powerdns.com/\"\nlanguage: c++\nprimary_contact: \"remi.gacogne@powerdns.com\"\nauto_ccs:\n  - \"powerdnsossfuzz@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/PowerDNS/pdns.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# remove dependencies on boost's program_options, we don't need it\n# and it won't link because oss-fuzz adds -stdlib=libc++ to the flags,\n# which would require rebuilding boost\nsed -i 's/BOOST_PROGRAM_OPTIONS(\\[mt\\])//' configure.ac\nsed -i 's/AC_MSG_ERROR(\\[Boost Program Options library not found\\])/AC_MSG_NOTICE(\\[Boost Program Options library not found\\])/' configure.ac\n# we also need to disable building as PIE because libFuzzingEngine.a\n# does not appear to be compiled as PIC\nsed -i 's/AC_CC_PIE//' configure.ac\n\n# Install Boost headers\n(\n cd $SRC/\n tar jxf boost_1_84_0.tar.bz2\n cd boost_1_84_0/\n CFLAGS=\"\" CXXFLAGS=\"\" ./bootstrap.sh\n CFLAGS=\"\" CXXFLAGS=\"\" ./b2 headers\n cp -R boost/ /usr/include/\n)\n\n# build fuzzing targets\nautoreconf -vi\n./configure \\\n    --without-dynmodules \\\n    --with-modules='' \\\n    --disable-lua-records \\\n    --disable-ixfrdist \\\n    --enable-fuzz-targets \\\n    --disable-dependency-tracking \\\n    --disable-silent-rules || /bin/bash\n\nif [ -d ext/arc4random/ ]; then\n    make -j$(nproc) -C ext/arc4random/\nfi\nmake -j$(nproc) -C ext/yahttp/\ncd pdns\nmake -j$(nproc) fuzz_targets\n\n# copy the fuzzing target binaries\ncp fuzz_target_* \"${OUT}/\"\n\n# build the dnsdist fuzzing target, if any\nif [ -f dnsdistdist/fuzz_dnsdistcache.cc ]; then\n    cd dnsdistdist\n    sed -i 's/AC_CC_PIE//' configure.ac\n    autoreconf -vi\n    ./configure \\\n        --enable-fuzz-targets \\\n        --disable-dependency-tracking \\\n        --disable-silent-rules || /bin/bash\n    if [ -d ext/arc4random/ ]; then\n        make -j$(nproc) -C ext/arc4random/\n    fi\n    make -j$(nproc) fuzz_targets\n\n    # copy the fuzzing target binaries\n    cp fuzz_target_* \"${OUT}/\"\n\n    # back to the pdns/ directory\n    cd ..\nfi\n\n# back to the checkout directory\ncd ..\n\n# copy the zones used in the regression tests to the \"zones\" corpus\ncp regression-tests/zones/* fuzzing/corpus/zones/\n\n# generate the corpus files\nif [ -d fuzzing/corpus/raw-dns-packets/ ]; then\n    zip -j \"${OUT}/fuzz_target_dnsdistcache_seed_corpus.zip\" fuzzing/corpus/raw-dns-packets/*\nfi\nif [ -d fuzzing/corpus/txt-records/ ]; then\n    zip -j \"${OUT}/fuzz_target_dnslabeltext_parseRFC1035CharString_seed_corpus.zip\" fuzzing/corpus/txt-records/*\nfi\nif [ -d fuzzing/corpus/raw-dns-packets/ ]; then\n    zip -j \"${OUT}/fuzz_target_moadnsparser_seed_corpus.zip\" fuzzing/corpus/raw-dns-packets/*\nfi\nif [ -d fuzzing/corpus/raw-dns-packets/ ]; then\n    zip -j \"${OUT}/fuzz_target_packetcache_seed_corpus.zip\" fuzzing/corpus/raw-dns-packets/*\nfi\nif [ -d fuzzing/corpus/proxy-protocol-raw-packets/ ]; then\n    zip -j \"${OUT}/fuzz_target_proxyprotocol_seed_corpus.zip\" fuzzing/corpus/proxy-protocol-raw-packets/*\nfi\nif [ -d fuzzing/corpus/zones/ ]; then\n    zip -j \"${OUT}/fuzz_target_zoneparsertng_seed_corpus.zip\" fuzzing/corpus/zones/*\nfi\nif [ -d fuzzing/corpus/http-raw-payloads/ ]; then\n    zip -j \"${OUT}/fuzz_target_yahttp_seed_corpus.zip\" fuzzing/corpus/http-raw-payloads/*\nfi\n"
    },
    "powsybl-java": {
        "name": "powsybl-java",
        "language": "jvm",
        "homepage": "https://www.powsybl.org/",
        "main_repo": "https://github.com/powsybl/powsybl-core",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://www.powsybl.org/\nlanguage: jvm\nmain_repo: https://github.com/powsybl/powsybl-core\nsanitizers:\n  - address\nvendor_ccs:\n  - \"david@adalogics.com\"\n  - \"adam@adalogics.com\"\n  - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2025 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build powsybl-core\npushd powsybl-core\n$MVN clean package -DskipTests=true -Dmaven.javadoc.skip=true\npopd\n\n# Build powsybl-diagram\npushd powsybl-diagram\n$MVN clean package -DskipTests=true -Dmaven.javadoc.skip=true\npopd\n\n# Build powsybl-metrix\npushd powsybl-metrix\n$MVN clean package -DskipTests=true -Dmaven.javadoc.skip=true\npopd\n\n# Build powsybl-open-rao\npushd powsybl-open-rao\n$MVN clean package -DskipTests=true -Dmaven.javadoc.skip=true\npopd\n\n# Build powsybl-dynawo\npushd powsybl-dynawo\n$MVN clean package -DskipTests=true -Dmaven.javadoc.skip=true\npopd\n\n# Build powsybl-open-loadflow\npushd powsybl-open-loadflow\n$MVN clean package -DskipTests=true -Dmaven.javadoc.skip=true\npopd\n\n# Build powsybl-entsoe\npushd powsybl-entsoe\n$MVN clean package -DskipTests=true -Dmaven.javadoc.skip=true\npopd\n\n# Disable logging\necho \"<configuration><root level=\\\"OFF\\\" /></configuration>\" > $OUT/logback.xml\n\nALL_JARS=\nALL_DEP_JARS=\nmkdir -p $OUT/dependencies\nfor jar in $(find ./powsybl* -type f -name \"*.jar\")\ndo\n  if [[ \"$jar\" != *\"target/powsybl/share\"* ]]\n  then\n    if [[ \"$jar\" != *\"powsybl\"* ]]\n    then\n      ALL_DEP_JARS=$ALL_DEP_JARS\"$(basename $jar) \"\n      cp \"$jar\" $OUT/dependencies\n    elif [[ \"$jar\" != *\"test\"* ]]\n    then\n      ALL_JARS=$ALL_JARS\"$(basename $jar) \"\n      cp \"$jar\" $OUT\n    fi\n  else\n    ALL_DEP_JARS=$ALL_DEP_JARS\"$(basename $jar) \"\n    cp \"$jar\" $OUT/dependencies\n  fi\ndone\n\n# Download extra needed dependencies jar\nwget https://repo1.maven.org/maven2/com/google/jimfs/jimfs/1.3.0/jimfs-1.3.0.jar\nALL_DEP_JARS=$ALL_DEP_JARS\"jimfs-1.3.0.jar\"\ncp jimfs-1.3.0.jar $OUT/dependencies\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):$(echo $ALL_DEP_JARS | xargs printf -- \"\\$this_dir/dependencies/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod u+x $OUT/$fuzzer_basename\ndone\n\n\nmkdir -p $SRC/LoadFlowFuzzer-seeds\nfind $SRC -name '*.uct' -exec cp \"{}\" $SRC/LoadFlowFuzzer-seeds/  \\;\nfind $SRC -name '*.dgs' -exec cp \"{}\" $SRC/LoadFlowFuzzer-seeds/  \\;\nfind $SRC -name '*.json' -exec cp \"{}\" $SRC/LoadFlowFuzzer-seeds/  \\;\nfind $SRC -name '*.raw' -exec cp \"{}\" $SRC/LoadFlowFuzzer-seeds/  \\;\n\nmkdir -p $SRC/DeserializeFuzzer-seeds\nfind $SRC -name '*.json' -exec cp \"{}\" $SRC/DeserializeFuzzer-seeds/  \\;\n\nmkdir -p $SRC/ParseFuzzer-seeds\nfind $SRC -name '*.json' -exec cp \"{}\" $SRC/ParseFuzzer-seeds/  \\;\n\npushd $SRC/LoadFlowFuzzer-seeds\nzip $OUT/LoadFlowFuzzer_seed_corpus.zip ./*\npopd\n\npushd $SRC/DeserializeFuzzer-seeds\nzip $OUT/DeserializeFuzzer_seed_corpus.zip ./*\npopd\n\npushd $SRC/ParseFuzzer-seeds\nzip $OUT/ParseFuzzer_seed_corpus.zip ./*\npopd\n\npushd $SRC/powsybl-seed-corpus/MatrixFuzzer_seed_corpus\nzip $OUT/MatrixFuzzer_seed_corpus.zip ./*\npopd\n\nwget -O $SRC/json.dict https://raw.githubusercontent.com/rc0r/afl-fuzz/master/dictionaries/json.dict\ncp $SRC/json.dict $OUT/LoadFlowFuzzer.dict\ncp $SRC/json.dict $OUT/DeserializeFuzzer.dict\ncp $SRC/json.dict $OUT/ParseFuzzer.dict\n"
    },
    "presidio": {
        "name": "presidio",
        "language": "python",
        "homepage": "https://microsoft.github.io/presidio",
        "main_repo": "https://github.com/microsoft/presidio",
        "primary_contact": "avishay.balter@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://microsoft.github.io/presidio\"\nlanguage: python\nprimary_contact: \"avishay.balter@gmail.com\"\nauto_ccs: \n  - presidio@microsoft.com\nsanitizers:\n  - address\nmain_repo: 'https://github.com/microsoft/presidio'  ",
        "build_sh": null
    },
    "presto": {
        "name": "presto",
        "language": "jvm",
        "homepage": "https://prestodb.io/",
        "main_repo": "https://github.com/prestodb/presto/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://prestodb.io/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/prestodb/presto/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=presto\nPROJECT_GROUP_ID=com.facebook.presto\nPROJECT_ARTIFACT_ID=presto\nMAIN_REPOSITORY=https://github.com/prestodb/presto/\n\nMAVEN_ARGS=\"-Djavac.src.version=1.8 -Djavac.target.version=1.8 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  FUZZ_TARGET_DEPENDENCIES=\":presto-parser :presto-testng-services\"\n  \n  for dependency in $FUZZ_TARGET_DEPENDENCIES; do\n    # set dependency project version in fuzz-targets\n    (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID$dependency -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n  done\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN -pl presto-jdbc -pl presto-parser install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  mv $SRC/{*.zip,*.dict} $OUT\n\n  export JAVA_HOME=\"$OUT/open-jdk-8\"\n  mkdir -p $JAVA_HOME\n  rsync -aL --exclude=*.zip \"/usr/lib/jvm/java-8-openjdk-amd64/\" \"$JAVA_HOME\"\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  JAVA_HOME=\\\"\\$this_dir/open-jdk-8/\\\" \\\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "proftpd": {
        "name": "proftpd",
        "language": "c",
        "homepage": "http://www.proftpd.org/",
        "main_repo": "https://github.com/proftpd/proftpd",
        "primary_contact": "castaglian@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"http://www.proftpd.org/\"\nmain_repo: \"https://github.com/proftpd/proftpd\"\nlanguage: c\nprimary_contact: \"castaglian@gmail.com\"\nauto_ccs:\n  - \"Adam@adalogics.com\"\nsanitizers:\n  - address\n  - undefined\nfuzzing_engines:\n  - \"afl\"\n  - \"honggfuzz\"\n  - \"libfuzzer\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp tests/fuzzing/json_fuzzer.c $SRC/fuzzer.c\ntests/fuzzing/oss_fuzz_build.sh\n"
    },
    "proj4": {
        "name": "proj4",
        "language": "c++",
        "homepage": "https://proj.org/",
        "main_repo": "https://github.com/OSGeo/PROJ",
        "primary_contact": "even.rouault@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://proj.org/\"\nlanguage: c++\nmain_repo: \"https://github.com/OSGeo/PROJ\"\nprimary_contact: \"even.rouault@gmail.com\"\nauto_ccs:\n  - \"hobu.inc@gmail.com\"\n  - \"kristianevers@gmail.com\"\n  - \"knudsen.thomas@gmail.com\"\narchitectures:\n  - x86_64\n  - i386\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "prometheus": {
        "name": "prometheus",
        "language": "go",
        "homepage": "https://github.com/prometheus/prometheus",
        "main_repo": "https://github.com/prometheus/prometheus",
        "primary_contact": "prometheus-team@googlegroups.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/prometheus/prometheus\"\nprimary_contact: \"prometheus-team@googlegroups.com\"\nauto_ccs :\n  - \"julius.volz@gmail.com\"\n  - \"beorn@grafana.com\"\n  - \"roidelapluie@prometheus.io\"\n  - \"richih@richih.org\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/prometheus/prometheus'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/prometheus/prometheus/promql FuzzParseMetric fuzzParseMetric\ncompile_go_fuzzer github.com/prometheus/prometheus/promql FuzzParseOpenMetric fuzzParseOpenMetric\ncompile_go_fuzzer github.com/prometheus/prometheus/promql FuzzParseMetricSelector fuzzParseMetricSelector\ncompile_go_fuzzer github.com/prometheus/prometheus/promql FuzzParseExpr fuzzParseExpr\n"
    },
    "promise-polyfill": {
        "name": "promise-polyfill",
        "language": "javascript",
        "homepage": "https://github.com/taylorhakes/promise-polyfill",
        "main_repo": "https://github.com/taylorhakes/promise-polyfill",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/taylorhakes/promise-polyfill\nlanguage: javascript\nmain_repo: https://github.com/taylorhakes/promise-polyfill\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nfunction change_type_to_commonjs() {\n\t# Find all package.json files inside the node_modules directory\n\tfind \"$1\" -name \"package.json\" -type f | while read -r package_file; do\n\t\t# Check if the file contains the \"type\" field\n\t\tif grep -q '\"type\": \"module\"' \"$package_file\"; then\n\t\t\t# Replace \"type\": \"module\" with \"type\": \"commonjs\"\n\t\t\tsed -i 's/\"type\": \"module\"/\"type\": \"commonjs\"/' \"$package_file\"\n\t\t\techo \"Updated $package_file\"\n\t\tfi\n\tdone\n}\n\nfunction transform_dir_into_commonjs() {\n\tbabel \"$1\" --keep-file-extension -D -d \"$1\"_commonjs\n\trm -r \"$1\"\n\tmv \"$1\"_commonjs \"$1\"\n}\n\nfunction remove_dev_dependencies() {\n\tpackage_json=$(cat package.json)\n\n\t# Remove the \"devDependencies\" item from package.json\n\tnew_package_json=$(echo \"$package_json\" | jq 'del(.devDependencies)')\n\n\t# Overwrite the package.json file with the updated content\n\techo \"$new_package_json\" >package.json\n\n}\n\n# Install dependencies.\nremove_dev_dependencies\n\nnpm install -g @babel/cli\nnpm install --save-dev @babel/core @babel/plugin-transform-modules-commonjs\n\ntransform_dir_into_commonjs \"$SRC/promise-polyfill/src\"\ntransform_dir_into_commonjs \"$SRC/promise-polyfill/node_modules\"\n\nnpm install --save-dev @jazzer.js/core\n\nchange_type_to_commonjs \"$SRC/promise-polyfill\"\n\n# Build Fuzzers.\ncompile_javascript_fuzzer promise-polyfill fuzz -i promise-polyfill\n"
    },
    "prost": {
        "name": "prost",
        "language": "rust",
        "homepage": "https://crates.io/crates/prost",
        "main_repo": "https://github.com/tokio-rs/prost",
        "primary_contact": "luciofranco14@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://crates.io/crates/prost\"\nmain_repo: \"https://github.com/tokio-rs/prost\"\nprimary_contact: \"luciofranco14@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"david@adalogics.com\"\n  - \"casper@meijn.net\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/prost\ncargo fuzz build -O \ncp fuzz/target/x86_64-unknown-linux-gnu/release/proto2 $OUT/\ncp fuzz/target/x86_64-unknown-linux-gnu/release/proto3 $OUT/\n"
    },
    "proto-plus-python": {
        "name": "proto-plus-python",
        "language": "python",
        "homepage": "https://github.com/googleapis/proto-plus-python",
        "main_repo": "https://github.com/googleapis/proto-plus-python",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/googleapis/proto-plus-python\nlanguage: python\nmain_repo: https://github.com/googleapis/proto-plus-python\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "protobuf-c": {
        "name": "protobuf-c",
        "language": "c",
        "homepage": "https://github.com/protobuf-c/protobuf-c",
        "main_repo": "https://github.com/protobuf-c/protobuf-c.git",
        "primary_contact": "guidovranken@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/protobuf-c/protobuf-c\"\nlanguage: c\nprimary_contact: \"guidovranken@gmail.com\"\nauto_ccs:\n  - \"ilya.lipnitskiy@gmail.com\"\nsanitizers:\n - address\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\narchitectures:\n - x86_64\nmain_repo: 'https://github.com/protobuf-c/protobuf-c.git'\ncoverage_extra_args: -ignore-filename-regex=.*/protobuf-install/.*\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport ASAN_OPTIONS=alloc_dealloc_mismatch=0\n\nif [[ $CFLAGS = *sanitize=address* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DASAN\"\nfi\n\nif [[ $CFLAGS = *sanitize=memory* ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -DMSAN\"\nfi\n\nif [[ $SANITIZER = coverage ]]\nthen\n    export CXXFLAGS=\"$CXXFLAGS -fno-use-cxa-atexit\"\nfi\n\n# Avoid forcing -stdlib=libc++ during compilation to avoid clutter with\n# protobuf. We enable -stdlib=libc++ again once we link the fuzzer (to\n# staticaly compiled libs).\nOLD_CXXFLAGS=\"${CXXFLAGS}\"\nexport CXXFLAGS=`echo $CXXFLAGS | sed -e \"s/-stdlib=libc++//g\"`\ncd $SRC/protobuf-c/\n./autogen.sh\n./configure --enable-static=yes --enable-shared=false\n\nmake -j$(nproc)\nmake install\n\ncd $SRC/fuzzing-headers/\n./install.sh\n\ncd $SRC/protobuf-c-fuzzers/\ncp $SRC/protobuf-c/t/test-full.proto $SRC/protobuf-c-fuzzers/\nexport PATH=$PATH:$SRC/protobuf-c/protoc-c\nprotoc --c_out=. -I. -I/usr/local/include test-full.proto\n\nCXXFLAGS=\"${OLD_CXXFLAGS}\"\n$CC $CFLAGS test-full.pb-c.c -I $SRC/protobuf-install -I $SRC/protobuf-c -c -o test-full.pb-c.o\n$CXX $CXXFLAGS fuzzer.cpp -I $SRC/protobuf-install -I $SRC/protobuf-c test-full.pb-c.o $SRC/protobuf-c/protobuf-c/.libs/libprotobuf-c.a $LIB_FUZZING_ENGINE -o $OUT/fuzzer\n"
    },
    "protobuf-java": {
        "name": "protobuf-java",
        "language": "jvm",
        "homepage": "https://developers.google.com/protocol-buffers/",
        "main_repo": "https://github.com/protocolbuffers/protobuf",
        "primary_contact": "kfm@google.com",
        "vendor_ccs": [
            "norbert.schneider@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "auto_ccs:\n- protobuf-oss-fuzz@google.com\n- jgm@google.com\n- jgrimes@google.com\n- pzd@google.com\n- acozzette@google.com\n- deannagarcia@google.com\n- gberg@google.com\n- haberman@google.com\n- jieluo@google.com\n- jorg@google.com\n- mcyoung@google.com\n- mkruskal@google.com\n- salo@google.com\n- sandyzhang@google.com\n- sbenza@google.com\n- shaod@google.com\n- theodorerose@google.com\n- copybara-watcher-pod-watcher-git@system.gserviceaccount.com\n- copybara-worker@system.gserviceaccount.com\nfuzzing_engines:\n- libfuzzer\nhomepage: https://developers.google.com/protocol-buffers/\nlanguage: jvm\nmain_repo: https://github.com/protocolbuffers/protobuf\nprimary_contact: kfm@google.com\nsanitizers:\n- address\nlabels:\n  \"*\":\n    - protobuf-ossfuzz-bugz-1260285\nvendor_ccs:\n- norbert.schneider@code-intelligence.com\n- hlin@code-intelligence.com\n- bug-disclosure@code-intelligence.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build protoc with default options.\nunset CFLAGS CXXFLAGS\ncd $SRC/protobuf/\nbazel build :protoc\ncp $SRC/protobuf/bazel-bin/protoc $SRC/protobuf/protoc\nexport PROTOC=\"$SRC/protobuf/bazel-bin/protoc\"\n\n\n# Build protobuf-java (requires protoc in source tree).\ncd $SRC/protobuf/java/\ncp $PROTOC $SRC/protobuf/src/\nMAVEN_ARGS=\"-Dmaven.test.skip=true -Djavac.src.version=15 -Djavac.target.version=15\"\n$MVN package $MAVEN_ARGS\nCURRENT_VERSION=$($MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate \\\n -Dexpression=project.version -q -DforceStdout)\ncp \"core/target/protobuf-java-$CURRENT_VERSION.jar\" $OUT/protobuf-java.jar\n\n# Compile test protos with protoc.\ncd $SRC/\n$PROTOC --java_out=. --proto_path=. test-full.proto\njar --create --file $OUT/test-full.jar foo/*\n\nALL_JARS=\"protobuf-java.jar test-full.jar\"\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\nfor fuzzer in $(find $SRC -name '*Fuzzer.java'); do\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nif [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n  mem_settings='-Xmx1900m:-Xss900k'\nelse\n  mem_settings='-Xmx2048m:-Xss1024k'\nfi\nLD_LIBRARY_PATH=\\\"$JVM_LD_LIBRARY_PATH\\\" \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n  chmod +x $OUT/$fuzzer_basename\ndone\n\n"
    },
    "protobuf-js": {
        "name": "protobuf-js",
        "language": "javascript",
        "homepage": "https://github.com/protobufjs/protobuf.js",
        "main_repo": "https://github.com/protobufjs/protobuf.js",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "glendowne@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "christopher.krah@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/protobufjs/protobuf.js\nlanguage: javascript\nmain_repo: https://github.com/protobufjs/protobuf.js\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- none\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"glendowne@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"christopher.krah@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"\n",
        "build_sh": "#!/bin/bash\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build the project.\nnpm install --save-dev @jazzer.js/core\nnpm install\nnpm run build\n\n# Build Fuzzers.\ncompile_javascript_fuzzer protobuf.js fuzz.js -i protobuf.js --sync\n"
    },
    "protobuf-python": {
        "name": "protobuf-python",
        "language": "python",
        "homepage": "https://developers.google.com/protocol-buffers/",
        "main_repo": "https://github.com/protocolbuffers/protobuf",
        "primary_contact": "gberg@google.com",
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://developers.google.com/protocol-buffers/\nlanguage: python\nmain_repo: https://github.com/protocolbuffers/protobuf\nsanitizers:\n- address\nauto_ccs:\n- protobuf-oss-fuzz@google.com\n- gberg@google.com\n- acozzette@google.com\n- deannagarcia@google.com\n- esrauch@google.com\n- haberman@google.com\n- hongshin@google.com\n- jatl@google.com\n- jieluo@google.com\n- mkruskal@google.com\n- salo@google.com\n- sandyzhang@google.com\n- sbenza@google.com\n- shaod@google.com\n- copybara-watcher-pod-watcher-git@system.gserviceaccount.com\n- copybara-worker@system.gserviceaccount.com\nprimary_contact: gberg@google.com\nvendor_ccs:\n- david@adalogics.com\nlabels:\n  \"*\":\n    - protobuf-ossfuzz-bugz-1260285\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nBAZEL_FLAGS=\"-c dbg\"\nif [[ $CFLAGS = *sanitize=address* ]]\nthen\n    BAZEL_FLAGS=\"$BAZEL_FLAGS --config=asan\"\nfi\n\n# Build protoc with default options.\nunset CFLAGS CXXFLAGS\ncd $SRC/protobuf\n(\n  # Needed for bazel, see https://github.com/google/oss-fuzz/pull/8930\n  ln --symbolic /usr/local/bin/python3 /usr/bin/\n  type -a python3\n  /usr/bin/python3 --version\n)\nbazel build $BAZEL_FLAGS //:protoc //python/dist:binary_wheel --noenable_bzlmod\nPROTOC=$(realpath bazel-bin/protoc)\n\n# Install the protobuf python runtime.\nmkdir $SRC/wheels\nfind -L bazel-out -name 'protobuf*.whl' -exec mv '{}' $SRC/wheels ';'\npip3 install -vvv --no-index --find-links $SRC/wheels protobuf\n\n# Compile test protos with protoc.\ncd $SRC/\n$PROTOC --python_out=. --proto_path=. test-full.proto\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "protoc-gen-validate": {
        "name": "protoc-gen-validate",
        "language": "go",
        "homepage": "https://github.com/bufbuild/protoc-gen-validate",
        "main_repo": "https://github.com/bufbuild/protoc-gen-validate",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://github.com/bufbuild/protoc-gen-validate\"\nlanguage: go\nmain_repo: \"https://github.com/bufbuild/protoc-gen-validate\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nmake build\n\ncp $SRC/fuzz_test.go ./validate\ngo mod tidy\nprintf \"package validate\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./validate/register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/envoyproxy/protoc-gen-validate/validate FuzzTest FuzzTest\n"
    },
    "protocompile": {
        "name": "protocompile",
        "language": "go",
        "homepage": "https://github.com/bufbuild/protocompile",
        "main_repo": "https://github.com/bufbuild/protocompile",
        "primary_contact": "jhumphries@buf.build",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/bufbuild/protocompile\"\nprimary_contact: \"jhumphries@buf.build\"\nauto_ccs:\n  - \"oss-fuzz-reports@buf.build\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: 'https://github.com/bufbuild/protocompile'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncompile_go_fuzzer github.com/bufbuild/protocompile FuzzProtoCompile fuzz_protocompile\n\n"
    },
    "proton-bridge": {
        "name": "proton-bridge",
        "language": "go",
        "homepage": "https://proton.me",
        "main_repo": "https://github.com/ProtonMail/proton-bridge",
        "primary_contact": "security@proton.me",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://proton.me\"\nlanguage: go\nprimary_contact: \"security@proton.me\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/ProtonMail/proton-bridge\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd \"$SRC\"\ncd go-118-fuzz-build\ngo build .\nmv go-118-fuzz-build /root/go/bin/\ncd \"$SRC\"/proton-bridge\n\nmkdir pkg/fuzzing\nprintf \"package fuzzing\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > pkg/fuzzing/register.go\ngo mod edit -replace github.com/AdamKorcz/go-118-fuzz-build=\"$SRC\"/go-118-fuzz-build\ngo mod tidy\n\nexport PROJ=\"github.com/ProtonMail/proton-bridge/v3\"\ncompile_native_go_fuzzer   $PROJ/internal/legacy/credentials     FuzzUnmarshal               fuzz_unmarshal   \ncompile_native_go_fuzzer   $PROJ/pkg/message/parser              FuzzNewParser               fuzz_new_parser\ncompile_native_go_fuzzer   $PROJ/pkg/message                     FuzzReadHeaderBody          fuzz_read_header_body\ncompile_native_go_fuzzer   $PROJ/pkg/mime                        FuzzDecodeHeader            fuzz_decode_header\ncompile_native_go_fuzzer   $PROJ/pkg/mime                        FuzzDecodeCharset           fuzz_decode_charset\n"
    },
    "proxygen": {
        "name": "proxygen",
        "language": "c++",
        "homepage": "https://github.com/facebook/proxygen",
        "main_repo": "https://github.com/facebook/proxygen.git",
        "primary_contact": "axxu@fb.com",
        "vendor_ccs": [
            "oss-fuzz@fb.com"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/facebook/proxygen\"\nlanguage: c++\nprimary_contact: \"axxu@fb.com\"\nauto_ccs:\n  - \"hmf@fb.com\"\n  - \"yaohway@fb.com\"\n  - \"axxu@fb.com\"\n  - \"lniccolini@fb.com\"\n  - \"afrind@fb.com\"\n  - \"subodh@fb.com\"\n  - \"yangchi@fb.com\"\n  - \"mjoras@fb.com\"\n  - \"amsharma@fb.com\"\n  - \"bshlinker@fb.com\"\n  - \"ranjeeth@fb.com\"\n  - \"udippant@fb.com\"\nvendor_ccs:\n  - \"oss-fuzz@fb.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/facebook/proxygen.git'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Dont build tests we do not care about\necho \"\" > ./proxygen/httpclient/samples/CMakeLists.txt\necho \"\" > ./proxygen/httpserver/tests/CMakeLists.txt\necho \"\" > ./proxygen/lib/http/structuredheaders/test/CMakeLists.txt\necho \"\" > ./proxygen/httpserver/filters/tests/CMakeLists.txt\necho \"\" > ./proxygen/lib/http/session/test/CMakeLists.txt\necho \"\" > ./proxygen/lib/http/codec/compress/test/CMakeLists.txt\necho \"\" > ./proxygen/lib/services/test/CMakeLists.txt\n\ncd proxygen\n\n# Link to, and copy over, libunwind\n# We need to link to libunwind to ensure exception handling works\n# See https://clang.llvm.org/docs/Toolchain.html#unwind-library\nexport LDFLAGS=\"-lunwind\"\nmkdir -p $OUT/lib\ncp /usr/lib/x86_64-linux-gnu/libunwind.so.8 $OUT/lib/\n\n# Build everything\n./build.sh -m --no-install-dependencies --build-for-fuzzing\n\n# Patch rpath so fuzzers can find libunwind\nfind ./_build/proxygen/fuzzers -type f -executable -exec patchelf --set-rpath '$ORIGIN/lib' {} \\;\n\n# Copy fuzzers over to the destination\nfind ./_build/proxygen/fuzzers -type f -executable -exec cp {} $OUT/ \\;\n"
    },
    "psqlparse": {
        "name": "psqlparse",
        "language": "python",
        "homepage": "https://github.com/alculquicondor/psqlparse",
        "main_repo": "https://github.com/alculquicondor/psqlparse",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/alculquicondor/psqlparse\nlanguage: python\nmain_repo: https://github.com/alculquicondor/psqlparse\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nUSE_CYTHON=1 python3 setup.py build_ext --inplace\npython3 setup.py install\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "psutil": {
        "name": "psutil",
        "language": "python",
        "homepage": "https://github.com/giampaolo/psutil",
        "main_repo": "https://github.com/giampaolo/psutil",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/giampaolo/psutil\nlanguage: python\nmain_repo: https://github.com/giampaolo/psutil\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n\n# Build the native code with sanitizers from OSS-Fuzz\npython3 ./setup.py install\n\n# Package the fuzzers and place in $OUT/\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "psycopg2": {
        "name": "psycopg2",
        "language": "python",
        "homepage": "https://github.com/psycopg/psycopg2",
        "main_repo": "https://github.com/psycopg/psycopg2",
        "primary_contact": "daniele.varrazzo@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/psycopg/psycopg2\nlanguage: python\nmain_repo: https://github.com/psycopg/psycopg2\nprimary_contact: daniele.varrazzo@gmail.com\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npip3 install --upgrade pip\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n    compile_python_fuzzer $fuzzer\ndone\n"
    },
    "publicsuffix-list": {
        "name": "publicsuffix-list",
        "language": "go",
        "homepage": "https://github.com/publicsuffix/list",
        "main_repo": "https://github.com/publicsuffix/list",
        "primary_contact": null,
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/publicsuffix/list\"\nlanguage: go\nmain_repo: \"https://github.com/publicsuffix/list\"\nauto_ccs:\n  - \"adam@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsed 's/package main/package tools/g' -i ./tools/newgtlds.go\nrm ./tools/newgtlds_test.go\ncp $SRC/fuzz_test.go ./tools/\ngo mod init github.com/publicsuffix/list\ngo mod tidy\nprintf \"package tools\\nimport _ \\\"github.com/AdamKorcz/go-118-fuzz-build/testing\\\"\\n\" > ./tools/register.go\ngo mod tidy\ncompile_native_go_fuzzer github.com/publicsuffix/list/tools FuzzTest FuzzTest\n"
    },
    "pugixml": {
        "name": "pugixml",
        "language": "c++",
        "homepage": "https://github.com/zeux/pugixml",
        "main_repo": "https://github.com/zeux/pugixml",
        "primary_contact": "arseny.kapoulkine@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/zeux/pugixml\"\nprimary_contact: \"arseny.kapoulkine@gmail.com\"\nlanguage: c++\nauto_ccs:\n  - \"david@adalogics.com\"\nmain_repo: 'https://github.com/zeux/pugixml'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd pugixml\n\n# Fix float-divide-by-zero false positives during XPath evaluation\n# This is disabled by default in clang but oss-fuzz reenables it, so we need to disable it again; see https://github.com/google/oss-fuzz/issues/10564\nCXXFLAGS=\"${CXXFLAGS} -fno-sanitize=float-divide-by-zero\"\n\n$CXX $CXXFLAGS -c src/pugixml.cpp -o src/pugixml.o\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE tests/fuzz_parse.cpp src/pugixml.o -o ${OUT}/fuzz_parse\n$CXX $CXXFLAGS $LIB_FUZZING_ENGINE tests/fuzz_xpath.cpp src/pugixml.o -o ${OUT}/fuzz_xpath\n\nzip -r ${OUT}/fuzz_parse_seed_corpus.zip tests/data_fuzz_parse\nzip -r ${OUT}/fuzz_xpath_seed_corpus.zip tests/data_fuzz_xpath tests/data_fuzz_parse\n\ncp tests/fuzz_parse.dict ${OUT}/fuzz_parse.dict\ncp tests/fuzz_xpath.dict ${OUT}/fuzz_xpath.dict\ncat ${OUT}/fuzz_parse.dict >> ${OUT}/fuzz_xpath.dict\n"
    },
    "pulldown-cmark": {
        "name": "pulldown-cmark",
        "language": "rust",
        "homepage": "https://github.com/pulldown-cmark/pulldown-cmark",
        "main_repo": "https://github.com/pulldown-cmark/pulldown-cmark.git",
        "primary_contact": "pulldowncmark@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/pulldown-cmark/pulldown-cmark\"\nmain_repo: \"https://github.com/pulldown-cmark/pulldown-cmark.git\"\nlanguage: rust\nprimary_contact: \"pulldowncmark@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\n",
        "build_sh": "# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Note: This project creates Rust fuzz targets exclusively\ncd $SRC/pulldown-cmark\nCARGO_PROFILE_RELEASE_LTO=thin cargo fuzz build -O\ncp target/x86_64-unknown-linux-gnu/release/commonmark_js $OUT/\ncp target/x86_64-unknown-linux-gnu/release/parse $OUT/\n"
    },
    "pulumi": {
        "name": "pulumi",
        "language": "go",
        "homepage": "https://www.pulumi.com/",
        "main_repo": "https://github.com/pulumi/pulumi",
        "primary_contact": "anton@pulumi.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.pulumi.com/\"\nmain_repo: \"https://github.com/pulumi/pulumi\"\nprimary_contact: \"anton@pulumi.com\"\nauto_ccs :\n  - \"adam@adalogics.com\"\nlanguage: go\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd pkg\ncp $SRC/schema_fuzzer.go $SRC/pulumi/pkg/codegen/schema/ \ncp $SRC/config_fuzzer.go $SRC/pulumi/sdk/go/common/resource/config/\ngo mod tidy\n\ncompile_go_fuzzer github.com/pulumi/pulumi/pkg/v3/codegen/schema SchemaFuzzer schema_fuzzer\ncompile_go_fuzzer github.com/pulumi/pulumi/sdk/v3/go/common/resource/config FuzzConfig fuzz\ncompile_go_fuzzer github.com/pulumi/pulumi/sdk/v3/go/common/resource/config FuzzParseKey fuzz_parse_key\n"
    },
    "pupnp": {
        "name": "pupnp",
        "language": "c",
        "homepage": "https://pupnp.github.io/pupnp/",
        "main_repo": "https://github.com/pupnp/pupnp",
        "primary_contact": "mroberto@users.sourceforge.net",
        "vendor_ccs": [
            "virtual_worlds@gmx.de"
        ],
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://pupnp.github.io/pupnp/\"\nlanguage: c\nprimary_contact: \"mroberto@users.sourceforge.net\"\nvendor_ccs:\n  - \"virtual_worlds@gmx.de\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/pupnp/pupnp'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nexport CXXFLAGS=\"$CFLAGS\"\n\nmkdir build\ncd build\ncmake -DFUZZER=ON -DLIB_FUZZING_ENGINE=\"$LIB_FUZZING_ENGINE\" ../\nmake -j$(nproc)\n\ncp fuzzer/FuzzIxml $OUT/FuzzIxml\n\npushd $SRC/oss-fuzz-bloat/pupnp/\ncp FuzzIxml_seed_corpus.zip $OUT/FuzzIxml_seed_corpus.zip\npopd\n"
    },
    "py-serde": {
        "name": "py-serde",
        "language": "python",
        "homepage": "https://github.com/rossmacarthur/serde",
        "main_repo": "https://github.com/rossmacarthur/serde",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/rossmacarthur/serde\nlanguage: python\nmain_repo: https://github.com/rossmacarthur/serde\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pyasn1-modules": {
        "name": "pyasn1-modules",
        "language": "python",
        "homepage": "https://github.com/pyasn1/pyasn1-modules",
        "main_repo": "https://github.com/pyasn1/pyasn1-modules",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pyasn1/pyasn1-modules\nlanguage: python\nmain_repo: https://github.com/pyasn1/pyasn1-modules\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pyasn1": {
        "name": "pyasn1",
        "language": "python",
        "homepage": "https://github.com/etingof/pyasn1",
        "main_repo": "https://github.com/etingof/pyasn1",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/etingof/pyasn1\nlanguage: python\nmain_repo: https://github.com/etingof/pyasn1\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pybind11": {
        "name": "pybind11",
        "language": "c++",
        "homepage": "https://pybind11.readthedocs.io/en/stable/",
        "main_repo": "https://github.com/pybind/pybind11.git",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": null,
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://pybind11.readthedocs.io/en/stable/\"\nmain_repo: \"https://github.com/pybind/pybind11.git\"\nlanguage: c++\nvendor_ccs:\n - \"david@adalogics.com\"\n - \"arthur.chan@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 -m pip install -r tests/requirements.txt\ncmake -S . -B build -DDOWNLOAD_CATCH=ON -DDOWNLOAD_EIGEN=ON\ncmake --build build -j4\npython3 -m pip install .\n\ncp /usr/local/lib/libpython3.10.so.1.0 $OUT/\nfor f in $SRC/*_fuzzer.cc; do\n  fuzzer=$(basename \"$f\" _fuzzer.cc)\n  $CXX $CXXFLAGS \\\n    -I$SRC/pybind11/include -isystem /usr/local/include/python3.10 \\\n    $SRC/${fuzzer}_fuzzer.cc -o $OUT/${fuzzer}_fuzzer \\\n    /usr/local/lib/libpython3.10.so.1.0 \\\n    $LIB_FUZZING_ENGINE -lpthread\n  patchelf --set-rpath '$ORIGIN/'  $OUT/${fuzzer}_fuzzer\ndone\n"
    },
    "pycparser": {
        "name": "pycparser",
        "language": "python",
        "homepage": "https://github.com/eliben/pycparser",
        "main_repo": "https://github.com/eliben/pycparser",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/eliben/pycparser\nlanguage: python\nmain_repo: https://github.com/eliben/pycparser\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\nzip $OUT/fuzz_c_parser_seed_corpus.zip ./tests/c_files/*.c\n"
    },
    "pycrypto": {
        "name": "pycrypto",
        "language": "python",
        "homepage": "https://github.com/pycrypto/pycrypto",
        "main_repo": "https://github.com/pycrypto/pycrypto",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pycrypto/pycrypto\nlanguage: python\nmain_repo: https://github.com/pycrypto/pycrypto\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" == \"introspector\" ]; then\n    export CFLAGS=\"\"\n    export CXXFLAGS=\"\"\nfi\n# time.clock has been removed in OSS-Fuzz's Python version. Update pycrypto's source\n# code. Pycrypto is deprecated so we can't expect Pycrypto to be updated.\nsed -i 's/clock(/perf_counter(/g' lib/Crypto/Random/_UserFriendlyRNG.py\n\npython3 setup.py build\npython3 setup.py install\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pycryptodome": {
        "name": "pycryptodome",
        "language": "c",
        "homepage": "https://www.pycryptodome.org/",
        "main_repo": "https://github.com/Legrandin/pycryptodome.git",
        "primary_contact": "helderijs@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://www.pycryptodome.org/\nlanguage: c\nmain_repo: https://github.com/Legrandin/pycryptodome.git\nprimary_contact: helderijs@gmail.com\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npatch block_common.c block_common.patch\n\nPCD_INTERNALS=(./*.c ./libtom/*.c)\nPCD_FLAGS=(\n  \"-I $SRC/pycryptodome/src\"\n  \"-I $SRC/pycryptodome/src/libtom\"\n  \"-D HAVE_STDINT_H\"\n  \"-D HAVE_MEMALIGN\"\n  \"-D HAVE_INTRIN_H\"\n  \"-D SYS_BITS=$(getconf LONG_BIT)\"\n  \"-maes -msse2 -mpclmul\"\n)\n\n$CC $CFLAGS \\\n    ${PCD_FLAGS[@]} \\\n    -c \"${PCD_INTERNALS//'blake2.c'/}\"\nar -qc $WORK/libpycryptodome.a *.o\n\nPCD_HASH_OPTIONS=(\n  \"-D HASHTYPE=md2 -D FNAME=MD2.c -D DIGEST_SIZE=16 -o $OUT/md2_fuzzer\"\n  \"-D HASHTYPE=md4 -D FNAME=MD4.c -D DIGEST_SIZE=16 -o $OUT/md4_fuzzer\"\n  \"-D HASHTYPE=MD5 -D FNAME=MD5.c -o $OUT/md5_fuzzer\"\n  \"-D HASHTYPE=ripemd160 -D FNAME=RIPEMD160.c -D DIGEST_SIZE=RIPEMD160_DIGEST_SIZE -o $OUT/ripemd160_fuzzer\"\n  \"-D HASHTYPE=SHA224 -D FNAME=SHA224.c -D DIGEST_THIRD_PARAM -o $OUT/sha224_fuzzer\"\n  \"-D HASHTYPE=SHA256 -D FNAME=SHA256.c -D DIGEST_THIRD_PARAM -o $OUT/sha256_fuzzer\"\n  \"-D HASHTYPE=SHA384 -D FNAME=SHA384.c -D DIGEST_THIRD_PARAM -o $OUT/sha384_fuzzer\"\n)\n\nfor ((i = 0; i < ${#PCD_HASH_OPTIONS[@]}; i++)); do\n  $CXX $CXXFLAGS ${PCD_FLAGS[@]} \\\n      $SRC/pcd_hash_fuzzer.cc ${PCD_HASH_OPTIONS[i]} \\\n      $LIB_FUZZING_ENGINE $WORK/libpycryptodome.a\ndone\n\n$CXX $CXXFLAGS ${PCD_FLAGS[@]} \\\n    $SRC/pcd_aes_fuzzer.cc -o $OUT/aes_fuzzer \\\n    $LIB_FUZZING_ENGINE $WORK/libpycryptodome.a\n"
    },
    "pydantic": {
        "name": "pydantic",
        "language": "python",
        "homepage": "https://github.com/pydantic/pydantic",
        "main_repo": "https://github.com/pydantic/pydantic",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pydantic/pydantic\nlanguage: python\nmain_repo: https://github.com/pydantic/pydantic\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nln -s /usr/local/bin/python3 /usr/local/bin/python\nsed -i \"s/__version__/compiled=\\\"hack\\\"\\n__version__/g\" pydantic/__init__.py\nmake install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pydateutil": {
        "name": "pydateutil",
        "language": "python",
        "homepage": "https://dateutil.readthedocs.io/en/stable/",
        "main_repo": "https://github.com/dateutil/dateutil",
        "primary_contact": null,
        "vendor_ccs": [
            "p.antoine@catenacyber.fr",
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://dateutil.readthedocs.io/en/stable/\nlanguage: python\nmain_repo: https://github.com/dateutil/dateutil\nsanitizers:\n- address\nvendor_ccs:\n- p.antoine@catenacyber.fr\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\ncd dateutil\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pygments": {
        "name": "pygments",
        "language": "python",
        "homepage": "https://pygments.org/",
        "main_repo": "https://github.com/pygments/pygments",
        "primary_contact": "georg.brandl@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://pygments.org/\"\nmain_repo: \"https://github.com/pygments/pygments\"\nlanguage: python\nprimary_contact: \"georg.brandl@gmail.com\"\nauto_ccs:\n  - \"julien.voisin@dustri.org\"\n  - \"ipudney@google.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Build and install project (using current CFLAGS, CXXFLAGS).\npython3 -m pip install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\n# Create shared seed corpus\nfind tests/examplefiles/ -type f | zip -@ -q $OUT/fuzz_lexers_seed_corpus.zip\ncp $OUT/fuzz_lexers_seed_corpus.zip $OUT/fuzz_guesser_seed_corpus.zip\n\n# Create shared dictionary\ncat fuzzing/dictionaries/aff.dict \\\n    fuzzing/dictionaries/bash.dict \\\n    fuzzing/dictionaries/creole.dict \\\n    fuzzing/dictionaries/css.dict \\\n    fuzzing/dictionaries/graphviz.dict \\\n    fuzzing/dictionaries/fbs.dict \\\n    fuzzing/dictionaries/html.dict \\\n    fuzzing/dictionaries/jinja2.dict \\\n    fuzzing/dictionaries/js.dict \\\n    fuzzing/dictionaries/json.dict \\\n    fuzzing/dictionaries/lua.dict \\\n    fuzzing/dictionaries/markdown.dict \\\n    fuzzing/dictionaries/mathml.dict \\\n    fuzzing/dictionaries/pdf.dict \\\n    fuzzing/dictionaries/protobuf.dict \\\n    fuzzing/dictionaries/ps.dict \\\n    fuzzing/dictionaries/regexp.dict \\\n    fuzzing/dictionaries/rst.dict \\\n    fuzzing/dictionaries/sql.dict \\\n    fuzzing/dictionaries/svg.dict \\\n    fuzzing/dictionaries/tex.dict \\\n    fuzzing/dictionaries/toml.dict \\\n    fuzzing/dictionaries/utf8.dict \\\n    fuzzing/dictionaries/vcf.dict \\\n    fuzzing/dictionaries/wkt.dict \\\n    fuzzing/dictionaries/x86.dict \\\n    fuzzing/dictionaries/xml.dict \\\n    fuzzing/dictionaries/xpath.dict \\\n    fuzzing/dictionaries/xslt.dict \\\n    fuzzing/dictionaries/yaml.dict \\\n    fuzzing/dictionaries/yara.dict \\\n> \"$OUT/fuzz_lexers.dict\"\n\ncp \"$OUT/fuzz_lexers.dict\" \"$OUT/fuzz_guesser.dict\"\n"
    },
    "pyjson5": {
        "name": "pyjson5",
        "language": "python",
        "homepage": "https://github.com/dpranke/pyjson5",
        "main_repo": "https://github.com/dpranke/pyjson5",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/dpranke/pyjson5\nmain_repo: https://github.com/dpranke/pyjson5\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pyjwt": {
        "name": "pyjwt",
        "language": "python",
        "homepage": "https://github.com/jpadilla/pyjwt",
        "main_repo": "https://github.com/jpadilla/pyjwt",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/jpadilla/pyjwt\nlanguage: python\nmain_repo: https://github.com/jpadilla/pyjwt\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pymysql": {
        "name": "pymysql",
        "language": "python",
        "homepage": "https://github.com/PyMySQL/PyMySQL",
        "main_repo": "https://github.com/PyMySQL/PyMySQL",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/PyMySQL/PyMySQL\nlanguage: python\nmain_repo: https://github.com/PyMySQL/PyMySQL\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 -m pip install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pynacl": {
        "name": "pynacl",
        "language": "python",
        "homepage": "https://github.com/pyca/pynacl",
        "main_repo": "https://github.com/pyca/pynacl",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pyca/pynacl\nlanguage: python\nmain_repo: https://github.com/pyca/pynacl\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython3 ./setup.py install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --hidden-import=cffi\ndone\n"
    },
    "pyodbc": {
        "name": "pyodbc",
        "language": "python",
        "homepage": "https://github.com/mkleehammer/pyodbc",
        "main_repo": "https://github.com/mkleehammer/pyodbc",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/mkleehammer/pyodbc\nlanguage: python\nmain_repo: https://github.com/mkleehammer/pyodbc\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Compile the fake odbc driver\nclang -Wno-unused-result -Wsign-compare -Wunreachable-code \\\n      -fwrapv  -Wno-write-strings -fPIC \\\n      -shared -I/usr/local/include/python3.8 -I$PWD/src  \\\n      -o $OUT/fuzzodbc.so $SRC/fake_odbc_driver.c\n\npython3 setup.py install\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  LD_PRELOAD=$OUT/sanitizer_with_fuzzer.so ASAN_OPTIONS=detect_leaks=0 compile_python_fuzzer $fuzzer --add-data $OUT/fuzzodbc.so:.\ndone\n"
    },
    "pyparsing": {
        "name": "pyparsing",
        "language": "python",
        "homepage": "https://github.com/pyparsing/pyparsing",
        "main_repo": "https://github.com/pyparsing/pyparsing",
        "primary_contact": "ptmcg@austin.rr.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pyparsing/pyparsing\nlanguage: python\nmain_repo: https://github.com/pyparsing/pyparsing\nprimary_contact: \"ptmcg@austin.rr.com\"\nsanitizers:\n- address\n- undefined\nauto_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pyrsistent": {
        "name": "pyrsistent",
        "language": "python",
        "homepage": "https://github.com/tobgu/pyrsistent",
        "main_repo": "https://github.com/tobgu/pyrsistent",
        "primary_contact": "tobias.l.gustafsson@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/tobgu/pyrsistent\nlanguage: python\nmain_repo: https://github.com/tobgu/pyrsistent\nsanitizers:\n- address\n- undefined\nprimary_contact: \"tobias.l.gustafsson@gmail.com\"\nauto_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pytables": {
        "name": "pytables",
        "language": "python",
        "homepage": "https://github.com/pytables/pytables",
        "main_repo": "https://github.com/pytables/pytables",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pytables/pytables\nlanguage: python\nmain_repo: https://github.com/pytables/pytables\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n\nif [ $SANITIZER == \"coverage\" ]; then\n  unset CFLAGS\n  unset CXXFLAGS\nfi\n\n# Build supported version of HDF5 with relevant sanitizers.\ncd $SRC/\nwget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.5/src/hdf5-1.10.5.tar.gz\ntar -xf hdf5-1.10.5.tar.gz\ncd hdf5-1.10.5/                                                  \n./configure --prefix=/usr/\nmake -j4                                                  \nmake install\n\ncd $SRC/pytables\n\npython3 ./setup.py install\npython3 -m pip install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --add-data \"/usr/local/lib64/libblosc2.so.2.8.0:.\" --add-data \"/usr/local/lib64/libblosc2.so.2:.\" --add-data \"/usr/local/lib64/libblosc2.so:.\"\ndone\n\n# Create corpus\nmkdir $SRC/corpus\nfind ./tables/tests -name \"*.h5\" -exec cp {} $SRC/corpus/ \\;\nzip -rj $OUT/fuzz_1_seed_corpus.zip $SRC/corpus/*\n"
    },
    "pytest-py": {
        "name": "pytest-py",
        "language": "python",
        "homepage": "https://github.com/pytest-dev/py",
        "main_repo": "https://github.com/pytest-dev/py",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/pytest-dev/py\nlanguage: python\nmain_repo: https://github.com/pytest-dev/py\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython3 setup.py develop\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer --hidden-import=py._builtin\ndone\n"
    },
    "python-ecdsa": {
        "name": "python-ecdsa",
        "language": "python",
        "homepage": "https://github.com/tlsfuzzer/python-ecdsa",
        "main_repo": "https://github.com/tlsfuzzer/python-ecdsa",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/tlsfuzzer/python-ecdsa\nmain_repo: https://github.com/tlsfuzzer/python-ecdsa\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-email-validator": {
        "name": "python-email-validator",
        "language": "python",
        "homepage": "https://github.com/JoshData/python-email-validator",
        "main_repo": "https://github.com/JoshData/python-email-validator",
        "primary_contact": null,
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/JoshData/python-email-validator\"\nlanguage: python\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: \"https://github.com/JoshData/python-email-validator\"\nvendor_ccs:\n  - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nzip -r $OUT/fuzz_validator_seed_corpus.zip $SRC/fuzz-corpus/python-email-validator\n\npython3 -m pip install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py');do\n    compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-fastjsonschema": {
        "name": "python-fastjsonschema",
        "language": "python",
        "homepage": "https://github.com/horejsek/python-fastjsonschema",
        "main_repo": "https://github.com/horejsek/python-fastjsonschema",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/horejsek/python-fastjsonschema\nmain_repo: https://github.com/horejsek/python-fastjsonschema\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-future": {
        "name": "python-future",
        "language": "python",
        "homepage": "https://github.com/PythonCharmers/python-future",
        "main_repo": "https://github.com/PythonCharmers/python-future",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/PythonCharmers/python-future\nlanguage: python\nmain_repo: https://github.com/PythonCharmers/python-future\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npython3 -m pip install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-graphviz": {
        "name": "python-graphviz",
        "language": "python",
        "homepage": "https://github.com/xflr6/graphviz",
        "main_repo": "https://github.com/xflr6/graphviz",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/xflr6/graphviz\nmain_repo: https://github.com/xflr6/graphviz\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-hyperlink": {
        "name": "python-hyperlink",
        "language": "python",
        "homepage": "https://github.com/python-hyper/hyperlink",
        "main_repo": "https://github.com/python-hyper/hyperlink",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/python-hyper/hyperlink\nmain_repo: https://github.com/python-hyper/hyperlink\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-jose": {
        "name": "python-jose",
        "language": "python",
        "homepage": "https://github.com/mpdavis/python-jose",
        "main_repo": "https://github.com/mpdavis/python-jose",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/mpdavis/python-jose\nmain_repo: https://github.com/mpdavis/python-jose\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-lz4": {
        "name": "python-lz4",
        "language": "python",
        "homepage": "https://github.com/lz4/lz4",
        "main_repo": "https://github.com/lz4/lz4",
        "primary_contact": "jonathan.underwood@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/lz4/lz4\"\nlanguage: python\nprimary_contact: \"jonathan.underwood@gmail.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/lz4/lz4'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npython3 setup.py install\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-markdown": {
        "name": "python-markdown",
        "language": "python",
        "homepage": "https://github.com/python-markdown/markdown",
        "main_repo": "https://github.com/python-markdown/markdown",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/python-markdown/markdown\nlanguage: python\nmain_repo: https://github.com/python-markdown/markdown\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-markdownify": {
        "name": "python-markdownify",
        "language": "python",
        "homepage": "http://github.com/matthewwithanm/python-markdownify",
        "main_repo": "http://github.com/matthewwithanm/python-markdownify",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: http://github.com/matthewwithanm/python-markdownify\nmain_repo: http://github.com/matthewwithanm/python-markdownify\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-multipart": {
        "name": "python-multipart",
        "language": "python",
        "homepage": "https://github.com/Kludex/python-multipart",
        "main_repo": "https://github.com/Kludex/python-multipart",
        "primary_contact": "marcelotryle@gmail.com",
        "vendor_ccs": [
            "maxnair.dev@gmail.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/Kludex/python-multipart\"\nlanguage: python\nprimary_contact: \"marcelotryle@gmail.com\"\nmain_repo: \"https://github.com/Kludex/python-multipart\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nvendor_ccs:\n - maxnair.dev@gmail.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2024 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ngit apply $SRC/python-multipart/*.patch\npython3 -m pip install '.[dev]'\nfor fuzzer in $(find $SRC -name \"fuzz_*.py\"); do\n    compile_python_fuzzer $fuzzer\ndone\ncp $SRC/*.options $OUT/\n"
    },
    "python-nameparser": {
        "name": "python-nameparser",
        "language": "python",
        "homepage": "https://github.com/derek73/python-nameparser",
        "main_repo": "https://github.com/derek73/python-nameparser",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "main_repo: https://github.com/derek73/python-nameparser\nhomepage: https://github.com/derek73/python-nameparser\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-nvd3": {
        "name": "python-nvd3",
        "language": "python",
        "homepage": "https://github.com/areski/python-nvd3",
        "main_repo": "https://github.com/areski/python-nvd3",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/areski/python-nvd3\nmain_repo: https://github.com/areski/python-nvd3\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython3 ./setup.py install\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-pathspec": {
        "name": "python-pathspec",
        "language": "python",
        "homepage": "https://github.com/cpburnz/python-pathspec",
        "main_repo": "https://github.com/cpburnz/python-pathspec",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/cpburnz/python-pathspec\nmain_repo: https://github.com/cpburnz/python-pathspec\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-phonenumbers": {
        "name": "python-phonenumbers",
        "language": "python",
        "homepage": "https://github.com/daviddrysdale/python-phonenumbers",
        "main_repo": "https://github.com/daviddrysdale/python-phonenumbers.git",
        "primary_contact": "rik@purpleguy.nl",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/daviddrysdale/python-phonenumbers\"\nlanguage: python\nprimary_contact: \"rik@purpleguy.nl\"\nauto_ccs:\n    - \"drysdale@google.com\"\nmain_repo: \"https://github.com/daviddrysdale/python-phonenumbers.git\"\nfuzzing_engines:\n    - libfuzzer\nsanitizers:\n    - address\n    - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install --upgrade pip\npip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name '*_fuzzer.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-prompt-toolkit": {
        "name": "python-prompt-toolkit",
        "language": "python",
        "homepage": "https://github.com/prompt-toolkit/python-prompt-toolkit",
        "main_repo": "https://github.com/prompt-toolkit/python-prompt-toolkit",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/prompt-toolkit/python-prompt-toolkit\nmain_repo: https://github.com/prompt-toolkit/python-prompt-toolkit\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-pypdf": {
        "name": "python-pypdf",
        "language": "python",
        "homepage": "https://github.com/py-pdf/pypdf",
        "main_repo": "https://github.com/py-pdf/pypdf.git",
        "primary_contact": "info@martin-thoma.de",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/py-pdf/pypdf\nmain_repo: https://github.com/py-pdf/pypdf.git\nlanguage: python\nprimary_contact: info@martin-thoma.de\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd pypdf\npip3 install --upgrade pip\npip3 install .\n\n# Build fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-rison": {
        "name": "python-rison",
        "language": "python",
        "homepage": "https://github.com/betodealmeida/python-rison",
        "main_repo": "https://github.com/betodealmeida/python-rison",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/betodealmeida/python-rison\nmain_repo: https://github.com/betodealmeida/python-rison\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-rsa": {
        "name": "python-rsa",
        "language": "python",
        "homepage": "https://stuvel.eu/software/rsa/",
        "main_repo": "https://github.com/sybrenstuvel/python-rsa",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://stuvel.eu/software/rsa/\nlanguage: python\nmain_repo: https://github.com/sybrenstuvel/python-rsa\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd python-rsa\npip3 install .\n\n# Build fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python-tabulate": {
        "name": "python-tabulate",
        "language": "python",
        "homepage": "https://github.com/astanin/python-tabulate",
        "main_repo": "https://github.com/astanin/python-tabulate",
        "primary_contact": "s.astanin@gmail.com",
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/astanin/python-tabulate\nlanguage: python\nmain_repo: https://github.com/astanin/python-tabulate\nsanitizers:\n- address\n- undefined\nprimary_contact: \"s.astanin@gmail.com\"\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\npip3 install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "python3-libraries": {
        "name": "python3-libraries",
        "language": "c",
        "homepage": "https://www.python.org/",
        "main_repo": "https://github.com/python/cpython",
        "primary_contact": "seth@python.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.python.org/\"\nmain_repo: \"https://github.com/python/cpython\"\nlanguage: c\nprimary_contact: \"seth@python.org\"\nauto_ccs:\n - \"greg@krypto.org\"\n - \"alex.gaynor@gmail.com\"\n - \"ammar@ammaraskar.com\"\n - \"pablogsal@python.org\"\nfuzzing_engines:\n  - libfuzzer\n  - honggfuzz\nsanitizers:\n - address\n - undefined\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Ignore memory leaks from python scripts invoked in the build\nexport ASAN_OPTIONS=\"detect_leaks=0\"\nexport MSAN_OPTIONS=\"halt_on_error=0:exitcode=0:report_umrs=0\"\n\n# Remove -pthread from CFLAGS, this trips up ./configure\n# which thinks pthreads are available without any CLI flags\nCFLAGS=${CFLAGS//\"-pthread\"/}\n\nFLAGS=()\ncase $SANITIZER in\n  address)\n    FLAGS+=(\"--with-address-sanitizer\")\n    ;;\n  memory)\n    FLAGS+=(\"--with-memory-sanitizer\")\n    # installing ensurepip takes a while with MSAN instrumentation, so\n    # we disable it here\n    FLAGS+=(\"--without-ensurepip\")\n    # -msan-keep-going is needed to allow MSAN's halt_on_error to function\n    FLAGS+=(\"CFLAGS=-mllvm -msan-keep-going=1\")\n    ;;\n  undefined)\n    FLAGS+=(\"--with-undefined-behavior-sanitizer\")\n    ;;\nesac\n\nexport CPYTHON_INSTALL_PATH=$SRC/cpython-install\nrm -rf $CPYTHON_INSTALL_PATH\nmkdir $CPYTHON_INSTALL_PATH\n\ncd $SRC/cpython\ncp $SRC/python-library-fuzzers/python_coverage.h Python/\n\n# Patch the interpreter to record code coverage\nsed -i '1 s/^.*$/#include \"python_coverage.h\"/g' Python/ceval.c\nsed -i 's/case TARGET\\(.*\\): {/\\0\\nfuzzer_record_code_coverage(f->f_code, f->f_lasti);/g' Python/ceval.c\n\n./configure \"${FLAGS[@]:-}\" --prefix=$CPYTHON_INSTALL_PATH\nmake -j$(nproc)\nmake install\n\ncp -R $CPYTHON_INSTALL_PATH $OUT/\n\ncd $SRC/python-library-fuzzers\nmake\n\ncp $SRC/python-library-fuzzers/fuzzer-html $OUT/\ncp $SRC/python-library-fuzzers/html.py $OUT/\nzip -j $OUT/fuzzer-html_seed_corpus.zip corp-html/*\n\ncp $SRC/python-library-fuzzers/fuzzer-email $OUT/\ncp $SRC/python-library-fuzzers/email.py $OUT/\nzip -j $OUT/fuzzer-email_seed_corpus.zip corp-email/*\n\ncp $SRC/python-library-fuzzers/fuzzer-httpclient $OUT/\ncp $SRC/python-library-fuzzers/httpclient.py $OUT/\nzip -j $OUT/fuzzer-httpclient_seed_corpus.zip corp-httpclient/*\n\ncp $SRC/python-library-fuzzers/fuzzer-json $OUT/\ncp $SRC/python-library-fuzzers/json.py $OUT/\nzip -j $OUT/fuzzer-json_seed_corpus.zip corp-json/*\n\ncp $SRC/python-library-fuzzers/fuzzer-difflib $OUT/\ncp $SRC/python-library-fuzzers/difflib.py $OUT/\nzip -j $OUT/fuzzer-difflib_seed_corpus.zip corp-difflib/*\n\ncp $SRC/python-library-fuzzers/fuzzer-csv $OUT/\ncp $SRC/python-library-fuzzers/csv.py $OUT/\nzip -j $OUT/fuzzer-csv_seed_corpus.zip corp-csv/*\n\ncp $SRC/python-library-fuzzers/fuzzer-decode $OUT/\ncp $SRC/python-library-fuzzers/decode.py $OUT/\nzip -j $OUT/fuzzer-decode_seed_corpus.zip corp-decode/*\ncp $SRC/python-library-fuzzers/fuzzer-decode.dict $OUT/\n\ncp $SRC/python-library-fuzzers/fuzzer-ast $OUT/\ncp $SRC/python-library-fuzzers/ast.py $OUT/\ncp $SRC/python-library-fuzzers/fuzzer-ast.dict $OUT/\n# Use CPython source code as seed corpus\nmkdir corp-ast/\nfind $SRC/cpython -type f -name '*.py' -size -4097c -exec cp {} corp-ast/ \\;\nzip -j $OUT/fuzzer-ast_seed_corpus.zip corp-ast/*\n"
    },
    "python3-openid": {
        "name": "python3-openid",
        "language": "python",
        "homepage": "https://github.com/necaris/python3-openid",
        "main_repo": "https://github.com/necaris/python3-openid",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/necaris/python3-openid\nmain_repo: https://github.com/necaris/python3-openid\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npip3 install .\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pytz": {
        "name": "pytz",
        "language": "python",
        "homepage": "https://github.com/stub42/pytz",
        "main_repo": "https://github.com/stub42/pytz",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "athur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://github.com/stub42/pytz\nlanguage: python\nmain_repo: https://github.com/stub42/pytz\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- athur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# Ensure usage of OSS-Fuzz python\nsed -i \"s/\\/usr\\/bin\\/python/\\/usr\\/local\\/bin\\/python/g\" Makefile\n\n#pip3 install wheel\nmake\ncd build/dist\npython3 setup.py install\n\n# Build flask fuzzers\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pyvex": {
        "name": "pyvex",
        "language": "python",
        "homepage": "https://api.angr.io/projects/pyvex/en/latest/api.html",
        "main_repo": "https://github.com/angr/pyvex.git",
        "primary_contact": "angr-dev@asu.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://api.angr.io/projects/pyvex/en/latest/api.html\"\nlanguage: python\nprimary_contact: \"angr-dev@asu.edu\"\nauto_ccs:\n  - \"fishw@asu.edu\"\n  - \"capuanobailey@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n  - undefined\nmain_repo: 'https://github.com/angr/pyvex.git'\n",
        "build_sh": null
    },
    "pyxdg": {
        "name": "pyxdg",
        "language": "python",
        "homepage": "https://freedesktop.org/wiki/Software/pyxdg/",
        "main_repo": "https://github.com/takluyver/pyxdg",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "fuzzing_engines:\n- libfuzzer\nhomepage: https://freedesktop.org/wiki/Software/pyxdg/\nlanguage: python\nmain_repo: https://github.com/takluyver/pyxdg\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncp $SRC/*.dict $OUT/\n\ncd $SRC/lxml/\npython3 ./setup.py install\n\ncd $SRC/pyxdg\npip3 install .\n\n# Build fuzzers in $OUT.\n# Remove fuzzers in lxml\nfind $SRC/lxml -name fuzz*.py -exec rm {} \\;\n\nif [ \"$SANITIZER\" = \"address\" ]\nthen\n  # Enable pysecsan\n  export ENABLE_PYSECSAN=\"1\"\nfi\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n\ncorpus_name=\"fuzz_menu_seed_corpus.zip\"\nzip -r $OUT/$corpus_name $SRC/seeds/*\n"
    },
    "pyyaml": {
        "name": "pyyaml",
        "language": "python",
        "homepage": "https://github.com/yaml/pyyaml",
        "main_repo": "https://github.com/yaml/pyyaml",
        "primary_contact": "pyyaml@yaml.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/yaml/pyyaml\"\nlanguage: python\nprimary_contact: \"pyyaml@yaml.com\"\nauto_ccs:\n  - \"david@adalogics.com\"\n  - \"p.antoine@catenacyber.fr\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\nmain_repo: \"https://github.com/yaml/pyyaml\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\ncd pyyaml\necho 'Cython < 3.0' > /tmp/constraint.txt\nPIP_CONSTRAINT=/tmp/constraint.txt pip3 install .\n\n# Build fuzzers in $OUT.\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n  compile_python_fuzzer $fuzzer\ndone\n"
    },
    "pyzmq": {
        "name": "pyzmq",
        "language": "python",
        "homepage": "https://github.com/zeromq/pyzmq",
        "main_repo": "https://github.com/zeromq/pyzmq",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/zeromq/pyzmq\nmain_repo: https://github.com/zeromq/pyzmq\nlanguage: python\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\n- undefined\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\npython -m pip install .\n\nfor fuzzer in $(find $SRC -name 'fuzz_*.py'); do\n    compile_python_fuzzer $fuzzer --collect-all=\"pyzmq\"\ndone\n"
    },
    "qcms": {
        "name": "qcms",
        "language": "rust",
        "homepage": "https://hg.mozilla.org/mozilla-central/file/tip/gfx/qcms/",
        "main_repo": null,
        "primary_contact": "twsmith@mozilla.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://hg.mozilla.org/mozilla-central/file/tip/gfx/qcms/\"\nlanguage: rust\nprimary_contact: \"twsmith@mozilla.com\"\nauto_ccs:\n  - \"aosmond@mozilla.com\"\n  - \"jmuizelaar@mozilla.com\"\nfuzzing_engines:\n  - libfuzzer\nsanitizers:\n  - address\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncargo fuzz build -O\n\nfind fuzz -iname \"*.icc\" \\\n  -type f -exec zip -qju $OUT/fuzz_seed_corpus.zip \"{}\" \\;\ncp fuzz/qcms_fuzzer.dict $OUT/fuzz.dict\ncp fuzz/target/x86_64-unknown-linux-gnu/release/fuzz_target_qcms $OUT/fuzz\n"
    },
    "qdox": {
        "name": "qdox",
        "language": "jvm",
        "homepage": "https://github.com/paul-hammant/qdox/",
        "main_repo": "https://github.com/paul-hammant/qdox/",
        "primary_contact": null,
        "vendor_ccs": [
            "wagner@code-intelligence.com",
            "yakdan@code-intelligence.com",
            "patrice.salathe@code-intelligence.com",
            "hlin@code-intelligence.com",
            "bug-disclosure@code-intelligence.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/paul-hammant/qdox/\"\nlanguage: jvm\nfuzzing_engines:\n  - libfuzzer\nmain_repo: \"https://github.com/paul-hammant/qdox/\"\nsanitizers:\n  - address\nvendor_ccs:\n  - \"wagner@code-intelligence.com\"\n  - \"yakdan@code-intelligence.com\"\n  - \"patrice.salathe@code-intelligence.com\"\n  - \"hlin@code-intelligence.com\"\n  - \"bug-disclosure@code-intelligence.com\"",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nPROJECT=qdox\nPROJECT_GROUP_ID=com.thoughtworks.qdox\nPROJECT_ARTIFACT_ID=qdox\nMAIN_REPOSITORY=https://github.com/paul-hammant/qdox/\n\nMAVEN_ARGS=\"-Djavac.src.version=11 -Djavac.target.version=11 -DskipTests\"\n\nfunction set_project_version_in_fuzz_targets_dependency {\n  PROJECT_VERSION=$(cd $PROJECT && $MVN org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout)\n  # set dependency project version in fuzz-targets\n  (cd fuzz-targets && $MVN versions:use-dep-version -Dincludes=$PROJECT_GROUP_ID:$PROJECT_ARTIFACT_ID -DdepVersion=$PROJECT_VERSION -DforceVersion=true)\n}\n\ncd project-parent\n\n# LOCAL_DEV env variable need to be set in local development env\nif [[ -v LOCAL_DEV ]]; then\n  MVN=mvn\n\n  # checkout latest project version\n  git -C $PROJECT pull || git clone $MAIN_REPOSITORY $PROJECT\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS)\n  mvn -pl fuzz-targets install\n\nelse\n  # Move seed corpus and dictionary.\n  # mv $SRC/{*.zip,*.dict} $OUT\n\n  export JAVA_HOME=\"$OUT/open-jdk-11\"\n  mkdir -p $JAVA_HOME\n  rsync -aL --exclude=*.zip --exclude 'lib/security/blacklisted.certs' \"/usr/lib/jvm/java-11-openjdk-amd64/\" \"$JAVA_HOME\"\n\n  set_project_version_in_fuzz_targets_dependency\n\n  #install\n  (cd $PROJECT && $MVN install $MAVEN_ARGS -Dmaven.repo.local=$OUT/m2)\n  $MVN -pl fuzz-targets install -Dmaven.repo.local=$OUT/m2\n\n  # build classpath\n  $MVN -pl fuzz-targets dependency:build-classpath -Dmdep.outputFile=cp.txt -Dmaven.repo.local=$OUT/m2\n  cp -r $SRC/project-parent/fuzz-targets/target/test-classes/ $OUT/test-classes\n  RUNTIME_CLASSPATH_ABSOLUTE=\"$(cat fuzz-targets/cp.txt):$OUT/test-classes\"\n  # replace $OUT with placeholder $this_dir that will be dissolved at runtime\n  RUNTIME_CLASSPATH=$(echo $RUNTIME_CLASSPATH_ABSOLUTE | sed \"s|$OUT|\\$this_dir|g\")\n\n  for fuzzer in $(find $SRC/project-parent -name '*Fuzzer.java'); do\n    fuzzer_basename=$(basename -s .java $fuzzer)\n\n    # Create an execution wrapper for every fuzztarget\n    echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput comment for fuzzer detection by infrastructure.\n  this_dir=\\$(dirname \\\"\\$0\\\")\n  if [[ \\\"\\$@\\\" =~ (^| )-runs=[0-9]+($| ) ]]; then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\nJAVA_HOME=\\\"\\$this_dir/open-jdk-11/\\\" \\\nLD_LIBRARY_PATH=\\\"\\$this_dir/open-jdk-11/lib/server\\\":\\$this_dir \\\n\\$this_dir/jazzer_driver --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n--cp=$RUNTIME_CLASSPATH \\\n--target_class=com.example.$fuzzer_basename \\\n--jvm_args=\\\"\\$mem_settings\\\" \\\n--instrumentation_includes=\\\"com.**:org.**\\\" \\\n\\$@\" > $OUT/$fuzzer_basename\n    chmod u+x $OUT/$fuzzer_basename\n  done\n\nfi"
    },
    "qemu": {
        "name": "qemu",
        "language": "c",
        "homepage": "https://www.qemu.org/",
        "main_repo": "https://git.qemu.org/git/qemu.git",
        "primary_contact": "alxndr@bu.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://www.qemu.org/\"\nlanguage: c\nprimary_contact: \"alxndr@bu.edu\"\nauto_ccs:\n  - \"bsd@redhat.com\"\n  - \"mcascell@redhat.com\"\n  - \"pbonzini@redhat.com\"\n  - \"stefanha@redhat.com\"\n  - \"darren.kenny@oracle.com\"\n  - \"lichenca2020@gmail.com\"\nsanitizers:\n  - address\n  - undefined\nfuzzing_engines:\n  - libfuzzer\narchitectures:\n  - x86_64\nselective_unpack: true\nmain_repo: 'https://git.qemu.org/git/qemu.git'\n",
        "build_sh": "#!/bin/sh -e # Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/qemu/\n$SRC/qemu/scripts/oss-fuzz/build.sh\n"
    },
    "qpdf": {
        "name": "qpdf",
        "language": "c++",
        "homepage": "http://qpdf.sourceforge.net/",
        "main_repo": "https://github.com/qpdf/qpdf.git",
        "primary_contact": "qberkenbilt@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"http://qpdf.sourceforge.net/\"\nlanguage: c++\nprimary_contact: \"qberkenbilt@gmail.com\"\nauto_ccs :\n  - \"mholger119@gmail.com\"\nsanitizers:\n  - address\n  - undefined\n# Disabled MSAN because of https://github.com/google/oss-fuzz/issues/6294\n#  - memory\nmain_repo: 'https://github.com/qpdf/qpdf.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# libz\npushd $SRC/zlib\n./configure --static --prefix=\"$WORK\"\nmake -j$(nproc) all\nmake install\npopd\n\n# libjpeg-turbo\npushd $SRC/libjpeg-turbo\ncmake . -DCMAKE_INSTALL_PREFIX=\"$WORK\" -DENABLE_STATIC=1 -DENABLE_SHARED=0 -DCMAKE_POSITION_INDEPENDENT_CODE=1\nmake -j$(nproc)\nmake install\npopd\n\n# qpdf\n./fuzz/oss-fuzz-build\n"
    },
    "qpid-proton": {
        "name": "qpid-proton",
        "language": "c++",
        "homepage": "https://qpid.apache.org/proton/",
        "main_repo": "https://github.com/apache/qpid-proton.git",
        "primary_contact": "jross@apache.org",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://qpid.apache.org/proton/\"\nlanguage: c++\nprimary_contact: \"jross@apache.org\"\nauto_ccs:\n - \"security@apache.org\"\n - \"astitcher@apache.org\"\n - \"jdanek@redhat.com\"\nsanitizers:\n - address\n - memory\n - undefined\nmain_repo: 'https://github.com/apache/qpid-proton.git'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nenv\n# workaround https://github.com/google/oss-fuzz/issues/9857\nln -s /usr/local/bin/llvm-ar /src/aflplusplus/afl-llvm-ar\nln -s /usr/local/bin/llvm-ranlib /src/aflplusplus/afl-llvm-ranlib\n\nmkdir build\npushd build\n  cmake .. \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DENABLE_LINKTIME_OPTIMIZATION=OFF \\\n    -DBUILD_STATIC_LIBS=ON \\\n    -DENABLE_FUZZ_TESTING=ON \\\n    -DFUZZ_REGRESSION_TESTS=OFF\n  pushd c/tests/fuzz/\n    VERBOSE=1 make -j $(nproc)\n  popd\n  cp c/tests/fuzz/{fuzz-connection-driver,fuzz-message-decode} $OUT/\npopd\n\nzip -j $OUT/fuzz-connection-driver_seed_corpus.zip c/tests/fuzz/fuzz-connection-driver/corpus/* c/tests/fuzz/fuzz-connection-driver/crash/*\nzip -j $OUT/fuzz-message-decode_seed_corpus.zip c/tests/fuzz/fuzz-message-decode/corpus/* c/tests/fuzz/fuzz-message-decode/crash/*\n"
    },
    "qs": {
        "name": "qs",
        "language": "c++",
        "homepage": "https://github.com/ljharb/qs",
        "main_repo": "https://github.com/ljharb/qs.git",
        "primary_contact": "ljharb@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/ljharb/qs\"\nlanguage: c++\nprimary_contact: \"ljharb@gmail.com\"\nmain_repo: 'https://github.com/ljharb/qs.git'\n",
        "build_sh": null
    },
    "qt": {
        "name": "qt",
        "language": "c++",
        "homepage": "http://qt-project.org",
        "main_repo": "git://code.qt.io/qt/qt5.git",
        "primary_contact": "rlohningqt@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"http://qt-project.org\"\nlanguage: c++\nprimary_contact: \"rlohningqt@gmail.com\"\nauto_ccs:\n - \"jimis@gmx.net\"\n - \"sgaist.qt@gmail.com\"\n - \"shawn.t.rutledge@gmail.com\"\nmain_repo: 'git://code.qt.io/qt/qt5.git'\narchitectures:\n - x86_64\n - i386\nhelp_url: \"https://code.qt.io/cgit/qt/qtbase.git/plain/tests/libfuzzer/README\"\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": null
    },
    "quantlib": {
        "name": "quantlib",
        "language": "c++",
        "homepage": "https://www.quantlib.org/",
        "main_repo": "https://github.com/lballabio/QuantLib.git",
        "primary_contact": "luigi.ballabio@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://www.quantlib.org/\"\nlanguage: c++\nprimary_contact: \"luigi.ballabio@gmail.com\"\nmain_repo: \"https://github.com/lballabio/QuantLib.git\"\nauto_ccs:\n  - nathaniel.brough@gmail.com\nsanitizers:\n - address\n - memory\nfuzzing_engines:\n - libfuzzer\n - honggfuzz\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nmkdir build\ncd build\nexport LDFLAGS=\"-Wl,-rpath,'\\$ORIGIN/lib'\"\ncmake .. -GNinja\\\n -DBOOST_ROOT=/usr\\\n -DCMAKE_BUILD_TYPE=Release\\\n -DQL_COMPILE_WARNING_AS_ERROR=ON\\\n -DQL_BUILD_FUZZ_TEST_SUITE=ON\\\n -DQL_BUILD_TEST_SUITE=OFF\\\n -DQL_BUILD_BENCHMARK=OFF\\\n -DQL_BUILD_EXAMPLES=OFF\\\n -L\ncmake --build . --verbose -j$(nproc)\nmkdir $OUT/lib -p\ncp ql/libQuantLib.so* $OUT/lib/\nfind fuzz-test-suite -executable -type f -exec cp {} $OUT \\;\n"
    },
    "quartz": {
        "name": "quartz",
        "language": "jvm",
        "homepage": "https://github.com/quartz-scheduler/quartz",
        "main_repo": "https://github.com/quartz-scheduler/quartz",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com",
            "adam@adalogics.com",
            "arthur.chan@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: https://github.com/quartz-scheduler/quartz\nmain_repo: https://github.com/quartz-scheduler/quartz\nlanguage: jvm\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n- adam@adalogics.com\n- arthur.chan@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n##########################################################################\n./gradlew clean build -x test -x javadoc -x sources\n\nCURRENT_VERSION=$(./gradlew properties | grep ^version: | cut -d\" \" -f2)\n\ncp \"./quartz-stubs/build/libs/quartz-stubs-$CURRENT_VERSION.jar\" $OUT/stubs.jar\ncp \"./quartz/build/libs/quartz-$CURRENT_VERSION.jar\" $OUT/quartz.jar\ncp \"./quartz-jobs/build/libs/quartz-jobs-$CURRENT_VERSION.jar\" $OUT/jobs.jar\n\nALL_JARS='stubs.jar quartz.jar jobs.jar'\n\n# The classpath at build-time includes the project jars in $OUT as well as the\n# Jazzer API.\nBUILD_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"$OUT/%s:\"):$JAZZER_API_PATH\n\n# All .jar and .class files lie in the same directory as the fuzzer at runtime.\nRUNTIME_CLASSPATH=$(echo $ALL_JARS | xargs printf -- \"\\$this_dir/%s:\"):\\$this_dir\n\ncp -r $JAVA_HOME $OUT/\n\nfor fuzzer in $(find $SRC -maxdepth 1 -name '*Fuzzer.java')\ndo\n  fuzzer_basename=$(basename -s .java $fuzzer)\n  $JAVA_HOME/bin/javac -cp $BUILD_CLASSPATH $fuzzer\n  cp $SRC/$fuzzer_basename*.class $OUT/\n\n  # Create an execution wrapper that executes Jazzer with the correct arguments.\n  echo \"#!/bin/bash\n  # LLVMFuzzerTestOneInput for fuzzer detection.\n  this_dir=\\$(dirname \"\\$0\")\n  if [[ \"\\$@\" =~ (^| )-runs=[0-9]+($| ) ]]\n  then\n    mem_settings='-Xmx1900m:-Xss900k'\n  else\n    mem_settings='-Xmx2048m:-Xss1024k'\n  fi\n  export JAVA_HOME=\\$this_dir/$(basename $JAVA_HOME)\n  export LD_LIBRARY_PATH=\"\\$JAVA_HOME/lib/server\":\\$this_dir\n  export PATH=\\$JAVA_HOME/bin:\\$PATH\n\n  \\$this_dir/jazzer_driver                          \\\n    --agent_path=\\$this_dir/jazzer_agent_deploy.jar \\\n    --cp=$RUNTIME_CLASSPATH                         \\\n    --target_class=$fuzzer_basename                 \\\n    --jvm_args=\"\\$mem_settings\"                     \\\n    \\$@\" > $OUT/$fuzzer_basename\n\n    chmod u+x $OUT/$fuzzer_basename\ndone\n"
    },
    "qubes-os": {
        "name": "qubes-os",
        "language": "c++",
        "homepage": "https://www.qubes-os.org/",
        "main_repo": "https://github.com/QubesOS",
        "primary_contact": "jpo@vt.edu",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://www.qubes-os.org/\"\nmain_repo: \"https://github.com/QubesOS\"\nlanguage: c++\nprimary_contact: \"jpo@vt.edu\"\nauto_ccs:\n - \"marmarek@invisiblethingslab.com\"\n - \"pawel@invisiblethingslab.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - undefined\narchitectures:\n  - x86_64\n  - i386\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2016 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nif [ \"$SANITIZER\" != 'undefined' ]; then\n\tcd $SRC/qubes-os/app-linux-input-proxy\n\n\tmake -C fuzz\n\tcp fuzz/*_fuzzer $OUT/\n\tcp fuzz/*_seed_corpus.zip $OUT/\n\tcp fuzz/*.options $OUT/\nfi\n\ncd $SRC/qubes-os/qubes-core-qubesdb\n\nmake -C fuzz\ncp fuzz/*_fuzzer $OUT/\ncp fuzz/*_seed_corpus.zip $OUT/\ncp fuzz/*.options $OUT/\n\ncd $SRC/qubes-os/qubes-core-qrexec\n\nmake -C fuzz\ncp fuzz/*_fuzzer $OUT/\ncp fuzz/*_seed_corpus.zip $OUT/\ncp fuzz/*.options $OUT/\n"
    },
    "quic-go": {
        "name": "quic-go",
        "language": "go",
        "homepage": "https://github.com/quic-go/quic-go",
        "main_repo": "https://github.com/quic-go/quic-go",
        "primary_contact": "martenseemann@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": null,
        "project_yaml": "homepage: \"https://github.com/quic-go/quic-go\"\nprimary_contact: \"martenseemann@gmail.com\"\nlanguage: go\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nmain_repo: 'https://github.com/quic-go/quic-go'\n",
        "build_sh": null
    },
    "quiche": {
        "name": "quiche",
        "language": "c++",
        "homepage": "https://github.com/google/quiche",
        "main_repo": "https://github.com/google/quiche",
        "primary_contact": null,
        "vendor_ccs": [
            "david@adalogics.com"
        ],
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "bazel",
        "project_yaml": "homepage: \"https://github.com/google/quiche\"\nmain_repo: 'https://github.com/google/quiche'\nlanguage: c++\nfuzzing_engines:\n- libfuzzer\nsanitizers:\n- address\nvendor_ccs:\n- david@adalogics.com\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nsynchronize_coverage_directories() {\n  # For coverage, we need to remap source files to correspond to the Bazel build\n  # paths. We also need to resolve all symlinks that Bazel creates.\n  if [ \"$SANITIZER\" = \"coverage\" ]\n  then\n    declare -r RSYNC_CMD=\"rsync -aLkR\"\n    declare -r REMAP_PATH=${OUT}/proc/self/cwd/\n    mkdir -p ${REMAP_PATH}\n\n    # Synchronize the folder bazel-BAZEL_OUT_PROJECT.\n    declare -r RSYNC_FILTER_ARGS=(\"--include\" \"*.h\" \"--include\" \"*.cc\" \"--include\" \\\n      \"*.hpp\" \"--include\" \"*.cpp\" \"--include\" \"*.c\" \"--include\" \"*/\" \"--include\" \"*.inc\" \\\n      \"--exclude\" \"*\")\n\n    # Sync existing code.\n    ${RSYNC_CMD} \"${RSYNC_FILTER_ARGS[@]}\" quiche/ ${REMAP_PATH}\n\n    # Sync generated proto files.\n    if [ -d \"./bazel-out/k8-fastbuild/bin/\" ]\n    then\n      ${RSYNC_CMD} \"${RSYNC_FILTER_ARGS[@]}\" ./bazel-out/k8-fastbuild/bin/quiche/ ${REMAP_PATH}\n    fi\n    if [ -d \"./bazel-out/k8-fastbuild/bin/external/\" ]\n    then\n      ${RSYNC_CMD} \"${RSYNC_FILTER_ARGS[@]}\" ./bazel-out/k8-fastbuild/bin/external/ ${REMAP_PATH}\n    fi\n\n    # Sync external dependencies. We don't need to include `bazel-tensorflow`.\n    # Also, remove `external/org_tensorflow` which is a copy of the entire source\n    # code that Bazel creates. Not removing this would cause `rsync` to expand a\n    # symlink that ends up pointing to itself!\n    pushd bazel-quiche\n    [[ -e external/org_quiche ]] && unlink external/org_quiche\n    ${RSYNC_CMD} external/ ${REMAP_PATH}\n    popd\n  fi\n}\n\n# Force a static link by removing all dymaic libicu's\nfind / -name \"libicu*.so\" -exec rm {} \\;\nfind / -name \"libicu*.so.66\" -exec rm {} \\;\nfind / -name \"libicu*.so.66.1\" -exec rm {} \\;\n\ngit apply $SRC/quiche-patch.diff\nexport CXXFLAGS=\"${CXXFLAGS} -DNDEBUG=1\"\nexport CFLAGS=\"${CFLAGS} -DNDEBUG=1\"\nbazel run @com_google_fuzztest//bazel:setup_configs >> /etc/bazel.bazelrc\nbazel build --config=oss-fuzz --subcommands --spawn_strategy=sandboxed //quiche:http_frame_fuzzer\n\ncp bazel-bin/quiche/http_frame_fuzzer $OUT/\n\nTARGET_FUZZER=\"http_frame_fuzzer@Http2FrameDecoderFuzzTest.fuzz_frame_decoder\"\n\necho \"#!/bin/sh\n# LLVMFuzzerTestOneInput for fuzzer detection.\nthis_dir=\\$(dirname \\\"\\$0\\\")\nchmod +x \\$this_dir/http_frame_fuzzer\n\\$this_dir/http_frame_fuzzer --fuzz=Http2FrameDecoderFuzzTest.fuzz_frame_decode  -- -- \\$@\" > $OUT/${TARGET_FUZZER}\nchmod +x $OUT/${TARGET_FUZZER}\npatchelf --set-rpath '$ORIGIN/'  $OUT/http_frame_fuzzer\n\nsynchronize_coverage_directories\n"
    },
    "quick-xml": {
        "name": "quick-xml",
        "language": "rust",
        "homepage": "https://github.com/tafia/quick-xml",
        "main_repo": "https://github.com/tafia/quick-xml",
        "primary_contact": "tafia973@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer"
        ],
        "build_system": "unknown",
        "project_yaml": "homepage: \"https://github.com/tafia/quick-xml\"\nmain_repo: \"https://github.com/tafia/quick-xml\"\nprimary_contact: \"tafia973@gmail.com\"\nsanitizers:\n  - address\nfuzzing_engines:\n  - libfuzzer\nlanguage: rust\nauto_ccs:\n  - \"david@adalogics.com\"\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\ncd $SRC/quick-xml\ncargo fuzz build -O \n\nFUZZ_TARGET_OUTPUT_DIR=fuzz/target/x86_64-unknown-linux-gnu/release\nfor f in fuzz/fuzz_targets/*.rs\ndo\n    FUZZ_TARGET_NAME=$(basename ${f%.*})\n    cp $FUZZ_TARGET_OUTPUT_DIR/$FUZZ_TARGET_NAME $OUT/\ndone\n"
    },
    "quickjs": {
        "name": "quickjs",
        "language": "c",
        "homepage": "https://bellard.org/quickjs/",
        "main_repo": "https://github.com/bellard/quickjs",
        "primary_contact": "fabrice.bellard@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "afl",
            "honggfuzz",
            "libfuzzer"
        ],
        "build_system": "make",
        "project_yaml": "homepage: \"https://bellard.org/quickjs/\"\nlanguage: c\nprimary_contact: \"fabrice.bellard@gmail.com\"\nauto_ccs :\n- \"p.antoine@catenacyber.fr\"\n\nsanitizers:\n- address\n- memory\n\nmain_repo: 'https://github.com/bellard/quickjs'\n\nfuzzing_engines:\n  - afl\n  - honggfuzz\n  - libfuzzer\n\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\n# build quickjs\n# Makefile should not override CFLAGS\nsed -i -e 's/CFLAGS=/CFLAGS+=/' Makefile\nCONFIG_CLANG=y make libquickjs.fuzz.a .obj/fuzz_common.o .obj/libregexp.fuzz.o .obj/cutils.fuzz.o .obj/libunicode.fuzz.o\nzip -r $OUT/fuzz_eval_seed_corpus.zip $SRC/quickjs-corpus/js/*.js\nzip -r $OUT/fuzz_compile_seed_corpus.zip $SRC/quickjs-corpus/js/*.js\n\nbuild_fuzz_target () {\n    local target=$1\n    shift\n    $CC $CFLAGS -I. -c fuzz/$target.c -o $target.o\n    $CXX $CXXFLAGS $target.o -o $OUT/$target $@ $LIB_FUZZING_ENGINE\n}\n\nbuild_fuzz_target fuzz_eval .obj/fuzz_common.o libquickjs.fuzz.a\nbuild_fuzz_target fuzz_compile .obj/fuzz_common.o libquickjs.fuzz.a\nbuild_fuzz_target fuzz_regexp .obj/libregexp.fuzz.o .obj/cutils.fuzz.o .obj/libunicode.fuzz.o\n\ncp fuzz/fuzz.dict $OUT/fuzz_eval.dict\ncp fuzz/fuzz.dict $OUT/fuzz_compile.dict\n"
    },
    "rabbitmq-c": {
        "name": "rabbitmq-c",
        "language": "c",
        "homepage": "https://github.com/alanxz/rabbitmq-c",
        "main_repo": "https://github.com/alanxz/rabbitmq-c",
        "primary_contact": "alan.antonuk@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": [
            "libfuzzer",
            "afl",
            "honggfuzz"
        ],
        "build_system": "cmake",
        "project_yaml": "homepage: \"https://github.com/alanxz/rabbitmq-c\"\nlanguage: c\nprimary_contact: \"alan.antonuk@gmail.com\"\nauto_ccs:\n  - \"ajsinghyadav00@gmail.com\"\nfuzzing_engines:\n  - libfuzzer\n  - afl\n  - honggfuzz\nsanitizers:\n  - address\n  - memory\n  - undefined\nmain_repo: 'https://github.com/alanxz/rabbitmq-c'\n",
        "build_sh": "#!/bin/bash -eu\n# Copyright 2023 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\nmkdir build \n\npushd build/\n\ncmake \\\n    -DCMAKE_BUILD_TYPE=Debug -DBUILD_OSSFUZZ=ON \\\n    -DCMAKE_C_COMPILER=\"$CC\" -DCMAKE_CXX_COMPILER=\"$CXX\" \\\n    -DCMAKE_C_FLAGS=\"$CFLAGS\" -DCMAKE_EXE_LINKER_FLAGS=\"$CFLAGS\" \\\n    -DLIB_FUZZING_ENGINE=\"$LIB_FUZZING_ENGINE\" ../.\n\nmake -j$(nproc)\n\nif [ \"$SANITIZER\" != \"undefined\" ]; then\n    cp fuzz/fuzz_url $OUT/fuzz_url\nfi\ncp fuzz/fuzz_table $OUT/fuzz_table\ncp fuzz/fuzz_server $OUT/fuzz_server\npopd\n\nzip -j ${OUT}/fuzz_url_seed_corpus.zip fuzz/input/fuzz_url.raw\nzip -j ${OUT}/fuzz_table_seed_corpus.zip fuzz/input/fuzz_table.raw\nzip -j ${OUT}/fuzz_server_seed_corpus.zip fuzz/input/fuzz_server.raw\n"
    },
    "racket": {
        "name": "racket",
        "language": null,
        "homepage": "https://racket-lang.org",
        "main_repo": "https://github.com/racket/racket/",
        "primary_contact": "pocmatos@gmail.com",
        "vendor_ccs": null,
        "fuzzing_engines": null,
        "build_system": null,
        "project_yaml": "homepage: \"https://racket-lang.org\"\nprimary_contact: \"pocmatos@gmail.com\"\nmain_repo: \"https://github.com/racket/racket/\"\nauto_ccs:\n  - samth@racket-lang.org\nsanitizers:\n - undefined\n - memory\n - address\narchitectures:\n - x86_64\n - i386\n",
        "build_sh": null
    }
}